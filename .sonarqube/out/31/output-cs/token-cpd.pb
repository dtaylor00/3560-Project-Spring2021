à
¶D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Utilities\EditorMaterialQuality.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
	Utilities  )
{ 
public 

static 
class *
EditorMaterialQualityUtilities 6
{		 
public 
static 
MaterialQuality %
GetMaterialQuality& 8
(8 9
this9 =
ShaderKeywordSet> N

keywordSetO Y
)Y Z
{ 	
var 
result 
= 
( 
MaterialQuality )
)) *
$num* +
;+ ,
for 
( 
var 
i 
= 
$num 
; 
i 
< $
MaterialQualityUtilities  8
.8 9
Keywords9 A
.A B
LengthB H
;H I
++J L
iL M
)M N
{ 
if 
( 

keywordSet 
. 
	IsEnabled (
(( )$
MaterialQualityUtilities) A
.A B
KeywordsB J
[J K
iK L
]L M
)M N
)N O
result 
|= 
( 
MaterialQuality .
). /
(0 1
$num1 2
<<3 5
i6 7
)7 8
;8 9
} 
return 
result 
; 
} 	
} 
} úá
∏D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\DisplayWindow.EnvironmentLibrarySidePanel.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
public

 

	interface

 !
IEnvironmentDisplayer

 *
{ 
void 
Repaint 
( 
) 
; 
event 
Action 
< 
EnvironmentLibrary '
>' ((
OnChangingEnvironmentLibrary) E
;E F
} 
partial 
class 
DisplayWindow 
:  !!
IEnvironmentDisplayer" 7
{ 
static 
partial 
class 
Style "
{ 	
internal 
static 
readonly $
	Texture2D% .
	k_AddIcon/ 8
=9 :
CoreEditorUtils; J
.J K
LoadIconK S
(S T
StyleT Y
.Y Z
k_IconFolderZ f
,f g
$strh m
,m n
forceLowReso z
:z {
true	| Ä
)
Ä Å
;
Å Ç
internal 
static 
readonly $
	Texture2D% .
k_RemoveIcon/ ;
=< =
CoreEditorUtils> M
.M N
LoadIconN V
(V W
StyleW \
.\ ]
k_IconFolder] i
,i j
$strk s
,s t
forceLowRes	u Ä
:
Ä Å
true
Ç Ü
)
Ü á
;
á à
internal 
static 
readonly $
	Texture2D% .
k_DuplicateIcon/ >
=? @
CoreEditorUtilsA P
.P Q
LoadIconQ Y
(Y Z
StyleZ _
._ `
k_IconFolder` l
,l m
$strn y
,y z
forceLowRes	{ Ü
:
Ü á
true
à å
)
å ç
;
ç é
internal 
const 
string ! 
k_DragAndDropLibrary" 6
=7 8
$str9 `
;` a
} 	
VisualElement "
m_EnvironmentContainer ,
;, -
ListView 
m_EnvironmentList "
;" #
EnvironmentElement   "
m_EnvironmentInspector   1
;  1 2

UIElements!! 
.!! 
Toolbar!! $
m_EnvironmentListToolbar!! 3
;!!3 4

UIElements"" 
."" 
ObjectField"" 
m_LibraryField"" -
;""- .
event22 
Action22 
<22 
EnvironmentLibrary22 '
>22' (0
$OnChangingEnvironmentLibraryInternal22) M
;22M N
event33 
Action33 
<33 
EnvironmentLibrary33 '
>33' (!
IEnvironmentDisplayer33) >
.33> ?(
OnChangingEnvironmentLibrary33? [
{44 	
add55 
=>55 0
$OnChangingEnvironmentLibraryInternal55 7
+=558 :
value55; @
;55@ A
remove66 
=>66 0
$OnChangingEnvironmentLibraryInternal66 :
-=66; =
value66> C
;66C D
}77 	
static99 
int99 
FirstVisibleIndex99 $
(99$ %
ListView99% -
listView99. 6
)996 7
=>:: 
(:: 
int:: 
):: 
(:: 
listView:: 
.:: 
Q:: 
<::  

ScrollView::  *
>::* +
(::+ ,
)::, -
.::- .
scrollOffset::. :
.::: ;
y::; <
/::= >
listView::? G
.::G H

itemHeight::H R
)::R S
;::S T
void<< 
CreateEnvironment<< 
(<< 
)<<  
{== 	
if>> 
(>> 
m_MainContainer>> 
==>>  "
null>># '
||>>( *
m_MainContainer>>+ :
.>>: ;
Equals>>; A
(>>A B
null>>B F
)>>F G
)>>G H
throw?? 
new?? 
System??  
.??  !!
MemberAccessException??! 6
(??6 7
$str??7 u
)??u v
;??v w"
m_EnvironmentContainerAA "
=AA# $
newAA% (
VisualElementAA) 6
(AA6 7
)AA7 8
{AA9 :
nameAA; ?
=AA@ A
StyleAAB G
.AAG H&
k_EnvironmentContainerNameAAH b
}AAc d
;AAd e
m_MainContainerBB 
.BB 
AddBB 
(BB  "
m_EnvironmentContainerBB  6
)BB6 7
;BB7 8
ifCC 
(CC 
	sidePanelCC 
==CC 
	SidePanelCC &
.CC& '
EnvironmentCC' 2
)CC2 3
m_MainContainerDD 
.DD  
AddToClassListDD  .
(DD. /
StyleDD/ 4
.DD4 5'
k_ShowEnvironmentPanelClassDD5 P
)DDP Q
;DDQ R"
m_EnvironmentInspectorFF "
=FF# $
newFF% (
EnvironmentElementFF) ;
(FF; <
withPreviewFF< G
:FFG H
falseFFI N
,FFN O
(FFP Q
)FFQ R
=>FFS U
{GG 
LookDevHH 
.HH %
SaveContextChangeAndApplyHH 1
(HH1 2
	ViewIndexHH2 ;
.HH; <
FirstHH< A
)HHA B
;HHB C
LookDevII 
.II %
SaveContextChangeAndApplyII 1
(II1 2
	ViewIndexII2 ;
.II; <
SecondII< B
)IIB C
;IIC D
}JJ 
)JJ 
;JJ 
m_EnvironmentListKK 
=KK 
newKK  #
ListViewKK$ ,
(KK, -
)KK- .
;KK. /
m_EnvironmentListLL 
.LL 
AddToClassListLL ,
(LL, -
$strLL- ?
)LL? @
;LL@ A
m_EnvironmentListMM 
.MM 
selectionTypeMM +
=MM, -
SelectionTypeMM. ;
.MM; <
SingleMM< B
;MMB C
m_EnvironmentListNN 
.NN 

itemHeightNN (
=NN) *
EnvironmentElementNN+ =
.NN= > 
k_SkyThumbnailHeightNN> R
;NNR S
m_EnvironmentListOO 
.OO 
makeItemOO &
=OO' (
(OO) *
)OO* +
=>OO, .
{PP 
varQQ 
previewQQ 
=QQ 
newQQ !
ImageQQ" '
(QQ' (
)QQ( )
;QQ) *
previewRR 
.RR 
AddManipulatorRR &
(RR& '
newRR' *%
EnvironmentPreviewDraggerRR+ D
(RRD E
thisRRE I
,RRI J
m_ViewContainerRRK Z
)RRZ [
)RR[ \
;RR\ ]
returnSS 
previewSS 
;SS 
}TT 
;TT 
m_EnvironmentListUU 
.UU 
bindItemUU &
=UU' (
(UU) *
eUU* +
,UU+ ,
iUU- .
)UU. /
=>UU0 2
{VV 
ifWW 
(WW 
LookDevWW 
.WW 
currentContextWW *
.WW* +
environmentLibraryWW+ =
==WW> @
nullWWA E
)WWE F
returnXX 
;XX 
(ZZ 
eZZ 
asZZ 
ImageZZ 
)ZZ 
.ZZ 
imageZZ "
=ZZ# $
EnvironmentElementZZ% 7
.ZZ7 8&
GetLatLongThumbnailTextureZZ8 R
(ZZR S
LookDev[[ 
.[[ 
currentContext[[ *
.[[* +
environmentLibrary[[+ =
[[[= >
i[[> ?
][[? @
,[[@ A
EnvironmentElement\\ &
.\\& '
k_SkyThumbnailWidth\\' :
)\\: ;
;\\; <
}]] 
;]] 
m_EnvironmentList__ 
.__ 
onSelectionChange__ /
+=__0 2
objects__3 :
=>__; =
{`` 
boolaa 
emptyaa 
=aa 
!aa 
objectsaa %
.aa% &
GetEnumeratoraa& 3
(aa3 4
)aa4 5
.aa5 6
MoveNextaa6 >
(aa> ?
)aa? @
;aa@ A
ifbb 
(bb 
emptybb 
||bb 
(bb 
LookDevbb %
.bb% &
currentContextbb& 4
.bb4 5
environmentLibrarybb5 G
?bbG H
.bbH I
CountbbI N
??bbO Q
$numbbR S
)bbS T
==bbU W
$numbbX Y
)bbY Z
{ii "
m_EnvironmentInspectorjj *
.jj* +
stylejj+ 0
.jj0 1

visibilityjj1 ;
=jj< =

Visibilityjj> H
.jjH I
HiddenjjI O
;jjO P"
m_EnvironmentInspectorkk *
.kk* +
stylekk+ 0
.kk0 1
heightkk1 7
=kk8 9
$numkk: ;
;kk; <
}ll 
elsemm 
{nn "
m_EnvironmentInspectoroo *
.oo* +
styleoo+ 0
.oo0 1

visibilityoo1 ;
=oo< =

Visibilityoo> H
.ooH I
VisibleooI P
;ooP Q"
m_EnvironmentInspectorpp *
.pp* +
stylepp+ 0
.pp0 1
heightpp1 7
=pp8 9
newpp: =
StyleLengthpp> I
(ppI J
StyleKeywordppJ V
.ppV W
AutoppW [
)pp[ \
;pp\ ]
intqq 
firstVisibleIndexqq )
=qq* +
FirstVisibleIndexqq, =
(qq= >
m_EnvironmentListqq> O
)qqO P
;qqP Q
Environmentrr 
environmentrr  +
=rr, -
LookDevrr. 5
.rr5 6
currentContextrr6 D
.rrD E
environmentLibraryrrE W
[rrW X
m_EnvironmentListrrX i
.rri j
selectedIndexrrj w
]rrw x
;rrx y
varss 
	containerss !
=ss" #
m_EnvironmentListss$ 5
.ss5 6
Qss6 7
(ss7 8
$strss8 Q
)ssQ R
;ssR S
iftt 
(tt 
m_EnvironmentListtt )
.tt) *
selectedIndextt* 7
-tt8 9
firstVisibleIndextt: K
>=ttL N
	containerttO X
.ttX Y

childCountttY c
||ttd f
m_EnvironmentListttg x
.ttx y
selectedIndex	tty Ü
<
ttá à
firstVisibleIndex
ttâ ö
)
ttö õ
{uu 
m_EnvironmentListvv )
.vv) *
ScrollToItemvv* 6
(vv6 7
m_EnvironmentListvv7 H
.vvH I
selectedIndexvvI V
)vvV W
;vvW X
firstVisibleIndexww )
=ww* +
FirstVisibleIndexww, =
(ww= >
m_EnvironmentListww> O
)wwO P
;wwP Q
}xx 
Imageyy 
deportedLatLongyy )
=yy* +
	containeryy, 5
[yy5 6
m_EnvironmentListyy6 G
.yyG H
selectedIndexyyH U
-yyV W
firstVisibleIndexyyX i
]yyi j
asyyk m
Imageyyn s
;yys t"
m_EnvironmentInspectorzz *
.zz* +
Bindzz+ /
(zz/ 0
environmentzz0 ;
,zz; <
deportedLatLongzz= L
)zzL M
;zzM N
}{{ 
}|| 
;|| 
m_EnvironmentList~~ 
.~~ 
onItemsChosen~~ +
+=~~, .
objCollection~~/ <
=>~~= ?
{ 
foreach
ÄÄ 
(
ÄÄ 
var
ÄÄ 
obj
ÄÄ 
in
ÄÄ  "
objCollection
ÄÄ# 0
)
ÄÄ0 1
EditorGUIUtility
ÅÅ $
.
ÅÅ$ %

PingObject
ÅÅ% /
(
ÅÅ/ 0
LookDev
ÅÅ0 7
.
ÅÅ7 8
currentContext
ÅÅ8 F
.
ÅÅF G 
environmentLibrary
ÅÅG Y
?
ÅÅY Z
[
ÅÅZ [
(
ÅÅ[ \
int
ÅÅ\ _
)
ÅÅ_ `
obj
ÅÅ` c
]
ÅÅc d
)
ÅÅd e
;
ÅÅe f
}
ÇÇ 
;
ÇÇ !
m_NoEnvironmentList
áá 
=
áá  !
new
áá" %
Label
áá& +
(
áá+ ,
Style
áá, 1
.
áá1 2"
k_DragAndDropLibrary
áá2 F
)
ááF G
;
ááG H!
m_NoEnvironmentList
àà 
.
àà  
style
àà  %
.
àà% &
flexGrow
àà& .
=
àà/ 0
$num
àà1 2
;
àà2 3!
m_NoEnvironmentList
ââ 
.
ââ  
style
ââ  %
.
ââ% &
unityTextAlign
ââ& 4
=
ââ5 6

TextAnchor
ââ7 A
.
ââA B
MiddleCenter
ââB N
;
ââN O$
m_EnvironmentContainer
ää "
.
ää" #
Add
ää# &
(
ää& '$
m_EnvironmentInspector
ää' =
)
ää= >
;
ää> ?&
m_EnvironmentListToolbar
åå $
=
åå% &
new
åå' *

UIElements
åå+ 5
.
åå5 6
Toolbar
åå6 =
(
åå= >
)
åå> ?
;
åå? @
ToolbarButton
çç 
addEnvironment
çç (
=
çç) *
new
çç+ .
ToolbarButton
çç/ <
(
çç< =
(
çç= >
)
çç> ?
=>
çç@ B
{
éé 
if
èè 
(
èè 
LookDev
èè 
.
èè 
currentContext
èè *
.
èè* + 
environmentLibrary
èè+ =
==
èè> @
null
èèA E
)
èèE F
return
êê 
;
êê 
LookDev
íí 
.
íí 
currentContext
íí &
.
íí& ' 
environmentLibrary
íí' 9
.
íí9 :
Add
íí: =
(
íí= >
)
íí> ?
;
íí? @#
RefreshLibraryDisplay
ìì %
(
ìì% &
)
ìì& '
;
ìì' (
m_EnvironmentList
îî !
.
îî! "
ScrollToItem
îî" .
(
îî. /
-
îî/ 0
$num
îî0 1
)
îî1 2
;
îî2 3
m_EnvironmentList
ïï !
.
ïï! "
selectedIndex
ïï" /
=
ïï0 1
LookDev
ïï2 9
.
ïï9 :
currentContext
ïï: H
.
ïïH I 
environmentLibrary
ïïI [
.
ïï[ \
Count
ïï\ a
-
ïïb c
$num
ïïd e
;
ïïe f
ScrollToEnd
ññ 
(
ññ 
)
ññ 
;
ññ 
}
óó 
)
óó 
{
òò 
name
ôô 
=
ôô 
$str
ôô 
,
ôô 
tooltip
öö 
=
öö 
$str
öö 5
}
õõ 
;
õõ 
addEnvironment
úú 
.
úú 
Add
úú 
(
úú 
new
úú "
Image
úú# (
(
úú( )
)
úú) *
{
úú+ ,
image
úú- 2
=
úú3 4
Style
úú5 :
.
úú: ;
	k_AddIcon
úú; D
}
úúE F
)
úúF G
;
úúG H
ToolbarButton
ùù 
removeEnvironment
ùù +
=
ùù, -
new
ùù. 1
ToolbarButton
ùù2 ?
(
ùù? @
(
ùù@ A
)
ùùA B
=>
ùùC E
{
ûû 
if
üü 
(
üü 
m_EnvironmentList
üü %
.
üü% &
selectedIndex
üü& 3
==
üü4 6
-
üü7 8
$num
üü8 9
||
üü: <
LookDev
üü= D
.
üüD E
currentContext
üüE S
.
üüS T 
environmentLibrary
üüT f
==
üüg i
null
üüj n
)
üün o
return
†† 
;
†† 
LookDev
°° 
.
°° 
currentContext
°° &
.
°°& ' 
environmentLibrary
°°' 9
?
°°9 :
.
°°: ;
Remove
°°; A
(
°°A B
m_EnvironmentList
°°B S
.
°°S T
selectedIndex
°°T a
)
°°a b
;
°°b c#
RefreshLibraryDisplay
¢¢ %
(
¢¢% &
)
¢¢& '
;
¢¢' (
m_EnvironmentList
££ !
.
££! "
selectedIndex
££" /
=
££0 1
-
££2 3
$num
££3 4
;
££4 5
}
§§ 
)
§§ 
{
•• 
name
¶¶ 
=
¶¶ 
$str
¶¶ 
,
¶¶  
tooltip
ßß 
=
ßß 
$str
ßß A
}
®® 
;
®® 
removeEnvironment
©© 
.
©© 
Add
©© !
(
©©! "
new
©©" %
Image
©©& +
(
©©+ ,
)
©©, -
{
©©. /
image
©©0 5
=
©©6 7
Style
©©8 =
.
©©= >
k_RemoveIcon
©©> J
}
©©K L
)
©©L M
;
©©M N
ToolbarButton
™™ "
duplicateEnvironment
™™ .
=
™™/ 0
new
™™1 4
ToolbarButton
™™5 B
(
™™B C
(
™™C D
)
™™D E
=>
™™F H
{
´´ 
if
¨¨ 
(
¨¨ 
m_EnvironmentList
¨¨ %
.
¨¨% &
selectedIndex
¨¨& 3
==
¨¨4 6
-
¨¨7 8
$num
¨¨8 9
||
¨¨: <
LookDev
¨¨= D
.
¨¨D E
currentContext
¨¨E S
.
¨¨S T 
environmentLibrary
¨¨T f
==
¨¨g i
null
¨¨j n
)
¨¨n o
return
≠≠ 
;
≠≠ 
LookDev
ÆÆ 
.
ÆÆ 
currentContext
ÆÆ &
.
ÆÆ& ' 
environmentLibrary
ÆÆ' 9
.
ÆÆ9 :
	Duplicate
ÆÆ: C
(
ÆÆC D
m_EnvironmentList
ÆÆD U
.
ÆÆU V
selectedIndex
ÆÆV c
)
ÆÆc d
;
ÆÆd e#
RefreshLibraryDisplay
ØØ %
(
ØØ% &
)
ØØ& '
;
ØØ' (
m_EnvironmentList
∞∞ !
.
∞∞! "
ScrollToItem
∞∞" .
(
∞∞. /
-
∞∞/ 0
$num
∞∞0 1
)
∞∞1 2
;
∞∞2 3
m_EnvironmentList
±± !
.
±±! "
selectedIndex
±±" /
=
±±0 1
LookDev
±±2 9
.
±±9 :
currentContext
±±: H
.
±±H I 
environmentLibrary
±±I [
.
±±[ \
Count
±±\ a
-
±±b c
$num
±±d e
;
±±e f
ScrollToEnd
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 
)
≥≥ 
{
¥¥ 
name
µµ 
=
µµ 
$str
µµ "
,
µµ" #
tooltip
∂∂ 
=
∂∂ 
$str
∂∂ D
}
∑∑ 
;
∑∑ "
duplicateEnvironment
∏∏  
.
∏∏  !
Add
∏∏! $
(
∏∏$ %
new
∏∏% (
Image
∏∏) .
(
∏∏. /
)
∏∏/ 0
{
∏∏1 2
image
∏∏3 8
=
∏∏9 :
Style
∏∏; @
.
∏∏@ A
k_DuplicateIcon
∏∏A P
}
∏∏Q R
)
∏∏R S
;
∏∏S T&
m_EnvironmentListToolbar
ππ $
.
ππ$ %
Add
ππ% (
(
ππ( )
addEnvironment
ππ) 7
)
ππ7 8
;
ππ8 9&
m_EnvironmentListToolbar
∫∫ $
.
∫∫$ %
Add
∫∫% (
(
∫∫( )
removeEnvironment
∫∫) :
)
∫∫: ;
;
∫∫; <&
m_EnvironmentListToolbar
ªª $
.
ªª$ %
Add
ªª% (
(
ªª( )"
duplicateEnvironment
ªª) =
)
ªª= >
;
ªª> ?&
m_EnvironmentListToolbar
ºº $
.
ºº$ %
AddToClassList
ºº% 3
(
ºº3 4
$str
ºº4 N
)
ººN O
;
ººO P
var
ææ -
m_EnvironmentInspectorSeparator
ææ /
=
ææ0 1
new
ææ2 5
VisualElement
ææ6 C
(
ææC D
)
ææD E
{
ææF G
name
ææH L
=
ææM N
$str
ææO _
}
ææ` a
;
ææa b-
m_EnvironmentInspectorSeparator
øø +
.
øø+ ,
Add
øø, /
(
øø/ 0
new
øø0 3
VisualElement
øø4 A
(
øøA B
)
øøB C
{
øøD E
name
øøF J
=
øøK L
$str
øøM X
}
øøY Z
)
øøZ [
;
øø[ \$
m_EnvironmentContainer
¿¿ "
.
¿¿" #
Add
¿¿# &
(
¿¿& '-
m_EnvironmentInspectorSeparator
¿¿' F
)
¿¿F G
;
¿¿G H
VisualElement
¬¬ 
listContainer
¬¬ '
=
¬¬( )
new
¬¬* -
VisualElement
¬¬. ;
(
¬¬; <
)
¬¬< =
;
¬¬= >
listContainer
√√ 
.
√√ 
AddToClassList
√√ (
(
√√( )
$str
√√) ;
)
√√; <
;
√√< =
listContainer
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
m_EnvironmentList
ƒƒ /
)
ƒƒ/ 0
;
ƒƒ0 1
listContainer
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ &
m_EnvironmentListToolbar
≈≈ 6
)
≈≈6 7
;
≈≈7 8
m_LibraryField
«« 
=
«« 
new
««  
ObjectField
««! ,
(
««, -
$str
««- 6
)
««6 7
{
»» 
tooltip
…… 
=
…… 
$str
…… 6
}
   
;
   
m_LibraryField
ÀÀ 
.
ÀÀ 
allowSceneObjects
ÀÀ ,
=
ÀÀ- .
false
ÀÀ/ 4
;
ÀÀ4 5
m_LibraryField
ÃÃ 
.
ÃÃ 

objectType
ÃÃ %
=
ÃÃ& '
typeof
ÃÃ( .
(
ÃÃ. / 
EnvironmentLibrary
ÃÃ/ A
)
ÃÃA B
;
ÃÃB C
m_LibraryField
ÕÕ 
.
ÕÕ #
SetValueWithoutNotify
ÕÕ 0
(
ÕÕ0 1
LookDev
ÕÕ1 8
.
ÕÕ8 9
currentContext
ÕÕ9 G
.
ÕÕG H 
environmentLibrary
ÕÕH Z
)
ÕÕZ [
;
ÕÕ[ \
m_LibraryField
ŒŒ 
.
ŒŒ *
RegisterValueChangedCallback
ŒŒ 7
(
ŒŒ7 8
evt
ŒŒ8 ;
=>
ŒŒ< >
{
œœ 
m_EnvironmentList
–– !
.
––! "
selectedIndex
––" /
=
––0 1
-
––2 3
$num
––3 4
;
––4 52
$OnChangingEnvironmentLibraryInternal
—— 4
?
——4 5
.
——5 6
Invoke
——6 <
(
——< =
evt
——= @
.
——@ A
newValue
——A I
as
——J L 
EnvironmentLibrary
——M _
)
——_ `
;
——` a#
RefreshLibraryDisplay
““ %
(
““% &
)
““& '
;
““' (
}
”” 
)
”” 
;
”” 
var
’’ ,
environmentListCreationToolbar
’’ .
=
’’/ 0
new
’’1 4

UIElements
’’5 ?
.
’’? @
Toolbar
’’@ G
(
’’G H
)
’’H I
{
÷÷ 
name
◊◊ 
=
◊◊ 
$str
◊◊ 7
}
ÿÿ 
;
ÿÿ ,
environmentListCreationToolbar
ŸŸ *
.
ŸŸ* +
Add
ŸŸ+ .
(
ŸŸ. /
m_LibraryField
ŸŸ/ =
)
ŸŸ= >
;
ŸŸ> ?,
environmentListCreationToolbar
⁄⁄ *
.
⁄⁄* +
Add
⁄⁄+ .
(
⁄⁄. /
new
⁄⁄/ 2
ToolbarButton
⁄⁄3 @
(
⁄⁄@ A
(
⁄⁄A B
)
⁄⁄B C
=>
€€ '
EnvironmentLibraryCreator
€€ ,
.
€€, -
CreateAndAssignTo
€€- >
(
€€> ?
m_LibraryField
€€? M
)
€€M N
)
€€N O
{
‹‹ 
text
›› 
=
›› 
$str
›› 
,
›› 
tooltip
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ ;
}
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ $
m_EnvironmentContainer
·· "
.
··" #
Add
··# &
(
··& '
listContainer
··' 4
)
··4 5
;
··5 6$
m_EnvironmentContainer
‚‚ "
.
‚‚" #
Add
‚‚# &
(
‚‚& '!
m_NoEnvironmentList
‚‚' :
)
‚‚: ;
;
‚‚; <$
m_EnvironmentContainer
„„ "
.
„„" #
Add
„„# &
(
„„& ',
environmentListCreationToolbar
„„' E
)
„„E F
;
„„F G
m_EnvironmentList
ÊÊ 
.
ÊÊ 
RegisterCallback
ÊÊ .
<
ÊÊ. /
MouseDownEvent
ÊÊ/ =
>
ÊÊ= >
(
ÊÊ> ?
evt
ÊÊ? B
=>
ÊÊC E
{
ÁÁ 
var
ËË 
clickedIndex
ËË  
=
ËË! "
(
ËË# $
int
ËË$ '
)
ËË' (
(
ËË( )
evt
ËË) ,
.
ËË, - 
localMousePosition
ËË- ?
.
ËË? @
y
ËË@ A
/
ËËB C
m_EnvironmentList
ËËD U
.
ËËU V

itemHeight
ËËV `
)
ËË` a
;
ËËa b
if
ÈÈ 
(
ÈÈ 
clickedIndex
ÈÈ  
>=
ÈÈ! #
m_EnvironmentList
ÈÈ$ 5
.
ÈÈ5 6
itemsSource
ÈÈ6 A
.
ÈÈA B
Count
ÈÈB G
)
ÈÈG H
{
ÍÍ 
m_EnvironmentList
ÎÎ %
.
ÎÎ% &
selectedIndex
ÎÎ& 3
=
ÎÎ4 5
-
ÎÎ6 7
$num
ÎÎ7 8
;
ÎÎ8 9
evt
ÏÏ 
.
ÏÏ 
StopPropagation
ÏÏ '
(
ÏÏ' (
)
ÏÏ( )
;
ÏÏ) *
}
ÌÌ 
}
ÓÓ 
)
ÓÓ 
;
ÓÓ #
RefreshLibraryDisplay
 !
(
! "
)
" #
;
# $
}
ÒÒ 	
void
ÙÙ 
ScrollToEnd
ÙÙ 
(
ÙÙ 
int
ÙÙ 
attemptRemaining
ÙÙ -
=
ÙÙ. /
$num
ÙÙ0 1
)
ÙÙ1 2
{
ıı 	
m_EnvironmentList
ˆˆ 
.
ˆˆ 
ScrollToItem
ˆˆ *
(
ˆˆ* +
-
ˆˆ+ ,
$num
ˆˆ, -
)
ˆˆ- .
;
ˆˆ. /
if
˜˜ 
(
˜˜ 
attemptRemaining
˜˜  
>
˜˜! "
$num
˜˜# $
)
˜˜$ %
EditorApplication
¯¯ !
.
¯¯! "
	delayCall
¯¯" +
+=
¯¯, .
(
¯¯/ 0
)
¯¯0 1
=>
¯¯2 4
ScrollToEnd
¯¯5 @
(
¯¯@ A
--
¯¯A C
attemptRemaining
¯¯C S
)
¯¯S T
;
¯¯T U
}
˘˘ 	
void
˚˚ #
RefreshLibraryDisplay
˚˚ "
(
˚˚" #
)
˚˚# $
{
¸¸ 	
if
˝˝ 
(
˝˝ 
m_LibraryField
˝˝ 
!=
˝˝ !
null
˝˝" &
)
˝˝& '
m_LibraryField
˛˛ 
.
˛˛ #
SetValueWithoutNotify
˛˛ 4
(
˛˛4 5
LookDev
˛˛5 <
.
˛˛< =
currentContext
˛˛= K
.
˛˛K L 
environmentLibrary
˛˛L ^
)
˛˛^ _
;
˛˛_ `
if
ÄÄ 
(
ÄÄ $
m_EnvironmentInspector
ÄÄ &
!=
ÄÄ' )
null
ÄÄ* .
&&
ÄÄ/ 1
m_EnvironmentList
ÄÄ2 C
!=
ÄÄD F
null
ÄÄG K
)
ÄÄK L
{
ÅÅ 
int
ÇÇ 
itemMax
ÇÇ 
=
ÇÇ 
LookDev
ÇÇ %
.
ÇÇ% &
currentContext
ÇÇ& 4
.
ÇÇ4 5 
environmentLibrary
ÇÇ5 G
?
ÇÇG H
.
ÇÇH I
Count
ÇÇI N
??
ÇÇO Q
$num
ÇÇR S
;
ÇÇS T
if
ÉÉ 
(
ÉÉ 
itemMax
ÉÉ 
==
ÉÉ 
$num
ÉÉ  
||
ÉÉ! #
m_EnvironmentList
ÉÉ$ 5
.
ÉÉ5 6
selectedIndex
ÉÉ6 C
==
ÉÉD F
-
ÉÉG H
$num
ÉÉH I
)
ÉÉI J
{
ÑÑ $
m_EnvironmentInspector
ÖÖ *
.
ÖÖ* +
style
ÖÖ+ 0
.
ÖÖ0 1

visibility
ÖÖ1 ;
=
ÖÖ< =

Visibility
ÖÖ> H
.
ÖÖH I
Hidden
ÖÖI O
;
ÖÖO P$
m_EnvironmentInspector
ÜÜ *
.
ÜÜ* +
style
ÜÜ+ 0
.
ÜÜ0 1
height
ÜÜ1 7
=
ÜÜ8 9
$num
ÜÜ: ;
;
ÜÜ; <
}
áá 
else
àà 
{
ââ $
m_EnvironmentInspector
ää *
.
ää* +
style
ää+ 0
.
ää0 1

visibility
ää1 ;
=
ää< =

Visibility
ää> H
.
ääH I
Visible
ääI P
;
ääP Q$
m_EnvironmentInspector
ãã *
.
ãã* +
style
ãã+ 0
.
ãã0 1
height
ãã1 7
=
ãã8 9
new
ãã: =
StyleLength
ãã> I
(
ããI J
StyleKeyword
ããJ V
.
ããV W
Auto
ããW [
)
ãã[ \
;
ãã\ ]
}
åå 
var
éé 
items
éé 
=
éé 
new
éé 
List
éé  $
<
éé$ %
int
éé% (
>
éé( )
(
éé) *
itemMax
éé* 1
)
éé1 2
;
éé2 3
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
$num
èè 
;
èè 
i
èè  !
<
èè" #
itemMax
èè$ +
;
èè+ ,
i
èè- .
++
èè. 0
)
èè0 1
items
êê 
.
êê 
Add
êê 
(
êê 
i
êê 
)
êê  
;
êê  !
m_EnvironmentList
ëë !
.
ëë! "
itemsSource
ëë" -
=
ëë. /
items
ëë0 5
;
ëë5 6
if
íí 
(
íí 
LookDev
íí 
.
íí 
currentContext
íí *
.
íí* + 
environmentLibrary
íí+ =
==
íí> @
null
ííA E
)
ííE F
{
ìì 
m_EnvironmentList
îî %
.
ïï 
Q
ïï 
(
ïï 
	className
ïï $
:
ïï$ %
$str
ïï& L
)
ïïL M
.
ññ 
Q
ññ 
(
ññ 
$str
ññ *
)
ññ* +
.
óó 
style
óó 
.
óó 

visibility
óó )
=
óó* +

Visibility
óó, 6
.
óó6 7
Hidden
óó7 =
;
óó= >&
m_EnvironmentListToolbar
òò ,
.
òò, -
style
òò- 2
.
òò2 3

visibility
òò3 =
=
òò> ?

Visibility
òò@ J
.
òòJ K
Hidden
òòK Q
;
òòQ R!
m_NoEnvironmentList
ôô '
.
ôô' (
style
ôô( -
.
ôô- .
display
ôô. 5
=
ôô6 7
DisplayStyle
ôô8 D
.
ôôD E
Flex
ôôE I
;
ôôI J
}
öö 
else
õõ 
{
úú 
m_EnvironmentList
ùù %
.
ûû 
Q
ûû 
(
ûû 
	className
ûû $
:
ûû$ %
$str
ûû& L
)
ûûL M
.
üü 
Q
üü 
(
üü 
$str
üü *
)
üü* +
.
†† 
style
†† 
.
†† 

visibility
†† )
=
††* +
itemMax
††, 3
==
††4 6
$num
††7 8
?
°° 

Visibility
°° (
.
°°( )
Hidden
°°) /
:
¢¢ 

Visibility
¢¢ (
.
¢¢( )
Visible
¢¢) 0
;
¢¢0 1&
m_EnvironmentListToolbar
££ ,
.
££, -
style
££- 2
.
££2 3

visibility
££3 =
=
££> ?

Visibility
££@ J
.
££J K
Visible
££K R
;
££R S!
m_NoEnvironmentList
§§ '
.
§§' (
style
§§( -
.
§§- .
display
§§. 5
=
§§6 7
DisplayStyle
§§8 D
.
§§D E
None
§§E I
;
§§I J
}
•• 
}
¶¶ 
}
ßß 	
DraggingContext
©© 
StartDragging
©© %
(
©©% &
VisualElement
©©& 3
item
©©4 8
,
©©8 9
Vector2
©©: A
worldPosition
©©B O
)
©©O P
=>
™™ 
new
™™ 
DraggingContext
™™ "
(
™™" #
rootVisualElement
´´ !
,
´´! "
item
¨¨ 
as
¨¨ 
Image
¨¨ 
,
¨¨ 
(
ØØ 
int
ØØ 
)
ØØ 
item
ØØ 
.
ØØ 
layout
ØØ  
.
ØØ  !
y
ØØ! "
/
ØØ# $
m_EnvironmentList
ØØ% 6
.
ØØ6 7

itemHeight
ØØ7 A
,
ØØA B
worldPosition
∞∞ 
)
∞∞ 
;
∞∞ 
void
≤≤ 
EndDragging
≤≤ 
(
≤≤ 
DraggingContext
≤≤ (
context
≤≤) 0
,
≤≤0 1
Vector2
≤≤2 9 
mouseWorldPosition
≤≤: L
)
≤≤L M
{
≥≥ 	
Environment
¥¥ 
environment
¥¥ #
=
¥¥$ %
LookDev
¥¥& -
.
¥¥- .
currentContext
¥¥. <
.
¥¥< = 
environmentLibrary
¥¥= O
?
¥¥O P
[
¥¥P Q
context
¥¥Q X
.
¥¥X Y
draggedIndex
¥¥Y e
]
¥¥e f
;
¥¥f g
if
µµ 
(
µµ 
environment
µµ 
==
µµ 
null
µµ #
)
µµ# $
return
∂∂ 
;
∂∂ 
if
∏∏ 
(
∏∏ 
m_Views
∏∏ 
[
∏∏ 
(
∏∏ 
int
∏∏ 
)
∏∏ 
	ViewIndex
∏∏ &
.
∏∏& '
First
∏∏' ,
]
∏∏, -
.
∏∏- .
ContainsPoint
∏∏. ;
(
∏∏; < 
mouseWorldPosition
∏∏< N
)
∏∏N O
)
∏∏O P
{
ππ 
if
∫∫ 
(
∫∫ 

viewLayout
∫∫ 
==
∫∫ !
Layout
∫∫" (
.
∫∫( )
CustomSplit
∫∫) 4
)
∫∫4 51
#OnChangingEnvironmentInViewInternal
ªª 7
?
ªª7 8
.
ªª8 9
Invoke
ªª9 ?
(
ªª? @
environment
ªª@ K
,
ªªK L"
ViewCompositionIndex
ªªM a
.
ªªa b
	Composite
ªªb k
,
ªªk l 
mouseWorldPosition
ªªm 
)ªª Ä
;ªªÄ Å
else
ºº 1
#OnChangingEnvironmentInViewInternal
ΩΩ 7
?
ΩΩ7 8
.
ΩΩ8 9
Invoke
ΩΩ9 ?
(
ΩΩ? @
environment
ΩΩ@ K
,
ΩΩK L"
ViewCompositionIndex
ΩΩM a
.
ΩΩa b
First
ΩΩb g
,
ΩΩg h 
mouseWorldPosition
ΩΩi {
)
ΩΩ{ |
;
ΩΩ| }
m_NoEnvironment1
ææ  
.
ææ  !
style
ææ! &
.
ææ& '

visibility
ææ' 1
=
ææ2 3
environment
ææ4 ?
==
ææ@ B
null
ææC G
||
ææH J
environment
ææK V
.
ææV W
Equals
ææW ]
(
ææ] ^
null
ææ^ b
)
ææb c
?
ææd e

Visibility
ææf p
.
ææp q
Visible
ææq x
:
ææy z

Visibilityææ{ Ö
.ææÖ Ü
HiddenææÜ å
;ææå ç
}
øø 
else
¿¿ 
{
¡¡ 1
#OnChangingEnvironmentInViewInternal
¬¬ 3
?
¬¬3 4
.
¬¬4 5
Invoke
¬¬5 ;
(
¬¬; <
environment
¬¬< G
,
¬¬G H"
ViewCompositionIndex
¬¬I ]
.
¬¬] ^
Second
¬¬^ d
,
¬¬d e 
mouseWorldPosition
¬¬f x
)
¬¬x y
;
¬¬y z
m_NoEnvironment2
√√  
.
√√  !
style
√√! &
.
√√& '

visibility
√√' 1
=
√√2 3
environment
√√4 ?
==
√√@ B
null
√√C G
||
√√H J
environment
√√K V
.
√√V W
Equals
√√W ]
(
√√] ^
null
√√^ b
)
√√b c
?
√√d e

Visibility
√√f p
.
√√p q
Visible
√√q x
:
√√y z

Visibility√√{ Ö
.√√Ö Ü
Hidden√√Ü å
;√√å ç
}
ƒƒ 
}
≈≈ 	
class
«« 
DraggingContext
«« 
:
«« 
IDisposable
««  +
{
»» 	
const
…… 
string
…… "
k_CursorFollowerName
…… -
=
……. /
$str
……0 @
;
……@ A
public
   
readonly
   
int
   
draggedIndex
    ,
;
  , -
readonly
ÀÀ 
Image
ÀÀ 
cursorFollower
ÀÀ )
;
ÀÀ) *
readonly
ÃÃ 
Vector2
ÃÃ 
cursorOffset
ÃÃ )
;
ÃÃ) *
readonly
ÕÕ 
VisualElement
ÕÕ "
windowContent
ÕÕ# 0
;
ÕÕ0 1
public
œœ 
DraggingContext
œœ "
(
œœ" #
VisualElement
œœ# 0
windowContent
œœ1 >
,
œœ> ?
Image
œœ@ E
draggedElement
œœF T
,
œœT U
int
œœV Y
draggedIndex
œœZ f
,
œœf g
Vector2
œœh o
worldPosition
œœp }
)
œœ} ~
{
–– 
this
—— 
.
—— 
windowContent
—— "
=
——# $
windowContent
——% 2
;
——2 3
this
““ 
.
““ 
draggedIndex
““ !
=
““" #
draggedIndex
““$ 0
;
““0 1
cursorFollower
”” 
=
””  
new
””! $
Image
””% *
(
””* +
)
””+ ,
{
‘‘ 
name
’’ 
=
’’ "
k_CursorFollowerName
’’ /
,
’’/ 0
image
÷÷ 
=
÷÷ 
draggedElement
÷÷ *
.
÷÷* +
image
÷÷+ 0
}
◊◊ 
;
◊◊ 
cursorFollower
ÿÿ 
.
ÿÿ 
	tintColor
ÿÿ (
=
ÿÿ) *
new
ÿÿ+ .
Color
ÿÿ/ 4
(
ÿÿ4 5
$num
ÿÿ5 7
,
ÿÿ7 8
$num
ÿÿ9 ;
,
ÿÿ; <
$num
ÿÿ= ?
,
ÿÿ? @
$num
ÿÿA D
)
ÿÿD E
;
ÿÿE F
windowContent
ŸŸ 
.
ŸŸ 
Add
ŸŸ !
(
ŸŸ! "
cursorFollower
ŸŸ" 0
)
ŸŸ0 1
;
ŸŸ1 2
cursorOffset
⁄⁄ 
=
⁄⁄ 
draggedElement
⁄⁄ -
.
⁄⁄- .
WorldToLocal
⁄⁄. :
(
⁄⁄: ;
worldPosition
⁄⁄; H
)
⁄⁄H I
;
⁄⁄I J
cursorFollower
‹‹ 
.
‹‹ 
style
‹‹ $
.
‹‹$ %
position
‹‹% -
=
‹‹. /
Position
‹‹0 8
.
‹‹8 9
Absolute
‹‹9 A
;
‹‹A B"
UpdateCursorFollower
›› $
(
››$ %
worldPosition
››% 2
)
››2 3
;
››3 4
}
ﬁﬁ 
public
‡‡ 
void
‡‡ "
UpdateCursorFollower
‡‡ ,
(
‡‡, -
Vector2
‡‡- 4 
mouseWorldPosition
‡‡5 G
)
‡‡G H
{
·· 
Vector2
‚‚ !
windowLocalPosition
‚‚ +
=
‚‚, -
windowContent
‚‚. ;
.
‚‚; <
WorldToLocal
‚‚< H
(
‚‚H I 
mouseWorldPosition
‚‚I [
)
‚‚[ \
;
‚‚\ ]
cursorFollower
„„ 
.
„„ 
style
„„ $
.
„„$ %
left
„„% )
=
„„* +!
windowLocalPosition
„„, ?
.
„„? @
x
„„@ A
-
„„B C
cursorOffset
„„D P
.
„„P Q
x
„„Q R
;
„„R S
cursorFollower
‰‰ 
.
‰‰ 
style
‰‰ $
.
‰‰$ %
top
‰‰% (
=
‰‰) *!
windowLocalPosition
‰‰+ >
.
‰‰> ?
y
‰‰? @
-
‰‰A B
cursorOffset
‰‰C O
.
‰‰O P
y
‰‰P Q
;
‰‰Q R
}
ÂÂ 
public
ÁÁ 
void
ÁÁ 
Dispose
ÁÁ 
(
ÁÁ  
)
ÁÁ  !
{
ËË 
if
ÈÈ 
(
ÈÈ 
windowContent
ÈÈ !
.
ÈÈ! "
Contains
ÈÈ" *
(
ÈÈ* +
cursorFollower
ÈÈ+ 9
)
ÈÈ9 :
)
ÈÈ: ;
windowContent
ÍÍ !
.
ÍÍ! "
Remove
ÍÍ" (
(
ÍÍ( )
cursorFollower
ÍÍ) 7
)
ÍÍ7 8
;
ÍÍ8 9
}
ÎÎ 
}
ÏÏ 	
class
ÓÓ '
EnvironmentPreviewDragger
ÓÓ '
:
ÓÓ( )
Manipulator
ÓÓ* 5
{
ÔÔ 	
VisualElement
 

m_DropArea
 $
;
$ %
DisplayWindow
ÒÒ 
m_Window
ÒÒ "
;
ÒÒ" #
static
ÙÙ 
DraggingContext
ÙÙ "
	s_Context
ÙÙ# ,
;
ÙÙ, -
public
ˆˆ '
EnvironmentPreviewDragger
ˆˆ ,
(
ˆˆ, -
DisplayWindow
ˆˆ- :
window
ˆˆ; A
,
ˆˆA B
VisualElement
ˆˆC P
dropArea
ˆˆQ Y
)
ˆˆY Z
{
˜˜ 
m_Window
¯¯ 
=
¯¯ 
window
¯¯ !
;
¯¯! "

m_DropArea
˘˘ 
=
˘˘ 
dropArea
˘˘ %
;
˘˘% &
}
˙˙ 
	protected
¸¸ 
override
¸¸ 
void
¸¸ #'
RegisterCallbacksOnTarget
¸¸$ =
(
¸¸= >
)
¸¸> ?
{
˝˝ 
target
˛˛ 
.
˛˛ 
RegisterCallback
˛˛ '
<
˛˛' (
MouseDownEvent
˛˛( 6
>
˛˛6 7
(
˛˛7 8
OnMouseDown
˛˛8 C
)
˛˛C D
;
˛˛D E
target
ˇˇ 
.
ˇˇ 
RegisterCallback
ˇˇ '
<
ˇˇ' (
MouseUpEvent
ˇˇ( 4
>
ˇˇ4 5
(
ˇˇ5 6
	OnMouseUp
ˇˇ6 ?
)
ˇˇ? @
;
ˇˇ@ A
}
ÄÄ 
	protected
ÇÇ 
override
ÇÇ 
void
ÇÇ #+
UnregisterCallbacksFromTarget
ÇÇ$ A
(
ÇÇA B
)
ÇÇB C
{
ÉÉ 
target
ÑÑ 
.
ÑÑ  
UnregisterCallback
ÑÑ )
<
ÑÑ) *
MouseDownEvent
ÑÑ* 8
>
ÑÑ8 9
(
ÑÑ9 :
OnMouseDown
ÑÑ: E
)
ÑÑE F
;
ÑÑF G
target
ÖÖ 
.
ÖÖ  
UnregisterCallback
ÖÖ )
<
ÖÖ) *
MouseUpEvent
ÖÖ* 6
>
ÖÖ6 7
(
ÖÖ7 8
	OnMouseUp
ÖÖ8 A
)
ÖÖA B
;
ÖÖB C
}
ÜÜ 
void
àà 
Release
àà 
(
àà 
)
àà 
{
ââ 
target
ää 
.
ää  
UnregisterCallback
ää )
<
ää) *
MouseMoveEvent
ää* 8
>
ää8 9
(
ää9 :
OnMouseMove
ää: E
)
ääE F
;
ääF G
	s_Context
ãã 
?
ãã 
.
ãã 
Dispose
ãã "
(
ãã" #
)
ãã# $
;
ãã$ %
target
åå 
.
åå 
ReleaseMouse
åå #
(
åå# $
)
åå$ %
;
åå% &
	s_Context
çç 
=
çç 
null
çç  
;
çç  !
}
éé 
void
êê 
OnMouseDown
êê 
(
êê 
MouseDownEvent
êê +
evt
êê, /
)
êê/ 0
{
ëë 
if
íí 
(
íí 
evt
íí 
.
íí 
button
íí 
==
íí !
$num
íí" #
)
íí# $
{
ìì 
target
îî 
.
îî 
CaptureMouse
îî '
(
îî' (
)
îî( )
;
îî) *
target
ïï 
.
ïï 
RegisterCallback
ïï +
<
ïï+ ,
MouseMoveEvent
ïï, :
>
ïï: ;
(
ïï; <
OnMouseMove
ïï< G
)
ïïG H
;
ïïH I
	s_Context
ññ 
=
ññ 
m_Window
ññ  (
.
ññ( )
StartDragging
ññ) 6
(
ññ6 7
target
ññ7 =
,
ññ= >
evt
ññ? B
.
ññB C
mousePosition
ññC P
)
ññP Q
;
ññQ R
}
òò 
}
ôô 
void
õõ 
	OnMouseUp
õõ 
(
õõ 
MouseUpEvent
õõ '
evt
õõ( +
)
õõ+ ,
{
úú 
if
ùù 
(
ùù 
evt
ùù 
.
ùù 
button
ùù 
!=
ùù !
$num
ùù" #
)
ùù# $
return
ûû 
;
ûû 
if
üü 
(
üü 

m_DropArea
üü 
.
üü 
ContainsPoint
üü ,
(
üü, -

m_DropArea
üü- 7
.
üü7 8
WorldToLocal
üü8 D
(
üüD E
Event
üüE J
.
üüJ K
current
üüK R
.
üüR S
mousePosition
üüS `
)
üü` a
)
üüa b
)
üüb c
{
†† 
m_Window
°° 
.
°° 
EndDragging
°° (
(
°°( )
	s_Context
°°) 2
,
°°2 3
evt
°°4 7
.
°°7 8
mousePosition
°°8 E
)
°°E F
;
°°F G
evt
¢¢ 
.
¢¢ 
StopPropagation
¢¢ '
(
¢¢' (
)
¢¢( )
;
¢¢) *
}
££ 
Release
§§ 
(
§§ 
)
§§ 
;
§§ 
}
•• 
void
ßß 
OnMouseMove
ßß 
(
ßß 
MouseMoveEvent
ßß +
evt
ßß, /
)
ßß/ 0
{
®® 
evt
©© 
.
©© 
StopPropagation
©© #
(
©©# $
)
©©$ %
;
©©% &
	s_Context
™™ 
.
™™ "
UpdateCursorFollower
™™ .
(
™™. /
evt
™™/ 2
.
™™2 3
mousePosition
™™3 @
)
™™@ A
;
™™A B
}
´´ 
}
¨¨ 	
void
ÆÆ #
IEnvironmentDisplayer
ÆÆ "
.
ÆÆ" #
Repaint
ÆÆ# *
(
ÆÆ* +
)
ÆÆ+ ,
{
ØØ 	
if
±± 
(
±± 
LookDev
±± 
.
±± 
currentContext
±± &
.
±±& ' 
environmentLibrary
±±' 9
==
±±: <
null
±±= A
)
±±A B
m_LibraryField
≤≤ 
.
≤≤ 
value
≤≤ $
=
≤≤% &
null
≤≤' +
;
≤≤+ ,#
RefreshLibraryDisplay
¥¥ !
(
¥¥! "
)
¥¥" #
;
¥¥# $
}
µµ 	
void
∑∑ 
OnFocus
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 	
if
∫∫ 
(
∫∫ 
LookDev
∫∫ 
.
∫∫ 
open
∫∫ 
)
∫∫ 
{
ªª 
if
ææ 
(
ææ 
LookDev
ææ 
.
ææ 
currentContext
ææ *
.
ææ* +$
HasLibraryAssetChanged
ææ+ A
(
ææA B
m_LibraryField
ææB P
.
ææP Q
value
ææQ V
as
ææW Y 
EnvironmentLibrary
ææZ l
)
ææl m
)
ææm n
{
øø 
ViewContext
¿¿ 
viewContext
¿¿  +
=
¿¿, -
LookDev
¿¿. 5
.
¿¿5 6
currentContext
¿¿6 D
.
¿¿D E
GetViewContent
¿¿E S
(
¿¿S T
	ViewIndex
¿¿T ]
.
¿¿] ^
First
¿¿^ c
)
¿¿c d
;
¿¿d e
if
¡¡ 
(
¡¡ 
!
¡¡ 
(
¡¡ 
viewContext
¡¡ %
.
¡¡% &
environment
¡¡& 1
?
¡¡1 2
.
¡¡2 3
isCubemapOnly
¡¡3 @
??
¡¡A C
false
¡¡D I
)
¡¡I J
)
¡¡J K1
#OnChangingEnvironmentInViewInternal
¬¬ ;
?
¬¬; <
.
¬¬< =
Invoke
¬¬= C
(
¬¬C D
viewContext
¬¬D O
.
¬¬O P
environment
¬¬P [
,
¬¬[ \"
ViewCompositionIndex
¬¬] q
.
¬¬q r
First
¬¬r w
,
¬¬w x
default¬¬y Ä
)¬¬Ä Å
;¬¬Å Ç
viewContext
√√ 
=
√√  !
LookDev
√√" )
.
√√) *
currentContext
√√* 8
.
√√8 9
GetViewContent
√√9 G
(
√√G H
	ViewIndex
√√H Q
.
√√Q R
Second
√√R X
)
√√X Y
;
√√Y Z
if
ƒƒ 
(
ƒƒ 
!
ƒƒ 
(
ƒƒ 
viewContext
ƒƒ %
.
ƒƒ% &
environment
ƒƒ& 1
?
ƒƒ1 2
.
ƒƒ2 3
isCubemapOnly
ƒƒ3 @
??
ƒƒA C
false
ƒƒD I
)
ƒƒI J
)
ƒƒJ K1
#OnChangingEnvironmentInViewInternal
≈≈ ;
?
≈≈; <
.
≈≈< =
Invoke
≈≈= C
(
≈≈C D
viewContext
≈≈D O
.
≈≈O P
environment
≈≈P [
,
≈≈[ \"
ViewCompositionIndex
≈≈] q
.
≈≈q r
Second
≈≈r x
,
≈≈x y
default≈≈z Å
)≈≈Å Ç
;≈≈Ç É
}
∆∆ 
foreach
ÀÀ 
(
ÀÀ 
ViewContext
ÀÀ $
viewContext
ÀÀ% 0
in
ÀÀ1 3
LookDev
ÀÀ4 ;
.
ÀÀ; <
currentContext
ÀÀ< J
.
ÀÀJ K
viewContexts
ÀÀK W
)
ÀÀW X
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
viewContext
ÕÕ #
.
ÕÕ# $
environment
ÕÕ$ /
==
ÕÕ0 2
null
ÕÕ3 7
||
ÕÕ8 :
!
ÕÕ; <
viewContext
ÕÕ< G
.
ÕÕG H
environment
ÕÕH S
.
ÕÕS T$
HasCubemapAssetChanged
ÕÕT j
(
ÕÕj k
viewContext
ÕÕk v
.
ÕÕv w
environmentÕÕw Ç
.ÕÕÇ É
cubemapÕÕÉ ä
)ÕÕä ã
)ÕÕã å
continue
ŒŒ  
;
ŒŒ  !
if
–– 
(
–– 
viewContext
–– #
.
––# $
environment
––$ /
.
––/ 0
isCubemapOnly
––0 =
)
––= >
viewContext
—— #
.
——# $
UpdateEnvironment
——$ 5
(
——5 6
null
——6 :
)
——: ;
;
——; <
else
““ 
viewContext
”” #
.
””# $
environment
””$ /
.
””/ 0
cubemap
””0 7
=
””8 9
null
””: >
;
””> ?
}
‘‘ 
(
÷÷ 
(
÷÷ #
IEnvironmentDisplayer
÷÷ '
)
÷÷' (
this
÷÷( ,
)
÷÷, -
.
÷÷- .
Repaint
÷÷. 5
(
÷÷5 6
)
÷÷6 7
;
÷÷7 8
}
◊◊ 
}
ÿÿ 	
void
⁄⁄ (
FullRefreshEnvironmentList
⁄⁄ '
(
⁄⁄' (
)
⁄⁄( )
{
€€ 	
if
‹‹ 
(
‹‹ 
LookDev
‹‹ 
.
‹‹ 
currentContext
‹‹ &
.
‹‹& ' 
environmentLibrary
‹‹' 9
!=
‹‹: <
null
‹‹= A
)
‹‹A B
LookDev
›› 
.
›› 
currentContext
›› &
.
››& ',
FullReimportEnvironmentLibrary
››' E
(
››E F
)
››F G
;
››G H
(
ﬂﬂ 
(
ﬂﬂ #
IEnvironmentDisplayer
ﬂﬂ #
)
ﬂﬂ# $
this
ﬂﬂ$ (
)
ﬂﬂ( )
.
ﬂﬂ) *
Repaint
ﬂﬂ* 1
(
ﬂﬂ1 2
)
ﬂﬂ2 3
;
ﬂﬂ3 4
}
‡‡ 	
}
·· 
}‚‚ ¥≤
ßD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\DebugUIDrawer.Builtins.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[

 
DebugUIDrawer

 
(

 
typeof

 
(

 
DebugUI

 !
.

! "
Value

" '
)

' (
)

( )
]

) *
public 

sealed 
class 
DebugUIDrawerValue *
:+ ,
DebugUIDrawer- :
{ 
public 
override 
bool 
OnGUI "
(" #
DebugUI# *
.* +
Widget+ 1
widget2 8
,8 9

DebugState: D
stateE J
)J K
{ 	
var 
w 
= 
Cast 
< 
DebugUI  
.  !
Value! &
>& '
(' (
widget( .
). /
;/ 0
var 
rect 
= 
PrepareControlRect )
() *
)* +
;+ ,
	EditorGUI 
. 

LabelField  
(  !
rect! %
,% &
EditorGUIUtility' 7
.7 8
TrTextContent8 E
(E F
wF G
.G H
displayNameH S
)S T
,T U
EditorGUIUtilityV f
.f g
TrTextContentg t
(t u
wu v
.v w
GetValuew 
(	 Ä
)
Ä Å
.
Å Ç
ToString
Ç ä
(
ä ã
)
ã å
)
å ç
)
ç é
;
é è
return 
true 
; 
} 	
} 
[ 
DebugUIDrawer 
( 
typeof 
( 
DebugUI !
.! "
Button" (
)( )
)) *
]* +
public   

sealed   
class   
DebugUIDrawerButton   +
:  , -
DebugUIDrawer  . ;
{!! 
public(( 
override(( 
bool(( 
OnGUI(( "
(((" #
DebugUI((# *
.((* +
Widget((+ 1
widget((2 8
,((8 9

DebugState((: D
state((E J
)((J K
{)) 	
var** 
w** 
=** 
Cast** 
<** 
DebugUI**  
.**  !
Button**! '
>**' (
(**( )
widget**) /
)**/ 0
;**0 1
var,, 
rect,, 
=,, 
	EditorGUI,,  
.,,  !
IndentedRect,,! -
(,,- .
EditorGUILayout,,. =
.,,= >
GetControlRect,,> L
(,,L M
),,M N
),,N O
;,,O P
if-- 
(-- 
GUI-- 
.-- 
Button-- 
(-- 
rect-- 
,--  
w--! "
.--" #
displayName--# .
,--. /
EditorStyles--0 <
.--< =

miniButton--= G
)--G H
)--H I
{.. 
if// 
(// 
w// 
.// 
action// 
!=// 
null//  $
)//$ %
w00 
.00 
action00 
(00 
)00 
;00 
}11 
return33 
true33 
;33 
}44 	
}55 
[:: 
DebugUIDrawer:: 
(:: 
typeof:: 
(:: 
DebugUI:: !
.::! "
	BoolField::" +
)::+ ,
)::, -
]::- .
public;; 

sealed;; 
class;; "
DebugUIDrawerBoolField;; .
:;;/ 0
DebugUIDrawer;;1 >
{<< 
publicCC 
overrideCC 
boolCC 
OnGUICC "
(CC" #
DebugUICC# *
.CC* +
WidgetCC+ 1
widgetCC2 8
,CC8 9

DebugStateCC: D
stateCCE J
)CCJ K
{DD 	
varEE 
wEE 
=EE 
CastEE 
<EE 
DebugUIEE  
.EE  !
	BoolFieldEE! *
>EE* +
(EE+ ,
widgetEE, 2
)EE2 3
;EE3 4
varFF 
sFF 
=FF 
CastFF 
<FF 
DebugStateBoolFF '
>FF' (
(FF( )
stateFF) .
)FF. /
;FF/ 0
	EditorGUIHH 
.HH 
BeginChangeCheckHH &
(HH& '
)HH' (
;HH( )
varJJ 
rectJJ 
=JJ 
PrepareControlRectJJ )
(JJ) *
)JJ* +
;JJ+ ,
boolKK 
valueKK 
=KK 
	EditorGUIKK "
.KK" #
ToggleKK# )
(KK) *
rectKK* .
,KK. /
EditorGUIUtilityKK0 @
.KK@ A
TrTextContentKKA N
(KKN O
wKKO P
.KKP Q
displayNameKKQ \
)KK\ ]
,KK] ^
wKK_ `
.KK` a
GetValueKKa i
(KKi j
)KKj k
)KKk l
;KKl m
ifMM 
(MM 
	EditorGUIMM 
.MM 
EndChangeCheckMM (
(MM( )
)MM) *
)MM* +
ApplyNN 
(NN 
wNN 
,NN 
sNN 
,NN 
valueNN !
)NN! "
;NN" #
returnPP 
truePP 
;PP 
}QQ 	
}RR 
[WW 
DebugUIDrawerWW 
(WW 
typeofWW 
(WW 
DebugUIWW !
.WW! "
HistoryBoolFieldWW" 2
)WW2 3
)WW3 4
]WW4 5
publicXX 

sealedXX 
classXX )
DebugUIDrawerHistoryBoolFieldXX 5
:XX6 7
DebugUIDrawerXX8 E
{YY 
public`` 
override`` 
bool`` 
OnGUI`` "
(``" #
DebugUI``# *
.``* +
Widget``+ 1
widget``2 8
,``8 9

DebugState``: D
state``E J
)``J K
{aa 	
varbb 
wbb 
=bb 
Castbb 
<bb 
DebugUIbb  
.bb  !
HistoryBoolFieldbb! 1
>bb1 2
(bb2 3
widgetbb3 9
)bb9 :
;bb: ;
varcc 
scc 
=cc 
Castcc 
<cc 
DebugStateBoolcc '
>cc' (
(cc( )
statecc) .
)cc. /
;cc/ 0
	EditorGUIee 
.ee 
BeginChangeCheckee &
(ee& '
)ee' (
;ee( )
vargg 
rectgg 
=gg 
PrepareControlRectgg )
(gg) *
)gg* +
;gg+ ,
varhh 
	labelRecthh 
=hh 
recthh  
;hh  !
	labelRectii 
.ii 
widthii 
=ii 
EditorGUIUtilityii .
.ii. /

labelWidthii/ 9
;ii9 :
constjj 
intjj 
oneValueWidthjj #
=jj$ %
$numjj& (
;jj( )
varkk 

valueRectskk 
=kk 
newkk  
Rectkk! %
[kk% &
wkk& '
.kk' (
historyDepthkk( 4
+kk5 6
$numkk7 8
]kk8 9
;kk9 :
forll 
(ll 
intll 
ill 
=ll 
$numll 
;ll 
ill 
<ll 
wll  
.ll  !
historyDepthll! -
+ll. /
$numll0 1
;ll1 2
ill3 4
++ll4 6
)ll6 7
{mm 

valueRectsnn 
[nn 
inn 
]nn 
=nn 
rectnn  $
;nn$ %

valueRectsoo 
[oo 
ioo 
]oo 
.oo 
xoo 
+=oo  "
EditorGUIUtilityoo# 3
.oo3 4

labelWidthoo4 >
+oo? @
iooA B
*ooC D
oneValueWidthooE R
;ooR S

valueRectspp 
[pp 
ipp 
]pp 
.pp 
widthpp #
=pp$ %
oneValueWidthpp& 3
;pp3 4
}qq 
	EditorGUIrr 
.rr 

LabelFieldrr  
(rr  !
	labelRectrr! *
,rr* +
EditorGUIUtilityrr, <
.rr< =
TrTextContentrr= J
(rrJ K
wrrK L
.rrL M
displayNamerrM X
)rrX Y
)rrY Z
;rrZ [
intss 
indentss 
=ss 
	EditorGUIss "
.ss" #
indentLevelss# .
;ss. /
	EditorGUItt 
.tt 
indentLeveltt !
=tt" #
$numtt$ %
;tt% &
booluu 
valueuu 
=uu 
	EditorGUIuu "
.uu" #
Toggleuu# )
(uu) *

valueRectsuu* 4
[uu4 5
$numuu5 6
]uu6 7
,uu7 8
wuu9 :
.uu: ;
GetValueuu; C
(uuC D
)uuD E
)uuE F
;uuF G
usingvv 
(vv 
newvv 
	EditorGUIvv  
.vv  !
DisabledScopevv! .
(vv. /
truevv/ 3
)vv3 4
)vv4 5
{ww 
forxx 
(xx 
intxx 
ixx 
=xx 
$numxx 
;xx 
ixx  !
<xx" #
wxx$ %
.xx% &
historyDepthxx& 2
;xx2 3
ixx4 5
++xx5 7
)xx7 8
	EditorGUIyy 
.yy 
Toggleyy $
(yy$ %

valueRectsyy% /
[yy/ 0
iyy0 1
+yy2 3
$numyy4 5
]yy5 6
,yy6 7
wyy8 9
.yy9 :
GetHistoryValueyy: I
(yyI J
iyyJ K
)yyK L
)yyL M
;yyM N
}zz 
	EditorGUI{{ 
.{{ 
indentLevel{{ !
={{" #
indent{{$ *
;{{* +
if}} 
(}} 
	EditorGUI}} 
.}} 
EndChangeCheck}} (
(}}( )
)}}) *
)}}* +
Apply~~ 
(~~ 
w~~ 
,~~ 
s~~ 
,~~ 
value~~ !
)~~! "
;~~" #
return
ÄÄ 
true
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
[
áá 
DebugUIDrawer
áá 
(
áá 
typeof
áá 
(
áá 
DebugUI
áá !
.
áá! "
IntField
áá" *
)
áá* +
)
áá+ ,
]
áá, -
public
àà 

sealed
àà 
class
àà #
DebugUIDrawerIntField
àà -
:
àà. /
DebugUIDrawer
àà0 =
{
ââ 
public
êê 
override
êê 
bool
êê 
OnGUI
êê "
(
êê" #
DebugUI
êê# *
.
êê* +
Widget
êê+ 1
widget
êê2 8
,
êê8 9

DebugState
êê: D
state
êêE J
)
êêJ K
{
ëë 	
var
íí 
w
íí 
=
íí 
Cast
íí 
<
íí 
DebugUI
íí  
.
íí  !
IntField
íí! )
>
íí) *
(
íí* +
widget
íí+ 1
)
íí1 2
;
íí2 3
var
ìì 
s
ìì 
=
ìì 
Cast
ìì 
<
ìì 
DebugStateInt
ìì &
>
ìì& '
(
ìì' (
state
ìì( -
)
ìì- .
;
ìì. /
	EditorGUI
ïï 
.
ïï 
BeginChangeCheck
ïï &
(
ïï& '
)
ïï' (
;
ïï( )
var
óó 
rect
óó 
=
óó  
PrepareControlRect
óó )
(
óó) *
)
óó* +
;
óó+ ,
int
òò 
value
òò 
=
òò 
w
òò 
.
òò 
min
òò 
!=
òò  
null
òò! %
&&
òò& (
w
òò) *
.
òò* +
max
òò+ .
!=
òò/ 1
null
òò2 6
?
ôô 
	EditorGUI
ôô 
.
ôô 
	IntSlider
ôô %
(
ôô% &
rect
ôô& *
,
ôô* +
EditorGUIUtility
ôô, <
.
ôô< =
TrTextContent
ôô= J
(
ôôJ K
w
ôôK L
.
ôôL M
displayName
ôôM X
)
ôôX Y
,
ôôY Z
w
ôô[ \
.
ôô\ ]
GetValue
ôô] e
(
ôôe f
)
ôôf g
,
ôôg h
w
ôôi j
.
ôôj k
min
ôôk n
(
ôôn o
)
ôôo p
,
ôôp q
w
ôôr s
.
ôôs t
max
ôôt w
(
ôôw x
)
ôôx y
)
ôôy z
:
öö 
	EditorGUI
öö 
.
öö 
IntField
öö $
(
öö$ %
rect
öö% )
,
öö) *
EditorGUIUtility
öö+ ;
.
öö; <
TrTextContent
öö< I
(
ööI J
w
ööJ K
.
ööK L
displayName
ööL W
)
ööW X
,
ööX Y
w
ööZ [
.
öö[ \
GetValue
öö\ d
(
ööd e
)
ööe f
)
ööf g
;
öög h
if
úú 
(
úú 
	EditorGUI
úú 
.
úú 
EndChangeCheck
úú (
(
úú( )
)
úú) *
)
úú* +
Apply
ùù 
(
ùù 
w
ùù 
,
ùù 
s
ùù 
,
ùù 
value
ùù !
)
ùù! "
;
ùù" #
return
üü 
true
üü 
;
üü 
}
†† 	
}
°° 
[
¶¶ 
DebugUIDrawer
¶¶ 
(
¶¶ 
typeof
¶¶ 
(
¶¶ 
DebugUI
¶¶ !
.
¶¶! "
	UIntField
¶¶" +
)
¶¶+ ,
)
¶¶, -
]
¶¶- .
public
ßß 

sealed
ßß 
class
ßß $
DebugUIDrawerUIntField
ßß .
:
ßß/ 0
DebugUIDrawer
ßß1 >
{
®® 
public
ØØ 
override
ØØ 
bool
ØØ 
OnGUI
ØØ "
(
ØØ" #
DebugUI
ØØ# *
.
ØØ* +
Widget
ØØ+ 1
widget
ØØ2 8
,
ØØ8 9

DebugState
ØØ: D
state
ØØE J
)
ØØJ K
{
∞∞ 	
var
±± 
w
±± 
=
±± 
Cast
±± 
<
±± 
DebugUI
±±  
.
±±  !
	UIntField
±±! *
>
±±* +
(
±±+ ,
widget
±±, 2
)
±±2 3
;
±±3 4
var
≤≤ 
s
≤≤ 
=
≤≤ 
Cast
≤≤ 
<
≤≤ 
DebugStateUInt
≤≤ '
>
≤≤' (
(
≤≤( )
state
≤≤) .
)
≤≤. /
;
≤≤/ 0
	EditorGUI
¥¥ 
.
¥¥ 
BeginChangeCheck
¥¥ &
(
¥¥& '
)
¥¥' (
;
¥¥( )
var
∑∑ 
rect
∑∑ 
=
∑∑  
PrepareControlRect
∑∑ )
(
∑∑) *
)
∑∑* +
;
∑∑+ ,
int
∏∏ 
tmp
∏∏ 
=
∏∏ 
w
∏∏ 
.
∏∏ 
min
∏∏ 
!=
∏∏ 
null
∏∏ #
&&
∏∏$ &
w
∏∏' (
.
∏∏( )
max
∏∏) ,
!=
∏∏- /
null
∏∏0 4
?
ππ 
	EditorGUI
ππ 
.
ππ 
	IntSlider
ππ %
(
ππ% &
rect
ππ& *
,
ππ* +
EditorGUIUtility
ππ, <
.
ππ< =
TrTextContent
ππ= J
(
ππJ K
w
ππK L
.
ππL M
displayName
ππM X
)
ππX Y
,
ππY Z
Mathf
ππ[ `
.
ππ` a
Max
ππa d
(
ππd e
$num
ππe f
,
ππf g
(
ππh i
int
ππi l
)
ππl m
w
ππm n
.
ππn o
GetValue
ππo w
(
ππw x
)
ππx y
)
ππy z
,
ππz {
Mathfππ| Å
.ππÅ Ç
MaxππÇ Ö
(ππÖ Ü
$numππÜ á
,ππá à
(ππâ ä
intππä ç
)ππç é
wππé è
.ππè ê
minππê ì
(ππì î
)ππî ï
)ππï ñ
,ππñ ó
Mathfππò ù
.ππù û
Maxππû °
(ππ° ¢
$numππ¢ £
,ππ£ §
(ππ• ¶
intππ¶ ©
)ππ© ™
wππ™ ´
.ππ´ ¨
maxππ¨ Ø
(ππØ ∞
)ππ∞ ±
)ππ± ≤
)ππ≤ ≥
:
∫∫ 
	EditorGUI
∫∫ 
.
∫∫ 
IntField
∫∫ $
(
∫∫$ %
rect
∫∫% )
,
∫∫) *
EditorGUIUtility
∫∫+ ;
.
∫∫; <
TrTextContent
∫∫< I
(
∫∫I J
w
∫∫J K
.
∫∫K L
displayName
∫∫L W
)
∫∫W X
,
∫∫X Y
Mathf
∫∫Z _
.
∫∫_ `
Max
∫∫` c
(
∫∫c d
$num
∫∫d e
,
∫∫e f
(
∫∫g h
int
∫∫h k
)
∫∫k l
w
∫∫l m
.
∫∫m n
GetValue
∫∫n v
(
∫∫v w
)
∫∫w x
)
∫∫x y
)
∫∫y z
;
∫∫z {
uint
ºº 
value
ºº 
=
ºº 
(
ºº 
uint
ºº 
)
ºº 
Mathf
ºº $
.
ºº$ %
Max
ºº% (
(
ºº( )
$num
ºº) *
,
ºº* +
tmp
ºº, /
)
ºº/ 0
;
ºº0 1
if
ææ 
(
ææ 
	EditorGUI
ææ 
.
ææ 
EndChangeCheck
ææ (
(
ææ( )
)
ææ) *
)
ææ* +
Apply
øø 
(
øø 
w
øø 
,
øø 
s
øø 
,
øø 
value
øø !
)
øø! "
;
øø" #
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
¬¬ 	
}
√√ 
[
»» 
DebugUIDrawer
»» 
(
»» 
typeof
»» 
(
»» 
DebugUI
»» !
.
»»! "

FloatField
»»" ,
)
»», -
)
»»- .
]
»». /
public
…… 

sealed
…… 
class
…… %
DebugUIDrawerFloatField
…… /
:
……0 1
DebugUIDrawer
……2 ?
{
   
public
—— 
override
—— 
bool
—— 
OnGUI
—— "
(
——" #
DebugUI
——# *
.
——* +
Widget
——+ 1
widget
——2 8
,
——8 9

DebugState
——: D
state
——E J
)
——J K
{
““ 	
var
”” 
w
”” 
=
”” 
Cast
”” 
<
”” 
DebugUI
””  
.
””  !

FloatField
””! +
>
””+ ,
(
””, -
widget
””- 3
)
””3 4
;
””4 5
var
‘‘ 
s
‘‘ 
=
‘‘ 
Cast
‘‘ 
<
‘‘ 
DebugStateFloat
‘‘ (
>
‘‘( )
(
‘‘) *
state
‘‘* /
)
‘‘/ 0
;
‘‘0 1
	EditorGUI
÷÷ 
.
÷÷ 
BeginChangeCheck
÷÷ &
(
÷÷& '
)
÷÷' (
;
÷÷( )
var
ÿÿ 
rect
ÿÿ 
=
ÿÿ  
PrepareControlRect
ÿÿ )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
float
ŸŸ 
value
ŸŸ 
=
ŸŸ 
w
ŸŸ 
.
ŸŸ 
min
ŸŸ 
!=
ŸŸ  "
null
ŸŸ# '
&&
ŸŸ( *
w
ŸŸ+ ,
.
ŸŸ, -
max
ŸŸ- 0
!=
ŸŸ1 3
null
ŸŸ4 8
?
⁄⁄ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
Slider
⁄⁄ "
(
⁄⁄" #
rect
⁄⁄# '
,
⁄⁄' (
EditorGUIUtility
⁄⁄) 9
.
⁄⁄9 :
TrTextContent
⁄⁄: G
(
⁄⁄G H
w
⁄⁄H I
.
⁄⁄I J
displayName
⁄⁄J U
)
⁄⁄U V
,
⁄⁄V W
w
⁄⁄X Y
.
⁄⁄Y Z
GetValue
⁄⁄Z b
(
⁄⁄b c
)
⁄⁄c d
,
⁄⁄d e
w
⁄⁄f g
.
⁄⁄g h
min
⁄⁄h k
(
⁄⁄k l
)
⁄⁄l m
,
⁄⁄m n
w
⁄⁄o p
.
⁄⁄p q
max
⁄⁄q t
(
⁄⁄t u
)
⁄⁄u v
)
⁄⁄v w
:
€€ 
	EditorGUI
€€ 
.
€€ 

FloatField
€€ &
(
€€& '
rect
€€' +
,
€€+ ,
EditorGUIUtility
€€- =
.
€€= >
TrTextContent
€€> K
(
€€K L
w
€€L M
.
€€M N
displayName
€€N Y
)
€€Y Z
,
€€Z [
w
€€\ ]
.
€€] ^
GetValue
€€^ f
(
€€f g
)
€€g h
)
€€h i
;
€€i j
if
›› 
(
›› 
	EditorGUI
›› 
.
›› 
EndChangeCheck
›› (
(
››( )
)
››) *
)
››* +
Apply
ﬁﬁ 
(
ﬁﬁ 
w
ﬁﬁ 
,
ﬁﬁ 
s
ﬁﬁ 
,
ﬁﬁ 
value
ﬁﬁ !
)
ﬁﬁ! "
;
ﬁﬁ" #
return
‡‡ 
true
‡‡ 
;
‡‡ 
}
·· 	
}
‚‚ 
[
ÁÁ 
DebugUIDrawer
ÁÁ 
(
ÁÁ 
typeof
ÁÁ 
(
ÁÁ 
DebugUI
ÁÁ !
.
ÁÁ! "
	EnumField
ÁÁ" +
)
ÁÁ+ ,
)
ÁÁ, -
]
ÁÁ- .
public
ËË 

sealed
ËË 
class
ËË $
DebugUIDrawerEnumField
ËË .
:
ËË/ 0
DebugUIDrawer
ËË1 >
{
ÈÈ 
public
 
override
 
bool
 
OnGUI
 "
(
" #
DebugUI
# *
.
* +
Widget
+ 1
widget
2 8
,
8 9

DebugState
: D
state
E J
)
J K
{
ÒÒ 	
var
ÚÚ 
w
ÚÚ 
=
ÚÚ 
Cast
ÚÚ 
<
ÚÚ 
DebugUI
ÚÚ  
.
ÚÚ  !
	EnumField
ÚÚ! *
>
ÚÚ* +
(
ÚÚ+ ,
widget
ÚÚ, 2
)
ÚÚ2 3
;
ÚÚ3 4
var
ÛÛ 
s
ÛÛ 
=
ÛÛ 
Cast
ÛÛ 
<
ÛÛ 
DebugStateInt
ÛÛ &
>
ÛÛ& '
(
ÛÛ' (
state
ÛÛ( -
)
ÛÛ- .
;
ÛÛ. /
if
ıı 
(
ıı 
w
ıı 
.
ıı 
indexes
ıı 
==
ıı 
null
ıı !
)
ıı! "
w
ˆˆ 
.
ˆˆ 
InitIndexes
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ  
	EditorGUI
¯¯ 
.
¯¯ 
BeginChangeCheck
¯¯ &
(
¯¯& '
)
¯¯' (
;
¯¯( )
int
˙˙ 
index
˙˙ 
=
˙˙ 
-
˙˙ 
$num
˙˙ 
;
˙˙ 
int
˚˚ 
value
˚˚ 
=
˚˚ 
w
˚˚ 
.
˚˚ 
GetValue
˚˚ "
(
˚˚" #
)
˚˚# $
;
˚˚$ %
if
¸¸ 
(
¸¸ 
w
¸¸ 
.
¸¸ 
	enumNames
¸¸ 
==
¸¸ 
null
¸¸ #
||
¸¸$ &
w
¸¸' (
.
¸¸( )

enumValues
¸¸) 3
==
¸¸4 6
null
¸¸7 ;
)
¸¸; <
{
˝˝ 
EditorGUILayout
˛˛ 
.
˛˛  

LabelField
˛˛  *
(
˛˛* +
$str
˛˛+ M
)
˛˛M N
;
˛˛N O
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
var
ÇÇ 
rect
ÇÇ 
=
ÇÇ  
PrepareControlRect
ÇÇ -
(
ÇÇ- .
)
ÇÇ. /
;
ÇÇ/ 0
index
ÑÑ 
=
ÑÑ 
w
ÑÑ 
.
ÑÑ 
currentIndex
ÑÑ &
;
ÑÑ& '
if
áá 
(
áá 
index
áá 
<
áá 
$num
áá 
)
áá 
index
àà 
=
àà 
$num
àà 
;
àà 
index
ää 
=
ää 
	EditorGUI
ää !
.
ää! "
IntPopup
ää" *
(
ää* +
rect
ää+ /
,
ää/ 0
EditorGUIUtility
ää1 A
.
ääA B
TrTextContent
ääB O
(
ääO P
w
ääP Q
.
ääQ R
displayName
ääR ]
)
ää] ^
,
ää^ _
index
ää` e
,
ääe f
w
ääg h
.
ääh i
	enumNames
ääi r
,
äär s
w
äät u
.
ääu v
indexes
ääv }
)
ää} ~
;
ää~ 
value
ãã 
=
ãã 
w
ãã 
.
ãã 

enumValues
ãã $
[
ãã$ %
index
ãã% *
]
ãã* +
;
ãã+ ,
}
åå 
if
éé 
(
éé 
	EditorGUI
éé 
.
éé 
EndChangeCheck
éé (
(
éé( )
)
éé) *
)
éé* +
{
èè 
Apply
êê 
(
êê 
w
êê 
,
êê 
s
êê 
,
êê 
value
êê !
)
êê! "
;
êê" #
if
ëë 
(
ëë 
index
ëë 
>
ëë 
-
ëë 
$num
ëë 
)
ëë 
w
íí 
.
íí 
currentIndex
íí "
=
íí# $
index
íí% *
;
íí* +
}
ìì 
return
ïï 
true
ïï 
;
ïï 
}
ññ 	
}
óó 
[
úú 
DebugUIDrawer
úú 
(
úú 
typeof
úú 
(
úú 
DebugUI
úú !
.
úú! "
HistoryEnumField
úú" 2
)
úú2 3
)
úú3 4
]
úú4 5
public
ùù 

sealed
ùù 
class
ùù +
DebugUIDrawerHistoryEnumField
ùù 5
:
ùù6 7
DebugUIDrawer
ùù8 E
{
ûû 
public
•• 
override
•• 
bool
•• 
OnGUI
•• "
(
••" #
DebugUI
••# *
.
••* +
Widget
••+ 1
widget
••2 8
,
••8 9

DebugState
••: D
state
••E J
)
••J K
{
¶¶ 	
var
ßß 
w
ßß 
=
ßß 
Cast
ßß 
<
ßß 
DebugUI
ßß  
.
ßß  !
HistoryEnumField
ßß! 1
>
ßß1 2
(
ßß2 3
widget
ßß3 9
)
ßß9 :
;
ßß: ;
var
®® 
s
®® 
=
®® 
Cast
®® 
<
®® 
DebugStateInt
®® &
>
®®& '
(
®®' (
state
®®( -
)
®®- .
;
®®. /
if
™™ 
(
™™ 
w
™™ 
.
™™ 
indexes
™™ 
==
™™ 
null
™™ !
)
™™! "
w
´´ 
.
´´ 
InitIndexes
´´ 
(
´´ 
)
´´ 
;
´´  
	EditorGUI
≠≠ 
.
≠≠ 
BeginChangeCheck
≠≠ &
(
≠≠& '
)
≠≠' (
;
≠≠( )
int
ØØ 
index
ØØ 
=
ØØ 
-
ØØ 
$num
ØØ 
;
ØØ 
int
∞∞ 
value
∞∞ 
=
∞∞ 
w
∞∞ 
.
∞∞ 
GetValue
∞∞ "
(
∞∞" #
)
∞∞# $
;
∞∞$ %
if
±± 
(
±± 
w
±± 
.
±± 
	enumNames
±± 
==
±± 
null
±± #
||
±±$ &
w
±±' (
.
±±( )

enumValues
±±) 3
==
±±4 6
null
±±7 ;
)
±±; <
{
≤≤ 
EditorGUILayout
≥≥ 
.
≥≥  

LabelField
≥≥  *
(
≥≥* +
$str
≥≥+ M
)
≥≥M N
;
≥≥N O
}
¥¥ 
else
µµ 
{
∂∂ 
var
∑∑ 
rect
∑∑ 
=
∑∑  
PrepareControlRect
∑∑ -
(
∑∑- .
)
∑∑. /
;
∑∑/ 0
index
∏∏ 
=
∏∏ 
w
∏∏ 
.
∏∏ 
currentIndex
∏∏ &
;
∏∏& '
if
ªª 
(
ªª 
index
ªª 
<
ªª 
$num
ªª 
)
ªª 
index
ºº 
=
ºº 
$num
ºº 
;
ºº 
var
ææ 
	labelRect
ææ 
=
ææ 
rect
ææ  $
;
ææ$ %
	labelRect
øø 
.
øø 
width
øø 
=
øø  !
EditorGUIUtility
øø" 2
.
øø2 3

labelWidth
øø3 =
;
øø= >
const
¿¿ 
int
¿¿ 
oneValueWidth
¿¿ '
=
¿¿( )
$num
¿¿* ,
;
¿¿, -
var
¡¡ 

valueRects
¡¡ 
=
¡¡  
new
¡¡! $
Rect
¡¡% )
[
¡¡) *
w
¡¡* +
.
¡¡+ ,
historyDepth
¡¡, 8
+
¡¡9 :
$num
¡¡; <
]
¡¡< =
;
¡¡= >
for
¬¬ 
(
¬¬ 
int
¬¬ 
i
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
i
¬¬  !
<
¬¬" #
w
¬¬$ %
.
¬¬% &
historyDepth
¬¬& 2
+
¬¬3 4
$num
¬¬5 6
;
¬¬6 7
i
¬¬8 9
++
¬¬9 ;
)
¬¬; <
{
√√ 

valueRects
ƒƒ 
[
ƒƒ 
i
ƒƒ  
]
ƒƒ  !
=
ƒƒ" #
rect
ƒƒ$ (
;
ƒƒ( )

valueRects
≈≈ 
[
≈≈ 
i
≈≈  
]
≈≈  !
.
≈≈! "
x
≈≈" #
+=
≈≈$ &
EditorGUIUtility
≈≈' 7
.
≈≈7 8

labelWidth
≈≈8 B
+
≈≈C D
i
≈≈E F
*
≈≈G H
oneValueWidth
≈≈I V
;
≈≈V W

valueRects
∆∆ 
[
∆∆ 
i
∆∆  
]
∆∆  !
.
∆∆! "
width
∆∆" '
=
∆∆( )
oneValueWidth
∆∆* 7
;
∆∆7 8
}
«« 
	EditorGUI
»» 
.
»» 

LabelField
»» $
(
»»$ %
	labelRect
»»% .
,
»». /
EditorGUIUtility
»»0 @
.
»»@ A
TrTextContent
»»A N
(
»»N O
w
»»O P
.
»»P Q
displayName
»»Q \
)
»»\ ]
)
»»] ^
;
»»^ _
int
…… 
indent
…… 
=
…… 
	EditorGUI
…… &
.
……& '
indentLevel
……' 2
;
……2 3
	EditorGUI
   
.
   
indentLevel
   %
=
  & '
$num
  ( )
;
  ) *
index
ÀÀ 
=
ÀÀ 
	EditorGUI
ÀÀ !
.
ÀÀ! "
IntPopup
ÀÀ" *
(
ÀÀ* +

valueRects
ÀÀ+ 5
[
ÀÀ5 6
$num
ÀÀ6 7
]
ÀÀ7 8
,
ÀÀ8 9
index
ÀÀ: ?
,
ÀÀ? @
w
ÀÀA B
.
ÀÀB C
	enumNames
ÀÀC L
,
ÀÀL M
w
ÀÀN O
.
ÀÀO P
indexes
ÀÀP W
)
ÀÀW X
;
ÀÀX Y
value
ÃÃ 
=
ÃÃ 
w
ÃÃ 
.
ÃÃ 

enumValues
ÃÃ $
[
ÃÃ$ %
index
ÃÃ% *
]
ÃÃ* +
;
ÃÃ+ ,
using
ÕÕ 
(
ÕÕ 
new
ÕÕ 
	EditorGUI
ÕÕ $
.
ÕÕ$ %
DisabledScope
ÕÕ% 2
(
ÕÕ2 3
true
ÕÕ3 7
)
ÕÕ7 8
)
ÕÕ8 9
{
ŒŒ 
for
œœ 
(
œœ 
int
œœ 
i
œœ 
=
œœ  
$num
œœ! "
;
œœ" #
i
œœ$ %
<
œœ& '
w
œœ( )
.
œœ) *
historyDepth
œœ* 6
;
œœ6 7
i
œœ8 9
++
œœ9 ;
)
œœ; <
	EditorGUI
–– !
.
––! "
IntPopup
––" *
(
––* +

valueRects
––+ 5
[
––5 6
i
––6 7
+
––8 9
$num
––: ;
]
––; <
,
––< =
w
––> ?
.
––? @
GetHistoryValue
––@ O
(
––O P
i
––P Q
)
––Q R
,
––R S
w
––T U
.
––U V
	enumNames
––V _
,
––_ `
w
––a b
.
––b c
indexes
––c j
)
––j k
;
––k l
}
—— 
	EditorGUI
““ 
.
““ 
indentLevel
““ %
=
““& '
indent
““( .
;
““. /
}
”” 
if
’’ 
(
’’ 
	EditorGUI
’’ 
.
’’ 
EndChangeCheck
’’ (
(
’’( )
)
’’) *
)
’’* +
{
÷÷ 
Apply
◊◊ 
(
◊◊ 
w
◊◊ 
,
◊◊ 
s
◊◊ 
,
◊◊ 
value
◊◊ !
)
◊◊! "
;
◊◊" #
if
ÿÿ 
(
ÿÿ 
index
ÿÿ 
>
ÿÿ 
-
ÿÿ 
$num
ÿÿ 
)
ÿÿ 
w
ŸŸ 
.
ŸŸ 
currentIndex
ŸŸ "
=
ŸŸ# $
index
ŸŸ% *
;
ŸŸ* +
}
⁄⁄ 
return
‹‹ 
true
‹‹ 
;
‹‹ 
}
›› 	
}
ﬁﬁ 
[
„„ 
DebugUIDrawer
„„ 
(
„„ 
typeof
„„ 
(
„„ 
DebugUI
„„ !
.
„„! "
BitField
„„" *
)
„„* +
)
„„+ ,
]
„„, -
public
‰‰ 

sealed
‰‰ 
class
‰‰ #
DebugUIDrawerBitField
‰‰ -
:
‰‰. /
DebugUIDrawer
‰‰0 =
{
ÂÂ 
public
ÏÏ 
override
ÏÏ 
bool
ÏÏ 
OnGUI
ÏÏ "
(
ÏÏ" #
DebugUI
ÏÏ# *
.
ÏÏ* +
Widget
ÏÏ+ 1
widget
ÏÏ2 8
,
ÏÏ8 9

DebugState
ÏÏ: D
state
ÏÏE J
)
ÏÏJ K
{
ÌÌ 	
var
ÓÓ 
w
ÓÓ 
=
ÓÓ 
Cast
ÓÓ 
<
ÓÓ 
DebugUI
ÓÓ  
.
ÓÓ  !
BitField
ÓÓ! )
>
ÓÓ) *
(
ÓÓ* +
widget
ÓÓ+ 1
)
ÓÓ1 2
;
ÓÓ2 3
var
ÔÔ 
s
ÔÔ 
=
ÔÔ 
Cast
ÔÔ 
<
ÔÔ 
DebugStateFlags
ÔÔ (
>
ÔÔ( )
(
ÔÔ) *
state
ÔÔ* /
)
ÔÔ/ 0
;
ÔÔ0 1
	EditorGUI
ÒÒ 
.
ÒÒ 
BeginChangeCheck
ÒÒ &
(
ÒÒ& '
)
ÒÒ' (
;
ÒÒ( )
Enum
ÚÚ 
value
ÚÚ 
=
ÚÚ 
w
ÚÚ 
.
ÚÚ 
GetValue
ÚÚ #
(
ÚÚ# $
)
ÚÚ$ %
;
ÚÚ% &
var
ÛÛ 
rect
ÛÛ 
=
ÛÛ  
PrepareControlRect
ÛÛ )
(
ÛÛ) *
)
ÛÛ* +
;
ÛÛ+ ,
var
ˆˆ 
	enumNames
ˆˆ 
=
ˆˆ 
new
ˆˆ 
string
ˆˆ  &
[
ˆˆ& '
w
ˆˆ' (
.
ˆˆ( )
	enumNames
ˆˆ) 2
.
ˆˆ2 3
Length
ˆˆ3 9
-
ˆˆ: ;
$num
ˆˆ< =
]
ˆˆ= >
;
ˆˆ> ?
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 
	enumNames
˜˜  )
.
˜˜) *
Length
˜˜* 0
;
˜˜0 1
i
˜˜2 3
++
˜˜3 5
)
˜˜5 6
	enumNames
¯¯ 
[
¯¯ 
i
¯¯ 
]
¯¯ 
=
¯¯ 
w
¯¯  
.
¯¯  !
	enumNames
¯¯! *
[
¯¯* +
i
¯¯+ ,
+
¯¯- .
$num
¯¯/ 0
]
¯¯0 1
.
¯¯1 2
text
¯¯2 6
;
¯¯6 7
var
˘˘ 
index
˘˘ 
=
˘˘ 
	EditorGUI
˘˘ !
.
˘˘! "
	MaskField
˘˘" +
(
˘˘+ ,
rect
˘˘, 0
,
˘˘0 1
EditorGUIUtility
˘˘2 B
.
˘˘B C
TrTextContent
˘˘C P
(
˘˘P Q
w
˘˘Q R
.
˘˘R S
displayName
˘˘S ^
)
˘˘^ _
,
˘˘_ `
(
˘˘a b
int
˘˘b e
)
˘˘e f
Convert
˘˘f m
.
˘˘m n
ToInt32
˘˘n u
(
˘˘u v
value
˘˘v {
)
˘˘{ |
,
˘˘| }
	enumNames˘˘~ á
)˘˘á à
;˘˘à â
value
˙˙ 
=
˙˙ 
Enum
˙˙ 
.
˙˙ 
Parse
˙˙ 
(
˙˙ 
value
˙˙ $
.
˙˙$ %
GetType
˙˙% ,
(
˙˙, -
)
˙˙- .
,
˙˙. /
index
˙˙0 5
.
˙˙5 6
ToString
˙˙6 >
(
˙˙> ?
)
˙˙? @
)
˙˙@ A
as
˙˙B D
Enum
˙˙E I
;
˙˙I J
if
¸¸ 
(
¸¸ 
	EditorGUI
¸¸ 
.
¸¸ 
EndChangeCheck
¸¸ (
(
¸¸( )
)
¸¸) *
)
¸¸* +
Apply
˝˝ 
(
˝˝ 
w
˝˝ 
,
˝˝ 
s
˝˝ 
,
˝˝ 
value
˝˝ !
)
˝˝! "
;
˝˝" #
return
ˇˇ 
true
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
}
ÅÅ 
[
ÜÜ 
DebugUIDrawer
ÜÜ 
(
ÜÜ 
typeof
ÜÜ 
(
ÜÜ 
DebugUI
ÜÜ !
.
ÜÜ! "
Foldout
ÜÜ" )
)
ÜÜ) *
)
ÜÜ* +
]
ÜÜ+ ,
public
áá 

sealed
áá 
class
áá "
DebugUIDrawerFoldout
áá ,
:
áá- .
DebugUIDrawer
áá/ <
{
àà 
public
éé 
override
éé 
void
éé 
Begin
éé "
(
éé" #
DebugUI
éé# *
.
éé* +
Widget
éé+ 1
widget
éé2 8
,
éé8 9

DebugState
éé: D
state
ééE J
)
ééJ K
{
èè 	
var
êê 
w
êê 
=
êê 
Cast
êê 
<
êê 
DebugUI
êê  
.
êê  !
Foldout
êê! (
>
êê( )
(
êê) *
widget
êê* 0
)
êê0 1
;
êê1 2
var
ëë 
s
ëë 
=
ëë 
Cast
ëë 
<
ëë 
DebugStateBool
ëë '
>
ëë' (
(
ëë( )
state
ëë) .
)
ëë. /
;
ëë/ 0
	EditorGUI
ìì 
.
ìì 
BeginChangeCheck
ìì &
(
ìì& '
)
ìì' (
;
ìì( )
Rect
ïï 
rect
ïï 
=
ïï  
PrepareControlRect
ïï *
(
ïï* +
)
ïï+ ,
;
ïï, -
bool
ññ 
value
ññ 
=
ññ 
	EditorGUI
ññ "
.
ññ" #
Foldout
ññ# *
(
ññ* +
rect
ññ+ /
,
ññ/ 0
w
ññ1 2
.
ññ2 3
GetValue
ññ3 ;
(
ññ; <
)
ññ< =
,
ññ= >
EditorGUIUtility
ññ? O
.
ññO P
TrTextContent
ññP ]
(
ññ] ^
w
ññ^ _
.
ññ_ `
displayName
ññ` k
)
ññk l
,
ññl m
true
ññn r
)
ññr s
;
ññs t
Rect
òò 
drawRect
òò 
=
òò 
GUILayoutUtility
òò ,
.
òò, -
GetLastRect
òò- 8
(
òò8 9
)
òò9 :
;
òò: ;
if
ôô 
(
ôô 
w
ôô 
.
ôô 
columnLabels
ôô 
!=
ôô !
null
ôô" &
&&
ôô' )
value
ôô* /
)
ôô/ 0
{
öö 
const
õõ 
int
õõ 
oneColumnWidth
õõ (
=
õõ) *
$num
õõ+ -
;
õõ- .
int
úú 
indent
úú 
=
úú 
	EditorGUI
úú &
.
úú& '
indentLevel
úú' 2
;
úú2 3
	EditorGUI
ùù 
.
ùù 
indentLevel
ùù %
=
ùù& '
$num
ùù( )
;
ùù) *
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû  !
<
ûû" #
w
ûû$ %
.
ûû% &
columnLabels
ûû& 2
.
ûû2 3
Length
ûû3 9
;
ûû9 :
i
ûû; <
++
ûû< >
)
ûû> ?
{
üü 
var
†† 

columnRect
†† "
=
††# $
drawRect
††% -
;
††- .

columnRect
°° 
.
°° 
x
°°  
+=
°°! #
EditorGUIUtility
°°$ 4
.
°°4 5

labelWidth
°°5 ?
+
°°@ A
i
°°B C
*
°°D E
oneColumnWidth
°°F T
;
°°T U

columnRect
¢¢ 
.
¢¢ 
width
¢¢ $
=
¢¢% &
oneColumnWidth
¢¢' 5
;
¢¢5 6
	EditorGUI
££ 
.
££ 

LabelField
££ (
(
££( )

columnRect
££) 3
,
££3 4
w
££5 6
.
££6 7
columnLabels
££7 C
[
££C D
i
££D E
]
££E F
??
££G I
$str
££J L
,
££L M
EditorStyles
££N Z
.
££Z [
miniBoldLabel
££[ h
)
££h i
;
££i j
}
§§ 
	EditorGUI
•• 
.
•• 
indentLevel
•• %
=
••& '
indent
••( .
;
••. /
}
¶¶ 
if
®® 
(
®® 
	EditorGUI
®® 
.
®® 
EndChangeCheck
®® (
(
®®( )
)
®®) *
)
®®* +
Apply
©© 
(
©© 
w
©© 
,
©© 
s
©© 
,
©© 
value
©© !
)
©©! "
;
©©" #
	EditorGUI
´´ 
.
´´ 
indentLevel
´´ !
++
´´! #
;
´´# $
}
¨¨ 	
public
¥¥ 
override
¥¥ 
bool
¥¥ 
OnGUI
¥¥ "
(
¥¥" #
DebugUI
¥¥# *
.
¥¥* +
Widget
¥¥+ 1
widget
¥¥2 8
,
¥¥8 9

DebugState
¥¥: D
state
¥¥E J
)
¥¥J K
{
µµ 	
var
∂∂ 
s
∂∂ 
=
∂∂ 
Cast
∂∂ 
<
∂∂ 
DebugStateBool
∂∂ '
>
∂∂' (
(
∂∂( )
state
∂∂) .
)
∂∂. /
;
∂∂/ 0
return
∑∑ 
s
∑∑ 
.
∑∑ 
value
∑∑ 
;
∑∑ 
}
∏∏ 	
public
øø 
override
øø 
void
øø 
End
øø  
(
øø  !
DebugUI
øø! (
.
øø( )
Widget
øø) /
widget
øø0 6
,
øø6 7

DebugState
øø8 B
state
øøC H
)
øøH I
{
¿¿ 	
	EditorGUI
¡¡ 
.
¡¡ 
indentLevel
¡¡ !
--
¡¡! #
;
¡¡# $
}
¬¬ 	
}
√√ 
[
»» 
DebugUIDrawer
»» 
(
»» 
typeof
»» 
(
»» 
DebugUI
»» !
.
»»! "

ColorField
»»" ,
)
»», -
)
»»- .
]
»». /
public
…… 

sealed
…… 
class
…… %
DebugUIDrawerColorField
…… /
:
……0 1
DebugUIDrawer
……2 ?
{
   
public
—— 
override
—— 
bool
—— 
OnGUI
—— "
(
——" #
DebugUI
——# *
.
——* +
Widget
——+ 1
widget
——2 8
,
——8 9

DebugState
——: D
state
——E J
)
——J K
{
““ 	
var
”” 
w
”” 
=
”” 
Cast
”” 
<
”” 
DebugUI
””  
.
””  !

ColorField
””! +
>
””+ ,
(
””, -
widget
””- 3
)
””3 4
;
””4 5
var
‘‘ 
s
‘‘ 
=
‘‘ 
Cast
‘‘ 
<
‘‘ 
DebugStateColor
‘‘ (
>
‘‘( )
(
‘‘) *
state
‘‘* /
)
‘‘/ 0
;
‘‘0 1
	EditorGUI
÷÷ 
.
÷÷ 
BeginChangeCheck
÷÷ &
(
÷÷& '
)
÷÷' (
;
÷÷( )
var
ÿÿ 
rect
ÿÿ 
=
ÿÿ  
PrepareControlRect
ÿÿ )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
var
ŸŸ 
value
ŸŸ 
=
ŸŸ 
	EditorGUI
ŸŸ !
.
ŸŸ! "

ColorField
ŸŸ" ,
(
ŸŸ, -
rect
ŸŸ- 1
,
ŸŸ1 2
EditorGUIUtility
ŸŸ3 C
.
ŸŸC D
TrTextContent
ŸŸD Q
(
ŸŸQ R
w
ŸŸR S
.
ŸŸS T
displayName
ŸŸT _
)
ŸŸ_ `
,
ŸŸ` a
w
ŸŸb c
.
ŸŸc d
GetValue
ŸŸd l
(
ŸŸl m
)
ŸŸm n
,
ŸŸn o
w
ŸŸp q
.
ŸŸq r

showPicker
ŸŸr |
,
ŸŸ| }
w
ŸŸ~ 
.ŸŸ Ä
	showAlphaŸŸÄ â
,ŸŸâ ä
wŸŸã å
.ŸŸå ç
hdrŸŸç ê
)ŸŸê ë
;ŸŸë í
if
€€ 
(
€€ 
	EditorGUI
€€ 
.
€€ 
EndChangeCheck
€€ (
(
€€( )
)
€€) *
)
€€* +
Apply
‹‹ 
(
‹‹ 
w
‹‹ 
,
‹‹ 
s
‹‹ 
,
‹‹ 
value
‹‹ !
)
‹‹! "
;
‹‹" #
return
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
}
‡‡ 
[
ÂÂ 
DebugUIDrawer
ÂÂ 
(
ÂÂ 
typeof
ÂÂ 
(
ÂÂ 
DebugUI
ÂÂ !
.
ÂÂ! "
Vector2Field
ÂÂ" .
)
ÂÂ. /
)
ÂÂ/ 0
]
ÂÂ0 1
public
ÊÊ 

sealed
ÊÊ 
class
ÊÊ '
DebugUIDrawerVector2Field
ÊÊ 1
:
ÊÊ2 3
DebugUIDrawer
ÊÊ4 A
{
ÁÁ 
public
ÓÓ 
override
ÓÓ 
bool
ÓÓ 
OnGUI
ÓÓ "
(
ÓÓ" #
DebugUI
ÓÓ# *
.
ÓÓ* +
Widget
ÓÓ+ 1
widget
ÓÓ2 8
,
ÓÓ8 9

DebugState
ÓÓ: D
state
ÓÓE J
)
ÓÓJ K
{
ÔÔ 	
var
 
w
 
=
 
Cast
 
<
 
DebugUI
  
.
  !
Vector2Field
! -
>
- .
(
. /
widget
/ 5
)
5 6
;
6 7
var
ÒÒ 
s
ÒÒ 
=
ÒÒ 
Cast
ÒÒ 
<
ÒÒ 
DebugStateVector2
ÒÒ *
>
ÒÒ* +
(
ÒÒ+ ,
state
ÒÒ, 1
)
ÒÒ1 2
;
ÒÒ2 3
	EditorGUI
ÛÛ 
.
ÛÛ 
BeginChangeCheck
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
;
ÛÛ( )
var
ıı 
value
ıı 
=
ıı 
EditorGUILayout
ıı '
.
ıı' (
Vector2Field
ıı( 4
(
ıı4 5
w
ıı5 6
.
ıı6 7
displayName
ıı7 B
,
ııB C
w
ııD E
.
ııE F
GetValue
ııF N
(
ııN O
)
ııO P
)
ııP Q
;
ııQ R
if
˜˜ 
(
˜˜ 
	EditorGUI
˜˜ 
.
˜˜ 
EndChangeCheck
˜˜ (
(
˜˜( )
)
˜˜) *
)
˜˜* +
Apply
¯¯ 
(
¯¯ 
w
¯¯ 
,
¯¯ 
s
¯¯ 
,
¯¯ 
value
¯¯ !
)
¯¯! "
;
¯¯" #
return
˙˙ 
true
˙˙ 
;
˙˙ 
}
˚˚ 	
}
¸¸ 
[
ÅÅ 
DebugUIDrawer
ÅÅ 
(
ÅÅ 
typeof
ÅÅ 
(
ÅÅ 
DebugUI
ÅÅ !
.
ÅÅ! "
Vector3Field
ÅÅ" .
)
ÅÅ. /
)
ÅÅ/ 0
]
ÅÅ0 1
public
ÇÇ 

sealed
ÇÇ 
class
ÇÇ '
DebugUIDrawerVector3Field
ÇÇ 1
:
ÇÇ2 3
DebugUIDrawer
ÇÇ4 A
{
ÉÉ 
public
ää 
override
ää 
bool
ää 
OnGUI
ää "
(
ää" #
DebugUI
ää# *
.
ää* +
Widget
ää+ 1
widget
ää2 8
,
ää8 9

DebugState
ää: D
state
ääE J
)
ääJ K
{
ãã 	
var
åå 
w
åå 
=
åå 
Cast
åå 
<
åå 
DebugUI
åå  
.
åå  !
Vector3Field
åå! -
>
åå- .
(
åå. /
widget
åå/ 5
)
åå5 6
;
åå6 7
var
çç 
s
çç 
=
çç 
Cast
çç 
<
çç 
DebugStateVector3
çç *
>
çç* +
(
çç+ ,
state
çç, 1
)
çç1 2
;
çç2 3
	EditorGUI
èè 
.
èè 
BeginChangeCheck
èè &
(
èè& '
)
èè' (
;
èè( )
var
ëë 
value
ëë 
=
ëë 
EditorGUILayout
ëë '
.
ëë' (
Vector3Field
ëë( 4
(
ëë4 5
w
ëë5 6
.
ëë6 7
displayName
ëë7 B
,
ëëB C
w
ëëD E
.
ëëE F
GetValue
ëëF N
(
ëëN O
)
ëëO P
)
ëëP Q
;
ëëQ R
if
ìì 
(
ìì 
	EditorGUI
ìì 
.
ìì 
EndChangeCheck
ìì (
(
ìì( )
)
ìì) *
)
ìì* +
Apply
îî 
(
îî 
w
îî 
,
îî 
s
îî 
,
îî 
value
îî !
)
îî! "
;
îî" #
return
ññ 
true
ññ 
;
ññ 
}
óó 	
}
òò 
[
ùù 
DebugUIDrawer
ùù 
(
ùù 
typeof
ùù 
(
ùù 
DebugUI
ùù !
.
ùù! "
Vector4Field
ùù" .
)
ùù. /
)
ùù/ 0
]
ùù0 1
public
ûû 

sealed
ûû 
class
ûû '
DebugUIDrawerVector4Field
ûû 1
:
ûû2 3
DebugUIDrawer
ûû4 A
{
üü 
public
¶¶ 
override
¶¶ 
bool
¶¶ 
OnGUI
¶¶ "
(
¶¶" #
DebugUI
¶¶# *
.
¶¶* +
Widget
¶¶+ 1
widget
¶¶2 8
,
¶¶8 9

DebugState
¶¶: D
state
¶¶E J
)
¶¶J K
{
ßß 	
var
®® 
w
®® 
=
®® 
Cast
®® 
<
®® 
DebugUI
®®  
.
®®  !
Vector4Field
®®! -
>
®®- .
(
®®. /
widget
®®/ 5
)
®®5 6
;
®®6 7
var
©© 
s
©© 
=
©© 
Cast
©© 
<
©© 
DebugStateVector4
©© *
>
©©* +
(
©©+ ,
state
©©, 1
)
©©1 2
;
©©2 3
	EditorGUI
´´ 
.
´´ 
BeginChangeCheck
´´ &
(
´´& '
)
´´' (
;
´´( )
var
≠≠ 
value
≠≠ 
=
≠≠ 
EditorGUILayout
≠≠ '
.
≠≠' (
Vector4Field
≠≠( 4
(
≠≠4 5
w
≠≠5 6
.
≠≠6 7
displayName
≠≠7 B
,
≠≠B C
w
≠≠D E
.
≠≠E F
GetValue
≠≠F N
(
≠≠N O
)
≠≠O P
)
≠≠P Q
;
≠≠Q R
if
ØØ 
(
ØØ 
	EditorGUI
ØØ 
.
ØØ 
EndChangeCheck
ØØ (
(
ØØ( )
)
ØØ) *
)
ØØ* +
Apply
∞∞ 
(
∞∞ 
w
∞∞ 
,
∞∞ 
s
∞∞ 
,
∞∞ 
value
∞∞ !
)
∞∞! "
;
∞∞" #
return
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 	
}
¥¥ 
[
ππ 
DebugUIDrawer
ππ 
(
ππ 
typeof
ππ 
(
ππ 
DebugUI
ππ !
.
ππ! "
	Container
ππ" +
)
ππ+ ,
)
ππ, -
]
ππ- .
public
∫∫ 

sealed
∫∫ 
class
∫∫ $
DebugUIDrawerContainer
∫∫ .
:
∫∫/ 0
DebugUIDrawer
∫∫1 >
{
ªª 
public
¡¡ 
override
¡¡ 
void
¡¡ 
Begin
¡¡ "
(
¡¡" #
DebugUI
¡¡# *
.
¡¡* +
Widget
¡¡+ 1
widget
¡¡2 8
,
¡¡8 9

DebugState
¡¡: D
state
¡¡E J
)
¡¡J K
{
¬¬ 	
if
√√ 
(
√√ 
!
√√ 
string
√√ 
.
√√ 
IsNullOrEmpty
√√ %
(
√√% &
widget
√√& ,
.
√√, -
displayName
√√- 8
)
√√8 9
)
√√9 :
EditorGUILayout
ƒƒ 
.
ƒƒ  

LabelField
ƒƒ  *
(
ƒƒ* +
widget
ƒƒ+ 1
.
ƒƒ1 2
displayName
ƒƒ2 =
,
ƒƒ= >
EditorStyles
ƒƒ? K
.
ƒƒK L
	boldLabel
ƒƒL U
)
ƒƒU V
;
ƒƒV W
	EditorGUI
∆∆ 
.
∆∆ 
indentLevel
∆∆ !
++
∆∆! #
;
∆∆# $
}
«« 	
public
ŒŒ 
override
ŒŒ 
void
ŒŒ 
End
ŒŒ  
(
ŒŒ  !
DebugUI
ŒŒ! (
.
ŒŒ( )
Widget
ŒŒ) /
widget
ŒŒ0 6
,
ŒŒ6 7

DebugState
ŒŒ8 B
state
ŒŒC H
)
ŒŒH I
{
œœ 	
	EditorGUI
–– 
.
–– 
indentLevel
–– !
--
––! #
;
––# $
}
—— 	
}
““ 
[
◊◊ 
DebugUIDrawer
◊◊ 
(
◊◊ 
typeof
◊◊ 
(
◊◊ 
DebugUI
◊◊ !
.
◊◊! "
HBox
◊◊" &
)
◊◊& '
)
◊◊' (
]
◊◊( )
public
ÿÿ 

sealed
ÿÿ 
class
ÿÿ 
DebugUIDrawerHBox
ÿÿ )
:
ÿÿ* +
DebugUIDrawer
ÿÿ, 9
{
ŸŸ 
public
ﬂﬂ 
override
ﬂﬂ 
void
ﬂﬂ 
Begin
ﬂﬂ "
(
ﬂﬂ" #
DebugUI
ﬂﬂ# *
.
ﬂﬂ* +
Widget
ﬂﬂ+ 1
widget
ﬂﬂ2 8
,
ﬂﬂ8 9

DebugState
ﬂﬂ: D
state
ﬂﬂE J
)
ﬂﬂJ K
{
‡‡ 	
EditorGUILayout
·· 
.
·· 
BeginHorizontal
·· +
(
··+ ,
)
··, -
;
··- .
}
‚‚ 	
public
ÈÈ 
override
ÈÈ 
void
ÈÈ 
End
ÈÈ  
(
ÈÈ  !
DebugUI
ÈÈ! (
.
ÈÈ( )
Widget
ÈÈ) /
widget
ÈÈ0 6
,
ÈÈ6 7

DebugState
ÈÈ8 B
state
ÈÈC H
)
ÈÈH I
{
ÍÍ 	
EditorGUILayout
ÎÎ 
.
ÎÎ 
EndHorizontal
ÎÎ )
(
ÎÎ) *
)
ÎÎ* +
;
ÎÎ+ ,
}
ÏÏ 	
}
ÌÌ 
[
ÚÚ 
DebugUIDrawer
ÚÚ 
(
ÚÚ 
typeof
ÚÚ 
(
ÚÚ 
DebugUI
ÚÚ !
.
ÚÚ! "
VBox
ÚÚ" &
)
ÚÚ& '
)
ÚÚ' (
]
ÚÚ( )
public
ÛÛ 

sealed
ÛÛ 
class
ÛÛ 
DebugUIDrawerVBox
ÛÛ )
:
ÛÛ* +
DebugUIDrawer
ÛÛ, 9
{
ÙÙ 
public
˙˙ 
override
˙˙ 
void
˙˙ 
Begin
˙˙ "
(
˙˙" #
DebugUI
˙˙# *
.
˙˙* +
Widget
˙˙+ 1
widget
˙˙2 8
,
˙˙8 9

DebugState
˙˙: D
state
˙˙E J
)
˙˙J K
{
˚˚ 	
EditorGUILayout
¸¸ 
.
¸¸ 
BeginVertical
¸¸ )
(
¸¸) *
)
¸¸* +
;
¸¸+ ,
}
˝˝ 	
public
ÑÑ 
override
ÑÑ 
void
ÑÑ 
End
ÑÑ  
(
ÑÑ  !
DebugUI
ÑÑ! (
.
ÑÑ( )
Widget
ÑÑ) /
widget
ÑÑ0 6
,
ÑÑ6 7

DebugState
ÑÑ8 B
state
ÑÑC H
)
ÑÑH I
{
ÖÖ 	
EditorGUILayout
ÜÜ 
.
ÜÜ 
EndVertical
ÜÜ '
(
ÜÜ' (
)
ÜÜ( )
;
ÜÜ) *
}
áá 	
}
àà 
[
çç 
DebugUIDrawer
çç 
(
çç 
typeof
çç 
(
çç 
DebugUI
çç !
.
çç! "
Table
çç" '
)
çç' (
)
çç( )
]
çç) *
public
éé 

sealed
éé 
class
éé  
DebugUIDrawerTable
éé *
:
éé+ ,
DebugUIDrawer
éé- :
{
èè 
public
ññ 
override
ññ 
bool
ññ 
OnGUI
ññ "
(
ññ" #
DebugUI
ññ# *
.
ññ* +
Widget
ññ+ 1
widget
ññ2 8
,
ññ8 9

DebugState
ññ: D
state
ññE J
)
ññJ K
{
óó 	
var
òò 
w
òò 
=
òò 
Cast
òò 
<
òò 
DebugUI
òò  
.
òò  !
Table
òò! &
>
òò& '
(
òò' (
widget
òò( .
)
òò. /
;
òò/ 0
var
ôô 
header
ôô 
=
ôô 
w
ôô 
.
ôô 
Header
ôô !
;
ôô! " 
PrepareControlRect
úú 
(
úú 
EditorGUIUtility
úú /
.
úú/ 0
singleLineHeight
úú0 @
*
úúA B
$num
úúC G
)
úúG H
;
úúH I
var
üü 
rect
üü 
=
üü 
	EditorGUI
üü  
.
üü  !
IndentedRect
üü! -
(
üü- . 
PrepareControlRect
üü. @
(
üü@ A
header
üüA G
.
üüG H
height
üüH N
+
üüO P
(
üüQ R
w
üüR S
.
üüS T
children
üüT \
.
üü\ ]
Count
üü] b
+
üüc d
$num
üüe f
)
üüf g
*
üüh i
EditorGUIUtility
üüj z
.
üüz {
singleLineHeightüü{ ã
)üüã å
)üüå ç
;üüç é
rect
†† 
=
†† 
DrawOutline
†† 
(
†† 
rect
†† #
)
††# $
;
††$ %
var
££ 

headerRect
££ 
=
££ 
new
££  
Rect
££! %
(
££% &
rect
££& *
.
££* +
x
££+ ,
,
££, -
rect
££. 2
.
££2 3
y
££3 4
,
££4 5
rect
££6 :
.
££: ;
width
££; @
,
££@ A
header
££B H
.
££H I
height
££I O
)
££O P
;
££P Q
var
§§ 
contentRect
§§ 
=
§§ 
new
§§ !
Rect
§§" &
(
§§& '
rect
§§' +
.
§§+ ,
x
§§, -
,
§§- .

headerRect
§§/ 9
.
§§9 :
yMax
§§: >
,
§§> ?
rect
§§@ D
.
§§D E
width
§§E J
,
§§J K
rect
§§L P
.
§§P Q
height
§§Q W
-
§§X Y

headerRect
§§Z d
.
§§d e
height
§§e k
)
§§k l
;
§§l m
var
•• 
viewRect
•• 
=
•• 
new
•• 
Rect
•• #
(
••# $
contentRect
••$ /
.
••/ 0
x
••0 1
,
••1 2
contentRect
••3 >
.
••> ?
y
••? @
,
••@ A
header
••B H
.
••H I
state
••I N
.
••N O&
widthOfAllVisibleColumns
••O g
,
••g h
contentRect
••i t
.
••t u
height
••u {
)
••{ |
;
••| }
var
¶¶ 
rowRect
¶¶ 
=
¶¶ 
contentRect
¶¶ %
;
¶¶% &
rowRect
ßß 
.
ßß 
height
ßß 
=
ßß 
EditorGUIUtility
ßß -
.
ßß- .
singleLineHeight
ßß. >
;
ßß> ?
viewRect
®® 
.
®® 
height
®® 
-=
®® 
EditorGUIUtility
®® /
.
®®/ 0
singleLineHeight
®®0 @
;
®®@ A
header
´´ 
.
´´ 
OnGUI
´´ 
(
´´ 

headerRect
´´ #
,
´´# $
Mathf
´´% *
.
´´* +
Max
´´+ .
(
´´. /
w
´´/ 0
.
´´0 1
scroll
´´1 7
.
´´7 8
x
´´8 9
,
´´9 :
$num
´´; =
)
´´= >
)
´´> ?
;
´´? @
w
ÆÆ 
.
ÆÆ 
scroll
ÆÆ 
=
ÆÆ 
GUI
ÆÆ 
.
ÆÆ 
BeginScrollView
ÆÆ *
(
ÆÆ* +
contentRect
ÆÆ+ 6
,
ÆÆ6 7
w
ÆÆ8 9
.
ÆÆ9 :
scroll
ÆÆ: @
,
ÆÆ@ A
viewRect
ÆÆB J
)
ÆÆJ K
;
ÆÆK L
{
ØØ 
var
∞∞ 
columns
∞∞ 
=
∞∞ 
header
∞∞ $
.
∞∞$ %
state
∞∞% *
.
∞∞* +
columns
∞∞+ 2
;
∞∞2 3
var
±± 
visible
±± 
=
±± 
header
±± $
.
±±$ %
state
±±% *
.
±±* +
visibleColumns
±±+ 9
;
±±9 :
for
≤≤ 
(
≤≤ 
int
≤≤ 
r
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
r
≤≤  !
<
≤≤" #
w
≤≤$ %
.
≤≤% &
children
≤≤& .
.
≤≤. /
Count
≤≤/ 4
;
≤≤4 5
r
≤≤6 7
++
≤≤7 9
)
≤≤9 :
{
≥≥ 
var
¥¥ 
row
¥¥ 
=
¥¥ 
Cast
¥¥ "
<
¥¥" #
DebugUI
¥¥# *
.
¥¥* +
	Container
¥¥+ 4
>
¥¥4 5
(
¥¥5 6
w
¥¥6 7
.
¥¥7 8
children
¥¥8 @
[
¥¥@ A
r
¥¥A B
]
¥¥B C
)
¥¥C D
;
¥¥D E
rowRect
µµ 
.
µµ 
x
µµ 
=
µµ 
contentRect
µµ  +
.
µµ+ ,
x
µµ, -
;
µµ- .
rowRect
∂∂ 
.
∂∂ 
width
∂∂ !
=
∂∂" #
columns
∂∂$ +
[
∂∂+ ,
$num
∂∂, -
]
∂∂- .
.
∂∂. /
width
∂∂/ 4
;
∂∂4 5
rowRect
∏∏ 
.
∏∏ 
xMin
∏∏  
+=
∏∏! #
$num
∏∏$ %
;
∏∏% &
rowRect
ππ 
.
ππ 
xMax
ππ  
-=
ππ! #
$num
ππ$ %
;
ππ% &
	EditorGUI
∫∫ 
.
∫∫ 

LabelField
∫∫ (
(
∫∫( )
rowRect
∫∫) 0
,
∫∫0 1

GUIContent
∫∫2 <
.
∫∫< =
none
∫∫= A
,
∫∫A B
EditorGUIUtility
∫∫C S
.
∫∫S T
TrTextContent
∫∫T a
(
∫∫a b
row
∫∫b e
.
∫∫e f
displayName
∫∫f q
)
∫∫q r
)
∫∫r s
;
∫∫s t
rowRect
ªª 
.
ªª 
xMin
ªª  
-=
ªª! #
$num
ªª$ %
;
ªª% &
rowRect
ºº 
.
ºº 
xMax
ºº  
+=
ºº! #
$num
ºº$ %
;
ºº% &
for
ææ 
(
ææ 
int
ææ 
c
ææ 
=
ææ  
$num
ææ! "
;
ææ" #
c
ææ$ %
<
ææ& '
visible
ææ( /
.
ææ/ 0
Length
ææ0 6
;
ææ6 7
c
ææ8 9
++
ææ9 ;
)
ææ; <
{
øø 
rowRect
¿¿ 
.
¿¿  
x
¿¿  !
+=
¿¿" $
rowRect
¿¿% ,
.
¿¿, -
width
¿¿- 2
;
¿¿2 3
rowRect
¡¡ 
.
¡¡  
width
¡¡  %
=
¡¡& '
columns
¡¡( /
[
¡¡/ 0
visible
¡¡0 7
[
¡¡7 8
c
¡¡8 9
]
¡¡9 :
]
¡¡: ;
.
¡¡; <
width
¡¡< A
;
¡¡A B
DisplayChild
¬¬ $
(
¬¬$ %
rowRect
¬¬% ,
,
¬¬, -
row
¬¬. 1
.
¬¬1 2
children
¬¬2 :
[
¬¬: ;
visible
¬¬; B
[
¬¬B C
c
¬¬C D
]
¬¬D E
-
¬¬F G
$num
¬¬H I
]
¬¬I J
,
¬¬J K
w
¬¬L M
.
¬¬M N

isReadOnly
¬¬N X
)
¬¬X Y
;
¬¬Y Z
}
√√ 
rowRect
ƒƒ 
.
ƒƒ 
y
ƒƒ 
+=
ƒƒ  
rowRect
ƒƒ! (
.
ƒƒ( )
height
ƒƒ) /
;
ƒƒ/ 0
}
≈≈ 
}
∆∆ 
GUI
«« 
.
«« 
EndScrollView
«« 
(
«« 
false
«« #
)
««# $
;
««$ %
return
…… 
false
…… 
;
…… 
}
   	
internal
ÃÃ 
Rect
ÃÃ 
DrawOutline
ÃÃ !
(
ÃÃ! "
Rect
ÃÃ" &
rect
ÃÃ' +
)
ÃÃ+ ,
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
Event
ŒŒ 
.
ŒŒ 
current
ŒŒ 
.
ŒŒ 
type
ŒŒ "
!=
ŒŒ# %
	EventType
ŒŒ& /
.
ŒŒ/ 0
Repaint
ŒŒ0 7
)
ŒŒ7 8
return
œœ 
rect
œœ 
;
œœ 
float
—— 
size
—— 
=
—— 
$num
—— 
;
—— 
var
““ 
color
““ 
=
““ 
EditorGUIUtility
““ (
.
““( )
	isProSkin
““) 2
?
““3 4
new
““5 8
Color
““9 >
(
““> ?
$num
““? D
,
““D E
$num
““F K
,
““K L
$num
““M R
,
““R S
$num
““T Z
)
““Z [
:
““\ ]
new
““^ a
Color
““b g
(
““g h
$num
““h l
,
““l m
$num
““n r
,
““r s
$num
““t x
,
““x y
$num““z Ä
)““Ä Å
;““Å Ç
Color
‘‘ 
orgColor
‘‘ 
=
‘‘ 
GUI
‘‘  
.
‘‘  !
color
‘‘! &
;
‘‘& '
GUI
’’ 
.
’’ 
color
’’ 
=
’’ 
GUI
’’ 
.
’’ 
color
’’ !
*
’’" #
color
’’$ )
;
’’) *
GUI
÷÷ 
.
÷÷ 
DrawTexture
÷÷ 
(
÷÷ 
new
÷÷ 
Rect
÷÷  $
(
÷÷$ %
rect
÷÷% )
.
÷÷) *
x
÷÷* +
,
÷÷+ ,
rect
÷÷- 1
.
÷÷1 2
y
÷÷2 3
,
÷÷3 4
rect
÷÷5 9
.
÷÷9 :
width
÷÷: ?
,
÷÷? @
size
÷÷A E
)
÷÷E F
,
÷÷F G
EditorGUIUtility
÷÷H X
.
÷÷X Y
whiteTexture
÷÷Y e
)
÷÷e f
;
÷÷f g
GUI
◊◊ 
.
◊◊ 
DrawTexture
◊◊ 
(
◊◊ 
new
◊◊ 
Rect
◊◊  $
(
◊◊$ %
rect
◊◊% )
.
◊◊) *
x
◊◊* +
,
◊◊+ ,
rect
◊◊- 1
.
◊◊1 2
yMax
◊◊2 6
-
◊◊7 8
size
◊◊9 =
,
◊◊= >
rect
◊◊? C
.
◊◊C D
width
◊◊D I
,
◊◊I J
size
◊◊K O
)
◊◊O P
,
◊◊P Q
EditorGUIUtility
◊◊R b
.
◊◊b c
whiteTexture
◊◊c o
)
◊◊o p
;
◊◊p q
GUI
ÿÿ 
.
ÿÿ 
DrawTexture
ÿÿ 
(
ÿÿ 
new
ÿÿ 
Rect
ÿÿ  $
(
ÿÿ$ %
rect
ÿÿ% )
.
ÿÿ) *
x
ÿÿ* +
,
ÿÿ+ ,
rect
ÿÿ- 1
.
ÿÿ1 2
y
ÿÿ2 3
+
ÿÿ4 5
$num
ÿÿ6 7
,
ÿÿ7 8
size
ÿÿ9 =
,
ÿÿ= >
rect
ÿÿ? C
.
ÿÿC D
height
ÿÿD J
-
ÿÿK L
$num
ÿÿM N
*
ÿÿO P
size
ÿÿQ U
)
ÿÿU V
,
ÿÿV W
EditorGUIUtility
ÿÿX h
.
ÿÿh i
whiteTexture
ÿÿi u
)
ÿÿu v
;
ÿÿv w
GUI
ŸŸ 
.
ŸŸ 
DrawTexture
ŸŸ 
(
ŸŸ 
new
ŸŸ 
Rect
ŸŸ  $
(
ŸŸ$ %
rect
ŸŸ% )
.
ŸŸ) *
xMax
ŸŸ* .
-
ŸŸ/ 0
size
ŸŸ1 5
,
ŸŸ5 6
rect
ŸŸ7 ;
.
ŸŸ; <
y
ŸŸ< =
+
ŸŸ> ?
$num
ŸŸ@ A
,
ŸŸA B
size
ŸŸC G
,
ŸŸG H
rect
ŸŸI M
.
ŸŸM N
height
ŸŸN T
-
ŸŸU V
$num
ŸŸW X
*
ŸŸY Z
size
ŸŸ[ _
)
ŸŸ_ `
,
ŸŸ` a
EditorGUIUtility
ŸŸb r
.
ŸŸr s
whiteTexture
ŸŸs 
)ŸŸ Ä
;ŸŸÄ Å
GUI
€€ 
.
€€ 
color
€€ 
=
€€ 
orgColor
€€  
;
€€  !
return
‹‹ 
new
‹‹ 
Rect
‹‹ 
(
‹‹ 
rect
‹‹  
.
‹‹  !
x
‹‹! "
+
‹‹# $
size
‹‹% )
,
‹‹) *
rect
‹‹+ /
.
‹‹/ 0
y
‹‹0 1
+
‹‹2 3
size
‹‹4 8
,
‹‹8 9
rect
‹‹: >
.
‹‹> ?
width
‹‹? D
-
‹‹E F
$num
‹‹G H
*
‹‹I J
size
‹‹K O
,
‹‹O P
rect
‹‹Q U
.
‹‹U V
height
‹‹V \
-
‹‹] ^
$num
‹‹_ `
*
‹‹a b
size
‹‹c g
)
‹‹g h
;
‹‹h i
}
›› 	
internal
ﬂﬂ 
void
ﬂﬂ 
DisplayChild
ﬂﬂ "
(
ﬂﬂ" #
Rect
ﬂﬂ# '
rect
ﬂﬂ( ,
,
ﬂﬂ, -
DebugUI
ﬂﬂ. 5
.
ﬂﬂ5 6
Widget
ﬂﬂ6 <
child
ﬂﬂ= B
,
ﬂﬂB C
bool
ﬂﬂD H
disable
ﬂﬂI P
)
ﬂﬂP Q
{
‡‡ 	
rect
·· 
.
·· 
xMin
·· 
+=
·· 
$num
·· 
;
·· 
rect
‚‚ 
.
‚‚ 
xMax
‚‚ 
-=
‚‚ 
$num
‚‚ 
;
‚‚ 
if
„„ 
(
„„ 
child
„„ 
.
„„ 
GetType
„„ 
(
„„ 
)
„„ 
==
„„  "
typeof
„„# )
(
„„) *
DebugUI
„„* 1
.
„„1 2
Value
„„2 7
)
„„7 8
)
„„8 9
{
‰‰ 
var
ÂÂ 
widget
ÂÂ 
=
ÂÂ 
Cast
ÂÂ !
<
ÂÂ! "
DebugUI
ÂÂ" )
.
ÂÂ) *
Value
ÂÂ* /
>
ÂÂ/ 0
(
ÂÂ0 1
child
ÂÂ1 6
)
ÂÂ6 7
;
ÂÂ7 8
	EditorGUI
ÊÊ 
.
ÊÊ 

LabelField
ÊÊ $
(
ÊÊ$ %
rect
ÊÊ% )
,
ÊÊ) *

GUIContent
ÊÊ+ 5
.
ÊÊ5 6
none
ÊÊ6 :
,
ÊÊ: ;
EditorGUIUtility
ÊÊ< L
.
ÊÊL M
TrTextContent
ÊÊM Z
(
ÊÊZ [
widget
ÊÊ[ a
.
ÊÊa b
GetValue
ÊÊb j
(
ÊÊj k
)
ÊÊk l
.
ÊÊl m
ToString
ÊÊm u
(
ÊÊu v
)
ÊÊv w
)
ÊÊw x
)
ÊÊx y
;
ÊÊy z
}
ÁÁ 
else
ËË 
if
ËË 
(
ËË 
child
ËË 
.
ËË 
GetType
ËË "
(
ËË" #
)
ËË# $
==
ËË% '
typeof
ËË( .
(
ËË. /
DebugUI
ËË/ 6
.
ËË6 7

ColorField
ËË7 A
)
ËËA B
)
ËËB C
{
ÈÈ 
var
ÍÍ 
widget
ÍÍ 
=
ÍÍ 
Cast
ÍÍ !
<
ÍÍ! "
DebugUI
ÍÍ" )
.
ÍÍ) *

ColorField
ÍÍ* 4
>
ÍÍ4 5
(
ÍÍ5 6
child
ÍÍ6 ;
)
ÍÍ; <
;
ÍÍ< =
using
ÎÎ 
(
ÎÎ 
new
ÎÎ 
	EditorGUI
ÎÎ $
.
ÎÎ$ %
DisabledScope
ÎÎ% 2
(
ÎÎ2 3
disable
ÎÎ3 :
)
ÎÎ: ;
)
ÎÎ; <
	EditorGUI
ÏÏ 
.
ÏÏ 

ColorField
ÏÏ (
(
ÏÏ( )
rect
ÏÏ) -
,
ÏÏ- .

GUIContent
ÏÏ/ 9
.
ÏÏ9 :
none
ÏÏ: >
,
ÏÏ> ?
widget
ÏÏ@ F
.
ÏÏF G
GetValue
ÏÏG O
(
ÏÏO P
)
ÏÏP Q
,
ÏÏQ R
false
ÏÏS X
,
ÏÏX Y
widget
ÏÏZ `
.
ÏÏ` a
	showAlpha
ÏÏa j
,
ÏÏj k
widget
ÏÏl r
.
ÏÏr s
hdr
ÏÏs v
)
ÏÏv w
;
ÏÏw x
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
child
ÓÓ 
.
ÓÓ 
GetType
ÓÓ "
(
ÓÓ" #
)
ÓÓ# $
==
ÓÓ% '
typeof
ÓÓ( .
(
ÓÓ. /
DebugUI
ÓÓ/ 6
.
ÓÓ6 7
	BoolField
ÓÓ7 @
)
ÓÓ@ A
)
ÓÓA B
{
ÔÔ 
var
 
widget
 
=
 
Cast
 !
<
! "
DebugUI
" )
.
) *
	BoolField
* 3
>
3 4
(
4 5
child
5 :
)
: ;
;
; <
using
ÒÒ 
(
ÒÒ 
new
ÒÒ 
	EditorGUI
ÒÒ $
.
ÒÒ$ %
DisabledScope
ÒÒ% 2
(
ÒÒ2 3
disable
ÒÒ3 :
)
ÒÒ: ;
)
ÒÒ; <
	EditorGUI
ÚÚ 
.
ÚÚ 
Toggle
ÚÚ $
(
ÚÚ$ %
rect
ÚÚ% )
,
ÚÚ) *

GUIContent
ÚÚ+ 5
.
ÚÚ5 6
none
ÚÚ6 :
,
ÚÚ: ;
widget
ÚÚ< B
.
ÚÚB C
GetValue
ÚÚC K
(
ÚÚK L
)
ÚÚL M
)
ÚÚM N
;
ÚÚN O
}
ÛÛ 
}
ÙÙ 	
}
ıı 
}ˆˆ ﬂ%
•D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\SerializedDataParameter.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

sealed 
class #
SerializedDataParameter /
{ 
public 
SerializedProperty !
overrideState" /
{0 1
get2 5
;5 6
private7 >
set? B
;B C
}D E
public 
SerializedProperty !
value" '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public 
	Attribute 
[ 
] 

attributes %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public   
Type   
referenceType   !
{  " #
get  $ '
;  ' (
private  ) 0
set  1 4
;  4 5
}  6 7
SerializedProperty"" 
m_BaseProperty"" )
;"") *
object## 
m_ReferenceValue## 
;##  
public(( 
string(( 
displayName(( !
=>((" $
m_BaseProperty((% 3
.((3 4
displayName((4 ?
;((? @
internal** #
SerializedDataParameter** (
(**( )
SerializedProperty**) ;
property**< D
)**D E
{++ 	
var-- 
path-- 
=-- 
property-- 
.--  
propertyPath--  ,
.--, -
Split--- 2
(--2 3
$char--3 6
)--6 7
;--7 8
object.. 
obj.. 
=.. 
property.. !
...! "
serializedObject.." 2
...2 3
targetObject..3 ?
;..? @
	FieldInfo// 
field// 
=// 
null// "
;//" #
foreach11 
(11 
var11 
p11 
in11 
path11 "
)11" #
{22 
field33 
=33 
obj33 
.33 
GetType33 #
(33# $
)33$ %
.33% &
GetField33& .
(33. /
p33/ 0
,330 1
BindingFlags332 >
.33> ?
Instance33? G
|33H I
BindingFlags33J V
.33V W
Public33W ]
|33^ _
BindingFlags33` l
.33l m
	NonPublic33m v
)33v w
;33w x
obj44 
=44 
field44 
.44 
GetValue44 $
(44$ %
obj44% (
)44( )
;44) *
}55 
Assert77 
.77 
	IsNotNull77 
(77 
field77 "
)77" #
;77# $
m_BaseProperty99 
=99 
property99 %
.99% &
Copy99& *
(99* +
)99+ ,
;99, -
overrideState:: 
=:: 
m_BaseProperty:: *
.::* + 
FindPropertyRelative::+ ?
(::? @
$str::@ Q
)::Q R
;::R S
value;; 
=;; 
m_BaseProperty;; "
.;;" # 
FindPropertyRelative;;# 7
(;;7 8
$str;;8 A
);;A B
;;;B C

attributes<< 
=<< 
field<< 
.<< 
GetCustomAttributes<< 2
(<<2 3
false<<3 8
)<<8 9
.<<9 :
Cast<<: >
<<<> ?
	Attribute<<? H
><<H I
(<<I J
)<<J K
.<<K L
ToArray<<L S
(<<S T
)<<T U
;<<U V
referenceType== 
=== 
obj== 
.==  
GetType==  '
(==' (
)==( )
;==) *
m_ReferenceValue>> 
=>> 
obj>> "
;>>" #
}?? 	
publicFF 
TFF 
GetAttributeFF 
<FF 
TFF 
>FF  
(FF  !
)FF! "
whereGG 
TGG 
:GG 
	AttributeGG 
{HH 	
returnII 
(II 
TII 
)II 

attributesII  
.II  !
FirstOrDefaultII! /
(II/ 0
xII0 1
=>II2 4
xII5 6
isII7 9
TII: ;
)II; <
;II< =
}JJ 	
publicQQ 
TQQ 
GetObjectRefQQ 
<QQ 
TQQ 
>QQ  
(QQ  !
)QQ! "
{RR 	
returnSS 
(SS 
TSS 
)SS 
m_ReferenceValueSS &
;SS& '
}TT 	
}UU 
}VV ≤™
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\LookDev.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
public 

static 
class 
LookDev 
{ 
const 
string %
lastRenderingDataSavePath .
=/ 0
$str1 N
;N O
static 
IViewDisplayer 
s_ViewDisplayer -
;- .
static !
IEnvironmentDisplayer $"
s_EnvironmentDisplayer% ;
;; <
static 

Compositer 
s_Compositor &
;& '
static 

StageCache 
s_Stages "
;" #
static 
Context 
s_CurrentContext '
;' (
internal 
static 
IDataProvider %
dataProvider& 2
=> !
RenderPipelineManager $
.$ %
currentPipeline% 4
as5 7
IDataProvider8 E
;E F
internal 
static 
Context 
currentContext  .
{ 	
get 
=> 
s_CurrentContext #
??$ &
(' (
s_CurrentContext( 8
=9 :
LoadConfigInternal; M
(M N
)N O
??P R
defaultContextS a
)a b
;b c
private   
set   
=>   
s_CurrentContext   +
=  , -
value  . 3
;  3 4
}!! 	
static## 
Context## 
defaultContext## %
{$$ 	
get%% 
{&& 
var'' 
context'' 
='' 
UnityEngine'' )
.'') *
ScriptableObject''* :
.'': ;
CreateInstance''; I
<''I J
Context''J Q
>''Q R
(''R S
)''S T
;''T U
context(( 
.(( 
Init(( 
((( 
)(( 
;(( 
return)) 
context)) 
;)) 
}** 
}++ 	
internal.. 
static.. 
IViewDisplayer.. & 
currentViewDisplayer..' ;
=>..< >
s_ViewDisplayer..? N
;..N O
internal// 
static// !
IEnvironmentDisplayer// -'
currentEnvironmentDisplayer//. I
=>//J L"
s_EnvironmentDisplayer//M c
;//c d
[11 	
MenuItem11	 
(11 
$str11 3
,113 4
false115 :
,11: ;
$num11< A
)11A B
]11B C
static22 
void22 
OpenLookDev22 
(22  
)22  !
=>22" $
Open22% )
(22) *
)22* +
;22+ ,
[44 	
MenuItem44	 
(44 
$str44 3
,443 4
true445 9
,449 :
$num44; @
)44@ A
]44A B
static55 
bool55 
LookDevAvailable55 $
(55$ %
)55% &
=>55' )
	supported55* 3
;553 4
internal77 
static77 
bool77 
waitingConfigure77 -
{77. /
get770 3
;773 4
private775 <
set77= @
;77@ A
}77B C
=77D E
true77F J
;77J K
public:: 
static:: 
bool:: 
open:: 
{::  !
get::" %
;::% &
private::' .
set::/ 2
;::2 3
}::4 5
public?? 
static?? 
bool?? 
	supported?? $
=>??% '
dataProvider??( 4
!=??5 7
null??8 <
;??< =
publicDD 
staticDD 
voidDD 
ResetConfigDD &
(DD& '
)DD' (
=>EE 
currentContextEE 
=EE 
defaultContextEE  .
;EE. /
staticGG 
ContextGG 
LoadConfigInternalGG )
(GG) *
stringGG* 0
pathGG1 5
=GG6 7%
lastRenderingDataSavePathGG8 Q
)GGQ R
{HH 	
varII 
objsII 
=II !
InternalEditorUtilityII ,
.II, -'
LoadSerializedFileAndForgetII- H
(IIH I
pathIII M
)IIM N
;IIN O
ContextJJ 
contextJJ 
=JJ 
(JJ 
objsJJ #
.JJ# $
LengthJJ$ *
>JJ+ ,
$numJJ- .
?JJ/ 0
objsJJ1 5
[JJ5 6
$numJJ6 7
]JJ7 8
:JJ9 :
nullJJ; ?
)JJ? @
asJJA C
ContextJJD K
;JJK L
ifKK 
(KK 
contextKK 
!=KK 
nullKK 
&&KK  "
!KK# $
contextKK$ +
.KK+ ,
EqualsKK, 2
(KK2 3
nullKK3 7
)KK7 8
)KK8 9
contextLL 
.LL 
InitLL 
(LL 
)LL 
;LL 
returnMM 
contextMM 
;MM 
}NN 	
internalTT 
staticTT 
voidTT 

LoadConfigTT '
(TT' (
stringTT( .
pathTT/ 3
=TT4 5%
lastRenderingDataSavePathTT6 O
)TTO P
{UU 	
varVV 
lastVV 
=VV 
LoadConfigInternalVV )
(VV) *
pathVV* .
)VV. /
;VV/ 0
ifWW 
(WW 
lastWW 
!=WW 
nullWW 
)WW 
currentContextXX 
=XX  
lastXX! %
;XX% &
}YY 	
internal__ 
static__ 
void__ 

SaveConfig__ '
(__' (
string__( .
path__/ 3
=__4 5%
lastRenderingDataSavePath__6 O
)__O P
{`` 	
ifaa 
(aa 
currentContextaa 
!=aa !
nullaa" &
&&aa' )
!aa* +
currentContextaa+ 9
.aa9 :
Equalsaa: @
(aa@ A
nullaaA E
)aaE F
)aaF G!
InternalEditorUtilitybb %
.bb% &)
SaveToSerializedFileAndForgetbb& C
(bbC D
newbbD G
[bbG H
]bbH I
{bbJ K
currentContextbbL Z
}bb[ \
,bb\ ]
pathbb^ b
,bbb c
truebbd h
)bbh i
;bbi j
}cc 	
publicff 
staticff 
voidff 
Openff 
(ff  
)ff  !
{gg 	
EditorWindowhh 
.hh 
	GetWindowhh "
<hh" #
DisplayWindowhh# 0
>hh0 1
(hh1 2
)hh2 3
;hh3 4
}ii 	
publicll 
staticll 
voidll 
Closell  
(ll  !
)ll! "
{mm 	
(nn 
s_ViewDisplayernn 
asnn 
EditorWindownn  ,
)nn, -
?nn- .
.nn. /
Closenn/ 4
(nn4 5
)nn5 6
;nn6 7
s_ViewDisplayeroo 
=oo 
nulloo "
;oo" #
(pp "
s_EnvironmentDisplayerpp #
aspp$ &
EditorWindowpp' 3
)pp3 4
?pp4 5
.pp5 6
Closepp6 ;
(pp; <
)pp< =
;pp= >"
s_EnvironmentDisplayerqq "
=qq# $
nullqq% )
;qq) *
}rr 	
internaltt 
statictt 
voidtt 

Initializett '
(tt' (
DisplayWindowtt( 5
windowtt6 <
)tt< =
{uu 	
s_ViewDisplayervv 
=vv 
windowvv $
;vv$ %"
s_EnvironmentDisplayerww "
=ww# $
windowww% +
;ww+ ,
openxx 
=xx 
truexx 
;xx 
ConfigureLookDevyy 
(yy !
reloadWithTemporaryIDyy 2
:yy2 3
falseyy4 9
)yy9 :
;yy: ;
}zz 	
[|| 	
	Callbacks||	 
.|| 
DidReloadScripts|| #
]||# $
static}} 
void}} 
OnEditorReload}} "
(}}" #
)}}# $
{~~ 	
var 
windows 
= 
	Resources #
.# $ 
FindObjectsOfTypeAll$ 8
<8 9
DisplayWindow9 F
>F G
(G H
)H I
;I J
s_ViewDisplayer
ÄÄ 
=
ÄÄ 
windows
ÄÄ %
.
ÄÄ% &
Length
ÄÄ& ,
>
ÄÄ- .
$num
ÄÄ/ 0
?
ÄÄ1 2
windows
ÄÄ3 :
[
ÄÄ: ;
$num
ÄÄ; <
]
ÄÄ< =
:
ÄÄ> ?
null
ÄÄ@ D
;
ÄÄD E$
s_EnvironmentDisplayer
ÅÅ "
=
ÅÅ# $
windows
ÅÅ% ,
.
ÅÅ, -
Length
ÅÅ- 3
>
ÅÅ4 5
$num
ÅÅ6 7
?
ÅÅ8 9
windows
ÅÅ: A
[
ÅÅA B
$num
ÅÅB C
]
ÅÅC D
:
ÅÅE F
null
ÅÅG K
;
ÅÅK L
open
ÇÇ 
=
ÇÇ 
s_ViewDisplayer
ÇÇ "
!=
ÇÇ# %
null
ÇÇ& *
;
ÇÇ* +
if
ÉÉ 
(
ÉÉ 
open
ÉÉ 
)
ÉÉ 
ConfigureLookDev
ÑÑ  
(
ÑÑ  !#
reloadWithTemporaryID
ÑÑ! 6
:
ÑÑ6 7
true
ÑÑ8 <
)
ÑÑ< =
;
ÑÑ= >
}
ÖÖ 	
static
áá 
void
áá 
ConfigureLookDev
áá $
(
áá$ %
bool
áá% )#
reloadWithTemporaryID
áá* ?
)
áá? @
{
àà 	
open
ââ 
=
ââ 
true
ââ 
;
ââ 
waitingConfigure
ää 
=
ää 
true
ää #
;
ää# $
if
ãã 
(
ãã 
s_CurrentContext
ãã  
==
ãã! #
null
ãã$ (
||
ãã) +
s_CurrentContext
ãã, <
.
ãã< =
Equals
ãã= C
(
ããC D
null
ããD H
)
ããH I
)
ããI J

LoadConfig
åå 
(
åå 
)
åå 
;
åå 4
&WaitingSRPReloadForConfiguringRenderer
çç 2
(
çç2 3
$num
çç3 4
,
çç4 5#
reloadWithTemporaryID
çç6 K
:
ççK L#
reloadWithTemporaryID
ççM b
)
ççb c
;
ççc d
}
éé 	
static
êê 
void
êê 4
&WaitingSRPReloadForConfiguringRenderer
êê :
(
êê: ;
int
êê; >

maxAttempt
êê? I
,
êêI J
bool
êêK O#
reloadWithTemporaryID
êêP e
,
êêe f
int
êêg j
attemptNumber
êêk x
=
êêy z
$num
êê{ |
)
êê| }
{
ëë 	
if
íí 
(
íí 
	supported
íí 
)
íí 
{
ìì 
waitingConfigure
îî  
=
îî! "
false
îî# (
;
îî( )
ConfigureRenderer
ïï !
(
ïï! "#
reloadWithTemporaryID
ïï" 7
)
ïï7 8
;
ïï8 9
LinkViewDisplayer
ññ !
(
ññ! "
)
ññ" #
;
ññ# $&
LinkEnvironmentDisplayer
óó (
(
óó( )
)
óó) *
;
óó* +
ReloadStage
òò 
(
òò #
reloadWithTemporaryID
òò 1
)
òò1 2
;
òò2 3
}
ôô 
else
öö 
if
öö 
(
öö 
attemptNumber
öö "
<
öö# $

maxAttempt
öö% /
)
öö/ 0
EditorApplication
õõ !
.
õõ! "
	delayCall
õõ" +
+=
õõ, .
(
úú 
)
úú 
=>
úú 4
&WaitingSRPReloadForConfiguringRenderer
úú @
(
úú@ A

maxAttempt
úúA K
,
úúK L#
reloadWithTemporaryID
úúM b
,
úúb c
++
úúd f
attemptNumber
úúf s
)
úús t
;
úút u
else
ùù 
waitingConfigure
ûû  
=
ûû! "
false
ûû# (
;
ûû( )
}
üü 	
static
°° 
void
°° 
ConfigureRenderer
°° %
(
°°% &
bool
°°& *#
reloadWithTemporaryID
°°+ @
)
°°@ A
{
¢¢ 	
s_Stages
££ 
?
££ 
.
££ 
Dispose
££ 
(
££ 
)
££ 
;
££  
s_Stages
§§ 
=
§§ 
new
§§ 

StageCache
§§ %
(
§§% &
dataProvider
§§& 2
,
§§2 3
currentContext
§§4 B
)
§§B C
;
§§C D
s_Compositor
•• 
?
•• 
.
•• 
Dispose
•• !
(
••! "
)
••" #
;
••# $
s_Compositor
¶¶ 
=
¶¶ 
new
¶¶ 

Compositer
¶¶ )
(
¶¶) *
s_ViewDisplayer
¶¶* 9
,
¶¶9 :
currentContext
¶¶; I
,
¶¶I J
dataProvider
¶¶K W
,
¶¶W X
s_Stages
¶¶Y a
)
¶¶a b
;
¶¶b c
}
ßß 	
static
©© 
void
©© 
LinkViewDisplayer
©© %
(
©©% &
)
©©& '
{
™™ 	
s_ViewDisplayer
´´ 
.
´´ 
OnClosed
´´ $
+=
´´% '
(
´´( )
)
´´) *
=>
´´+ -
{
¨¨ 
s_Compositor
≠≠ 
?
≠≠ 
.
≠≠ 
Dispose
≠≠ %
(
≠≠% &
)
≠≠& '
;
≠≠' (
s_Compositor
ÆÆ 
=
ÆÆ 
null
ÆÆ #
;
ÆÆ# $
s_Stages
ØØ 
?
ØØ 
.
ØØ 
Dispose
ØØ !
(
ØØ! "
)
ØØ" #
;
ØØ# $
s_Stages
∞∞ 
=
∞∞ 
null
∞∞ 
;
∞∞  
s_ViewDisplayer
±± 
=
±±  !
null
±±" &
;
±±& '
currentContext
µµ 
.
µµ 
GetViewContent
µµ -
(
µµ- .
	ViewIndex
µµ. 7
.
µµ7 8
First
µµ8 =
)
µµ= >
.
µµ> ?)
CleanTemporaryObjectIndexes
µµ? Z
(
µµZ [
)
µµ[ \
;
µµ\ ]
currentContext
∂∂ 
.
∂∂ 
GetViewContent
∂∂ -
(
∂∂- .
	ViewIndex
∂∂. 7
.
∂∂7 8
Second
∂∂8 >
)
∂∂> ?
.
∂∂? @)
CleanTemporaryObjectIndexes
∂∂@ [
(
∂∂[ \
)
∂∂\ ]
;
∂∂] ^

SaveConfig
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
open
∫∫ 
=
∫∫ 
false
∫∫ 
;
∫∫ 
}
ªª 
;
ªª 
s_ViewDisplayer
ºº 
.
ºº 
OnLayoutChanged
ºº +
+=
ºº, .
(
ºº/ 0
layout
ºº0 6
,
ºº6 7
envPanelOpen
ºº8 D
)
ººD E
=>
ººF H
{
ΩΩ 
currentContext
ææ 
.
ææ 
layout
ææ %
.
ææ% &

viewLayout
ææ& 0
=
ææ1 2
layout
ææ3 9
;
ææ9 :
currentContext
øø 
.
øø 
layout
øø %
.
øø% &
showedSidePanel
øø& 5
=
øø6 7
envPanelOpen
øø8 D
;
øøD E

SaveConfig
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
}
¡¡ 
;
¡¡ 
s_ViewDisplayer
¬¬ 
.
¬¬ $
OnChangingObjectInView
¬¬ 2
+=
¬¬3 5
(
¬¬6 7
go
¬¬7 9
,
¬¬9 :
index
¬¬; @
,
¬¬@ A
localPos
¬¬B J
)
¬¬J K
=>
¬¬L N
{
√√ 
switch
ƒƒ 
(
ƒƒ 
index
ƒƒ 
)
ƒƒ 
{
≈≈ 
case
∆∆ "
ViewCompositionIndex
∆∆ -
.
∆∆- .
First
∆∆. 3
:
∆∆3 4
case
«« "
ViewCompositionIndex
«« -
.
««- .
Second
««. 4
:
««4 5
currentContext
»» &
.
»»& '
GetViewContent
»»' 5
(
»»5 6
(
»»6 7
	ViewIndex
»»7 @
)
»»@ A
index
»»A F
)
»»F G
.
»»G H 
UpdateViewedObject
»»H Z
(
»»Z [
go
»»[ ]
)
»»] ^
;
»»^ _'
SaveContextChangeAndApply
…… 1
(
……1 2
(
……2 3
	ViewIndex
……3 <
)
……< =
index
……= B
)
……B C
;
……C D
break
   
;
   
case
ÀÀ "
ViewCompositionIndex
ÀÀ -
.
ÀÀ- .
	Composite
ÀÀ. 7
:
ÀÀ7 8
	ViewIndex
ÃÃ !
	viewIndex
ÃÃ" +
=
ÃÃ, -
s_Compositor
ÃÃ. :
.
ÃÃ: ;$
GetViewFromComposition
ÃÃ; Q
(
ÃÃQ R
localPos
ÃÃR Z
)
ÃÃZ [
;
ÃÃ[ \
currentContext
ÕÕ &
.
ÕÕ& '
GetViewContent
ÕÕ' 5
(
ÕÕ5 6
	viewIndex
ÕÕ6 ?
)
ÕÕ? @
.
ÕÕ@ A 
UpdateViewedObject
ÕÕA S
(
ÕÕS T
go
ÕÕT V
)
ÕÕV W
;
ÕÕW X'
SaveContextChangeAndApply
ŒŒ 1
(
ŒŒ1 2
	viewIndex
ŒŒ2 ;
)
ŒŒ; <
;
ŒŒ< =
break
œœ 
;
œœ 
}
–– 
}
—— 
;
—— 
s_ViewDisplayer
““ 
.
““ )
OnChangingEnvironmentInView
““ 7
+=
““8 :
(
““; <
obj
““< ?
,
““? @
index
““A F
,
““F G
localPos
““H P
)
““P Q
=>
““R T
{
”” 
switch
‘‘ 
(
‘‘ 
index
‘‘ 
)
‘‘ 
{
’’ 
case
÷÷ "
ViewCompositionIndex
÷÷ -
.
÷÷- .
First
÷÷. 3
:
÷÷3 4
case
◊◊ "
ViewCompositionIndex
◊◊ -
.
◊◊- .
Second
◊◊. 4
:
◊◊4 5
currentContext
ÿÿ &
.
ÿÿ& '
GetViewContent
ÿÿ' 5
(
ÿÿ5 6
(
ÿÿ6 7
	ViewIndex
ÿÿ7 @
)
ÿÿ@ A
index
ÿÿA F
)
ÿÿF G
.
ÿÿG H
UpdateEnvironment
ÿÿH Y
(
ÿÿY Z
obj
ÿÿZ ]
)
ÿÿ] ^
;
ÿÿ^ _'
SaveContextChangeAndApply
ŸŸ 1
(
ŸŸ1 2
(
ŸŸ2 3
	ViewIndex
ŸŸ3 <
)
ŸŸ< =
index
ŸŸ= B
)
ŸŸB C
;
ŸŸC D
break
⁄⁄ 
;
⁄⁄ 
case
€€ "
ViewCompositionIndex
€€ -
.
€€- .
	Composite
€€. 7
:
€€7 8
	ViewIndex
‹‹ !
	viewIndex
‹‹" +
=
‹‹, -
s_Compositor
‹‹. :
.
‹‹: ;$
GetViewFromComposition
‹‹; Q
(
‹‹Q R
localPos
‹‹R Z
)
‹‹Z [
;
‹‹[ \
currentContext
›› &
.
››& '
GetViewContent
››' 5
(
››5 6
	viewIndex
››6 ?
)
››? @
.
››@ A
UpdateEnvironment
››A R
(
››R S
obj
››S V
)
››V W
;
››W X'
SaveContextChangeAndApply
ﬁﬁ 1
(
ﬁﬁ1 2
	viewIndex
ﬁﬁ2 ;
)
ﬁﬁ; <
;
ﬁﬁ< =
break
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
}
·· 
;
·· 
}
‚‚ 	
static
‰‰ 
void
‰‰ &
LinkEnvironmentDisplayer
‰‰ ,
(
‰‰, -
)
‰‰- .
{
ÂÂ 	$
s_EnvironmentDisplayer
ÊÊ "
.
ÊÊ" #*
OnChangingEnvironmentLibrary
ÊÊ# ?
+=
ÊÊ@ B
currentContext
ÊÊC Q
.
ÊÊQ R&
UpdateEnvironmentLibrary
ÊÊR j
;
ÊÊj k
}
ÁÁ 	
static
ÈÈ 
void
ÈÈ 
ReloadStage
ÈÈ 
(
ÈÈ  
bool
ÈÈ  $#
reloadWithTemporaryID
ÈÈ% :
)
ÈÈ: ;
{
ÍÍ 	
currentContext
ÎÎ 
.
ÎÎ 
GetViewContent
ÎÎ )
(
ÎÎ) *
	ViewIndex
ÎÎ* 3
.
ÎÎ3 4
First
ÎÎ4 9
)
ÎÎ9 :
.
ÎÎ: ;
LoadAll
ÎÎ; B
(
ÎÎB C#
reloadWithTemporaryID
ÎÎC X
)
ÎÎX Y
;
ÎÎY Z 
ApplyContextChange
ÏÏ 
(
ÏÏ 
	ViewIndex
ÏÏ (
.
ÏÏ( )
First
ÏÏ) .
)
ÏÏ. /
;
ÏÏ/ 0
currentContext
ÌÌ 
.
ÌÌ 
GetViewContent
ÌÌ )
(
ÌÌ) *
	ViewIndex
ÌÌ* 3
.
ÌÌ3 4
Second
ÌÌ4 :
)
ÌÌ: ;
.
ÌÌ; <
LoadAll
ÌÌ< C
(
ÌÌC D#
reloadWithTemporaryID
ÌÌD Y
)
ÌÌY Z
;
ÌÌZ [ 
ApplyContextChange
ÓÓ 
(
ÓÓ 
	ViewIndex
ÓÓ (
.
ÓÓ( )
Second
ÓÓ) /
)
ÓÓ/ 0
;
ÓÓ0 1
}
ÔÔ 	
static
ÒÒ 
void
ÒÒ  
ApplyContextChange
ÒÒ &
(
ÒÒ& '
	ViewIndex
ÒÒ' 0
index
ÒÒ1 6
)
ÒÒ6 7
{
ÚÚ 	
s_Stages
ÛÛ 
.
ÛÛ  
UpdateSceneObjects
ÛÛ '
(
ÛÛ' (
index
ÛÛ( -
)
ÛÛ- .
;
ÛÛ. /
s_Stages
ÙÙ 
.
ÙÙ !
UpdateSceneLighting
ÙÙ (
(
ÙÙ( )
index
ÙÙ) .
,
ÙÙ. /
dataProvider
ÙÙ0 <
)
ÙÙ< =
;
ÙÙ= >
s_ViewDisplayer
ıı 
.
ıı 
Repaint
ıı #
(
ıı# $
)
ıı$ %
;
ıı% &
}
ˆˆ 	
internal
˙˙ 
static
˙˙ 
void
˙˙ '
SaveContextChangeAndApply
˙˙ 6
(
˙˙6 7
	ViewIndex
˙˙7 @
index
˙˙A F
)
˙˙F G
{
˚˚ 	

SaveConfig
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸  
ApplyContextChange
˝˝ 
(
˝˝ 
index
˝˝ $
)
˝˝$ %
;
˝˝% &
}
˛˛ 	
}
ˇˇ 
}ÄÄ ’U
®D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\Drawers\IntParameterDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "
MinIntParameter" 1
)1 2
)2 3
]3 4
sealed 

class !
MinIntParameterDrawer &
:' (!
VolumeParameterDrawer) >
{ 
public		 
override		 
bool		 
OnGUI		 "
(		" ##
SerializedDataParameter		# :
	parameter		; D
,		D E

GUIContent		F P
title		Q V
)		V W
{

 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Integer= D
)D E
return 
false 
; 
var 
o 
= 
	parameter 
. 
GetObjectRef *
<* +
MinIntParameter+ :
>: ;
(; <
)< =
;= >
int 
v 
= 
EditorGUILayout #
.# $
IntField$ ,
(, -
title- 2
,2 3
value4 9
.9 :
intValue: B
)B C
;C D
value 
. 
intValue 
= 
Mathf "
." #
Max# &
(& '
v' (
,( )
o* +
.+ ,
min, /
)/ 0
;0 1
return 
true 
; 
} 	
} 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "#
NoInterpMinIntParameter" 9
)9 :
): ;
]; <
sealed 

class )
NoInterpMinIntParameterDrawer .
:/ 0!
VolumeParameterDrawer1 F
{ 
public 
override 
bool 
OnGUI "
(" ##
SerializedDataParameter# :
	parameter; D
,D E

GUIContentF P
titleQ V
)V W
{ 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Integer= D
)D E
return 
false 
; 
var!! 
o!! 
=!! 
	parameter!! 
.!! 
GetObjectRef!! *
<!!* +#
NoInterpMinIntParameter!!+ B
>!!B C
(!!C D
)!!D E
;!!E F
int"" 
v"" 
="" 
EditorGUILayout"" #
.""# $
IntField""$ ,
("", -
title""- 2
,""2 3
value""4 9
.""9 :
intValue"": B
)""B C
;""C D
value## 
.## 
intValue## 
=## 
Mathf## "
.##" #
Max### &
(##& '
v##' (
,##( )
o##* +
.##+ ,
min##, /
)##/ 0
;##0 1
return$$ 
true$$ 
;$$ 
}%% 	
}&& 
[(( !
VolumeParameterDrawer(( 
((( 
typeof(( !
(((! "
MaxIntParameter((" 1
)((1 2
)((2 3
]((3 4
sealed)) 

class)) !
MaxIntParameterDrawer)) &
:))' (!
VolumeParameterDrawer))) >
{** 
public++ 
override++ 
bool++ 
OnGUI++ "
(++" ##
SerializedDataParameter++# :
	parameter++; D
,++D E

GUIContent++F P
title++Q V
)++V W
{,, 	
var-- 
value-- 
=-- 
	parameter-- !
.--! "
value--" '
;--' (
if// 
(// 
value// 
.// 
propertyType// "
!=//# %"
SerializedPropertyType//& <
.//< =
Integer//= D
)//D E
return00 
false00 
;00 
var22 
o22 
=22 
	parameter22 
.22 
GetObjectRef22 *
<22* +
MaxIntParameter22+ :
>22: ;
(22; <
)22< =
;22= >
int33 
v33 
=33 
EditorGUILayout33 #
.33# $
IntField33$ ,
(33, -
title33- 2
,332 3
value334 9
.339 :
intValue33: B
)33B C
;33C D
value44 
.44 
intValue44 
=44 
Mathf44 "
.44" #
Min44# &
(44& '
v44' (
,44( )
o44* +
.44+ ,
max44, /
)44/ 0
;440 1
return55 
true55 
;55 
}66 	
}77 
[99 !
VolumeParameterDrawer99 
(99 
typeof99 !
(99! "#
NoInterpMaxIntParameter99" 9
)999 :
)99: ;
]99; <
sealed:: 

class:: )
NoInterpMaxIntParameterDrawer:: .
:::/ 0!
VolumeParameterDrawer::1 F
{;; 
public<< 
override<< 
bool<< 
OnGUI<< "
(<<" ##
SerializedDataParameter<<# :
	parameter<<; D
,<<D E

GUIContent<<F P
title<<Q V
)<<V W
{== 	
var>> 
value>> 
=>> 
	parameter>> !
.>>! "
value>>" '
;>>' (
if@@ 
(@@ 
value@@ 
.@@ 
propertyType@@ "
!=@@# %"
SerializedPropertyType@@& <
.@@< =
Integer@@= D
)@@D E
returnAA 
falseAA 
;AA 
varCC 
oCC 
=CC 
	parameterCC 
.CC 
GetObjectRefCC *
<CC* +#
NoInterpMaxIntParameterCC+ B
>CCB C
(CCC D
)CCD E
;CCE F
intDD 
vDD 
=DD 
EditorGUILayoutDD #
.DD# $
IntFieldDD$ ,
(DD, -
titleDD- 2
,DD2 3
valueDD4 9
.DD9 :
intValueDD: B
)DDB C
;DDC D
valueEE 
.EE 
intValueEE 
=EE 
MathfEE "
.EE" #
MinEE# &
(EE& '
vEE' (
,EE( )
oEE* +
.EE+ ,
maxEE, /
)EE/ 0
;EE0 1
returnFF 
trueFF 
;FF 
}GG 	
}HH 
[JJ !
VolumeParameterDrawerJJ 
(JJ 
typeofJJ !
(JJ! "
ClampedIntParameterJJ" 5
)JJ5 6
)JJ6 7
]JJ7 8
sealedKK 

classKK %
ClampedIntParameterDrawerKK *
:KK+ ,!
VolumeParameterDrawerKK- B
{LL 
publicMM 
overrideMM 
boolMM 
OnGUIMM "
(MM" ##
SerializedDataParameterMM# :
	parameterMM; D
,MMD E

GUIContentMMF P
titleMMQ V
)MMV W
{NN 	
varOO 
valueOO 
=OO 
	parameterOO !
.OO! "
valueOO" '
;OO' (
ifQQ 
(QQ 
valueQQ 
.QQ 
propertyTypeQQ "
!=QQ# %"
SerializedPropertyTypeQQ& <
.QQ< =
IntegerQQ= D
)QQD E
returnRR 
falseRR 
;RR 
varTT 
oTT 
=TT 
	parameterTT 
.TT 
GetObjectRefTT *
<TT* +
ClampedIntParameterTT+ >
>TT> ?
(TT? @
)TT@ A
;TTA B
EditorGUILayoutUU 
.UU 
	IntSliderUU %
(UU% &
valueUU& +
,UU+ ,
oUU- .
.UU. /
minUU/ 2
,UU2 3
oUU4 5
.UU5 6
maxUU6 9
,UU9 :
titleUU; @
)UU@ A
;UUA B
valueVV 
.VV 
intValueVV 
=VV 
MathfVV "
.VV" #
ClampVV# (
(VV( )
valueVV) .
.VV. /
intValueVV/ 7
,VV7 8
oVV9 :
.VV: ;
minVV; >
,VV> ?
oVV@ A
.VVA B
maxVVB E
)VVE F
;VVF G
returnWW 
trueWW 
;WW 
}XX 	
}YY 
[[[ !
VolumeParameterDrawer[[ 
([[ 
typeof[[ !
([[! "'
NoInterpClampedIntParameter[[" =
)[[= >
)[[> ?
][[? @
sealed\\ 

class\\ -
!NoInterpClampedIntParameterDrawer\\ 2
:\\3 4!
VolumeParameterDrawer\\5 J
{]] 
public^^ 
override^^ 
bool^^ 
OnGUI^^ "
(^^" ##
SerializedDataParameter^^# :
	parameter^^; D
,^^D E

GUIContent^^F P
title^^Q V
)^^V W
{__ 	
var`` 
value`` 
=`` 
	parameter`` !
.``! "
value``" '
;``' (
ifbb 
(bb 
valuebb 
.bb 
propertyTypebb "
!=bb# %"
SerializedPropertyTypebb& <
.bb< =
Integerbb= D
)bbD E
returncc 
falsecc 
;cc 
varee 
oee 
=ee 
	parameteree 
.ee 
GetObjectRefee *
<ee* +'
NoInterpClampedIntParameteree+ F
>eeF G
(eeG H
)eeH I
;eeI J
EditorGUILayoutff 
.ff 
	IntSliderff %
(ff% &
valueff& +
,ff+ ,
off- .
.ff. /
minff/ 2
,ff2 3
off4 5
.ff5 6
maxff6 9
,ff9 :
titleff; @
)ff@ A
;ffA B
valuegg 
.gg 
intValuegg 
=gg 
Mathfgg "
.gg" #
Clampgg# (
(gg( )
valuegg) .
.gg. /
intValuegg/ 7
,gg7 8
ogg9 :
.gg: ;
mingg; >
,gg> ?
ogg@ A
.ggA B
maxggB E
)ggE F
;ggF G
returnhh 
truehh 
;hh 
}ii 	
}jj 
}kk ìá
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\CoreEditorUtils.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

static 
class 
CoreEditorUtils '
{ 
class 
Styles 
{ 	
static 
readonly 
Color !
k_Normal_AllTheme" 3
=4 5
new6 9
Color32: A
(A B
$numB C
,C D
$numE F
,F G
$numH I
,I J
$numK L
)L M
;M N
static 
readonly 
Color !
k_Active_Dark" /
=0 1
new2 5
Color326 =
(= >
$num> @
,@ A
$numB D
,D E
$numF H
,H I
$numJ M
)M N
;N O
static 
readonly 
Color !
k_Active" *
=+ ,
new- 0
Color321 8
(8 9
$num9 <
,< =
$num> A
,A B
$numC F
,F G
$numH K
)K L
;L M
static 
readonly 
int 
s_MoreOptionsHash  1
=2 3
$str4 A
.A B
GetHashCodeB M
(M N
)N O
;O P
static 
public 

GUIContent $
moreOptionsLabel% 5
{6 7
get8 ;
;; <
private= D
setE H
;H I
}J K
static 
public 
GUIStyle "
moreOptionsStyle# 3
{4 5
get6 9
;9 :
private; B
setC F
;F G
}H I
static 
public 
GUIStyle "!
moreOptionsLabelStyle# 8
{9 :
get; >
;> ?
private@ G
setH K
;K L
}M N
static   
Styles   
(   
)   
{!! 
moreOptionsLabel""  
=""! "
EditorGUIUtility""# 3
.""3 4
TrIconContent""4 A
(""A B
$str""B O
,""O P
$str""Q _
)""_ `
;""` a
moreOptionsStyle$$  
=$$! "
new$$# &
GUIStyle$$' /
($$/ 0
GUI$$0 3
.$$3 4
skin$$4 8
.$$8 9
toggle$$9 ?
)$$? @
;$$@ A
	Texture2D%% 
normalColor%% %
=%%& '
new%%( +
	Texture2D%%, 5
(%%5 6
$num%%6 7
,%%7 8
$num%%9 :
)%%: ;
;%%; <
normalColor&& 
.&& 
SetPixel&& $
(&&$ %
$num&&% &
,&&& '
$num&&( )
,&&) *
k_Normal_AllTheme&&+ <
)&&< =
;&&= >
moreOptionsStyle''  
.''  !
normal''! '
.''' (

background''( 2
=''3 4
normalColor''5 @
;''@ A
moreOptionsStyle((  
.((  !
onActive((! )
.(() *

background((* 4
=((5 6
normalColor((7 B
;((B C
moreOptionsStyle))  
.))  !
	onFocused))! *
.))* +

background))+ 5
=))6 7
normalColor))8 C
;))C D
moreOptionsStyle**  
.**  !
onNormal**! )
.**) *

background*** 4
=**5 6
normalColor**7 B
;**B C
moreOptionsStyle++  
.++  !
onHover++! (
.++( )

background++) 3
=++4 5
normalColor++6 A
;++A B
moreOptionsStyle,,  
.,,  !
active,,! '
.,,' (

background,,( 2
=,,3 4
normalColor,,5 @
;,,@ A
moreOptionsStyle--  
.--  !
focused--! (
.--( )

background--) 3
=--4 5
normalColor--6 A
;--A B
moreOptionsStyle..  
...  !
hover..! &
...& '

background..' 1
=..2 3
normalColor..4 ?
;..? @!
moreOptionsLabelStyle00 %
=00& '
new00( +
GUIStyle00, 4
(004 5
GUI005 8
.008 9
skin009 =
.00= >
label00> C
)00C D
;00D E!
moreOptionsLabelStyle11 %
.11% &
padding11& -
=11. /
new110 3

RectOffset114 >
(11> ?
$num11? @
,11@ A
$num11B C
,11C D
$num11E F
,11F G
-11H I
$num11I J
)11J K
;11K L
}22 
static88 
public88 
bool88 
DrawMoreOptions88 .
(88. /
Rect88/ 3
rect884 8
,888 9
bool88: >
active88? E
)88E F
{99 
int:: 
id:: 
=:: 

GUIUtility:: #
.::# $
GetControlID::$ 0
(::0 1
s_MoreOptionsHash::1 B
,::B C
	FocusType::D M
.::M N
Passive::N U
,::U V
rect::W [
)::[ \
;::\ ]
var;; 
evt;; 
=;; 
Event;; 
.;;  
current;;  '
;;;' (
switch<< 
(<< 
evt<< 
.<< 
type<<  
)<<  !
{== 
case>> 
	EventType>> "
.>>" #
Repaint>># *
:>>* +
Color?? 

background?? (
=??) *
k_Normal_AllTheme??+ <
;??< =
if@@ 
(@@ 
active@@ "
)@@" #

backgroundAA &
=AA' (
EditorGUIUtilityAA) 9
.AA9 :
	isProSkinAA: C
?AAD E
k_Active_DarkAAF S
:AAT U
k_ActiveAAV ^
;AA^ _
	EditorGUIBB !
.BB! "
DrawRectBB" *
(BB* +
rectBB+ /
,BB/ 0

backgroundBB1 ;
)BB; <
;BB< =
GUICC 
.CC 
LabelCC !
(CC! "
rectCC" &
,CC& '
moreOptionsLabelCC( 8
,CC8 9!
moreOptionsLabelStyleCC: O
)CCO P
;CCP Q
breakDD 
;DD 
caseEE 
	EventTypeEE "
.EE" #
KeyDownEE# *
:EE* +
boolFF 
anyModifiersFF )
=FF* +
(FF, -
evtFF- 0
.FF0 1
altFF1 4
||FF5 7
evtFF8 ;
.FF; <
shiftFF< A
||FFB D
evtFFE H
.FFH I
commandFFI P
||FFQ S
evtFFT W
.FFW X
controlFFX _
)FF_ `
;FF` a
ifGG 
(GG 
(GG 
evtGG  
.GG  !
keyCodeGG! (
==GG) +
KeyCodeGG, 3
.GG3 4
SpaceGG4 9
||GG: <
evtGG= @
.GG@ A
keyCodeGGA H
==GGI K
KeyCodeGGL S
.GGS T
ReturnGGT Z
||GG[ ]
evtGG^ a
.GGa b
keyCodeGGb i
==GGj l
KeyCodeGGm t
.GGt u
KeypadEnter	GGu Ä
)
GGÄ Å
&&
GGÇ Ñ
!
GGÖ Ü
anyModifiers
GGÜ í
&&
GGì ï

GUIUtility
GGñ †
.
GG† °
keyboardControl
GG° ∞
==
GG± ≥
id
GG¥ ∂
)
GG∂ ∑
{HH 
evtII 
.II  
UseII  #
(II# $
)II$ %
;II% &
GUIJJ 
.JJ  
changedJJ  '
=JJ( )
trueJJ* .
;JJ. /
returnKK "
!KK# $
activeKK$ *
;KK* +
}LL 
breakMM 
;MM 
caseNN 
	EventTypeNN "
.NN" #
	MouseDownNN# ,
:NN, -
ifOO 
(OO 
rectOO  
.OO  !
ContainsOO! )
(OO) *
evtOO* -
.OO- .
mousePositionOO. ;
)OO; <
)OO< =
{PP 
GrabMouseControlQQ ,
(QQ, -
idQQ- /
)QQ/ 0
;QQ0 1
evtRR 
.RR  
UseRR  #
(RR# $
)RR$ %
;RR% &
}SS 
breakTT 
;TT 
caseUU 
	EventTypeUU "
.UU" #
MouseUpUU# *
:UU* +
ifVV 
(VV 
HasMouseControlVV +
(VV+ ,
idVV, .
)VV. /
)VV/ 0
{WW 
ReleaseMouseControlXX /
(XX/ 0
)XX0 1
;XX1 2
evtYY 
.YY  
UseYY  #
(YY# $
)YY$ %
;YY% &
ifZZ 
(ZZ  
rectZZ  $
.ZZ$ %
ContainsZZ% -
(ZZ- .
evtZZ. 1
.ZZ1 2
mousePositionZZ2 ?
)ZZ? @
)ZZ@ A
{[[ 
GUI\\  #
.\\# $
changed\\$ +
=\\, -
true\\. 2
;\\2 3
return]]  &
!]]' (
active]]( .
;]]. /
}^^ 
}__ 
break`` 
;`` 
caseaa 
	EventTypeaa "
.aa" #
	MouseDragaa# ,
:aa, -
ifbb 
(bb 
HasMouseControlbb +
(bb+ ,
idbb, .
)bb. /
)bb/ 0
evtcc 
.cc  
Usecc  #
(cc# $
)cc$ %
;cc% &
breakdd 
;dd 
}ee 
returngg 
activegg 
;gg 
}hh 
staticjj 
intjj 
s_GrabbedIDjj "
=jj# $
-jj% &
$numjj& '
;jj' (
statickk 
voidkk 
GrabMouseControlkk (
(kk( )
intkk) ,
idkk- /
)kk/ 0
=>kk1 3
s_GrabbedIDkk4 ?
=kk@ A
idkkB D
;kkD E
staticll 
voidll 
ReleaseMouseControlll +
(ll+ ,
)ll, -
=>ll. 0
s_GrabbedIDll1 <
=ll= >
-ll? @
$numll@ A
;llA B
staticmm 
boolmm 
HasMouseControlmm '
(mm' (
intmm( +
idmm, .
)mm. /
=>mm0 2
s_GrabbedIDmm3 >
==mm? A
idmmB D
;mmD E
}nn 	
staticpp 
GraphicsDeviceTypepp !
[pp! "
]pp" #
m_BuildTargetspp$ 2
;pp2 3
publicss 
staticss 
GraphicsDeviceTypess (
[ss( )
]ss) *
buildTargetsss+ 7
=>ss8 :
m_BuildTargetsss; I
??ssJ L
(ssM N
m_BuildTargetsssN \
=ss] ^
PlayerSettingsss_ m
.ssm n
GetGraphicsAPIsssn }
(ss} ~$
EditorUserBuildSettings	ss~ ï
.
ssï ñ
activeBuildTarget
ssñ ß
)
ssß ®
)
ss® ©
;
ss© ™
staticuu 
CoreEditorUtilsuu 
(uu 
)uu  
{vv 	"
LoadSkinAndIconMethodsww "
(ww" #
)ww# $
;ww$ %
}xx 	
public
ÑÑ 
static
ÑÑ 
string
ÑÑ 
FindProperty
ÑÑ )
<
ÑÑ) *
T
ÑÑ* +
,
ÑÑ+ ,
TValue
ÑÑ- 3
>
ÑÑ3 4
(
ÑÑ4 5

Expression
ÑÑ5 ?
<
ÑÑ? @
Func
ÑÑ@ D
<
ÑÑD E
T
ÑÑE F
,
ÑÑF G
TValue
ÑÑH N
>
ÑÑN O
>
ÑÑO P
expr
ÑÑQ U
)
ÑÑU V
{
ÖÖ 	
MemberExpression
áá 
me
áá 
;
áá  
switch
àà 
(
àà 
expr
àà 
.
àà 
Body
àà 
.
àà 
NodeType
àà &
)
àà& '
{
ââ 
case
ää 
ExpressionType
ää #
.
ää# $
MemberAccess
ää$ 0
:
ää0 1
me
ãã 
=
ãã 
expr
ãã 
.
ãã 
Body
ãã "
as
ãã# %
MemberExpression
ãã& 6
;
ãã6 7
break
åå 
;
åå 
default
çç 
:
çç 
throw
éé 
new
éé '
InvalidOperationException
éé 7
(
éé7 8
)
éé8 9
;
éé9 :
}
èè 
var
ëë 
members
ëë 
=
ëë 
new
ëë 
List
ëë "
<
ëë" #
string
ëë# )
>
ëë) *
(
ëë* +
)
ëë+ ,
;
ëë, -
while
íí 
(
íí 
me
íí 
!=
íí 
null
íí 
)
íí 
{
ìì 
var
ññ 
name
ññ 
=
ññ 
me
ññ 
.
ññ 
Member
ññ $
is
ññ% '
	FieldInfo
ññ( 1
?
óó 
me
óó 
.
óó 
Member
óó 
.
óó  
Name
óó  $
:
òò 
$str
òò 
+
òò 
me
òò 
.
òò  
Member
òò  &
.
òò& '
Name
òò' +
.
òò+ ,
	Substring
òò, 5
(
òò5 6
$num
òò6 7
,
òò7 8
$num
òò9 :
)
òò: ;
.
òò; <
ToUpper
òò< C
(
òòC D
)
òòD E
+
òòF G
me
òòH J
.
òòJ K
Member
òòK Q
.
òòQ R
Name
òòR V
.
òòV W
	Substring
òòW `
(
òò` a
$num
òòa b
)
òòb c
;
òòc d
members
ôô 
.
ôô 
Add
ôô 
(
ôô 
name
ôô  
)
ôô  !
;
ôô! "
me
öö 
=
öö 
me
öö 
.
öö 

Expression
öö "
as
öö# %
MemberExpression
öö& 6
;
öö6 7
}
õõ 
var
ùù 
sb
ùù 
=
ùù 
new
ùù 
StringBuilder
ùù &
(
ùù& '
)
ùù' (
;
ùù( )
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
members
ûû  
.
ûû  !
Count
ûû! &
-
ûû' (
$num
ûû) *
;
ûû* +
i
ûû, -
>=
ûû. 0
$num
ûû1 2
;
ûû2 3
i
ûû4 5
--
ûû5 7
)
ûû7 8
{
üü 
sb
†† 
.
†† 
Append
†† 
(
†† 
members
†† !
[
††! "
i
††" #
]
††# $
)
††$ %
;
††% &
if
°° 
(
°° 
i
°° 
>
°° 
$num
°° 
)
°° 
sb
°° 
.
°° 
Append
°° $
(
°°$ %
$char
°°% (
)
°°( )
;
°°) *
}
¢¢ 
return
§§ 
sb
§§ 
.
§§ 
ToString
§§ 
(
§§ 
)
§§  
;
§§  !
}
•• 	
public
´´ 
static
´´ 
void
´´ 
DrawFixMeBox
´´ '
(
´´' (
string
´´( .
text
´´/ 3
,
´´3 4
Action
´´5 ;
action
´´< B
)
´´B C
{
¨¨ 	
EditorGUILayout
≠≠ 
.
≠≠ 
HelpBox
≠≠ #
(
≠≠# $
text
≠≠$ (
,
≠≠( )
MessageType
≠≠* 5
.
≠≠5 6
Warning
≠≠6 =
)
≠≠= >
;
≠≠> ?
	GUILayout
ØØ 
.
ØØ 
Space
ØØ 
(
ØØ 
-
ØØ 
$num
ØØ 
)
ØØ  
;
ØØ  !
using
∞∞ 
(
∞∞ 
new
∞∞ 
EditorGUILayout
∞∞ &
.
∞∞& '
HorizontalScope
∞∞' 6
(
∞∞6 7
)
∞∞7 8
)
∞∞8 9
{
±± 
	GUILayout
≤≤ 
.
≤≤ 
FlexibleSpace
≤≤ '
(
≤≤' (
)
≤≤( )
;
≤≤) *
if
¥¥ 
(
¥¥ 
	GUILayout
¥¥ 
.
¥¥ 
Button
¥¥ $
(
¥¥$ %
$str
¥¥% *
,
¥¥* +
	GUILayout
¥¥, 5
.
¥¥5 6
Width
¥¥6 ;
(
¥¥; <
$num
¥¥< >
)
¥¥> ?
)
¥¥? @
)
¥¥@ A
action
µµ 
(
µµ 
)
µµ 
;
µµ 
	GUILayout
∑∑ 
.
∑∑ 
Space
∑∑ 
(
∑∑  
$num
∑∑  !
)
∑∑! "
;
∑∑" #
}
∏∏ 
	GUILayout
ππ 
.
ππ 
Space
ππ 
(
ππ 
$num
ππ 
)
ππ 
;
ππ  
}
∫∫ 	
public
¬¬ 
static
¬¬ 
void
¬¬  
DrawMultipleFields
¬¬ -
(
¬¬- .
string
¬¬. 4
label
¬¬5 :
,
¬¬: ; 
SerializedProperty
¬¬< N
[
¬¬N O
]
¬¬O P
ppts
¬¬Q U
,
¬¬U V

GUIContent
¬¬W a
[
¬¬a b
]
¬¬b c
lbls
¬¬d h
)
¬¬h i
=>
√√  
DrawMultipleFields
√√ !
(
√√! "
EditorGUIUtility
√√" 2
.
√√2 3
TrTextContent
√√3 @
(
√√@ A
label
√√A F
)
√√F G
,
√√G H
ppts
√√I M
,
√√M N
lbls
√√O S
)
√√S T
;
√√T U
public
ÀÀ 
static
ÀÀ 
void
ÀÀ  
DrawMultipleFields
ÀÀ -
(
ÀÀ- .

GUIContent
ÀÀ. 8
label
ÀÀ9 >
,
ÀÀ> ? 
SerializedProperty
ÀÀ@ R
[
ÀÀR S
]
ÀÀS T
ppts
ÀÀU Y
,
ÀÀY Z

GUIContent
ÀÀ[ e
[
ÀÀe f
]
ÀÀf g
lbls
ÀÀh l
)
ÀÀl m
{
ÃÃ 	
var
ÕÕ 

labelWidth
ÕÕ 
=
ÕÕ 
EditorGUIUtility
ÕÕ -
.
ÕÕ- .

labelWidth
ÕÕ. 8
;
ÕÕ8 9
using
œœ 
(
œœ 
new
œœ 
EditorGUILayout
œœ &
.
œœ& '
HorizontalScope
œœ' 6
(
œœ6 7
)
œœ7 8
)
œœ8 9
{
–– 
EditorGUILayout
—— 
.
——  
PrefixLabel
——  +
(
——+ ,
label
——, 1
)
——1 2
;
——2 3
using
”” 
(
”” 
new
”” 
EditorGUILayout
”” *
.
””* +
VerticalScope
””+ 8
(
””8 9
)
””9 :
)
””: ;
{
‘‘ 
EditorGUIUtility
’’ $
.
’’$ %

labelWidth
’’% /
=
’’0 1
$num
’’2 4
;
’’4 5
int
÷÷ 
oldIndentLevel
÷÷ &
=
÷÷' (
	EditorGUI
÷÷) 2
.
÷÷2 3
indentLevel
÷÷3 >
;
÷÷> ?
	EditorGUI
◊◊ 
.
◊◊ 
indentLevel
◊◊ )
=
◊◊* +
$num
◊◊, -
;
◊◊- .
for
ÿÿ 
(
ÿÿ 
var
ÿÿ 
i
ÿÿ 
=
ÿÿ  
$num
ÿÿ! "
;
ÿÿ" #
i
ÿÿ$ %
<
ÿÿ& '
ppts
ÿÿ( ,
.
ÿÿ, -
Length
ÿÿ- 3
;
ÿÿ3 4
++
ÿÿ5 7
i
ÿÿ7 8
)
ÿÿ8 9
EditorGUILayout
ŸŸ '
.
ŸŸ' (
PropertyField
ŸŸ( 5
(
ŸŸ5 6
ppts
ŸŸ6 :
[
ŸŸ: ;
i
ŸŸ; <
]
ŸŸ< =
,
ŸŸ= >
lbls
ŸŸ? C
[
ŸŸC D
i
ŸŸD E
]
ŸŸE F
)
ŸŸF G
;
ŸŸG H
	EditorGUI
⁄⁄ 
.
⁄⁄ 
indentLevel
⁄⁄ )
=
⁄⁄* +
oldIndentLevel
⁄⁄, :
;
⁄⁄: ;
}
€€ 
}
‹‹ 
EditorGUIUtility
ﬁﬁ 
.
ﬁﬁ 

labelWidth
ﬁﬁ '
=
ﬁﬁ( )

labelWidth
ﬁﬁ* 4
;
ﬁﬁ4 5
}
ﬂﬂ 	
public
„„ 
static
„„ 
void
„„ 
DrawSplitter
„„ '
(
„„' (
bool
„„( ,
isBoxed
„„- 4
=
„„5 6
false
„„7 <
)
„„< =
{
‰‰ 	
var
ÂÂ 
rect
ÂÂ 
=
ÂÂ 
GUILayoutUtility
ÂÂ '
.
ÂÂ' (
GetRect
ÂÂ( /
(
ÂÂ/ 0
$num
ÂÂ0 2
,
ÂÂ2 3
$num
ÂÂ4 6
)
ÂÂ6 7
;
ÂÂ7 8
float
ÊÊ 
xMin
ÊÊ 
=
ÊÊ 
rect
ÊÊ 
.
ÊÊ 
xMin
ÊÊ "
;
ÊÊ" #
rect
ÈÈ 
.
ÈÈ 
xMin
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
rect
ÍÍ 
.
ÍÍ 
width
ÍÍ 
+=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
if
ÏÏ 
(
ÏÏ 
isBoxed
ÏÏ 
)
ÏÏ 
{
ÌÌ 
rect
ÓÓ 
.
ÓÓ 
xMin
ÓÓ 
=
ÓÓ 
xMin
ÓÓ  
==
ÓÓ! #
$num
ÓÓ$ '
?
ÓÓ( )
$num
ÓÓ* .
:
ÓÓ/ 0
EditorGUIUtility
ÓÓ1 A
.
ÓÓA B
singleLineHeight
ÓÓB R
;
ÓÓR S
rect
ÔÔ 
.
ÔÔ 
width
ÔÔ 
-=
ÔÔ 
$num
ÔÔ 
;
ÔÔ  
}
 
if
ÚÚ 
(
ÚÚ 
Event
ÚÚ 
.
ÚÚ 
current
ÚÚ 
.
ÚÚ 
type
ÚÚ "
!=
ÚÚ# %
	EventType
ÚÚ& /
.
ÚÚ/ 0
Repaint
ÚÚ0 7
)
ÚÚ7 8
return
ÛÛ 
;
ÛÛ 
	EditorGUI
ıı 
.
ıı 
DrawRect
ıı 
(
ıı 
rect
ıı #
,
ıı# $
!
ıı% &
EditorGUIUtility
ıı& 6
.
ıı6 7
	isProSkin
ıı7 @
?
ˆˆ 
new
ˆˆ 
Color
ˆˆ 
(
ˆˆ 
$num
ˆˆ  
,
ˆˆ  !
$num
ˆˆ" &
,
ˆˆ& '
$num
ˆˆ( ,
,
ˆˆ, -
$num
ˆˆ. 4
)
ˆˆ4 5
:
˜˜ 
new
˜˜ 
Color
˜˜ 
(
˜˜ 
$num
˜˜ !
,
˜˜! "
$num
˜˜# (
,
˜˜( )
$num
˜˜* /
,
˜˜/ 0
$num
˜˜1 7
)
˜˜7 8
)
˜˜8 9
;
˜˜9 :
}
¯¯ 	
public
¸¸ 
static
¸¸ 
void
¸¸ 

DrawHeader
¸¸ %
(
¸¸% &
string
¸¸& ,
title
¸¸- 2
)
¸¸2 3
=>
˝˝ 

DrawHeader
˝˝ 
(
˝˝ 
EditorGUIUtility
˝˝ *
.
˝˝* +
TrTextContent
˝˝+ 8
(
˝˝8 9
title
˝˝9 >
)
˝˝> ?
)
˝˝? @
;
˝˝@ A
public
ÅÅ 
static
ÅÅ 
void
ÅÅ 

DrawHeader
ÅÅ %
(
ÅÅ% &

GUIContent
ÅÅ& 0
title
ÅÅ1 6
)
ÅÅ6 7
{
ÇÇ 	
var
ÉÉ 
backgroundRect
ÉÉ 
=
ÉÉ  
GUILayoutUtility
ÉÉ! 1
.
ÉÉ1 2
GetRect
ÉÉ2 9
(
ÉÉ9 :
$num
ÉÉ: <
,
ÉÉ< =
$num
ÉÉ> A
)
ÉÉA B
;
ÉÉB C
var
ÖÖ 
	labelRect
ÖÖ 
=
ÖÖ 
backgroundRect
ÖÖ *
;
ÖÖ* +
	labelRect
ÜÜ 
.
ÜÜ 
xMin
ÜÜ 
+=
ÜÜ 
$num
ÜÜ !
;
ÜÜ! "
	labelRect
áá 
.
áá 
xMax
áá 
-=
áá 
$num
áá !
;
áá! "
var
ââ 
foldoutRect
ââ 
=
ââ 
backgroundRect
ââ ,
;
ââ, -
foldoutRect
ää 
.
ää 
y
ää 
+=
ää 
$num
ää 
;
ää  
foldoutRect
ãã 
.
ãã 
width
ãã 
=
ãã 
$num
ãã  #
;
ãã# $
foldoutRect
åå 
.
åå 
height
åå 
=
åå  
$num
åå! $
;
åå$ %
backgroundRect
èè 
.
èè 
xMin
èè 
=
èè  !
$num
èè" $
;
èè$ %
backgroundRect
êê 
.
êê 
width
êê  
+=
êê! #
$num
êê$ &
;
êê& '
float
ìì 
backgroundTint
ìì  
=
ìì! "
EditorGUIUtility
ìì# 3
.
ìì3 4
	isProSkin
ìì4 =
?
ìì> ?
$num
ìì@ D
:
ììE F
$num
ììG I
;
ììI J
	EditorGUI
îî 
.
îî 
DrawRect
îî 
(
îî 
backgroundRect
îî -
,
îî- .
new
îî/ 2
Color
îî3 8
(
îî8 9
backgroundTint
îî9 G
,
îîG H
backgroundTint
îîI W
,
îîW X
backgroundTint
îîY g
,
îîg h
$num
îîi m
)
îîm n
)
îîn o
;
îîo p
	EditorGUI
óó 
.
óó 

LabelField
óó  
(
óó  !
	labelRect
óó! *
,
óó* +
title
óó, 1
,
óó1 2
EditorStyles
óó3 ?
.
óó? @
	boldLabel
óó@ I
)
óóI J
;
óóJ K
}
òò 	
public
°° 
static
°° 
bool
°° 
DrawHeaderFoldout
°° ,
(
°°, -
string
°°- 3
title
°°4 9
,
°°9 :
bool
°°; ?
state
°°@ E
,
°°E F
bool
°°G K
isBoxed
°°L S
=
°°T U
false
°°V [
,
°°[ \
Func
°°] a
<
°°a b
bool
°°b f
>
°°f g
hasMoreOptions
°°h v
=
°°w x
null
°°y }
,
°°} ~
Action°° Ö 
toggleMoreOption°°Ü ñ
=°°ó ò
null°°ô ù
)°°ù û
=>
¢¢ 
DrawHeaderFoldout
¢¢  
(
¢¢  !
EditorGUIUtility
¢¢! 1
.
¢¢1 2
TrTextContent
¢¢2 ?
(
¢¢? @
title
¢¢@ E
)
¢¢E F
,
¢¢F G
state
¢¢H M
,
¢¢M N
isBoxed
¢¢O V
,
¢¢V W
hasMoreOptions
¢¢X f
,
¢¢f g
toggleMoreOption
¢¢h x
)
¢¢x y
;
¢¢y z
public
´´ 
static
´´ 
bool
´´ 
DrawHeaderFoldout
´´ ,
(
´´, -

GUIContent
´´- 7
title
´´8 =
,
´´= >
bool
´´? C
state
´´D I
,
´´I J
bool
´´K O
isBoxed
´´P W
=
´´X Y
false
´´Z _
,
´´_ `
Func
´´a e
<
´´e f
bool
´´f j
>
´´j k
hasMoreOptions
´´l z
=
´´{ |
null´´} Å
,´´Å Ç
Action´´É â!
toggleMoreOptions´´ä õ
=´´ú ù
null´´û ¢
)´´¢ £
{
¨¨ 	
const
≠≠ 
float
≠≠ 
height
≠≠ 
=
≠≠  
$num
≠≠! $
;
≠≠$ %
var
ÆÆ 
backgroundRect
ÆÆ 
=
ÆÆ  
GUILayoutUtility
ÆÆ! 1
.
ÆÆ1 2
GetRect
ÆÆ2 9
(
ÆÆ9 :
$num
ÆÆ: <
,
ÆÆ< =
height
ÆÆ> D
)
ÆÆD E
;
ÆÆE F
float
ØØ 
xMin
ØØ 
=
ØØ 
backgroundRect
ØØ '
.
ØØ' (
xMin
ØØ( ,
;
ØØ, -
var
±± 
	labelRect
±± 
=
±± 
backgroundRect
±± *
;
±±* +
	labelRect
≤≤ 
.
≤≤ 
xMin
≤≤ 
+=
≤≤ 
$num
≤≤ !
;
≤≤! "
	labelRect
≥≥ 
.
≥≥ 
xMax
≥≥ 
-=
≥≥ 
$num
≥≥ !
;
≥≥! "
var
µµ 
foldoutRect
µµ 
=
µµ 
backgroundRect
µµ ,
;
µµ, -
foldoutRect
∂∂ 
.
∂∂ 
y
∂∂ 
+=
∂∂ 
$num
∂∂ 
;
∂∂  
foldoutRect
∑∑ 
.
∑∑ 
width
∑∑ 
=
∑∑ 
$num
∑∑  #
;
∑∑# $
foldoutRect
∏∏ 
.
∏∏ 
height
∏∏ 
=
∏∏  
$num
∏∏! $
;
∏∏$ %
foldoutRect
ππ 
.
ππ 
x
ππ 
=
ππ 
	labelRect
ππ %
.
ππ% &
xMin
ππ& *
+
ππ+ ,
$num
ππ- /
*
ππ0 1
(
ππ2 3
	EditorGUI
ππ3 <
.
ππ< =
indentLevel
ππ= H
-
ππI J
$num
ππK L
)
ππL M
;
ππM N
var
ºº 
moreOptionsRect
ºº 
=
ºº  !
new
ºº" %
Rect
ºº& *
(
ºº* +
)
ºº+ ,
;
ºº, -
if
ΩΩ 
(
ΩΩ 
hasMoreOptions
ΩΩ 
!=
ΩΩ !
null
ΩΩ" &
)
ΩΩ& '
{
ææ 
moreOptionsRect
øø 
=
øø  !
backgroundRect
øø" 0
;
øø0 1
moreOptionsRect
¿¿ 
.
¿¿  
x
¿¿  !
+=
¿¿" $
moreOptionsRect
¿¿% 4
.
¿¿4 5
width
¿¿5 :
-
¿¿; <
$num
¿¿= ?
-
¿¿@ A
$num
¿¿B C
;
¿¿C D
moreOptionsRect
¡¡ 
.
¡¡  
height
¡¡  &
=
¡¡' (
$num
¡¡) +
;
¡¡+ ,
moreOptionsRect
¬¬ 
.
¬¬  
width
¬¬  %
=
¬¬& '
$num
¬¬( *
;
¬¬* +
}
√√ 
backgroundRect
∆∆ 
.
∆∆ 
xMin
∆∆ 
=
∆∆  !
$num
∆∆" $
;
∆∆$ %
backgroundRect
«« 
.
«« 
width
««  
+=
««! #
$num
««$ &
;
««& '
if
…… 
(
…… 
isBoxed
…… 
)
…… 
{
   
	labelRect
ÀÀ 
.
ÀÀ 
xMin
ÀÀ 
+=
ÀÀ !
$num
ÀÀ" #
;
ÀÀ# $
foldoutRect
ÃÃ 
.
ÃÃ 
xMin
ÃÃ  
+=
ÃÃ! #
$num
ÃÃ$ %
;
ÃÃ% &
backgroundRect
ÕÕ 
.
ÕÕ 
xMin
ÕÕ #
=
ÕÕ$ %
xMin
ÕÕ& *
==
ÕÕ+ -
$num
ÕÕ. 1
?
ÕÕ2 3
$num
ÕÕ4 8
:
ÕÕ9 :
EditorGUIUtility
ÕÕ; K
.
ÕÕK L
singleLineHeight
ÕÕL \
;
ÕÕ\ ]
backgroundRect
ŒŒ 
.
ŒŒ 
width
ŒŒ $
-=
ŒŒ% '
$num
ŒŒ( )
;
ŒŒ) *
}
œœ 
float
““ 
backgroundTint
““  
=
““! "
EditorGUIUtility
““# 3
.
““3 4
	isProSkin
““4 =
?
““> ?
$num
““@ D
:
““E F
$num
““G I
;
““I J
	EditorGUI
”” 
.
”” 
DrawRect
”” 
(
”” 
backgroundRect
”” -
,
””- .
new
””/ 2
Color
””3 8
(
””8 9
backgroundTint
””9 G
,
””G H
backgroundTint
””I W
,
””W X
backgroundTint
””Y g
,
””g h
$num
””i m
)
””m n
)
””n o
;
””o p
if
÷÷ 
(
÷÷ 
hasMoreOptions
÷÷ 
!=
÷÷ !
null
÷÷" &
)
÷÷& '
{
◊◊ 
	EditorGUI
ÿÿ 
.
ÿÿ 
BeginChangeCheck
ÿÿ *
(
ÿÿ* +
)
ÿÿ+ ,
;
ÿÿ, -
Styles
ŸŸ 
.
ŸŸ 
DrawMoreOptions
ŸŸ &
(
ŸŸ& '
moreOptionsRect
ŸŸ' 6
,
ŸŸ6 7
hasMoreOptions
ŸŸ8 F
(
ŸŸF G
)
ŸŸG H
)
ŸŸH I
;
ŸŸI J
if
⁄⁄ 
(
⁄⁄ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
EndChangeCheck
⁄⁄ ,
(
⁄⁄, -
)
⁄⁄- .
&&
⁄⁄/ 1
toggleMoreOptions
⁄⁄2 C
!=
⁄⁄D F
null
⁄⁄G K
)
⁄⁄K L
{
€€ 
toggleMoreOptions
‹‹ %
(
‹‹% &
)
‹‹& '
;
‹‹' (
}
›› 
}
ﬁﬁ 
	EditorGUI
·· 
.
·· 

LabelField
··  
(
··  !
	labelRect
··! *
,
··* +
title
··, 1
,
··1 2
EditorStyles
··3 ?
.
··? @
	boldLabel
··@ I
)
··I J
;
··J K
state
‰‰ 
=
‰‰ 
GUI
‰‰ 
.
‰‰ 
Toggle
‰‰ 
(
‰‰ 
foldoutRect
‰‰ *
,
‰‰* +
state
‰‰, 1
,
‰‰1 2

GUIContent
‰‰3 =
.
‰‰= >
none
‰‰> B
,
‰‰B C
EditorStyles
‰‰D P
.
‰‰P Q
foldout
‰‰Q X
)
‰‰X Y
;
‰‰Y Z
var
ÊÊ 
e
ÊÊ 
=
ÊÊ 
Event
ÊÊ 
.
ÊÊ 
current
ÊÊ !
;
ÊÊ! "
if
ÁÁ 
(
ÁÁ 
e
ÁÁ 
.
ÁÁ 
type
ÁÁ 
==
ÁÁ 
	EventType
ÁÁ #
.
ÁÁ# $
	MouseDown
ÁÁ$ -
&&
ÁÁ. 0
backgroundRect
ÁÁ1 ?
.
ÁÁ? @
Contains
ÁÁ@ H
(
ÁÁH I
e
ÁÁI J
.
ÁÁJ K
mousePosition
ÁÁK X
)
ÁÁX Y
&&
ÁÁZ \
!
ÁÁ] ^
moreOptionsRect
ÁÁ^ m
.
ÁÁm n
Contains
ÁÁn v
(
ÁÁv w
e
ÁÁw x
.
ÁÁx y
mousePositionÁÁy Ü
)ÁÁÜ á
&&ÁÁà ä
eÁÁã å
.ÁÁå ç
buttonÁÁç ì
==ÁÁî ñ
$numÁÁó ò
)ÁÁò ô
{
ËË 
state
ÈÈ 
=
ÈÈ 
!
ÈÈ 
state
ÈÈ 
;
ÈÈ 
e
ÍÍ 
.
ÍÍ 
Use
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 
return
ÌÌ 
state
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
public
˜˜ 
static
˜˜ 
bool
˜˜ "
DrawSubHeaderFoldout
˜˜ /
(
˜˜/ 0
string
˜˜0 6
title
˜˜7 <
,
˜˜< =
bool
˜˜> B
state
˜˜C H
,
˜˜H I
bool
˜˜J N
isBoxed
˜˜O V
=
˜˜W X
false
˜˜Y ^
,
˜˜^ _
Func
˜˜` d
<
˜˜d e
bool
˜˜e i
>
˜˜i j
hasMoreOptions
˜˜k y
=
˜˜z {
null˜˜| Ä
,˜˜Ä Å
Action˜˜Ç à!
toggleMoreOptions˜˜â ö
=˜˜õ ú
null˜˜ù °
)˜˜° ¢
=>
¯¯ "
DrawSubHeaderFoldout
¯¯ #
(
¯¯# $
EditorGUIUtility
¯¯$ 4
.
¯¯4 5
TrTextContent
¯¯5 B
(
¯¯B C
title
¯¯C H
)
¯¯H I
,
¯¯I J
state
¯¯K P
,
¯¯P Q
isBoxed
¯¯R Y
,
¯¯Y Z
hasMoreOptions
¯¯[ i
,
¯¯i j
toggleMoreOptions
¯¯k |
)
¯¯| }
;
¯¯} ~
public
ÅÅ 
static
ÅÅ 
bool
ÅÅ "
DrawSubHeaderFoldout
ÅÅ /
(
ÅÅ/ 0

GUIContent
ÅÅ0 :
title
ÅÅ; @
,
ÅÅ@ A
bool
ÅÅB F
state
ÅÅG L
,
ÅÅL M
bool
ÅÅN R
isBoxed
ÅÅS Z
=
ÅÅ[ \
false
ÅÅ] b
,
ÅÅb c
Func
ÅÅd h
<
ÅÅh i
bool
ÅÅi m
>
ÅÅm n
hasMoreOptions
ÅÅo }
=
ÅÅ~ 
nullÅÅÄ Ñ
,ÅÅÑ Ö
ActionÅÅÜ å!
toggleMoreOptionsÅÅç û
=ÅÅü †
nullÅÅ° •
)ÅÅ• ¶
{
ÇÇ 	
const
ÉÉ 
float
ÉÉ 
height
ÉÉ 
=
ÉÉ  
$num
ÉÉ! $
;
ÉÉ$ %
var
ÑÑ 
backgroundRect
ÑÑ 
=
ÑÑ  
GUILayoutUtility
ÑÑ! 1
.
ÑÑ1 2
GetRect
ÑÑ2 9
(
ÑÑ9 :
$num
ÑÑ: <
,
ÑÑ< =
height
ÑÑ> D
)
ÑÑD E
;
ÑÑE F
var
ÜÜ 
	labelRect
ÜÜ 
=
ÜÜ 
backgroundRect
ÜÜ *
;
ÜÜ* +
	labelRect
áá 
.
áá 
xMin
áá 
+=
áá 
$num
áá !
;
áá! "
	labelRect
àà 
.
àà 
xMax
àà 
-=
àà 
$num
àà !
;
àà! "
var
ää 
foldoutRect
ää 
=
ää 
backgroundRect
ää ,
;
ää, -
foldoutRect
ãã 
.
ãã 
y
ãã 
+=
ãã 
$num
ãã 
;
ãã  
foldoutRect
åå 
.
åå 
x
åå 
+=
åå 
$num
åå 
*
åå  !
	EditorGUI
åå" +
.
åå+ ,
indentLevel
åå, 7
;
åå7 8
foldoutRect
çç 
.
çç 
width
çç 
=
çç 
$num
çç  #
;
çç# $
foldoutRect
éé 
.
éé 
height
éé 
=
éé  
$num
éé! $
;
éé$ %
var
ëë 
advancedRect
ëë 
=
ëë 
new
ëë "
Rect
ëë# '
(
ëë' (
)
ëë( )
;
ëë) *
if
íí 
(
íí 
hasMoreOptions
íí 
!=
íí !
null
íí" &
)
íí& '
{
ìì 
advancedRect
îî 
=
îî 
backgroundRect
îî -
;
îî- .
advancedRect
ïï 
.
ïï 
x
ïï 
+=
ïï !
advancedRect
ïï" .
.
ïï. /
width
ïï/ 4
-
ïï5 6
$num
ïï7 9
-
ïï: ;
$num
ïï< =
;
ïï= >
advancedRect
ññ 
.
ññ 
height
ññ #
=
ññ$ %
$num
ññ& (
;
ññ( )
advancedRect
óó 
.
óó 
width
óó "
=
óó# $
$num
óó% '
;
óó' (
bool
ôô 
moreOptions
ôô  
=
ôô! "
hasMoreOptions
ôô# 1
(
ôô1 2
)
ôô2 3
;
ôô3 4
bool
öö 
newMoreOptions
öö #
=
öö$ %
Styles
öö& ,
.
öö, -
DrawMoreOptions
öö- <
(
öö< =
advancedRect
öö= I
,
ööI J
moreOptions
ööK V
)
ööV W
;
ööW X
if
õõ 
(
õõ 
moreOptions
õõ 
^
õõ  !
newMoreOptions
õõ" 0
)
õõ0 1
toggleMoreOptions
úú %
?
úú% &
.
úú& '
Invoke
úú' -
(
úú- .
)
úú. /
;
úú/ 0
}
ùù 
backgroundRect
†† 
.
†† 
xMin
†† 
=
††  !
$num
††" $
;
††$ %
backgroundRect
°° 
.
°° 
width
°°  
+=
°°! #
$num
°°$ &
;
°°& '
if
££ 
(
££ 
isBoxed
££ 
)
££ 
{
§§ 
	labelRect
•• 
.
•• 
xMin
•• 
+=
•• !
$num
••" #
;
••# $
foldoutRect
¶¶ 
.
¶¶ 
xMin
¶¶  
+=
¶¶! #
$num
¶¶$ %
;
¶¶% &
backgroundRect
ßß 
.
ßß 
xMin
ßß #
=
ßß$ %
EditorGUIUtility
ßß& 6
.
ßß6 7
singleLineHeight
ßß7 G
;
ßßG H
backgroundRect
®® 
.
®® 
width
®® $
-=
®®% '
$num
®®( )
;
®®) *
}
©© 
	EditorGUI
¨¨ 
.
¨¨ 

LabelField
¨¨  
(
¨¨  !
	labelRect
¨¨! *
,
¨¨* +
title
¨¨, 1
,
¨¨1 2
EditorStyles
¨¨3 ?
.
¨¨? @
	boldLabel
¨¨@ I
)
¨¨I J
;
¨¨J K
state
ØØ 
=
ØØ 
GUI
ØØ 
.
ØØ 
Toggle
ØØ 
(
ØØ 
foldoutRect
ØØ *
,
ØØ* +
state
ØØ, 1
,
ØØ1 2

GUIContent
ØØ3 =
.
ØØ= >
none
ØØ> B
,
ØØB C
EditorStyles
ØØD P
.
ØØP Q
foldout
ØØQ X
)
ØØX Y
;
ØØY Z
var
±± 
e
±± 
=
±± 
Event
±± 
.
±± 
current
±± !
;
±±! "
if
≤≤ 
(
≤≤ 
e
≤≤ 
.
≤≤ 
type
≤≤ 
==
≤≤ 
	EventType
≤≤ #
.
≤≤# $
	MouseDown
≤≤$ -
&&
≤≤. 0
backgroundRect
≤≤1 ?
.
≤≤? @
Contains
≤≤@ H
(
≤≤H I
e
≤≤I J
.
≤≤J K
mousePosition
≤≤K X
)
≤≤X Y
&&
≤≤Z \
!
≤≤] ^
advancedRect
≤≤^ j
.
≤≤j k
Contains
≤≤k s
(
≤≤s t
e
≤≤t u
.
≤≤u v
mousePosition≤≤v É
)≤≤É Ñ
&&≤≤Ö á
e≤≤à â
.≤≤â ä
button≤≤ä ê
==≤≤ë ì
$num≤≤î ï
)≤≤ï ñ
{
≥≥ 
state
¥¥ 
=
¥¥ 
!
¥¥ 
state
¥¥ 
;
¥¥ 
e
µµ 
.
µµ 
Use
µµ 
(
µµ 
)
µµ 
;
µµ 
}
∂∂ 
return
∏∏ 
state
∏∏ 
;
∏∏ 
}
ππ 	
public
√√ 
static
√√ 
bool
√√ 
DrawHeaderToggle
√√ +
(
√√+ ,
string
√√, 2
title
√√3 8
,
√√8 9 
SerializedProperty
√√: L
group
√√M R
,
√√R S 
SerializedProperty
√√T f
activeField
√√g r
,
√√r s
Action
√√t z
<
√√z {
Vector2√√{ Ç
>√√Ç É
contextAction√√Ñ ë
=√√í ì
null√√î ò
,√√ò ô
Func√√ö û
<√√û ü
bool√√ü £
>√√£ §
hasMoreOptions√√• ≥
=√√¥ µ
null√√∂ ∫
,√√∫ ª
Action√√º ¬!
toggleMoreOptions√√√ ‘
=√√’ ÷
null√√◊ €
)√√€ ‹
=>
ƒƒ 
DrawHeaderToggle
ƒƒ 
(
ƒƒ  
EditorGUIUtility
ƒƒ  0
.
ƒƒ0 1
TrTextContent
ƒƒ1 >
(
ƒƒ> ?
title
ƒƒ? D
)
ƒƒD E
,
ƒƒE F
group
ƒƒG L
,
ƒƒL M
activeField
ƒƒN Y
,
ƒƒY Z
contextAction
ƒƒ[ h
,
ƒƒh i
hasMoreOptions
ƒƒj x
,
ƒƒx y 
toggleMoreOptionsƒƒz ã
,ƒƒã å
nullƒƒç ë
)ƒƒë í
;ƒƒí ì
public
ŒŒ 
static
ŒŒ 
bool
ŒŒ 
DrawHeaderToggle
ŒŒ +
(
ŒŒ+ ,

GUIContent
ŒŒ, 6
title
ŒŒ7 <
,
ŒŒ< = 
SerializedProperty
ŒŒ> P
group
ŒŒQ V
,
ŒŒV W 
SerializedProperty
ŒŒX j
activeField
ŒŒk v
,
ŒŒv w
Action
ŒŒx ~
<
ŒŒ~ 
Vector2ŒŒ Ü
>ŒŒÜ á
contextActionŒŒà ï
=ŒŒñ ó
nullŒŒò ú
,ŒŒú ù
FuncŒŒû ¢
<ŒŒ¢ £
boolŒŒ£ ß
>ŒŒß ®
hasMoreOptionsŒŒ© ∑
=ŒŒ∏ π
nullŒŒ∫ æ
,ŒŒæ ø
ActionŒŒ¿ ∆!
toggleMoreOptionsŒŒ« ÿ
=ŒŒŸ ⁄
nullŒŒ€ ﬂ
)ŒŒﬂ ‡
=>
œœ	 
DrawHeaderToggle
œœ 
(
œœ 
title
œœ "
,
œœ" #
group
œœ$ )
,
œœ) *
activeField
œœ+ 6
,
œœ6 7
contextAction
œœ8 E
,
œœE F
hasMoreOptions
œœG U
,
œœU V
toggleMoreOptions
œœW h
,
œœh i
null
œœj n
)
œœn o
;
œœo p
public
⁄⁄ 
static
⁄⁄ 
bool
⁄⁄ 
DrawHeaderToggle
⁄⁄ +
(
⁄⁄+ ,
string
⁄⁄, 2
title
⁄⁄3 8
,
⁄⁄8 9 
SerializedProperty
⁄⁄: L
group
⁄⁄M R
,
⁄⁄R S 
SerializedProperty
⁄⁄T f
activeField
⁄⁄g r
,
⁄⁄r s
Action
⁄⁄t z
<
⁄⁄z {
Vector2⁄⁄{ Ç
>⁄⁄Ç É
contextAction⁄⁄Ñ ë
,⁄⁄ë í
Func⁄⁄ì ó
<⁄⁄ó ò
bool⁄⁄ò ú
>⁄⁄ú ù
hasMoreOptions⁄⁄û ¨
,⁄⁄¨ ≠
Action⁄⁄Æ ¥!
toggleMoreOptions⁄⁄µ ∆
,⁄⁄∆ «
string⁄⁄» Œ 
documentationURL⁄⁄œ ﬂ
)⁄⁄ﬂ ‡
=>
€€ 
DrawHeaderToggle
€€ 
(
€€  
EditorGUIUtility
€€  0
.
€€0 1
TrTextContent
€€1 >
(
€€> ?
title
€€? D
)
€€D E
,
€€E F
group
€€G L
,
€€L M
activeField
€€N Y
,
€€Y Z
contextAction
€€[ h
,
€€h i
hasMoreOptions
€€j x
,
€€x y 
toggleMoreOptions€€z ã
,€€ã å 
documentationURL€€ç ù
)€€ù û
;€€û ü
public
ÊÊ 
static
ÊÊ 
bool
ÊÊ 
DrawHeaderToggle
ÊÊ +
(
ÊÊ+ ,

GUIContent
ÊÊ, 6
title
ÊÊ7 <
,
ÊÊ< = 
SerializedProperty
ÊÊ> P
group
ÊÊQ V
,
ÊÊV W 
SerializedProperty
ÊÊX j
activeField
ÊÊk v
,
ÊÊv w
Action
ÊÊx ~
<
ÊÊ~ 
Vector2ÊÊ Ü
>ÊÊÜ á
contextActionÊÊà ï
,ÊÊï ñ
FuncÊÊó õ
<ÊÊõ ú
boolÊÊú †
>ÊÊ† °
hasMoreOptionsÊÊ¢ ∞
,ÊÊ∞ ±
ActionÊÊ≤ ∏!
toggleMoreOptionsÊÊπ  
,ÊÊ  À
stringÊÊÃ “ 
documentationURLÊÊ” „
)ÊÊ„ ‰
{
ÁÁ 	
var
ËË 
backgroundRect
ËË 
=
ËË  
GUILayoutUtility
ËË! 1
.
ËË1 2
GetRect
ËË2 9
(
ËË9 :
$num
ËË: <
,
ËË< =
$num
ËË> A
)
ËËA B
;
ËËB C
var
ÍÍ 
	labelRect
ÍÍ 
=
ÍÍ 
backgroundRect
ÍÍ *
;
ÍÍ* +
	labelRect
ÎÎ 
.
ÎÎ 
xMin
ÎÎ 
+=
ÎÎ 
$num
ÎÎ !
;
ÎÎ! "
	labelRect
ÏÏ 
.
ÏÏ 
xMax
ÏÏ 
-=
ÏÏ 
$num
ÏÏ !
+
ÏÏ" #
$num
ÏÏ$ &
+
ÏÏ' (
$num
ÏÏ) *
;
ÏÏ* +
var
ÓÓ 
foldoutRect
ÓÓ 
=
ÓÓ 
backgroundRect
ÓÓ ,
;
ÓÓ, -
foldoutRect
ÔÔ 
.
ÔÔ 
y
ÔÔ 
+=
ÔÔ 
$num
ÔÔ 
;
ÔÔ  
foldoutRect
 
.
 
width
 
=
 
$num
  #
;
# $
foldoutRect
ÒÒ 
.
ÒÒ 
height
ÒÒ 
=
ÒÒ  
$num
ÒÒ! $
;
ÒÒ$ %
var
ÛÛ 

toggleRect
ÛÛ 
=
ÛÛ 
backgroundRect
ÛÛ +
;
ÛÛ+ ,

toggleRect
ÙÙ 
.
ÙÙ 
x
ÙÙ 
+=
ÙÙ 
$num
ÙÙ 
;
ÙÙ  

toggleRect
ıı 
.
ıı 
y
ıı 
+=
ıı 
$num
ıı 
;
ıı 

toggleRect
ˆˆ 
.
ˆˆ 
width
ˆˆ 
=
ˆˆ 
$num
ˆˆ "
;
ˆˆ" #

toggleRect
˜˜ 
.
˜˜ 
height
˜˜ 
=
˜˜ 
$num
˜˜  #
;
˜˜# $
var
˙˙ 
moreOptionsRect
˙˙ 
=
˙˙  !
new
˙˙" %
Rect
˙˙& *
(
˙˙* +
)
˙˙+ ,
;
˙˙, -
if
˚˚ 
(
˚˚ 
hasMoreOptions
˚˚ 
!=
˚˚ !
null
˚˚" &
)
˚˚& '
{
¸¸ 
moreOptionsRect
˝˝ 
=
˝˝  !
backgroundRect
˝˝" 0
;
˝˝0 1
moreOptionsRect
ˇˇ 
.
ˇˇ  
x
ˇˇ  !
+=
ˇˇ" $
moreOptionsRect
ˇˇ% 4
.
ˇˇ4 5
width
ˇˇ5 :
-
ˇˇ; <
$num
ˇˇ= ?
-
ˇˇ@ A
$num
ˇˇB C
-
ˇˇD E
$num
ˇˇF H
-
ˇˇI J
$num
ˇˇK L
;
ˇˇL M
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
string
ÅÅ 
.
ÅÅ 
IsNullOrEmpty
ÅÅ )
(
ÅÅ) *
documentationURL
ÅÅ* :
)
ÅÅ: ;
)
ÅÅ; <
moreOptionsRect
ÇÇ #
.
ÇÇ# $
x
ÇÇ$ %
-=
ÇÇ& (
$num
ÇÇ) +
+
ÇÇ, -
$num
ÇÇ. /
;
ÇÇ/ 0
moreOptionsRect
ÑÑ 
.
ÑÑ  
height
ÑÑ  &
=
ÑÑ' (
$num
ÑÑ) +
;
ÑÑ+ ,
moreOptionsRect
ÖÖ 
.
ÖÖ  
width
ÖÖ  %
=
ÖÖ& '
$num
ÖÖ( *
;
ÖÖ* +
}
ÜÜ 
backgroundRect
ââ 
.
ââ 
xMin
ââ 
=
ââ  !
$num
ââ" $
;
ââ$ %
backgroundRect
ää 
.
ää 
width
ää  
+=
ää! #
$num
ää$ &
;
ää& '
float
çç 
backgroundTint
çç  
=
çç! "
EditorGUIUtility
çç# 3
.
çç3 4
	isProSkin
çç4 =
?
çç> ?
$num
çç@ D
:
ççE F
$num
ççG I
;
ççI J
	EditorGUI
éé 
.
éé 
DrawRect
éé 
(
éé 
backgroundRect
éé -
,
éé- .
new
éé/ 2
Color
éé3 8
(
éé8 9
backgroundTint
éé9 G
,
ééG H
backgroundTint
ééI W
,
ééW X
backgroundTint
ééY g
,
éég h
$num
ééi m
)
éém n
)
één o
;
ééo p
using
ëë 
(
ëë 
new
ëë 
	EditorGUI
ëë  
.
ëë  !
DisabledScope
ëë! .
(
ëë. /
!
ëë/ 0
activeField
ëë0 ;
.
ëë; <
	boolValue
ëë< E
)
ëëE F
)
ëëF G
	EditorGUI
íí 
.
íí 

LabelField
íí $
(
íí$ %
	labelRect
íí% .
,
íí. /
title
íí0 5
,
íí5 6
EditorStyles
íí7 C
.
ííC D
	boldLabel
ííD M
)
ííM N
;
ííN O
group
ïï 
.
ïï 
serializedObject
ïï "
.
ïï" #
Update
ïï# )
(
ïï) *
)
ïï* +
;
ïï+ ,
group
ññ 
.
ññ 

isExpanded
ññ 
=
ññ 
GUI
ññ "
.
ññ" #
Toggle
ññ# )
(
ññ) *
foldoutRect
ññ* 5
,
ññ5 6
group
ññ7 <
.
ññ< =

isExpanded
ññ= G
,
ññG H

GUIContent
ññI S
.
ññS T
none
ññT X
,
ññX Y
EditorStyles
ññZ f
.
ññf g
foldout
ññg n
)
ññn o
;
ñño p
group
óó 
.
óó 
serializedObject
óó "
.
óó" #%
ApplyModifiedProperties
óó# :
(
óó: ;
)
óó; <
;
óó< =
activeField
öö 
.
öö 
serializedObject
öö (
.
öö( )
Update
öö) /
(
öö/ 0
)
öö0 1
;
öö1 2
activeField
õõ 
.
õõ 
	boolValue
õõ !
=
õõ" #
GUI
õõ$ '
.
õõ' (
Toggle
õõ( .
(
õõ. /

toggleRect
õõ/ 9
,
õõ9 :
activeField
õõ; F
.
õõF G
	boolValue
õõG P
,
õõP Q

GUIContent
õõR \
.
õõ\ ]
none
õõ] a
,
õõa b
CoreEditorStyles
õõc s
.
õõs t
smallTickboxõõt Ä
)õõÄ Å
;õõÅ Ç
activeField
úú 
.
úú 
serializedObject
úú (
.
úú( )%
ApplyModifiedProperties
úú) @
(
úú@ A
)
úúA B
;
úúB C
if
üü 
(
üü 
hasMoreOptions
üü 
!=
üü !
null
üü" &
)
üü& '
{
†† 
bool
°° 
moreOptions
°°  
=
°°! "
hasMoreOptions
°°# 1
(
°°1 2
)
°°2 3
;
°°3 4
bool
¢¢ 
newMoreOptions
¢¢ #
=
¢¢$ %
Styles
¢¢& ,
.
¢¢, -
DrawMoreOptions
¢¢- <
(
¢¢< =
moreOptionsRect
¢¢= L
,
¢¢L M
moreOptions
¢¢N Y
)
¢¢Y Z
;
¢¢Z [
if
££ 
(
££ 
moreOptions
££ 
^
££  !
newMoreOptions
££" 0
)
££0 1
toggleMoreOptions
§§ %
?
§§% &
.
§§& '
Invoke
§§' -
(
§§- .
)
§§. /
;
§§/ 0
}
•• 
var
®® 
menuIcon
®® 
=
®® 
CoreEditorStyles
®® +
.
®®+ ,
paneOptionsIcon
®®, ;
;
®®; <
var
©© 
menuRect
©© 
=
©© 
new
©© 
Rect
©© #
(
©©# $
	labelRect
©©$ -
.
©©- .
xMax
©©. 2
+
©©3 4
$num
©©5 7
+
©©8 9
$num
©©: <
+
©©= >
$num
©©? @
,
©©A B
	labelRect
©©C L
.
©©L M
y
©©M N
+
©©O P
$num
©©Q S
,
©©S T
menuIcon
©©U ]
.
©©] ^
width
©©^ c
,
©©c d
menuIcon
©©e m
.
©©m n
height
©©n t
)
©©t u
;
©©u v
if
´´ 
(
´´ 
contextAction
´´ 
!=
´´  
null
´´! %
)
´´% &
GUI
¨¨ 
.
¨¨ 
DrawTexture
¨¨ 
(
¨¨  
menuRect
¨¨  (
,
¨¨( )
menuIcon
¨¨* 2
)
¨¨2 3
;
¨¨3 4
if
ØØ 
(
ØØ 
!
ØØ 
String
ØØ 
.
ØØ 
IsNullOrEmpty
ØØ %
(
ØØ% &
documentationURL
ØØ& 6
)
ØØ6 7
)
ØØ7 8
{
∞∞ 
var
±± 
documentationRect
±± %
=
±±& '
menuRect
±±( 0
;
±±0 1
documentationRect
≤≤ !
.
≤≤! "
x
≤≤" #
-=
≤≤$ &
$num
≤≤' )
+
≤≤* +
$num
≤≤, -
;
≤≤- .
documentationRect
≥≥ !
.
≥≥! "
y
≥≥" #
-=
≥≥$ &
$num
≥≥' (
;
≥≥( )
var
µµ "
documentationTooltip
µµ (
=
µµ) *
$"
µµ+ -!
Open Reference for 
µµ- @
{
µµ@ A
title
µµA F
.
µµF G
text
µµG K
}
µµK L
.
µµL M
"
µµM N
;
µµN O
var
∂∂ 
documentationIcon
∂∂ %
=
∂∂& '
new
∂∂( +

GUIContent
∂∂, 6
(
∂∂6 7
EditorGUIUtility
∂∂7 G
.
∂∂G H
TrIconContent
∂∂H U
(
∂∂U V
$str
∂∂V ]
)
∂∂] ^
.
∂∂^ _
image
∂∂_ d
,
∂∂d e"
documentationTooltip
∂∂f z
)
∂∂z {
;
∂∂{ |
var
∑∑  
documentationStyle
∑∑ &
=
∑∑' (
new
∑∑) ,
GUIStyle
∑∑- 5
(
∑∑5 6
$str
∑∑6 B
)
∑∑B C
;
∑∑C D
if
ππ 
(
ππ 
GUI
ππ 
.
ππ 
Button
ππ 
(
ππ 
documentationRect
ππ 0
,
ππ0 1
documentationIcon
ππ2 C
,
ππC D 
documentationStyle
ππE W
)
ππW X
)
ππX Y
System
∫∫ 
.
∫∫ 
Diagnostics
∫∫ &
.
∫∫& '
Process
∫∫' .
.
∫∫. /
Start
∫∫/ 4
(
∫∫4 5
documentationURL
∫∫5 E
)
∫∫E F
;
∫∫F G
}
ªª 
var
ææ 
e
ææ 
=
ææ 
Event
ææ 
.
ææ 
current
ææ !
;
ææ! "
if
¿¿ 
(
¿¿ 
e
¿¿ 
.
¿¿ 
type
¿¿ 
==
¿¿ 
	EventType
¿¿ #
.
¿¿# $
	MouseDown
¿¿$ -
)
¿¿- .
{
¡¡ 
if
¬¬ 
(
¬¬ 
contextAction
¬¬ !
!=
¬¬" $
null
¬¬% )
&&
¬¬* ,
menuRect
¬¬- 5
.
¬¬5 6
Contains
¬¬6 >
(
¬¬> ?
e
¬¬? @
.
¬¬@ A
mousePosition
¬¬A N
)
¬¬N O
)
¬¬O P
{
√√ 
contextAction
ƒƒ !
(
ƒƒ! "
new
ƒƒ" %
Vector2
ƒƒ& -
(
ƒƒ- .
menuRect
ƒƒ. 6
.
ƒƒ6 7
x
ƒƒ7 8
,
ƒƒ8 9
menuRect
ƒƒ: B
.
ƒƒB C
yMax
ƒƒC G
)
ƒƒG H
)
ƒƒH I
;
ƒƒI J
e
≈≈ 
.
≈≈ 
Use
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
else
«« 
if
«« 
(
«« 
	labelRect
«« "
.
««" #
Contains
««# +
(
««+ ,
e
««, -
.
««- .
mousePosition
««. ;
)
««; <
)
««< =
{
»» 
if
…… 
(
…… 
e
…… 
.
…… 
button
……  
==
……! #
$num
……$ %
)
……% &
group
   
.
   

isExpanded
   (
=
  ) *
!
  + ,
group
  , 1
.
  1 2

isExpanded
  2 <
;
  < =
else
ÀÀ 
if
ÀÀ 
(
ÀÀ 
contextAction
ÀÀ *
!=
ÀÀ+ -
null
ÀÀ. 2
)
ÀÀ2 3
contextAction
ÃÃ %
(
ÃÃ% &
e
ÃÃ& '
.
ÃÃ' (
mousePosition
ÃÃ( 5
)
ÃÃ5 6
;
ÃÃ6 7
e
ŒŒ 
.
ŒŒ 
Use
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 
return
““ 
group
““ 
.
““ 

isExpanded
““ #
;
““# $
}
”” 	
static
’’ 
readonly
’’ 

GUIContent
’’ "
[
’’" #
]
’’# $
[
’’$ %
]
’’% &!
k_DrawVector6_Label
’’' :
=
’’; <
{
÷÷ 	
new
◊◊ 
[
◊◊ 
]
◊◊ 
{
◊◊ 
new
ÿÿ 

GUIContent
ÿÿ 
(
ÿÿ 
$str
ÿÿ #
)
ÿÿ# $
,
ÿÿ$ %
new
ŸŸ 

GUIContent
ŸŸ 
(
ŸŸ 
$str
ŸŸ #
)
ŸŸ# $
,
ŸŸ$ %
new
⁄⁄ 

GUIContent
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ #
)
⁄⁄# $
,
⁄⁄$ %
}
€€ 
,
€€ 
new
‹‹ 
[
‹‹ 
]
‹‹ 
{
‹‹ 
new
›› 

GUIContent
›› 
(
›› 
$str
›› #
)
››# $
,
››$ %
new
ﬁﬁ 

GUIContent
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ #
)
ﬁﬁ# $
,
ﬁﬁ$ %
new
ﬂﬂ 

GUIContent
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ #
)
ﬂﬂ# $
,
ﬂﬂ$ %
}
‡‡ 
,
‡‡ 
}
·· 	
;
··	 

const
‚‚ 
int
‚‚ +
k_DrawVector6Slider_LabelSize
‚‚ /
=
‚‚0 1
$num
‚‚2 4
;
‚‚4 5
const
„„ 
int
„„ +
k_DrawVector6Slider_FieldSize
„„ /
=
„„0 1
$num
„„2 4
;
„„4 5
public
 
static
 
void
 
DrawVector6
 &
(
& '

GUIContent
' 1
label
2 7
,
7 8 
SerializedProperty
9 K
positive
L T
,
T U 
SerializedProperty
V h
negative
i q
,
q r
Vector3
s z
min
{ ~
,
~ 
Vector3Ä á
maxà ã
,ã å
Colorç í
[í ì
]ì î
colorsï õ
=ú ù
nullû ¢
,¢ £"
SerializedProperty§ ∂
multiplicator∑ ƒ
=≈ ∆
null« À
,À Ã
boolÕ —!
allowIntersection“ „
=‰ Â
trueÊ Í
)Í Î
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
colors
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
&&
ÚÚ !
(
ÚÚ" #
colors
ÚÚ# )
.
ÚÚ) *
Length
ÚÚ* 0
!=
ÚÚ1 3
$num
ÚÚ4 5
)
ÚÚ5 6
)
ÚÚ6 7
throw
ÛÛ 
new
ÛÛ 
System
ÛÛ $
.
ÛÛ$ %
ArgumentException
ÛÛ% 6
(
ÛÛ6 7
$str
ÛÛ7 s
)
ÛÛs t
;
ÛÛt u
	GUILayout
ıı 
.
ıı 
BeginVertical
ıı #
(
ıı# $
)
ıı$ %
;
ıı% &
const
˜˜ 
int
˜˜ 
	interline
˜˜ 
=
˜˜  !
$num
˜˜" #
;
˜˜# $
const
¯¯ 
int
¯¯ &
fixAlignSubVector3Labels
¯¯ .
=
¯¯/ 0
-
¯¯1 2
$num
¯¯2 3
;
¯¯3 4
Rect
˘˘ 
	wholeArea
˘˘ 
=
˘˘ 
EditorGUILayout
˘˘ ,
.
˘˘, -
GetControlRect
˘˘- ;
(
˘˘; <
true
˘˘< @
,
˘˘@ A
$num
˘˘B C
*
˘˘C D
EditorGUIUtility
˘˘D T
.
˘˘T U
singleLineHeight
˘˘U e
+
˘˘f g
	interline
˘˘h q
)
˘˘q r
;
˘˘r s
Rect
˙˙ 
firstLineRect
˙˙ 
=
˙˙  
	wholeArea
˙˙! *
;
˙˙* +
firstLineRect
˚˚ 
.
˚˚ 
height
˚˚  
=
˚˚! "
EditorGUIUtility
˚˚# 3
.
˚˚3 4
singleLineHeight
˚˚4 D
;
˚˚D E
Rect
¸¸ 
secondLineRect
¸¸ 
=
¸¸  !
firstLineRect
¸¸" /
;
¸¸/ 0
secondLineRect
˝˝ 
.
˝˝ 
y
˝˝ 
+=
˝˝ 
firstLineRect
˝˝  -
.
˝˝- .
height
˝˝. 4
+
˝˝5 6
	interline
˝˝7 @
;
˝˝@ A
Rect
˛˛ 
	labelRect
˛˛ 
=
˛˛ 
firstLineRect
˛˛ *
;
˛˛* +
	labelRect
ˇˇ 
.
ˇˇ 
width
ˇˇ 
=
ˇˇ 
EditorGUIUtility
ˇˇ .
.
ˇˇ. /

labelWidth
ˇˇ/ 9
;
ˇˇ9 :
Rect
ÄÄ "
firstVectorValueRect
ÄÄ %
=
ÄÄ& '
firstLineRect
ÄÄ( 5
;
ÄÄ5 6"
firstVectorValueRect
ÅÅ  
.
ÅÅ  !
xMin
ÅÅ! %
+=
ÅÅ& (
	labelRect
ÅÅ) 2
.
ÅÅ2 3
width
ÅÅ3 8
+
ÅÅ9 :&
fixAlignSubVector3Labels
ÅÅ; S
;
ÅÅS T
	EditorGUI
ÉÉ 
.
ÉÉ 
BeginProperty
ÉÉ #
(
ÉÉ# $
	wholeArea
ÉÉ$ -
,
ÉÉ- .
label
ÉÉ/ 4
,
ÉÉ4 5
positive
ÉÉ6 >
)
ÉÉ> ?
;
ÉÉ? @
	EditorGUI
ÑÑ 
.
ÑÑ 
BeginProperty
ÑÑ #
(
ÑÑ# $
	wholeArea
ÑÑ$ -
,
ÑÑ- .
label
ÑÑ/ 4
,
ÑÑ4 5
negative
ÑÑ6 >
)
ÑÑ> ?
;
ÑÑ? @
{
ÖÖ 
	EditorGUI
ÜÜ 
.
ÜÜ 

LabelField
ÜÜ $
(
ÜÜ$ %
	labelRect
ÜÜ% .
,
ÜÜ. /
label
ÜÜ0 5
)
ÜÜ5 6
;
ÜÜ6 7
}
áá 
	EditorGUI
àà 
.
àà 
EndProperty
àà !
(
àà! "
)
àà" #
;
àà# $
	EditorGUI
ââ 
.
ââ 
EndProperty
ââ !
(
ââ! "
)
ââ" #
;
ââ# $
if
ãã 
(
ãã 
!
ãã 
allowIntersection
ãã "
)
ãã" #
{
åå 
max
çç 
=
çç 
negative
çç 
.
çç 
vector3Value
çç +
;
çç+ ,
max
éé 
.
éé 
x
éé 
=
éé 
$num
éé 
-
éé 
max
éé 
.
éé  
x
éé  !
;
éé! "
max
èè 
.
èè 
y
èè 
=
èè 
$num
èè 
-
èè 
max
èè 
.
èè  
y
èè  !
;
èè! "
max
êê 
.
êê 
z
êê 
=
êê 
$num
êê 
-
êê 
max
êê 
.
êê  
z
êê  !
;
êê! "
}
ëë 
DrawVector3
ìì 
(
ìì "
firstVectorValueRect
ìì ,
,
ìì, -!
k_DrawVector6_Label
ìì. A
[
ììA B
$num
ììB C
]
ììC D
,
ììD E
positive
ììF N
,
ììN O
min
ììP S
,
ììS T
max
ììU X
,
ììX Y
false
ììZ _
,
ìì_ `
colors
ììa g
==
ììh j
null
ììk o
?
ììp q
null
ììr v
:
ììw x
new
ììy |
Colorìì} Ç
[ììÇ É
]ììÉ Ñ
{ììÖ Ü
colorsììá ç
[ììç é
$numììé è
]ììè ê
,ììê ë
colorsììí ò
[ììò ô
$numììô ö
]ììö õ
,ììõ ú
colorsììù £
[ìì£ §
$numìì§ •
]ìì• ¶
}ììß ®
,ìì® ©
multiplicatorìì™ ∑
)ìì∑ ∏
;ìì∏ π
Rect
ïï #
secondVectorValueRect
ïï &
=
ïï' (
secondLineRect
ïï) 7
;
ïï7 8#
secondVectorValueRect
ññ !
.
ññ! "
xMin
ññ" &
=
ññ' ("
firstVectorValueRect
ññ) =
.
ññ= >
xMin
ññ> B
;
ññB C#
secondVectorValueRect
óó !
.
óó! "
xMax
óó" &
=
óó' ("
firstVectorValueRect
óó) =
.
óó= >
xMax
óó> B
;
óóB C
if
ôô 
(
ôô 
!
ôô 
allowIntersection
ôô "
)
ôô" #
{
öö 
max
õõ 
=
õõ 
positive
õõ 
.
õõ 
vector3Value
õõ +
;
õõ+ ,
max
úú 
.
úú 
x
úú 
=
úú 
$num
úú 
-
úú 
max
úú 
.
úú  
x
úú  !
;
úú! "
max
ùù 
.
ùù 
y
ùù 
=
ùù 
$num
ùù 
-
ùù 
max
ùù 
.
ùù  
y
ùù  !
;
ùù! "
max
ûû 
.
ûû 
z
ûû 
=
ûû 
$num
ûû 
-
ûû 
max
ûû 
.
ûû  
z
ûû  !
;
ûû! "
}
üü 
DrawVector3
°° 
(
°° #
secondVectorValueRect
°° -
,
°°- .!
k_DrawVector6_Label
°°/ B
[
°°B C
$num
°°C D
]
°°D E
,
°°E F
negative
°°G O
,
°°O P
min
°°Q T
,
°°T U
max
°°V Y
,
°°Y Z
true
°°[ _
,
°°_ `
colors
°°a g
==
°°h j
null
°°k o
?
°°p q
null
°°r v
:
°°w x
new
°°y |
Color°°} Ç
[°°Ç É
]°°É Ñ
{°°Ö Ü
colors°°á ç
[°°ç é
$num°°é è
]°°è ê
,°°ê ë
colors°°í ò
[°°ò ô
$num°°ô ö
]°°ö õ
,°°õ ú
colors°°ù £
[°°£ §
$num°°§ •
]°°• ¶
}°°ß ®
,°°® ©
multiplicator°°™ ∑
)°°∑ ∏
;°°∏ π
	GUILayout
££ 
.
££ 
EndVertical
££ !
(
££! "
)
££" #
;
££# $
}
§§ 	
static
¶¶ 
void
¶¶ 
DrawVector3
¶¶ 
(
¶¶  
Rect
¶¶  $
rect
¶¶% )
,
¶¶) *

GUIContent
¶¶+ 5
[
¶¶5 6
]
¶¶6 7
labels
¶¶8 >
,
¶¶> ? 
SerializedProperty
¶¶@ R
value
¶¶S X
,
¶¶X Y
Vector3
¶¶Z a
min
¶¶b e
,
¶¶e f
Vector3
¶¶g n
max
¶¶o r
,
¶¶r s
bool
¶¶t x
minusPrefix¶¶y Ñ
,¶¶Ñ Ö
Color¶¶Ü ã
[¶¶ã å
]¶¶å ç
colors¶¶é î
,¶¶î ï"
SerializedProperty¶¶ñ ®
multiplicator¶¶© ∂
=¶¶∑ ∏
null¶¶π Ω
)¶¶Ω æ
{
ßß 	
float
®® 
[
®® 
]
®® 

multifloat
®® 
=
®®  
multiplicator
®®! .
==
®®/ 1
null
®®2 6
?
©© 
new
©© 
float
©© 
[
©© 
]
©© 
{
©© 
value
©©  %
.
©©% &
vector3Value
©©& 2
.
©©2 3
x
©©3 4
,
©©4 5
value
©©6 ;
.
©©; <
vector3Value
©©< H
.
©©H I
y
©©I J
,
©©J K
value
©©L Q
.
©©Q R
vector3Value
©©R ^
.
©©^ _
z
©©_ `
}
©©a b
:
™™ 
new
™™ 
float
™™ 
[
™™ 
]
™™ 
{
™™ 
value
™™  %
.
™™% &
vector3Value
™™& 2
.
™™2 3
x
™™3 4
*
™™5 6
multiplicator
™™7 D
.
™™D E
vector3Value
™™E Q
.
™™Q R
x
™™R S
,
™™S T
value
™™U Z
.
™™Z [
vector3Value
™™[ g
.
™™g h
y
™™h i
*
™™j k
multiplicator
™™l y
.
™™y z
vector3Value™™z Ü
.™™Ü á
y™™á à
,™™à â
value™™ä è
.™™è ê
vector3Value™™ê ú
.™™ú ù
z™™ù û
*™™ü †
multiplicator™™° Æ
.™™Æ Ø
vector3Value™™Ø ª
.™™ª º
z™™º Ω
}™™æ ø
;™™ø ¿
float
¨¨ 

fieldWidth
¨¨ 
=
¨¨ 
rect
¨¨ #
.
¨¨# $
width
¨¨$ )
/
¨¨* +
$num
¨¨, .
;
¨¨. /
const
≠≠ 
int
≠≠ 
subLabelWidth
≠≠ #
=
≠≠$ %
$num
≠≠& (
;
≠≠( )
const
ÆÆ 
int
ÆÆ 

colorWidth
ÆÆ  
=
ÆÆ! "
$num
ÆÆ# $
;
ÆÆ$ %
const
ØØ 
int
ØØ 
colorStartDecal
ØØ %
=
ØØ& '
$num
ØØ( )
;
ØØ) *
const
∞∞ 
int
∞∞ 
valuesSeparator
∞∞ %
=
∞∞& '
$num
∞∞( )
;
∞∞) * 
SerializedProperty
≤≤ 
[
≤≤ 
]
≤≤  
values
≤≤! '
=
≤≤( )
new
≤≤* -
[
≤≤- .
]
≤≤. /
{
≥≥ 
value
¥¥ 
.
¥¥ "
FindPropertyRelative
¥¥ *
(
¥¥* +
$str
¥¥+ .
)
¥¥. /
,
¥¥/ 0
value
µµ 
.
µµ "
FindPropertyRelative
µµ *
(
µµ* +
$str
µµ+ .
)
µµ. /
,
µµ/ 0
value
∂∂ 
.
∂∂ "
FindPropertyRelative
∂∂ *
(
∂∂* +
$str
∂∂+ .
)
∂∂. /
,
∂∂/ 0
}
∑∑ 
;
∑∑ 
int
ππ 
oldIndentLevel
ππ 
=
ππ  
	EditorGUI
ππ! *
.
ππ* +
indentLevel
ππ+ 6
;
ππ6 7
	EditorGUI
∫∫ 
.
∫∫ 
indentLevel
∫∫ !
=
∫∫" #
$num
∫∫$ %
;
∫∫% &
float
ªª 
oldLabelWidth
ªª 
=
ªª  !
EditorGUIUtility
ªª" 2
.
ªª2 3

labelWidth
ªª3 =
;
ªª= >
EditorGUIUtility
ºº 
.
ºº 

labelWidth
ºº '
=
ºº( )
subLabelWidth
ºº* 7
;
ºº7 8
for
ææ 
(
ææ 
int
ææ 
i
ææ 
=
ææ 
$num
ææ 
;
ææ 
i
ææ 
<
ææ 
$num
ææ  !
;
ææ! "
++
ææ# %
i
ææ% &
)
ææ& '
{
øø 
Rect
¿¿ 
	localRect
¿¿ 
=
¿¿  
rect
¿¿! %
;
¿¿% &
	localRect
¡¡ 
.
¡¡ 
xMin
¡¡ 
+=
¡¡ !
i
¡¡" #
*
¡¡$ %

fieldWidth
¡¡& 0
;
¡¡0 1
	localRect
¬¬ 
.
¬¬ 
xMax
¬¬ 
-=
¬¬ !
(
¬¬" #
$num
¬¬# $
-
¬¬% &
i
¬¬' (
)
¬¬( )
*
¬¬* +

fieldWidth
¬¬, 6
+
¬¬7 8
(
¬¬9 :
i
¬¬: ;
<
¬¬< =
$num
¬¬> ?
?
¬¬@ A
valuesSeparator
¬¬B Q
:
¬¬R S
$num
¬¬T U
)
¬¬U V
;
¬¬V W
Rect
√√ 
	colorRect
√√ 
=
√√  
	localRect
√√! *
;
√√* +
	colorRect
ƒƒ 
.
ƒƒ 
x
ƒƒ 
=
ƒƒ 
	localRect
ƒƒ '
.
ƒƒ' (
x
ƒƒ( )
+
ƒƒ* +
subLabelWidth
ƒƒ, 9
+
ƒƒ: ;
colorStartDecal
ƒƒ< K
;
ƒƒK L
	colorRect
≈≈ 
.
≈≈ 
width
≈≈ 
=
≈≈  !

colorWidth
≈≈" ,
;
≈≈, -
	colorRect
∆∆ 
.
∆∆ 
yMin
∆∆ 
+=
∆∆ !
$num
∆∆" #
;
∆∆# $
	colorRect
«« 
.
«« 
yMax
«« 
-=
«« !
$num
««" #
;
««# $
if
»» 
(
»» 
minusPrefix
»» 
)
»»  
{
…… 
	localRect
   
.
   
xMin
   "
-=
  # %
$num
  & '
;
  ' (
EditorGUIUtility
ÀÀ $
.
ÀÀ$ %

labelWidth
ÀÀ% /
=
ÀÀ0 1
subLabelWidth
ÀÀ2 ?
+
ÀÀ@ A
$num
ÀÀB C
;
ÀÀC D
}
ÃÃ 
else
ÕÕ 
EditorGUIUtility
ŒŒ $
.
ŒŒ$ %

labelWidth
ŒŒ% /
=
ŒŒ0 1
subLabelWidth
ŒŒ2 ?
;
ŒŒ? @
if
—— 
(
—— 
multiplicator
—— !
==
——" $
null
——% )
)
——) *
{
““ 
	EditorGUI
”” 
.
”” 
BeginProperty
”” +
(
””+ ,
	localRect
””, 5
,
””5 6
labels
””7 =
[
””= >
i
””> ?
]
””? @
,
””@ A
values
””B H
[
””H I
i
””I J
]
””J K
)
””K L
;
””L M
	EditorGUI
‘‘ 
.
‘‘ 
BeginChangeCheck
‘‘ .
(
‘‘. /
)
‘‘/ 0
;
‘‘0 1
	EditorGUI
’’ 
.
’’ 
PropertyField
’’ +
(
’’+ ,
	localRect
’’, 5
,
’’5 6
values
’’7 =
[
’’= >
i
’’> ?
]
’’? @
,
’’@ A
labels
’’B H
[
’’H I
i
’’I J
]
’’J K
)
’’K L
;
’’L M
if
÷÷ 
(
÷÷ 
	EditorGUI
÷÷ !
.
÷÷! "
EndChangeCheck
÷÷" 0
(
÷÷0 1
)
÷÷1 2
)
÷÷2 3
{
◊◊ 
values
ÿÿ 
[
ÿÿ 
i
ÿÿ  
]
ÿÿ  !
.
ÿÿ! "

floatValue
ÿÿ" ,
=
ÿÿ- .
Mathf
ÿÿ/ 4
.
ÿÿ4 5
Clamp
ÿÿ5 :
(
ÿÿ: ;
values
ÿÿ; A
[
ÿÿA B
i
ÿÿB C
]
ÿÿC D
.
ÿÿD E

floatValue
ÿÿE O
,
ÿÿO P
min
ÿÿQ T
[
ÿÿT U
i
ÿÿU V
]
ÿÿV W
,
ÿÿW X
max
ÿÿY \
[
ÿÿ\ ]
i
ÿÿ] ^
]
ÿÿ^ _
)
ÿÿ_ `
;
ÿÿ` a
}
ŸŸ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
EndProperty
⁄⁄ )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
}
€€ 
else
‹‹ 
{
›› 
	EditorGUI
ﬁﬁ 
.
ﬁﬁ 
BeginProperty
ﬁﬁ +
(
ﬁﬁ+ ,
	localRect
ﬁﬁ, 5
,
ﬁﬁ5 6
labels
ﬁﬁ7 =
[
ﬁﬁ= >
i
ﬁﬁ> ?
]
ﬁﬁ? @
,
ﬁﬁ@ A
values
ﬁﬁB H
[
ﬁﬁH I
i
ﬁﬁI J
]
ﬁﬁJ K
)
ﬁﬁK L
;
ﬁﬁL M
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
BeginChangeCheck
ﬂﬂ .
(
ﬂﬂ. /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1
float
‡‡  
localMultiplicator
‡‡ ,
=
‡‡- .
multiplicator
‡‡/ <
.
‡‡< =
vector3Value
‡‡= I
[
‡‡I J
i
‡‡J K
]
‡‡K L
;
‡‡L M
float
·· 
multipliedValue
·· )
=
··* +
values
··, 2
[
··2 3
i
··3 4
]
··4 5
.
··5 6

floatValue
··6 @
*
··A B 
localMultiplicator
··C U
;
··U V
multipliedValue
‚‚ #
=
‚‚$ %
	EditorGUI
‚‚& /
.
‚‚/ 0

FloatField
‚‚0 :
(
‚‚: ;
	localRect
‚‚; D
,
‚‚D E
labels
‚‚F L
[
‚‚L M
i
‚‚M N
]
‚‚N O
,
‚‚O P
multipliedValue
‚‚Q `
)
‚‚` a
;
‚‚a b
if
„„ 
(
„„ 
	EditorGUI
„„ !
.
„„! "
EndChangeCheck
„„" 0
(
„„0 1
)
„„1 2
)
„„2 3
{
‰‰ 
values
ÂÂ 
[
ÂÂ 
i
ÂÂ  
]
ÂÂ  !
.
ÂÂ! "

floatValue
ÂÂ" ,
=
ÂÂ- .
Mathf
ÂÂ/ 4
.
ÂÂ4 5
Clamp
ÂÂ5 :
(
ÂÂ: ;
(
ÂÂ; < 
localMultiplicator
ÂÂ< N
<
ÂÂO P
-
ÂÂQ R
$num
ÂÂR Y
||
ÂÂZ \
$num
ÂÂ] d
<
ÂÂe f 
localMultiplicator
ÂÂg y
)
ÂÂy z
?
ÂÂ{ |
multipliedValueÂÂ} å
/ÂÂç é"
localMultiplicatorÂÂè °
:ÂÂ¢ £
$numÂÂ§ ¶
,ÂÂ¶ ß
minÂÂ® ´
[ÂÂ´ ¨
iÂÂ¨ ≠
]ÂÂ≠ Æ
,ÂÂÆ Ø
maxÂÂ∞ ≥
[ÂÂ≥ ¥
iÂÂ¥ µ
]ÂÂµ ∂
)ÂÂ∂ ∑
;ÂÂ∑ ∏
}
ÊÊ 
	EditorGUI
ÁÁ 
.
ÁÁ 
EndProperty
ÁÁ )
(
ÁÁ) *
)
ÁÁ* +
;
ÁÁ+ ,
}
ËË 
	EditorGUI
ÍÍ 
.
ÍÍ 
DrawRect
ÍÍ "
(
ÍÍ" #
	colorRect
ÍÍ# ,
,
ÍÍ, -
colors
ÍÍ. 4
[
ÍÍ4 5
i
ÍÍ5 6
]
ÍÍ6 7
)
ÍÍ7 8
;
ÍÍ8 9
}
ÎÎ 
EditorGUIUtility
ÌÌ 
.
ÌÌ 

labelWidth
ÌÌ '
=
ÌÌ( )
oldLabelWidth
ÌÌ* 7
;
ÌÌ7 8
	EditorGUI
ÓÓ 
.
ÓÓ 
indentLevel
ÓÓ !
=
ÓÓ" #
oldIndentLevel
ÓÓ$ 2
;
ÓÓ2 3
}
ÔÔ 	
static
ÒÒ 
void
ÒÒ 
DrawVector3_
ÒÒ  
(
ÒÒ  !
Rect
ÒÒ! %
rect
ÒÒ& *
,
ÒÒ* +

GUIContent
ÒÒ, 6
[
ÒÒ6 7
]
ÒÒ7 8
labels
ÒÒ9 ?
,
ÒÒ? @ 
SerializedProperty
ÒÒA S
value
ÒÒT Y
,
ÒÒY Z
Vector3
ÒÒ[ b
min
ÒÒc f
,
ÒÒf g
Vector3
ÒÒh o
max
ÒÒp s
,
ÒÒs t
bool
ÒÒu y
addMinusPrefixÒÒz à
,ÒÒà â
ColorÒÒä è
[ÒÒè ê
]ÒÒê ë
colorsÒÒí ò
,ÒÒò ô"
SerializedPropertyÒÒö ¨
multiplicatorÒÒ≠ ∫
=ÒÒª º
nullÒÒΩ ¡
)ÒÒ¡ ¬
{
ÚÚ 	
float
ÛÛ 
[
ÛÛ 
]
ÛÛ 

multifloat
ÛÛ 
=
ÛÛ  
multiplicator
ÛÛ! .
==
ÛÛ/ 1
null
ÛÛ2 6
?
ÙÙ 
new
ÙÙ 
float
ÙÙ 
[
ÙÙ 
]
ÙÙ 
{
ÙÙ 
value
ÙÙ  %
.
ÙÙ% &
vector3Value
ÙÙ& 2
.
ÙÙ2 3
x
ÙÙ3 4
,
ÙÙ4 5
value
ÙÙ6 ;
.
ÙÙ; <
vector3Value
ÙÙ< H
.
ÙÙH I
y
ÙÙI J
,
ÙÙJ K
value
ÙÙL Q
.
ÙÙQ R
vector3Value
ÙÙR ^
.
ÙÙ^ _
z
ÙÙ_ `
}
ÙÙa b
:
ıı 
new
ıı 
float
ıı 
[
ıı 
]
ıı 
{
ıı 
value
ıı  %
.
ıı% &
vector3Value
ıı& 2
.
ıı2 3
x
ıı3 4
*
ıı5 6
multiplicator
ıı7 D
.
ııD E
vector3Value
ııE Q
.
ııQ R
x
ııR S
,
ııS T
value
ııU Z
.
ııZ [
vector3Value
ıı[ g
.
ııg h
y
ııh i
*
ııj k
multiplicator
ııl y
.
ııy z
vector3Valueıız Ü
.ııÜ á
yııá à
,ııà â
valueııä è
.ııè ê
vector3Valueııê ú
.ııú ù
zııù û
*ııü †
multiplicatorıı° Æ
.ııÆ Ø
vector3ValueııØ ª
.ııª º
zııº Ω
}ııæ ø
;ııø ¿
float
˜˜ 

fieldWidth
˜˜ 
=
˜˜ 
rect
˜˜ #
.
˜˜# $
width
˜˜$ )
/
˜˜* +
$num
˜˜, .
;
˜˜. /
	EditorGUI
¯¯ 
.
¯¯ 
showMixedValue
¯¯ $
=
¯¯% &
value
¯¯' ,
.
¯¯, -(
hasMultipleDifferentValues
¯¯- G
;
¯¯G H
	EditorGUI
˘˘ 
.
˘˘ 
BeginChangeCheck
˘˘ &
(
˘˘& '
)
˘˘' (
;
˘˘( )
	EditorGUI
˙˙ 
.
˙˙ 
MultiFloatField
˙˙ %
(
˙˙% &
rect
˙˙& *
,
˙˙* +
labels
˙˙, 2
,
˙˙2 3

multifloat
˙˙4 >
)
˙˙> ?
;
˙˙? @
if
˚˚ 
(
˚˚ 
	EditorGUI
˚˚ 
.
˚˚ 
EndChangeCheck
˚˚ (
(
˚˚( )
)
˚˚) *
)
˚˚* +
{
¸¸ 
value
˝˝ 
.
˝˝ 
vector3Value
˝˝ "
=
˝˝# $
multiplicator
˝˝% 2
==
˝˝3 5
null
˝˝6 :
?
˛˛ 
new
˛˛ 
Vector3
˛˛ !
(
˛˛! "
Mathf
ˇˇ 
.
ˇˇ 
Clamp
ˇˇ #
(
ˇˇ# $

multifloat
ˇˇ$ .
[
ˇˇ. /
$num
ˇˇ/ 0
]
ˇˇ0 1
,
ˇˇ1 2
min
ˇˇ3 6
.
ˇˇ6 7
x
ˇˇ7 8
,
ˇˇ8 9
max
ˇˇ: =
.
ˇˇ= >
x
ˇˇ> ?
)
ˇˇ? @
,
ˇˇ@ A
Mathf
ÄÄ 
.
ÄÄ 
Clamp
ÄÄ #
(
ÄÄ# $

multifloat
ÄÄ$ .
[
ÄÄ. /
$num
ÄÄ/ 0
]
ÄÄ0 1
,
ÄÄ1 2
min
ÄÄ3 6
.
ÄÄ6 7
y
ÄÄ7 8
,
ÄÄ8 9
max
ÄÄ: =
.
ÄÄ= >
y
ÄÄ> ?
)
ÄÄ? @
,
ÄÄ@ A
Mathf
ÅÅ 
.
ÅÅ 
Clamp
ÅÅ #
(
ÅÅ# $

multifloat
ÅÅ$ .
[
ÅÅ. /
$num
ÅÅ/ 0
]
ÅÅ0 1
,
ÅÅ1 2
min
ÅÅ3 6
.
ÅÅ6 7
z
ÅÅ7 8
,
ÅÅ8 9
max
ÅÅ: =
.
ÅÅ= >
z
ÅÅ> ?
)
ÅÅ? @
)
ÇÇ 
:
ÉÉ 
new
ÉÉ 
Vector3
ÉÉ !
(
ÉÉ! "
Mathf
ÑÑ 
.
ÑÑ 
Clamp
ÑÑ #
(
ÑÑ# $
(
ÑÑ$ %
multiplicator
ÑÑ% 2
.
ÑÑ2 3
vector3Value
ÑÑ3 ?
.
ÑÑ? @
x
ÑÑ@ A
<
ÑÑB C
-
ÑÑD E
$num
ÑÑE L
||
ÑÑM O
$num
ÑÑP W
<
ÑÑX Y
multiplicator
ÑÑZ g
.
ÑÑg h
vector3Value
ÑÑh t
.
ÑÑt u
x
ÑÑu v
)
ÑÑv w
?
ÑÑx y

multifloatÑÑz Ñ
[ÑÑÑ Ö
$numÑÑÖ Ü
]ÑÑÜ á
/ÑÑà â
multiplicatorÑÑä ó
.ÑÑó ò
vector3ValueÑÑò §
.ÑÑ§ •
xÑÑ• ¶
:ÑÑß ®
$numÑÑ© ´
,ÑÑ´ ¨
minÑÑ≠ ∞
.ÑÑ∞ ±
xÑÑ± ≤
,ÑÑ≤ ≥
maxÑÑ¥ ∑
.ÑÑ∑ ∏
xÑÑ∏ π
)ÑÑπ ∫
,ÑÑ∫ ª
Mathf
ÖÖ 
.
ÖÖ 
Clamp
ÖÖ #
(
ÖÖ# $
(
ÖÖ$ %
multiplicator
ÖÖ% 2
.
ÖÖ2 3
vector3Value
ÖÖ3 ?
.
ÖÖ? @
y
ÖÖ@ A
<
ÖÖB C
-
ÖÖD E
$num
ÖÖE L
||
ÖÖM O
$num
ÖÖP W
<
ÖÖX Y
multiplicator
ÖÖZ g
.
ÖÖg h
vector3Value
ÖÖh t
.
ÖÖt u
y
ÖÖu v
)
ÖÖv w
?
ÖÖx y

multifloatÖÖz Ñ
[ÖÖÑ Ö
$numÖÖÖ Ü
]ÖÖÜ á
/ÖÖà â
multiplicatorÖÖä ó
.ÖÖó ò
vector3ValueÖÖò §
.ÖÖ§ •
yÖÖ• ¶
:ÖÖß ®
$numÖÖ© ´
,ÖÖ´ ¨
minÖÖ≠ ∞
.ÖÖ∞ ±
yÖÖ± ≤
,ÖÖ≤ ≥
maxÖÖ¥ ∑
.ÖÖ∑ ∏
yÖÖ∏ π
)ÖÖπ ∫
,ÖÖ∫ ª
Mathf
ÜÜ 
.
ÜÜ 
Clamp
ÜÜ #
(
ÜÜ# $
(
ÜÜ$ %
multiplicator
ÜÜ% 2
.
ÜÜ2 3
vector3Value
ÜÜ3 ?
.
ÜÜ? @
z
ÜÜ@ A
<
ÜÜB C
-
ÜÜD E
$num
ÜÜE L
||
ÜÜM O
$num
ÜÜP W
<
ÜÜX Y
multiplicator
ÜÜZ g
.
ÜÜg h
vector3Value
ÜÜh t
.
ÜÜt u
z
ÜÜu v
)
ÜÜv w
?
ÜÜx y

multifloatÜÜz Ñ
[ÜÜÑ Ö
$numÜÜÖ Ü
]ÜÜÜ á
/ÜÜà â
multiplicatorÜÜä ó
.ÜÜó ò
vector3ValueÜÜò §
.ÜÜ§ •
zÜÜ• ¶
:ÜÜß ®
$numÜÜ© ´
,ÜÜ´ ¨
minÜÜ≠ ∞
.ÜÜ∞ ±
zÜÜ± ≤
,ÜÜ≤ ≥
maxÜÜ¥ ∑
.ÜÜ∑ ∏
zÜÜ∏ π
)ÜÜπ ∫
)
áá 
;
áá 
}
àà 
	EditorGUI
ââ 
.
ââ 
showMixedValue
ââ $
=
ââ% &
false
ââ' ,
;
ââ, -
if
åå 
(
åå 
addMinusPrefix
åå 
)
åå 
{
çç 
Rect
éé 

suffixRect
éé 
=
éé  !
new
éé" %
Rect
éé& *
(
éé* +
rect
éé+ /
.
éé/ 0
x
éé0 1
-
éé2 3
$num
éé4 5
-
éé6 7
$num
éé8 :
*
éé; <
	EditorGUI
éé= F
.
ééF G
indentLevel
ééG R
,
ééR S
rect
ééT X
.
ééX Y
y
ééY Z
,
ééZ [
$num
éé\ _
,
éé_ `
rect
ééa e
.
éée f
height
ééf l
)
éél m
;
éém n
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
$num
èè 
;
èè 
i
èè  !
<
èè" #
$num
èè$ %
;
èè% &
++
èè' )
i
èè) *
)
èè* +
{
êê 
	EditorGUI
ëë 
.
ëë 

LabelField
ëë (
(
ëë( )

suffixRect
ëë) 3
,
ëë3 4
$str
ëë5 8
)
ëë8 9
;
ëë9 :

suffixRect
íí 
.
íí 
x
íí  
+=
íí! #

fieldWidth
íí$ .
+
íí/ 0
$num
íí1 5
;
íí5 6
}
ìì 
}
îî 
if
óó 
(
óó 
colors
óó 
!=
óó 
null
óó 
)
óó 
{
òò 
if
ôô 
(
ôô 
colors
ôô 
.
ôô 
Length
ôô !
!=
ôô" $
$num
ôô% &
)
ôô& '
throw
öö 
new
öö 
System
öö $
.
öö$ %
ArgumentException
öö% 6
(
öö6 7
$str
öö7 U
)
ööU V
;
ööV W
Rect
úú 

suffixRect
úú 
=
úú  !
new
úú" %
Rect
úú& *
(
úú* +
rect
úú+ /
.
úú/ 0
x
úú0 1
+
úú2 3
$num
úú4 5
-
úú6 7
$num
úú8 :
*
úú; <
	EditorGUI
úú= F
.
úúF G
indentLevel
úúG R
,
úúR S
rect
úúT X
.
úúX Y
y
úúY Z
,
úúZ [
$num
úú\ _
,
úú_ `
rect
úúa e
.
úúe f
height
úúf l
)
úúl m
;
úúm n
GUIStyle
ùù 
	colorMark
ùù "
=
ùù# $
new
ùù% (
GUIStyle
ùù) 1
(
ùù1 2
EditorStyles
ùù2 >
.
ùù> ?
label
ùù? D
)
ùùD E
;
ùùE F
	colorMark
ûû 
.
ûû 
normal
ûû  
.
ûû  !
	textColor
ûû! *
=
ûû+ ,
colors
ûû- 3
[
ûû3 4
$num
ûû4 5
]
ûû5 6
;
ûû6 7
	EditorGUI
üü 
.
üü 

LabelField
üü $
(
üü$ %

suffixRect
üü% /
,
üü/ 0
$str
üü1 4
,
üü4 5
	colorMark
üü6 ?
)
üü? @
;
üü@ A

suffixRect
†† 
.
†† 
x
†† 
+=
†† 
$num
††  !
;
††! "
	EditorGUI
°° 
.
°° 

LabelField
°° $
(
°°$ %

suffixRect
°°% /
,
°°/ 0
$str
°°1 4
,
°°4 5
	colorMark
°°6 ?
)
°°? @
;
°°@ A

suffixRect
¢¢ 
.
¢¢ 
x
¢¢ 
+=
¢¢ 

fieldWidth
¢¢  *
+
¢¢+ ,
$num
¢¢- 2
;
¢¢2 3
	colorMark
££ 
.
££ 
normal
££  
.
££  !
	textColor
££! *
=
££+ ,
colors
££- 3
[
££3 4
$num
££4 5
]
££5 6
;
££6 7
	EditorGUI
§§ 
.
§§ 

LabelField
§§ $
(
§§$ %

suffixRect
§§% /
,
§§/ 0
$str
§§1 4
,
§§4 5
	colorMark
§§6 ?
)
§§? @
;
§§@ A

suffixRect
•• 
.
•• 
x
•• 
+=
•• 
$num
••  !
;
••! "
	EditorGUI
¶¶ 
.
¶¶ 

LabelField
¶¶ $
(
¶¶$ %

suffixRect
¶¶% /
,
¶¶/ 0
$str
¶¶1 4
,
¶¶4 5
	colorMark
¶¶6 ?
)
¶¶? @
;
¶¶@ A

suffixRect
ßß 
.
ßß 
x
ßß 
+=
ßß 

fieldWidth
ßß  *
+
ßß+ ,
$num
ßß- 1
;
ßß1 2
	colorMark
®® 
.
®® 
normal
®®  
.
®®  !
	textColor
®®! *
=
®®+ ,
colors
®®- 3
[
®®3 4
$num
®®4 5
]
®®5 6
;
®®6 7
	EditorGUI
©© 
.
©© 

LabelField
©© $
(
©©$ %

suffixRect
©©% /
,
©©/ 0
$str
©©1 4
,
©©4 5
	colorMark
©©6 ?
)
©©? @
;
©©@ A

suffixRect
™™ 
.
™™ 
x
™™ 
+=
™™ 
$num
™™  !
;
™™! "
	EditorGUI
´´ 
.
´´ 

LabelField
´´ $
(
´´$ %

suffixRect
´´% /
,
´´/ 0
$str
´´1 4
,
´´4 5
	colorMark
´´6 ?
)
´´? @
;
´´@ A
}
¨¨ 
}
≠≠ 	
public
≥≥ 
static
≥≥ 
void
≥≥ 
	DrawPopup
≥≥ $
(
≥≥$ %

GUIContent
≥≥% /
label
≥≥0 5
,
≥≥5 6 
SerializedProperty
≥≥7 I
property
≥≥J R
,
≥≥R S
string
≥≥T Z
[
≥≥Z [
]
≥≥[ \
options
≥≥] d
)
≥≥d e
{
¥¥ 	
var
µµ 
mode
µµ 
=
µµ 
property
µµ 
.
µµ  
intValue
µµ  (
;
µµ( )
	EditorGUI
∂∂ 
.
∂∂ 
BeginChangeCheck
∂∂ &
(
∂∂& '
)
∂∂' (
;
∂∂( )
if
∏∏ 
(
∏∏ 
mode
∏∏ 
>=
∏∏ 
options
∏∏ 
.
∏∏  
Length
∏∏  &
)
∏∏& '
Debug
ππ 
.
ππ 
LogError
ππ 
(
ππ 
string
ππ %
.
ππ% &
Format
ππ& ,
(
ππ, -
$str
ππ- U
,
ππU V
label
ππW \
.
ππ\ ]
text
ππ] a
)
ππa b
)
ππb c
;
ππc d
mode
ªª 
=
ªª 
EditorGUILayout
ªª "
.
ªª" #
Popup
ªª# (
(
ªª( )
label
ªª) .
,
ªª. /
mode
ªª0 4
,
ªª4 5
options
ªª6 =
)
ªª= >
;
ªª> ?
if
ºº 
(
ºº 
	EditorGUI
ºº 
.
ºº 
EndChangeCheck
ºº (
(
ºº( )
)
ºº) *
)
ºº* +
property
ΩΩ 
.
ΩΩ 
intValue
ΩΩ !
=
ΩΩ" #
mode
ΩΩ$ (
;
ΩΩ( )
}
ææ 	
public
∆∆ 
static
∆∆ 
void
∆∆ 
DrawEnumPopup
∆∆ (
(
∆∆( ) 
SerializedProperty
∆∆) ;
property
∆∆< D
,
∆∆D E
System
∆∆F L
.
∆∆L M
Type
∆∆M Q
type
∆∆R V
,
∆∆V W

GUIContent
∆∆X b
label
∆∆c h
=
∆∆i j
null
∆∆k o
)
∆∆o p
{
«« 	
	EditorGUI
»» 
.
»» 
showMixedValue
»» $
=
»»% &
property
»»' /
.
»»/ 0(
hasMultipleDifferentValues
»»0 J
;
»»J K
	EditorGUI
…… 
.
…… 
BeginChangeCheck
…… &
(
……& '
)
……' (
;
……( )
var
   
name
   
=
   
System
   
.
   
Enum
   "
.
  " #
GetName
  # *
(
  * +
type
  + /
,
  / 0
property
  1 9
.
  9 :
intValue
  : B
)
  B C
;
  C D
var
ÀÀ 
index
ÀÀ 
=
ÀÀ 
System
ÀÀ 
.
ÀÀ 
Array
ÀÀ $
.
ÀÀ$ %
	FindIndex
ÀÀ% .
(
ÀÀ. /
System
ÀÀ/ 5
.
ÀÀ5 6
Enum
ÀÀ6 :
.
ÀÀ: ;
GetNames
ÀÀ; C
(
ÀÀC D
type
ÀÀD H
)
ÀÀH I
,
ÀÀI J
n
ÀÀK L
=>
ÀÀM O
n
ÀÀP Q
==
ÀÀR T
name
ÀÀU Y
)
ÀÀY Z
;
ÀÀZ [
var
ÃÃ 
input
ÃÃ 
=
ÃÃ 
(
ÃÃ 
System
ÃÃ 
.
ÃÃ  
Enum
ÃÃ  $
)
ÃÃ$ %
System
ÃÃ% +
.
ÃÃ+ ,
Enum
ÃÃ, 0
.
ÃÃ0 1
	GetValues
ÃÃ1 :
(
ÃÃ: ;
type
ÃÃ; ?
)
ÃÃ? @
.
ÃÃ@ A
GetValue
ÃÃA I
(
ÃÃI J
index
ÃÃJ O
)
ÃÃO P
;
ÃÃP Q
var
ÕÕ 
	rawResult
ÕÕ 
=
ÕÕ 
EditorGUILayout
ÕÕ +
.
ÕÕ+ ,
	EnumPopup
ÕÕ, 5
(
ÕÕ5 6
label
ÕÕ6 ;
??
ÕÕ< >
EditorGUIUtility
ÕÕ? O
.
ÕÕO P
TrTextContent
ÕÕP ]
(
ÕÕ] ^
ObjectNames
ÕÕ^ i
.
ÕÕi j 
NicifyVariableName
ÕÕj |
(
ÕÕ| }
propertyÕÕ} Ö
.ÕÕÖ Ü
nameÕÕÜ ä
)ÕÕä ã
)ÕÕã å
,ÕÕå ç
inputÕÕé ì
)ÕÕì î
;ÕÕî ï
var
ŒŒ 
result
ŒŒ 
=
ŒŒ 
(
ŒŒ 
(
ŒŒ 
System
ŒŒ !
.
ŒŒ! "
IConvertible
ŒŒ" .
)
ŒŒ. /
	rawResult
ŒŒ/ 8
)
ŒŒ8 9
.
ŒŒ9 :
ToInt32
ŒŒ: A
(
ŒŒA B
System
ŒŒB H
.
ŒŒH I
Globalization
ŒŒI V
.
ŒŒV W
CultureInfo
ŒŒW b
.
ŒŒb c
CurrentCulture
ŒŒc q
)
ŒŒq r
;
ŒŒr s
if
œœ 
(
œœ 
	EditorGUI
œœ 
.
œœ 
EndChangeCheck
œœ (
(
œœ( )
)
œœ) *
)
œœ* +
property
–– 
.
–– 
intValue
–– !
=
––" #
result
––$ *
;
––* +
	EditorGUI
—— 
.
—— 
showMixedValue
—— $
=
——% &
false
——' ,
;
——, -
}
““ 	
public
÷÷ 
static
÷÷ 
void
÷÷ $
RemoveMaterialKeywords
÷÷ 1
(
÷÷1 2
Material
÷÷2 :
material
÷÷; C
)
÷÷C D
=>
◊◊ 
material
◊◊ 
.
◊◊ 
shaderKeywords
◊◊ &
=
◊◊' (
null
◊◊) -
;
◊◊- .
public
ﬁﬁ 
static
ﬁﬁ 
T
ﬁﬁ 
[
ﬁﬁ 
]
ﬁﬁ 
GetAdditionalData
ﬁﬁ +
<
ﬁﬁ+ ,
T
ﬁﬁ, -
>
ﬁﬁ- .
(
ﬁﬁ. /
UnityEngine
ﬁﬁ/ :
.
ﬁﬁ: ;
Object
ﬁﬁ; A
[
ﬁﬁA B
]
ﬁﬁB C
targets
ﬁﬁD K
,
ﬁﬁK L
Action
ﬁﬁM S
<
ﬁﬁS T
T
ﬁﬁT U
>
ﬁﬁU V
initDefault
ﬁﬁW b
=
ﬁﬁc d
null
ﬁﬁe i
)
ﬁﬁi j
where
ﬂﬂ 
T
ﬂﬂ 
:
ﬂﬂ 
	Component
ﬂﬂ 
{
‡‡ 	
var
‚‚ 
data
‚‚ 
=
‚‚ 
targets
‚‚ 
.
‚‚ 
Cast
‚‚ #
<
‚‚# $
	Component
‚‚$ -
>
‚‚- .
(
‚‚. /
)
‚‚/ 0
.
„„ 
Select
„„ 
(
„„ 
t
„„ 
=>
„„ 
t
„„ 
.
„„ 
GetComponent
„„ +
<
„„+ ,
T
„„, -
>
„„- .
(
„„. /
)
„„/ 0
)
„„0 1
.
‰‰ 
ToArray
‰‰ 
(
‰‰ 
)
‰‰ 
;
‰‰ 
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ 
<
ÊÊ 
data
ÊÊ  $
.
ÊÊ$ %
Length
ÊÊ% +
;
ÊÊ+ ,
i
ÊÊ- .
++
ÊÊ. 0
)
ÊÊ0 1
{
ÁÁ 
if
ËË 
(
ËË 
data
ËË 
[
ËË 
i
ËË 
]
ËË 
==
ËË 
null
ËË #
)
ËË# $
{
ÈÈ 
data
ÍÍ 
[
ÍÍ 
i
ÍÍ 
]
ÍÍ 
=
ÍÍ 
Undo
ÍÍ "
.
ÍÍ" #
AddComponent
ÍÍ# /
<
ÍÍ/ 0
T
ÍÍ0 1
>
ÍÍ1 2
(
ÍÍ2 3
(
ÍÍ3 4
(
ÍÍ4 5
	Component
ÍÍ5 >
)
ÍÍ> ?
targets
ÍÍ? F
[
ÍÍF G
i
ÍÍG H
]
ÍÍH I
)
ÍÍI J
.
ÍÍJ K

gameObject
ÍÍK U
)
ÍÍU V
;
ÍÍV W
if
ÎÎ 
(
ÎÎ 
initDefault
ÎÎ #
!=
ÎÎ$ &
null
ÎÎ' +
)
ÎÎ+ ,
{
ÏÏ 
initDefault
ÌÌ #
(
ÌÌ# $
data
ÌÌ$ (
[
ÌÌ( )
i
ÌÌ) *
]
ÌÌ* +
)
ÌÌ+ ,
;
ÌÌ, -
}
ÓÓ 
}
ÔÔ 
}
 
return
ÚÚ 
data
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
static
˙˙ 
public
˙˙ 

GameObject
˙˙  
CreateGameObject
˙˙! 1
(
˙˙1 2

GameObject
˙˙2 <
parent
˙˙= C
,
˙˙C D
string
˙˙E K
name
˙˙L P
,
˙˙P Q
params
˙˙R X
Type
˙˙Y ]
[
˙˙] ^
]
˙˙^ _
types
˙˙` e
)
˙˙e f
=>
˚˚ 
ObjectFactory
˚˚ 
.
˚˚ 
CreateGameObject
˚˚ -
(
˚˚- .
GameObjectUtility
˚˚. ?
.
˚˚? @%
GetUniqueNameForSibling
˚˚@ W
(
˚˚W X
parent
˚˚X ^
!=
˚˚_ a
null
˚˚b f
?
˚˚g h
parent
˚˚i o
.
˚˚o p
	transform
˚˚p y
:
˚˚z {
null˚˚| Ä
,˚˚Ä Å
name˚˚Ç Ü
)˚˚Ü á
,˚˚á à
types˚˚â é
)˚˚é è
;˚˚è ê
public
ÉÉ 
static
ÉÉ 

GameObject
ÉÉ  
CreateGameObject
ÉÉ! 1
(
ÉÉ1 2
string
ÉÉ2 8
name
ÉÉ9 =
,
ÉÉ= >
UnityEngine
ÉÉ? J
.
ÉÉJ K
Object
ÉÉK Q
context
ÉÉR Y
)
ÉÉY Z
{
ÑÑ 	
var
ÖÖ 
parent
ÖÖ 
=
ÖÖ 
context
ÖÖ  
as
ÖÖ! #

GameObject
ÖÖ$ .
;
ÖÖ. /
var
ÜÜ 
go
ÜÜ 
=
ÜÜ 
CoreEditorUtils
ÜÜ $
.
ÜÜ$ %
CreateGameObject
ÜÜ% 5
(
ÜÜ5 6
parent
ÜÜ6 <
,
ÜÜ< =
name
ÜÜ> B
)
ÜÜB C
;
ÜÜC D
GameObjectUtility
áá 
.
áá 
SetParentAndAlign
áá /
(
áá/ 0
go
áá0 2
,
áá2 3
context
áá4 ;
as
áá< >

GameObject
áá? I
)
ááI J
;
ááJ K
Undo
àà 
.
àà '
RegisterCreatedObjectUndo
àà *
(
àà* +
go
àà+ -
,
àà- .
$str
àà/ 8
+
àà9 :
go
àà; =
.
àà= >
name
àà> B
)
ààB C
;
ààC D
	Selection
ââ 
.
ââ 
activeObject
ââ "
=
ââ# $
go
ââ% '
;
ââ' (
EditorApplication
ää 
.
ää 
ExecuteMenuItem
ää -
(
ää- .
$str
ää. G
)
ääG H
;
ääH I
return
ãã 
go
ãã 
;
ãã 
}
åå 	
static
êê 
public
êê 
string
êê &
GetCurrentProjectVersion
êê 5
(
êê5 6
)
êê6 7
{
ëë 	
string
íí 
[
íí 
]
íí 
readText
íí 
=
íí 
File
íí  $
.
íí$ %
ReadAllLines
íí% 1
(
íí1 2
$str
íí2 V
)
ííV W
;
ííW X
string
îî 
[
îî 
]
îî 
versionText
îî  
=
îî! "
readText
îî# +
[
îî+ ,
$num
îî, -
]
îî- .
.
îî. /
Split
îî/ 4
(
îî4 5
$char
îî5 8
)
îî8 9
;
îî9 :
return
ïï 
versionText
ïï 
[
ïï 
$num
ïï  
]
ïï  !
;
ïï! "
}
ññ 	
static
õõ 
public
õõ 
void
õõ 
CheckOutFile
õõ '
(
õõ' (
bool
õõ( ,

VCSEnabled
õõ- 7
,
õõ7 8
UnityObject
õõ9 D
mat
õõE H
)
õõH I
{
úú 	
if
ùù 
(
ùù 

VCSEnabled
ùù 
)
ùù 
{
ûû 
UnityEditor
üü 
.
üü 
VersionControl
üü *
.
üü* +
Task
üü+ /
task
üü0 4
=
üü5 6
UnityEditor
üü7 B
.
üüB C
VersionControl
üüC Q
.
üüQ R
Provider
üüR Z
.
üüZ [
Checkout
üü[ c
(
üüc d
mat
üüd g
,
üüg h
UnityEditor
üüi t
.
üüt u
VersionControlüüu É
.üüÉ Ñ
CheckoutModeüüÑ ê
.üüê ë
Bothüüë ï
)üüï ñ
;üüñ ó
if
°° 
(
°° 
!
°° 
task
°° 
.
°° 
success
°° !
)
°°! "
{
¢¢ 
Debug
££ 
.
££ 
Log
££ 
(
££ 
task
££ "
.
££" #
text
££# '
+
££( )
$str
££* -
+
££. /
task
££0 4
.
££4 5

resultCode
££5 ?
)
££? @
;
££@ A
}
§§ 
}
•• 
}
¶¶ 	
internal
´´ 
enum
´´ 
Skin
´´ 
{
¨¨ 	
Auto
≠≠ 
,
≠≠ 
	Personnal
ÆÆ 
,
ÆÆ 
Professional
ØØ 
,
ØØ 
}
∞∞ 	
static
≤≤ 
Func
≤≤ 
<
≤≤ 
int
≤≤ 
>
≤≤ "
GetInternalSkinIndex
≤≤ -
;
≤≤- .
static
≥≥ 
Func
≥≥ 
<
≥≥ 
float
≥≥ 
>
≥≥ '
GetGUIStatePixelsPerPoint
≥≥ 4
;
≥≥4 5
static
¥¥ 
Func
¥¥ 
<
¥¥ 
	Texture2D
¥¥ 
,
¥¥ 
float
¥¥ $
>
¥¥$ %%
GetTexturePixelPerPoint
¥¥& =
;
¥¥= >
static
µµ 
Action
µµ 
<
µµ 
	Texture2D
µµ 
,
µµ  
float
µµ! &
>
µµ& '%
SetTexturePixelPerPoint
µµ( ?
;
µµ? @
static
∑∑ 
void
∑∑ $
LoadSkinAndIconMethods
∑∑ *
(
∑∑* +
)
∑∑+ ,
{
∏∏ 	
var
ππ #
internalSkinIndexInfo
ππ %
=
ππ& '
typeof
ππ( .
(
ππ. /
EditorGUIUtility
ππ/ ?
)
ππ? @
.
ππ@ A
GetProperty
ππA L
(
ππL M
$str
ππM X
,
ππX Y
BindingFlags
ππZ f
.
ππf g
	NonPublic
ππg p
|
ππq r
BindingFlags
ππs 
.ππ Ä
StaticππÄ Ü
)ππÜ á
;ππá à
var
∫∫ %
internalSkinIndexLambda
∫∫ '
=
∫∫( )

Expression
∫∫* 4
.
∫∫4 5
Lambda
∫∫5 ;
<
∫∫; <
Func
∫∫< @
<
∫∫@ A
int
∫∫A D
>
∫∫D E
>
∫∫E F
(
∫∫F G

Expression
∫∫G Q
.
∫∫Q R
Property
∫∫R Z
(
∫∫Z [
null
∫∫[ _
,
∫∫_ `#
internalSkinIndexInfo
∫∫a v
)
∫∫v w
)
∫∫w x
;
∫∫x y"
GetInternalSkinIndex
ªª  
=
ªª! "%
internalSkinIndexLambda
ªª# :
.
ªª: ;
Compile
ªª; B
(
ªªB C
)
ªªC D
;
ªªD E
var
ΩΩ (
guiStatePixelsPerPointInfo
ΩΩ *
=
ΩΩ+ ,
typeof
ΩΩ- 3
(
ΩΩ3 4

GUIUtility
ΩΩ4 >
)
ΩΩ> ?
.
ΩΩ? @
GetProperty
ΩΩ@ K
(
ΩΩK L
$str
ΩΩL \
,
ΩΩ\ ]
BindingFlags
ΩΩ^ j
.
ΩΩj k
	NonPublic
ΩΩk t
|
ΩΩu v
BindingFlagsΩΩw É
.ΩΩÉ Ñ
StaticΩΩÑ ä
)ΩΩä ã
;ΩΩã å
var
ææ *
guiStatePixelsPerPointLambda
ææ ,
=
ææ- .

Expression
ææ/ 9
.
ææ9 :
Lambda
ææ: @
<
ææ@ A
Func
ææA E
<
ææE F
float
ææF K
>
ææK L
>
ææL M
(
ææM N

Expression
ææN X
.
ææX Y
Property
ææY a
(
ææa b
null
ææb f
,
ææf g)
guiStatePixelsPerPointInfoææh Ç
)ææÇ É
)ææÉ Ñ
;ææÑ Ö'
GetGUIStatePixelsPerPoint
øø %
=
øø& '*
guiStatePixelsPerPointLambda
øø( D
.
øøD E
Compile
øøE L
(
øøL M
)
øøM N
;
øøN O
var
¡¡  
pixelPerPointParam
¡¡ "
=
¡¡# $

Expression
¡¡% /
.
¡¡/ 0
	Parameter
¡¡0 9
(
¡¡9 :
typeof
¡¡: @
(
¡¡@ A
float
¡¡A F
)
¡¡F G
,
¡¡G H
$str
¡¡I X
)
¡¡X Y
;
¡¡Y Z
var
¬¬ 
texture2DProperty
¬¬ !
=
¬¬" #

Expression
¬¬$ .
.
¬¬. /
	Parameter
¬¬/ 8
(
¬¬8 9
typeof
¬¬9 ?
(
¬¬? @
	Texture2D
¬¬@ I
)
¬¬I J
,
¬¬J K
$str
¬¬L W
)
¬¬W X
;
¬¬X Y
var
√√ )
texture2DPixelsPerPointInfo
√√ +
=
√√, -
typeof
√√. 4
(
√√4 5
	Texture2D
√√5 >
)
√√> ?
.
√√? @
GetProperty
√√@ K
(
√√K L
$str
√√L \
,
√√\ ]
BindingFlags
√√^ j
.
√√j k
	NonPublic
√√k t
|
√√u v
BindingFlags√√w É
.√√É Ñ
Instance√√Ñ å
)√√å ç
;√√ç é
var
ƒƒ -
texture2DPixelsPerPointProperty
ƒƒ /
=
ƒƒ0 1

Expression
ƒƒ2 <
.
ƒƒ< =
Property
ƒƒ= E
(
ƒƒE F
texture2DProperty
ƒƒF W
,
ƒƒW X)
texture2DPixelsPerPointInfo
ƒƒY t
)
ƒƒt u
;
ƒƒu v
var
≈≈ .
 texture2DGetPixelsPerPointLambda
≈≈ 0
=
≈≈1 2

Expression
≈≈3 =
.
≈≈= >
Lambda
≈≈> D
<
≈≈D E
Func
≈≈E I
<
≈≈I J
	Texture2D
≈≈J S
,
≈≈S T
float
≈≈U Z
>
≈≈Z [
>
≈≈[ \
(
≈≈\ ]-
texture2DPixelsPerPointProperty
≈≈] |
,
≈≈| } 
texture2DProperty≈≈~ è
)≈≈è ê
;≈≈ê ë%
GetTexturePixelPerPoint
∆∆ #
=
∆∆$ %.
 texture2DGetPixelsPerPointLambda
∆∆& F
.
∆∆F G
Compile
∆∆G N
(
∆∆N O
)
∆∆O P
;
∆∆P Q
var
«« .
 texture2DSetPixelsPerPointLambda
«« 0
=
««1 2

Expression
««3 =
.
««= >
Lambda
««> D
<
««D E
Action
««E K
<
««K L
	Texture2D
««L U
,
««U V
float
««W \
>
««\ ]
>
««] ^
(
««^ _

Expression
««_ i
.
««i j
Assign
««j p
(
««p q.
texture2DPixelsPerPointProperty««q ê
,««ê ë"
pixelPerPointParam««í §
)««§ •
,««• ¶!
texture2DProperty««ß ∏
,««∏ π"
pixelPerPointParam««∫ Ã
)««Ã Õ
;««Õ Œ%
SetTexturePixelPerPoint
»» #
=
»»$ %.
 texture2DSetPixelsPerPointLambda
»»& F
.
»»F G
Compile
»»G N
(
»»N O
)
»»O P
;
»»P Q
}
…… 	
static
ÃÃ 
Skin
ÃÃ 
currentSkin
ÃÃ 
=>
ÕÕ "
GetInternalSkinIndex
ÕÕ #
(
ÕÕ# $
)
ÕÕ$ %
==
ÕÕ& (
$num
ÕÕ) *
?
ÕÕ+ ,
Skin
ÕÕ- 1
.
ÕÕ1 2
	Personnal
ÕÕ2 ;
:
ÕÕ< =
Skin
ÕÕ> B
.
ÕÕB C
Professional
ÕÕC O
;
ÕÕO P
public
€€ 
static
€€ 
	Texture2D
€€ 
LoadIcon
€€  (
(
€€( )
string
€€) /
path
€€0 4
,
€€4 5
string
€€6 <
name
€€= A
,
€€A B
string
€€C I
	extention
€€J S
=
€€T U
$str
€€V \
)
€€\ ]
=>
‹‹ 
LoadIcon
‹‹ 
(
‹‹ 
path
‹‹ 
,
‹‹ 
name
‹‹ "
,
‹‹" #
	extention
‹‹$ -
,
‹‹- .
false
‹‹/ 4
)
‹‹4 5
;
‹‹5 6
internal
ﬂﬂ 
static
ﬂﬂ 
	Texture2D
ﬂﬂ !
LoadIcon
ﬂﬂ" *
(
ﬂﬂ* +
string
ﬂﬂ+ 1
path
ﬂﬂ2 6
,
ﬂﬂ6 7
string
ﬂﬂ8 >
name
ﬂﬂ? C
,
ﬂﬂC D
string
ﬂﬂE K
	extention
ﬂﬂL U
=
ﬂﬂV W
$str
ﬂﬂX ^
,
ﬂﬂ^ _
bool
ﬂﬂ` d
forceLowRes
ﬂﬂe p
=
ﬂﬂq r
false
ﬂﬂs x
)
ﬂﬂx y
{
‡‡ 	
if
·· 
(
·· 
String
·· 
.
·· 
IsNullOrEmpty
·· $
(
··$ %
path
··% )
)
··) *
||
··+ -
String
··. 4
.
··4 5
IsNullOrEmpty
··5 B
(
··B C
name
··C G
)
··G H
)
··H I
return
‚‚ 
null
‚‚ 
;
‚‚ 
string
‰‰ 
prefix
‰‰ 
=
‰‰ 
$str
‰‰ 
;
‰‰ 
var
ÊÊ 
skin
ÊÊ 
=
ÊÊ 
currentSkin
ÊÊ "
;
ÊÊ" #
if
ÁÁ 
(
ÁÁ 
skin
ÁÁ 
==
ÁÁ 
Skin
ÁÁ 
.
ÁÁ 
Professional
ÁÁ )
)
ÁÁ) *
prefix
ËË 
=
ËË 
$str
ËË 
;
ËË 
	Texture2D
ÍÍ 
icon
ÍÍ 
=
ÍÍ 
null
ÍÍ !
;
ÍÍ! "
float
ÎÎ 
pixelsPerPoint
ÎÎ  
=
ÎÎ! "'
GetGUIStatePixelsPerPoint
ÎÎ# <
(
ÎÎ< =
)
ÎÎ= >
;
ÎÎ> ?
if
ÏÏ 
(
ÏÏ 
pixelsPerPoint
ÏÏ 
>
ÏÏ  
$num
ÏÏ! %
&&
ÏÏ& (
!
ÏÏ) *
forceLowRes
ÏÏ* 5
)
ÏÏ5 6
{
ÌÌ 
icon
ÓÓ 
=
ÓÓ 
EditorGUIUtility
ÓÓ '
.
ÓÓ' (
Load
ÓÓ( ,
(
ÓÓ, -
String
ÓÓ- 3
.
ÓÓ3 4
Format
ÓÓ4 :
(
ÓÓ: ;
$str
ÓÓ; M
,
ÓÓM N
path
ÓÓO S
,
ÓÓS T
prefix
ÓÓU [
,
ÓÓ[ \
name
ÓÓ] a
,
ÓÓa b
	extention
ÓÓc l
)
ÓÓl m
)
ÓÓm n
as
ÓÓo q
	Texture2D
ÓÓr {
;
ÓÓ{ |
if
ÔÔ 
(
ÔÔ 
icon
ÔÔ 
==
ÔÔ 
null
ÔÔ  
&&
ÔÔ! #
!
ÔÔ$ %
string
ÔÔ% +
.
ÔÔ+ ,
IsNullOrEmpty
ÔÔ, 9
(
ÔÔ9 :
prefix
ÔÔ: @
)
ÔÔ@ A
)
ÔÔA B
icon
 
=
 
EditorGUIUtility
 +
.
+ ,
Load
, 0
(
0 1
String
1 7
.
7 8
Format
8 >
(
> ?
$str
? N
,
N O
path
P T
,
T U
name
V Z
,
Z [
	extention
\ e
)
e f
)
f g
as
h j
	Texture2D
k t
;
t u
if
ÒÒ 
(
ÒÒ 
icon
ÒÒ 
!=
ÒÒ 
null
ÒÒ  
)
ÒÒ  !%
SetTexturePixelPerPoint
ÚÚ +
(
ÚÚ+ ,
icon
ÚÚ, 0
,
ÚÚ0 1
$num
ÚÚ2 6
)
ÚÚ6 7
;
ÚÚ7 8
}
ÛÛ 
if
ıı 
(
ıı 
icon
ıı 
==
ıı 
null
ıı 
)
ıı 
icon
ˆˆ 
=
ˆˆ 
EditorGUIUtility
ˆˆ '
.
ˆˆ' (
Load
ˆˆ( ,
(
ˆˆ, -
String
ˆˆ- 3
.
ˆˆ3 4
Format
ˆˆ4 :
(
ˆˆ: ;
$str
ˆˆ; J
,
ˆˆJ K
path
ˆˆL P
,
ˆˆP Q
prefix
ˆˆR X
,
ˆˆX Y
name
ˆˆZ ^
,
ˆˆ^ _
	extention
ˆˆ` i
)
ˆˆi j
)
ˆˆj k
as
ˆˆl n
	Texture2D
ˆˆo x
;
ˆˆx y
if
¯¯ 
(
¯¯ 
icon
¯¯ 
==
¯¯ 
null
¯¯ 
&&
¯¯ 
!
¯¯  !
string
¯¯! '
.
¯¯' (
IsNullOrEmpty
¯¯( 5
(
¯¯5 6
prefix
¯¯6 <
)
¯¯< =
)
¯¯= >
icon
˘˘ 
=
˘˘ 
EditorGUIUtility
˘˘ '
.
˘˘' (
Load
˘˘( ,
(
˘˘, -
String
˘˘- 3
.
˘˘3 4
Format
˘˘4 :
(
˘˘: ;
$str
˘˘; G
,
˘˘G H
path
˘˘I M
,
˘˘M N
name
˘˘O S
,
˘˘S T
	extention
˘˘U ^
)
˘˘^ _
)
˘˘_ `
as
˘˘a c
	Texture2D
˘˘d m
;
˘˘m n
if
˚˚ 
(
˚˚ 
icon
˚˚ 
!=
˚˚ 
null
˚˚ 
&&
˚˚ 
!
¸¸ 
Mathf
¸¸ 
.
¸¸ 
Approximately
¸¸ $
(
¸¸$ %%
GetTexturePixelPerPoint
¸¸% <
(
¸¸< =
icon
¸¸= A
)
¸¸A B
,
¸¸B C
pixelsPerPoint
¸¸D R
)
¸¸R S
&&
¸¸T V
!
˝˝ 
Mathf
˝˝ 
.
˝˝ 
Approximately
˝˝ $
(
˝˝$ %
pixelsPerPoint
˝˝% 3
%
˝˝4 5
$num
˝˝6 7
,
˝˝7 8
$num
˝˝9 :
)
˝˝: ;
)
˝˝; <
{
˛˛ 
icon
ˇˇ 
.
ˇˇ 

filterMode
ˇˇ 
=
ˇˇ  !

FilterMode
ˇˇ" ,
.
ˇˇ, -
Bilinear
ˇˇ- 5
;
ˇˇ5 6
}
ÄÄ 
return
ÇÇ 
icon
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
}
ÜÜ 
}áá °Æ
®D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\CoreLightEditorUtilities.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public		 

static		 
class		 $
CoreLightEditorUtilities		 0
{

 
[ 	
Flags	 
] 
enum 
HandleDirections 
{ 	
Left 
= 
$num 
<< 
$num 
, 
Up 
= 
$num 
<< 
$num 
, 
Right 
= 
$num 
<< 
$num 
, 
Down 
= 
$num 
<< 
$num 
, 
All 
= 
Left 
| 
Up 
| 
Right #
|$ %
Down& *
} 	
static 
readonly 
Vector3 
[  
]  !/
#directionalLightHandlesRayPositions" E
=F G
{ 	
new 
Vector3 
( 
$num 
, 
$num 
, 
$num 
)  
,  !
new 
Vector3 
( 
- 
$num 
, 
$num 
, 
$num  
)  !
,! "
new 
Vector3 
( 
$num 
, 
$num 
, 
$num 
)  
,  !
new 
Vector3 
( 
$num 
, 
- 
$num 
, 
$num  
)  !
,! "
new 
Vector3 
( 
$num 
, 
$num 
, 
$num 
)  
.  !

normalized! +
,+ ,
new 
Vector3 
( 
$num 
, 
- 
$num 
, 
$num  
)  !
.! "

normalized" ,
,, -
new 
Vector3 
( 
- 
$num 
, 
$num 
, 
$num  
)  !
.! "

normalized" ,
,, -
new 
Vector3 
( 
- 
$num 
, 
- 
$num 
, 
$num  !
)! "
." #

normalized# -
} 	
;	 

public%% 
static%% 
void%% %
DrawDirectionalLightGizmo%% 4
(%%4 5
Light%%5 :
light%%; @
)%%@ A
{&& 	
Color(( 

outerColor(( 
=(( -
!GetLightAboveObjectWireframeColor(( @
(((@ A
light((A F
.((F G
color((G L
)((L M
;((M N
Vector3** 
lightPos** 
=** 
light** $
.**$ %
	transform**% .
.**. /
position**/ 7
;**7 8
float++ 
	lightSize++ 
;++ 
using,, 
(,, 
new,, 
Handles,, 
.,, 
DrawingScope,, +
(,,+ ,
	Matrix4x4,,, 5
.,,5 6
identity,,6 >
),,> ?
),,? @
{-- 
	lightSize.. 
=.. 
HandleUtility.. )
...) *
GetHandleSize..* 7
(..7 8
lightPos..8 @
)..@ A
;..A B
}// 
float00 
radius00 
=00 
	lightSize00 $
*00% &
$num00' +
;00+ ,
using22 
(22 
new22 
Handles22 
.22 
DrawingScope22 +
(22+ ,

outerColor22, 6
)226 7
)227 8
{33 
Handles44 
.44 
DrawWireDisc44 $
(44$ %
Vector344% ,
.44, -
zero44- 1
,441 2
Vector3443 :
.44: ;
forward44; B
,44B C
radius44D J
)44J K
;44K L
foreach55 
(55 
Vector355  
normalizedPos55! .
in55/ 1/
#directionalLightHandlesRayPositions552 U
)55U V
{66 
Vector377 
pos77 
=77  !
normalizedPos77" /
*770 1
radius772 8
;778 9
Handles88 
.88 
DrawLine88 $
(88$ %
pos88% (
,88( )
pos88* -
+88. /
new880 3
Vector3884 ;
(88; <
$num88< =
,88= >
$num88? @
,88@ A
	lightSize88B K
)88K L
)88L M
;88M N
}99 
}:: 
};; 	
publicAA 
staticAA 
voidAA 
DrawPointLightGizmoAA .
(AA. /
LightAA/ 4
lightAA5 :
)AA: ;
{BB 	
ColorDD 

outerColorDD 
=DD -
!GetLightAboveObjectWireframeColorDD @
(DD@ A
lightDDA F
.DDF G
colorDDG L
)DDL M
;DDM N
DrawPointLightGG 
(GG 
lightGG  
,GG  !

outerColorGG" ,
)GG, -
;GG- .%
DrawPointHandlesAndLabelsJJ %
(JJ% &
lightJJ& +
)JJ+ ,
;JJ, -
}KK 	
staticMM 
voidMM 
DrawPointLightMM "
(MM" #
LightMM# (
lightMM) .
,MM. /
ColorMM0 5

outerColorMM6 @
)MM@ A
{NN 	
floatOO 
rangeOO 
=OO 
lightOO 
.OO  
rangeOO  %
;OO% &
usingQQ 
(QQ 
newQQ 
HandlesQQ 
.QQ 
DrawingScopeQQ +
(QQ+ ,

outerColorQQ, 6
)QQ6 7
)QQ7 8
{RR 
	EditorGUISS 
.SS 
BeginChangeCheckSS *
(SS* +
)SS+ ,
;SS, -
rangeUU 
=UU 
DoPointHandlesUU &
(UU& '
rangeUU' ,
)UU, -
;UU- .
ifVV 
(VV 
	EditorGUIVV 
.VV 
EndChangeCheckVV ,
(VV, -
)VV- .
)VV. /
{WW 
UndoXX 
.XX 
RecordObjectXX %
(XX% &
lightXX& +
,XX+ ,
$strXX- A
)XXA B
;XXB C
lightYY 
.YY 
rangeYY 
=YY  !
rangeYY" '
;YY' (
}ZZ 
}[[ 
}\\ 	
static^^ 
void^^ %
DrawPointHandlesAndLabels^^ -
(^^- .
Light^^. 3
light^^4 9
)^^9 :
{__ 	
varaa 
firstControlaa 
=aa 

GUIUtilityaa )
.aa) *
GetControlIDaa* 6
(aa6 7
s_PointLightHandleaa7 I
.aaI J
GetHashCodeaaJ U
(aaU V
)aaV W
,aaW X
	FocusTypeaaY b
.aab c
Passiveaac j
)aaj k
-aal m
$numaam n
;aan o
ifbb 
(bb 
Eventbb 
.bb 
currentbb 
.bb 
typebb "
!=bb# %
	EventTypebb& /
.bb/ 0
Repaintbb0 7
)bb7 8
returncc 
;cc 
Vector3ii 
labelPositionii !
=ii" #
Vector3ii$ +
.ii+ ,
zeroii, 0
;ii0 1
ifkk 
(kk 

GUIUtilitykk 
.kk 

hotControlkk %
!=kk& (
$numkk) *
)kk* +
{ll 
switchmm 
(mm 

GUIUtilitymm "
.mm" #

hotControlmm# -
-mm. /
firstControlmm0 <
)mm< =
{nn 
caseoo 
$numoo 
:oo 
labelPositionpp %
=pp& '
Vector3pp( /
.pp/ 0
rightpp0 5
*pp6 7
lightpp8 =
.pp= >
rangepp> C
;ppC D
breakqq 
;qq 
caserr 
$numrr 
:rr 
labelPositionss %
=ss& '
Vector3ss( /
.ss/ 0
leftss0 4
*ss5 6
lightss7 <
.ss< =
rangess= B
;ssB C
breaktt 
;tt 
caseuu 
$numuu 
:uu 
labelPositionvv %
=vv& '
Vector3vv( /
.vv/ 0
upvv0 2
*vv3 4
lightvv5 :
.vv: ;
rangevv; @
;vv@ A
breakww 
;ww 
casexx 
$numxx 
:xx 
labelPositionyy %
=yy& '
Vector3yy( /
.yy/ 0
downyy0 4
*yy5 6
lightyy7 <
.yy< =
rangeyy= B
;yyB C
breakzz 
;zz 
case{{ 
$num{{ 
:{{ 
labelPosition|| %
=||& '
Vector3||( /
.||/ 0
forward||0 7
*||8 9
light||: ?
.||? @
range||@ E
;||E F
break}} 
;}} 
case~~ 
$num~~ 
:~~ 
labelPosition %
=& '
Vector3( /
./ 0
back0 4
*5 6
light7 <
.< =
range= B
;B C
break
ÄÄ 
;
ÄÄ 
default
ÅÅ 
:
ÅÅ 
return
ÇÇ 
;
ÇÇ 
}
ÉÉ 
string
ÖÖ 
	labelText
ÖÖ  
=
ÖÖ! "
FormattableString
ÖÖ# 4
.
ÖÖ4 5
	Invariant
ÖÖ5 >
(
ÖÖ> ?
$"
ÖÖ? A
Range: 
ÖÖA H
{
ÖÖH I
light
ÖÖI N
.
ÖÖN O
range
ÖÖO T
:
ÖÖT U
0.00
ÖÖU Y
}
ÖÖY Z
"
ÖÖZ [
)
ÖÖ[ \
;
ÖÖ\ ]
DrawHandleLabel
ÜÜ 
(
ÜÜ  
labelPosition
ÜÜ  -
,
ÜÜ- .
	labelText
ÜÜ/ 8
)
ÜÜ8 9
;
ÜÜ9 :
}
áá 
}
àà 	
public
éé 
static
éé 
void
éé %
DrawRectangleLightGizmo
éé 2
(
éé2 3
Light
éé3 8
light
éé9 >
)
éé> ?
{
èè 	
Color
ëë 

outerColor
ëë 
=
ëë /
!GetLightAboveObjectWireframeColor
ëë @
(
ëë@ A
light
ëëA F
.
ëëF G
color
ëëG L
)
ëëL M
;
ëëM N 
DrawRectangleLight
îî 
(
îî 
light
îî $
,
îî$ %

outerColor
îî& 0
)
îî0 1
;
îî1 2+
DrawRectangleHandlesAndLabels
óó )
(
óó) *
light
óó* /
)
óó/ 0
;
óó0 1
}
òò 	
static
öö 
void
öö  
DrawRectangleLight
öö &
(
öö& '
Light
öö' ,
light
öö- 2
,
öö2 3
Color
öö4 9

outerColor
öö: D
)
ööD E
{
õõ 	
Vector2
úú 
size
úú 
=
úú 
light
úú  
.
úú  !
areaSize
úú! )
;
úú) *
var
ùù 
range
ùù 
=
ùù 
light
ùù 
.
ùù 
range
ùù #
;
ùù# $
var
ûû 

innerColor
ûû 
=
ûû 0
"GetLightBehindObjectWireframeColor
ûû ?
(
ûû? @
light
ûû@ E
.
ûûE F
color
ûûF K
)
ûûK L
;
ûûL M
DrawZTestedLine
üü 
(
üü 
range
üü !
,
üü! "

outerColor
üü# -
,
üü- .

innerColor
üü/ 9
)
üü9 :
;
üü: ;
using
°° 
(
°° 
new
°° 
Handles
°° 
.
°° 
DrawingScope
°° +
(
°°+ ,

outerColor
°°, 6
)
°°6 7
)
°°7 8
{
¢¢ 
	EditorGUI
££ 
.
££ 
BeginChangeCheck
££ *
(
££* +
)
££+ ,
;
££, -
size
§§ 
=
§§ 
DoRectHandles
§§ $
(
§§$ %
size
§§% )
)
§§) *
;
§§* +
if
¶¶ 
(
¶¶ 
	EditorGUI
¶¶ 
.
¶¶ 
EndChangeCheck
¶¶ ,
(
¶¶, -
)
¶¶- .
)
¶¶. /
{
ßß 
Undo
®® 
.
®® 
RecordObject
®® %
(
®®% &
light
®®& +
,
®®+ ,
$str
®®- J
)
®®J K
;
®®K L
light
©© 
.
©© 
areaSize
©© "
=
©©# $
size
©©% )
;
©©) *
}
™™ 
}
´´ 
}
¨¨ 	
static
ÆÆ 
void
ÆÆ +
DrawRectangleHandlesAndLabels
ÆÆ 1
(
ÆÆ1 2
Light
ÆÆ2 7
light
ÆÆ8 =
)
ÆÆ= >
{
ØØ 	
var
±± 
firstControl
±± 
=
±± 

GUIUtility
±± )
.
±±) *
GetControlID
±±* 6
(
±±6 7
s_AreaLightHandle
±±7 H
.
±±H I
GetHashCode
±±I T
(
±±T U
)
±±U V
,
±±V W
	FocusType
±±X a
.
±±a b
Passive
±±b i
)
±±i j
-
±±k l
$num
±±l m
;
±±m n
if
≤≤ 
(
≤≤ 
Event
≤≤ 
.
≤≤ 
current
≤≤ 
.
≤≤ 
type
≤≤ "
!=
≤≤# %
	EventType
≤≤& /
.
≤≤/ 0
Repaint
≤≤0 7
)
≤≤7 8
return
≥≥ 
;
≥≥ 
Vector3
∂∂ 
labelPosition
∂∂ !
=
∂∂" #
Vector3
∂∂$ +
.
∂∂+ ,
zero
∂∂, 0
;
∂∂0 1
if
∏∏ 
(
∏∏ 

GUIUtility
∏∏ 
.
∏∏ 

hotControl
∏∏ %
!=
∏∏& (
$num
∏∏) *
)
∏∏* +
{
ππ 
switch
∫∫ 
(
∫∫ 

GUIUtility
∫∫ "
.
∫∫" #

hotControl
∫∫# -
-
∫∫. /
firstControl
∫∫0 <
)
∫∫< =
{
ªª 
case
ºº 
$num
ºº 
:
ºº 
labelPosition
ΩΩ %
=
ΩΩ& '
Vector3
ΩΩ( /
.
ΩΩ/ 0
right
ΩΩ0 5
*
ΩΩ6 7
(
ΩΩ8 9
light
ΩΩ9 >
.
ΩΩ> ?
areaSize
ΩΩ? G
.
ΩΩG H
x
ΩΩH I
/
ΩΩJ K
$num
ΩΩL M
)
ΩΩM N
;
ΩΩN O
break
ææ 
;
ææ 
case
øø 
$num
øø 
:
øø 
labelPosition
¿¿ %
=
¿¿& '
Vector3
¿¿( /
.
¿¿/ 0
left
¿¿0 4
*
¿¿5 6
(
¿¿7 8
light
¿¿8 =
.
¿¿= >
areaSize
¿¿> F
.
¿¿F G
x
¿¿G H
/
¿¿I J
$num
¿¿K L
)
¿¿L M
;
¿¿M N
break
¡¡ 
;
¡¡ 
case
¬¬ 
$num
¬¬ 
:
¬¬ 
labelPosition
√√ %
=
√√& '
Vector3
√√( /
.
√√/ 0
up
√√0 2
*
√√3 4
(
√√5 6
light
√√6 ;
.
√√; <
areaSize
√√< D
.
√√D E
y
√√E F
/
√√G H
$num
√√I J
)
√√J K
;
√√K L
break
ƒƒ 
;
ƒƒ 
case
≈≈ 
$num
≈≈ 
:
≈≈ 
labelPosition
∆∆ %
=
∆∆& '
Vector3
∆∆( /
.
∆∆/ 0
down
∆∆0 4
*
∆∆5 6
(
∆∆7 8
light
∆∆8 =
.
∆∆= >
areaSize
∆∆> F
.
∆∆F G
y
∆∆G H
/
∆∆I J
$num
∆∆K L
)
∆∆L M
;
∆∆M N
break
«« 
;
«« 
default
»» 
:
»» 
return
…… 
;
…… 
}
   
string
ÀÀ 
	labelText
ÀÀ  
=
ÀÀ! "
FormattableString
ÀÀ# 4
.
ÀÀ4 5
	Invariant
ÀÀ5 >
(
ÀÀ> ?
$"
ÀÀ? A
w:
ÀÀA C
{
ÀÀC D
light
ÀÀD I
.
ÀÀI J
areaSize
ÀÀJ R
.
ÀÀR S
x
ÀÀS T
:
ÀÀT U
0.00
ÀÀU Y
}
ÀÀY Z
 x h:
ÀÀZ _
{
ÀÀ_ `
light
ÀÀ` e
.
ÀÀe f
areaSize
ÀÀf n
.
ÀÀn o
y
ÀÀo p
:
ÀÀp q
0.00
ÀÀq u
}
ÀÀu v
"
ÀÀv w
)
ÀÀw x
;
ÀÀx y
DrawHandleLabel
ÃÃ 
(
ÃÃ  
labelPosition
ÃÃ  -
,
ÃÃ- .
	labelText
ÃÃ/ 8
)
ÃÃ8 9
;
ÃÃ9 :
}
ÕÕ 
}
ŒŒ 	
public
‘‘ 
static
‘‘ 
void
‘‘  
DrawDiscLightGizmo
‘‘ -
(
‘‘- .
Light
‘‘. 3
light
‘‘4 9
)
‘‘9 :
{
’’ 	
Color
◊◊ 

outerColor
◊◊ 
=
◊◊ /
!GetLightAboveObjectWireframeColor
◊◊ @
(
◊◊@ A
light
◊◊A F
.
◊◊F G
color
◊◊G L
)
◊◊L M
;
◊◊M N
DrawDiscLight
⁄⁄ 
(
⁄⁄ 
light
⁄⁄ 
,
⁄⁄  

outerColor
⁄⁄! +
)
⁄⁄+ ,
;
⁄⁄, -&
DrawDiscHandlesAndLabels
›› $
(
››$ %
light
››% *
)
››* +
;
››+ ,
}
ﬁﬁ 	
static
‡‡ 
void
‡‡ 
DrawDiscLight
‡‡ !
(
‡‡! "
Light
‡‡" '
light
‡‡( -
,
‡‡- .
Color
‡‡/ 4

outerColor
‡‡5 ?
)
‡‡? @
{
·· 	
float
‚‚ 
radius
‚‚ 
=
‚‚ 
light
‚‚  
.
‚‚  !
areaSize
‚‚! )
.
‚‚) *
x
‚‚* +
;
‚‚+ ,
var
„„ 
range
„„ 
=
„„ 
light
„„ 
.
„„ 
range
„„ #
;
„„# $
var
‰‰ 

innerColor
‰‰ 
=
‰‰ 0
"GetLightBehindObjectWireframeColor
‰‰ ?
(
‰‰? @
light
‰‰@ E
.
‰‰E F
color
‰‰F K
)
‰‰K L
;
‰‰L M
DrawZTestedLine
ÂÂ 
(
ÂÂ 
range
ÂÂ !
,
ÂÂ! "

outerColor
ÂÂ# -
,
ÂÂ- .

innerColor
ÂÂ/ 9
)
ÂÂ9 :
;
ÂÂ: ;
using
ÁÁ 
(
ÁÁ 
new
ÁÁ 
Handles
ÁÁ 
.
ÁÁ 
DrawingScope
ÁÁ +
(
ÁÁ+ ,

outerColor
ÁÁ, 6
)
ÁÁ6 7
)
ÁÁ7 8
{
ËË 
	EditorGUI
ÈÈ 
.
ÈÈ 
BeginChangeCheck
ÈÈ *
(
ÈÈ* +
)
ÈÈ+ ,
;
ÈÈ, -
radius
ÍÍ 
=
ÍÍ 
DoDiscHandles
ÍÍ &
(
ÍÍ& '
radius
ÍÍ' -
)
ÍÍ- .
;
ÍÍ. /
if
ÏÏ 
(
ÏÏ 
	EditorGUI
ÏÏ 
.
ÏÏ 
EndChangeCheck
ÏÏ ,
(
ÏÏ, -
)
ÏÏ- .
)
ÏÏ. /
{
ÌÌ 
Undo
ÓÓ 
.
ÓÓ 
RecordObject
ÓÓ %
(
ÓÓ% &
light
ÓÓ& +
,
ÓÓ+ ,
$str
ÓÓ- E
)
ÓÓE F
;
ÓÓF G
light
ÔÔ 
.
ÔÔ 
areaSize
ÔÔ "
=
ÔÔ# $
new
ÔÔ% (
Vector2
ÔÔ) 0
(
ÔÔ0 1
radius
ÔÔ1 7
,
ÔÔ7 8
light
ÔÔ9 >
.
ÔÔ> ?
areaSize
ÔÔ? G
.
ÔÔG H
y
ÔÔH I
)
ÔÔI J
;
ÔÔJ K
}
 
}
ÒÒ 
}
ÚÚ 	
static
ÙÙ 
void
ÙÙ &
DrawDiscHandlesAndLabels
ÙÙ ,
(
ÙÙ, -
Light
ÙÙ- 2
light
ÙÙ3 8
)
ÙÙ8 9
{
ıı 	
var
˜˜ 
firstControl
˜˜ 
=
˜˜ 

GUIUtility
˜˜ )
.
˜˜) *
GetControlID
˜˜* 6
(
˜˜6 7
s_DiscLightHandle
˜˜7 H
.
˜˜H I
GetHashCode
˜˜I T
(
˜˜T U
)
˜˜U V
,
˜˜V W
	FocusType
˜˜X a
.
˜˜a b
Passive
˜˜b i
)
˜˜i j
-
˜˜k l
$num
˜˜l m
;
˜˜m n
if
¯¯ 
(
¯¯ 
Event
¯¯ 
.
¯¯ 
current
¯¯ 
.
¯¯ 
type
¯¯ "
!=
¯¯# %
	EventType
¯¯& /
.
¯¯/ 0
Repaint
¯¯0 7
)
¯¯7 8
return
˘˘ 
;
˘˘ 
Vector3
˚˚ 
labelPosition
˚˚ !
=
˚˚" #
Vector3
˚˚$ +
.
˚˚+ ,
zero
˚˚, 0
;
˚˚0 1
if
˝˝ 
(
˝˝ 

GUIUtility
˝˝ 
.
˝˝ 

hotControl
˝˝ %
!=
˝˝& (
$num
˝˝) *
)
˝˝* +
{
˛˛ 
switch
ˇˇ 
(
ˇˇ 

GUIUtility
ˇˇ "
.
ˇˇ" #

hotControl
ˇˇ# -
-
ˇˇ. /
firstControl
ˇˇ0 <
)
ˇˇ< =
{
ÄÄ 
case
ÅÅ 
$num
ÅÅ 
:
ÅÅ 
labelPosition
ÇÇ %
=
ÇÇ& '
Vector3
ÇÇ( /
.
ÇÇ/ 0
right
ÇÇ0 5
*
ÇÇ6 7
light
ÇÇ8 =
.
ÇÇ= >
areaSize
ÇÇ> F
.
ÇÇF G
x
ÇÇG H
;
ÇÇH I
break
ÉÉ 
;
ÉÉ 
case
ÑÑ 
$num
ÑÑ 
:
ÑÑ 
labelPosition
ÖÖ %
=
ÖÖ& '
Vector3
ÖÖ( /
.
ÖÖ/ 0
left
ÖÖ0 4
*
ÖÖ5 6
light
ÖÖ7 <
.
ÖÖ< =
areaSize
ÖÖ= E
.
ÖÖE F
x
ÖÖF G
;
ÖÖG H
break
ÜÜ 
;
ÜÜ 
case
áá 
$num
áá 
:
áá 
labelPosition
àà %
=
àà& '
Vector3
àà( /
.
àà/ 0
up
àà0 2
*
àà3 4
light
àà5 :
.
àà: ;
areaSize
àà; C
.
ààC D
x
ààD E
;
ààE F
break
ââ 
;
ââ 
case
ää 
$num
ää 
:
ää 
labelPosition
ãã %
=
ãã& '
Vector3
ãã( /
.
ãã/ 0
down
ãã0 4
*
ãã5 6
light
ãã7 <
.
ãã< =
areaSize
ãã= E
.
ããE F
x
ããF G
;
ããG H
break
åå 
;
åå 
default
çç 
:
çç 
return
éé 
;
éé 
}
èè 
string
êê 
	labelText
êê  
=
êê! "
FormattableString
êê# 4
.
êê4 5
	Invariant
êê5 >
(
êê> ?
$"
êê? A
Radius: 
êêA I
{
êêI J
light
êêJ O
.
êêO P
areaSize
êêP X
.
êêX Y
x
êêY Z
:
êêZ [
0.00
êê[ _
}
êê_ `
"
êê` a
)
êêa b
;
êêb c
DrawHandleLabel
ëë 
(
ëë  
labelPosition
ëë  -
,
ëë- .
	labelText
ëë/ 8
)
ëë8 9
;
ëë9 :
}
íí 
}
ìì 	
static
ïï 
void
ïï 
DrawWithZTest
ïï !
(
ïï! "#
PrimitiveBoundsHandle
ïï" 7
primitiveHandle
ïï8 G
,
ïïG H
float
ïïI N
alpha
ïïO T
=
ïïU V
$num
ïïW [
)
ïï[ \
{
ññ 	
primitiveHandle
óó 
.
óó 
center
óó "
=
óó# $
Vector3
óó% ,
.
óó, -
zero
óó- 1
;
óó1 2
primitiveHandle
ôô 
.
ôô 
handleColor
ôô '
=
ôô( )
Color
ôô* /
.
ôô/ 0
clear
ôô0 5
;
ôô5 6
primitiveHandle
öö 
.
öö 
wireframeColor
öö *
=
öö+ ,
Color
öö- 2
.
öö2 3
white
öö3 8
;
öö8 9
Handles
õõ 
.
õõ 
zTest
õõ 
=
õõ 
CompareFunction
õõ +
.
õõ+ ,
	LessEqual
õõ, 5
;
õõ5 6
primitiveHandle
úú 
.
úú 

DrawHandle
úú &
(
úú& '
)
úú' (
;
úú( )
primitiveHandle
ûû 
.
ûû 
wireframeColor
ûû *
=
ûû+ ,
new
ûû- 0
Color
ûû1 6
(
ûû6 7
$num
ûû7 9
,
ûû9 :
$num
ûû; =
,
ûû= >
$num
ûû? A
,
ûûA B
alpha
ûûC H
)
ûûH I
;
ûûI J
Handles
üü 
.
üü 
zTest
üü 
=
üü 
CompareFunction
üü +
.
üü+ ,
Greater
üü, 3
;
üü3 4
primitiveHandle
†† 
.
†† 

DrawHandle
†† &
(
††& '
)
††' (
;
††( )
primitiveHandle
¢¢ 
.
¢¢ 
handleColor
¢¢ '
=
¢¢( )
Color
¢¢* /
.
¢¢/ 0
white
¢¢0 5
;
¢¢5 6
primitiveHandle
££ 
.
££ 
wireframeColor
££ *
=
££+ ,
Color
££- 2
.
££2 3
clear
££3 8
;
££8 9
Handles
§§ 
.
§§ 
zTest
§§ 
=
§§ 
CompareFunction
§§ +
.
§§+ ,
Always
§§, 2
;
§§2 3
primitiveHandle
•• 
.
•• 

DrawHandle
•• &
(
••& '
)
••' (
;
••( )
}
¶¶ 	
static
®® 
void
®® 
DrawZTestedLine
®® #
(
®®# $
float
®®$ )
range
®®* /
,
®®/ 0
Color
®®1 6

outerColor
®®7 A
,
®®A B
Color
®®C H

innerColor
®®I S
)
®®S T
{
©© 	
using
™™ 
(
™™ 
new
™™ 
Handles
™™ 
.
™™ 
DrawingScope
™™ +
(
™™+ ,

outerColor
™™, 6
)
™™6 7
)
™™7 8
{
´´ 
Handles
¨¨ 
.
¨¨ 
zTest
¨¨ 
=
¨¨ 
CompareFunction
¨¨  /
.
¨¨/ 0
	LessEqual
¨¨0 9
;
¨¨9 :
Handles
≠≠ 
.
≠≠ 
DrawLine
≠≠  
(
≠≠  !
Vector3
≠≠! (
.
≠≠( )
zero
≠≠) -
,
≠≠- .
Vector3
≠≠/ 6
.
≠≠6 7
forward
≠≠7 >
*
≠≠? @
range
≠≠A F
)
≠≠F G
;
≠≠G H
}
ÆÆ 
using
ØØ 
(
ØØ 
new
ØØ 
Handles
ØØ 
.
ØØ 
DrawingScope
ØØ +
(
ØØ+ ,

innerColor
ØØ, 6
)
ØØ6 7
)
ØØ7 8
{
∞∞ 
Handles
±± 
.
±± 
zTest
±± 
=
±± 
CompareFunction
±±  /
.
±±/ 0
Greater
±±0 7
;
±±7 8
Handles
≤≤ 
.
≤≤ 
DrawLine
≤≤  
(
≤≤  !
Vector3
≤≤! (
.
≤≤( )
zero
≤≤) -
,
≤≤- .
Vector3
≤≤/ 6
.
≤≤6 7
forward
≤≤7 >
*
≤≤? @
range
≤≤A F
)
≤≤F G
;
≤≤G H
}
≥≥ 
Handles
¥¥ 
.
¥¥ 
zTest
¥¥ 
=
¥¥ 
CompareFunction
¥¥ +
.
¥¥+ ,
Always
¥¥, 2
;
¥¥2 3
}
µµ 	
static
∑∑ 
void
∑∑ 
DrawHandleLabel
∑∑ #
(
∑∑# $
Vector3
∑∑$ +
handlePosition
∑∑, :
,
∑∑: ;
string
∑∑< B
	labelText
∑∑C L
,
∑∑L M
float
∑∑N S
offsetFromHandle
∑∑T d
=
∑∑e f
$num
∑∑g k
)
∑∑k l
{
∏∏ 	
Vector3
ππ 
labelPosition
ππ !
=
ππ" #
Vector3
ππ$ +
.
ππ+ ,
zero
ππ, 0
;
ππ0 1
var
ªª 
style
ªª 
=
ªª 
new
ªª 
GUIStyle
ªª $
{
ªª$ %
normal
ªª% +
=
ªª, -
{
ªª. /

background
ªª/ 9
=
ªª: ;
	Texture2D
ªª< E
.
ªªE F
whiteTexture
ªªF R
}
ªªR S
}
ªªS T
;
ªªT U
GUI
ºº 
.
ºº 
color
ºº 
=
ºº 
new
ºº 
Color
ºº !
(
ºº! "
$num
ºº" '
,
ºº' (
$num
ºº) .
,
ºº. /
$num
ºº0 5
,
ºº5 6
$num
ºº7 8
)
ºº8 9
;
ºº9 :
labelPosition
ææ 
=
ææ 
handlePosition
ææ *
+
ææ+ ,
Handles
ææ- 4
.
ææ4 5
inverseMatrix
ææ5 B
.
ææB C
MultiplyVector
ææC Q
(
ææQ R
Vector3
ææR Y
.
ææY Z
up
ææZ \
)
ææ\ ]
*
ææ^ _
HandleUtility
ææ` m
.
ææm n
GetHandleSize
ææn {
(
ææ{ |
handlePositionææ| ä
)ææä ã
*ææå ç 
offsetFromHandleææé û
;ææû ü
Handles
øø 
.
øø 
Label
øø 
(
øø 
labelPosition
øø '
,
øø' (
	labelText
øø) 2
,
øø2 3
style
øø4 9
)
øø9 :
;
øø: ;
}
¿¿ 	
static
¬¬ 
readonly
¬¬ 
BoxBoundsHandle
¬¬ '
s_AreaLightHandle
¬¬( 9
=
¬¬: ;
new
√√ 
BoxBoundsHandle
√√ 
{
√√  !
axes
√√" &
=
√√' (#
PrimitiveBoundsHandle
√√) >
.
√√> ?
Axes
√√? C
.
√√C D
X
√√D E
|
√√F G#
PrimitiveBoundsHandle
√√H ]
.
√√] ^
Axes
√√^ b
.
√√b c
Y
√√c d
}
√√e f
;
√√f g
static
≈≈ 
Vector2
≈≈ 
DoRectHandles
≈≈ $
(
≈≈$ %
Vector2
≈≈% ,
size
≈≈- 1
)
≈≈1 2
{
∆∆ 	
s_AreaLightHandle
«« 
.
«« 
center
«« $
=
««% &
Vector3
««' .
.
««. /
zero
««/ 3
;
««3 4
s_AreaLightHandle
»» 
.
»» 
size
»» "
=
»»# $
size
»»% )
;
»») *
DrawWithZTest
…… 
(
…… 
s_AreaLightHandle
…… +
)
……+ ,
;
……, -
return
ÀÀ 
s_AreaLightHandle
ÀÀ $
.
ÀÀ$ %
size
ÀÀ% )
;
ÀÀ) *
}
ÃÃ 	
static
ŒŒ 
readonly
ŒŒ  
SphereBoundsHandle
ŒŒ *
s_DiscLightHandle
ŒŒ+ <
=
ŒŒ= >
new
œœ  
SphereBoundsHandle
œœ "
{
œœ# $
axes
œœ% )
=
œœ* +#
PrimitiveBoundsHandle
œœ, A
.
œœA B
Axes
œœB F
.
œœF G
X
œœG H
|
œœI J#
PrimitiveBoundsHandle
œœK `
.
œœ` a
Axes
œœa e
.
œœe f
Y
œœf g
}
œœh i
;
œœj k
static
–– 
float
–– 
DoDiscHandles
–– "
(
––" #
float
––# (
radius
––) /
)
––/ 0
{
—— 	
s_DiscLightHandle
““ 
.
““ 
center
““ $
=
““% &
Vector3
““' .
.
““. /
zero
““/ 3
;
““3 4
s_DiscLightHandle
”” 
.
”” 
radius
”” $
=
””% &
radius
””' -
;
””- .
DrawWithZTest
‘‘ 
(
‘‘ 
s_DiscLightHandle
‘‘ +
)
‘‘+ ,
;
‘‘, -
return
÷÷ 
s_DiscLightHandle
÷÷ $
.
÷÷$ %
radius
÷÷% +
;
÷÷+ ,
}
◊◊ 	
static
ŸŸ 
readonly
ŸŸ  
SphereBoundsHandle
ŸŸ * 
s_PointLightHandle
ŸŸ+ =
=
ŸŸ> ?
new
⁄⁄  
SphereBoundsHandle
⁄⁄ "
{
⁄⁄# $
axes
⁄⁄% )
=
⁄⁄* +#
PrimitiveBoundsHandle
⁄⁄, A
.
⁄⁄A B
Axes
⁄⁄B F
.
⁄⁄F G
All
⁄⁄G J
}
⁄⁄K L
;
⁄⁄L M
static
‹‹ 
float
‹‹ 
DoPointHandles
‹‹ #
(
‹‹# $
float
‹‹$ )
range
‹‹* /
)
‹‹/ 0
{
›› 	 
s_PointLightHandle
ﬁﬁ 
.
ﬁﬁ 
radius
ﬁﬁ %
=
ﬁﬁ& '
range
ﬁﬁ( -
;
ﬁﬁ- .
DrawWithZTest
ﬂﬂ 
(
ﬂﬂ  
s_PointLightHandle
ﬂﬂ ,
)
ﬂﬂ, -
;
ﬂﬂ- .
return
··  
s_PointLightHandle
·· %
.
··% &
radius
··& ,
;
··, -
}
‚‚ 	
static
‰‰ 
bool
‰‰  
drawInnerConeAngle
‰‰ &
=
‰‰' (
true
‰‰) -
;
‰‰- .
public
ÍÍ 
static
ÍÍ 
void
ÍÍ  
DrawSpotLightGizmo
ÍÍ -
(
ÍÍ- .
Light
ÍÍ. 3
light
ÍÍ4 9
)
ÍÍ9 :
{
ÎÎ 	
var
ÌÌ 
defColor
ÌÌ 
=
ÌÌ 
Handles
ÌÌ "
.
ÌÌ" #
color
ÌÌ# (
;
ÌÌ( )
var
ÓÓ 
defZTest
ÓÓ 
=
ÓÓ 
Handles
ÓÓ "
.
ÓÓ" #
zTest
ÓÓ# (
;
ÓÓ( )
Color
ÒÒ 

outerColor
ÒÒ 
=
ÒÒ /
!GetLightAboveObjectWireframeColor
ÒÒ @
(
ÒÒ@ A
light
ÒÒA F
.
ÒÒF G
color
ÒÒG L
)
ÒÒL M
;
ÒÒM N
Color
ÙÙ 
outerColorZTest
ÙÙ !
=
ÙÙ" #0
"GetLightBehindObjectWireframeColor
ÙÙ$ F
(
ÙÙF G

outerColor
ÙÙG Q
)
ÙÙQ R
;
ÙÙR S
Color
˜˜ 

innerColor
˜˜ 
=
˜˜ $
GetLightInnerConeColor
˜˜ 5
(
˜˜5 6
light
˜˜6 ;
.
˜˜; <
color
˜˜< A
)
˜˜A B
;
˜˜B C
Color
˙˙ 
innerColorZTest
˙˙ !
=
˙˙" #0
"GetLightBehindObjectWireframeColor
˙˙$ F
(
˙˙F G

innerColor
˙˙G Q
)
˙˙Q R
;
˙˙R S
Handles
˝˝ 
.
˝˝ 
zTest
˝˝ 
=
˝˝ 
CompareFunction
˝˝ +
.
˝˝+ ,
	LessEqual
˝˝, 5
;
˝˝5 6$
DrawSpotlightWireframe
˛˛ "
(
˛˛" #
light
˛˛# (
,
˛˛( )

outerColor
˛˛* 4
,
˛˛4 5

innerColor
˛˛6 @
)
˛˛@ A
;
˛˛A B
Handles
ÅÅ 
.
ÅÅ 
zTest
ÅÅ 
=
ÅÅ 
CompareFunction
ÅÅ +
.
ÅÅ+ ,
Greater
ÅÅ, 3
;
ÅÅ3 4$
DrawSpotlightWireframe
ÇÇ "
(
ÇÇ" #
light
ÇÇ# (
,
ÇÇ( )
outerColorZTest
ÇÇ* 9
,
ÇÇ9 :
innerColorZTest
ÇÇ; J
)
ÇÇJ K
;
ÇÇK L
Handles
ÖÖ 
.
ÖÖ 
zTest
ÖÖ 
=
ÖÖ 
CompareFunction
ÖÖ +
.
ÖÖ+ ,
Always
ÖÖ, 2
;
ÖÖ2 3
if
àà 
(
àà 
!
àà 
Event
àà 
.
àà 
current
àà 
.
àà 
alt
àà "
)
àà" #
{
ââ "
DrawHandlesAndLabels
ää $
(
ää$ %
light
ää% *
,
ää* +

outerColor
ää, 6
)
ää6 7
;
ää7 8
}
ãã 
Handles
éé 
.
éé 
color
éé 
=
éé 
defColor
éé $
;
éé$ %
Handles
èè 
.
èè 
zTest
èè 
=
èè 
defZTest
èè $
;
èè$ %
}
êê 	
static
íí 
void
íí "
DrawHandlesAndLabels
íí (
(
íí( )
Light
íí) .
light
íí/ 4
,
íí4 5
Color
íí6 ;
color
íí< A
)
ííA B
{
ìì 	
Vector3
ïï 
zeroPos
ïï 
=
ïï 
Vector3
ïï %
.
ïï% &
zero
ïï& *
;
ïï* +
HandleDirections
òò "
DrawHandleDirections
òò 1
;
òò1 2
Handles
õõ 
.
õõ 
color
õõ 
=
õõ 
color
õõ !
;
õõ! "
float
ûû 
range
ûû 
=
ûû 
light
ûû 
.
ûû  
range
ûû  %
;
ûû% &
var
üü 
id
üü 
=
üü 

GUIUtility
üü 
.
üü  
GetControlID
üü  ,
(
üü, -
	FocusType
üü- 6
.
üü6 7
Passive
üü7 >
)
üü> ?
;
üü? @
	EditorGUI
†† 
.
†† 
BeginChangeCheck
†† &
(
††& '
)
††' (
;
††( )
range
°° 
=
°° 
SliderLineHandle
°° $
(
°°$ %
id
°°% '
,
°°' (
Vector3
°°) 0
.
°°0 1
zero
°°1 5
,
°°5 6
Vector3
°°7 >
.
°°> ?
forward
°°? F
,
°°F G
range
°°H M
,
°°M N
$str
°°O X
)
°°X Y
;
°°Y Z
if
¢¢ 
(
¢¢ 
	EditorGUI
¢¢ 
.
¢¢ 
EndChangeCheck
¢¢ (
(
¢¢( )
)
¢¢) *
)
¢¢* +
{
££ 
Undo
§§ 
.
§§ 
RecordObjects
§§ "
(
§§" #
new
§§# &
[
§§& '
]
§§' (
{
§§) *
light
§§+ 0
}
§§1 2
,
§§2 3
$str
§§4 H
)
§§H I
;
§§I J
}
•• "
DrawHandleDirections
®®  
=
®®! "
HandleDirections
®®# 3
.
®®3 4
Down
®®4 8
|
®®9 :
HandleDirections
®®; K
.
®®K L
Up
®®L N
;
®®N O
const
©© 
string
©© 

outerLabel
©© #
=
©©$ %
$str
©©& 5
;
©©5 6
	EditorGUI
´´ 
.
´´ 
BeginChangeCheck
´´ &
(
´´& '
)
´´' (
;
´´( )
float
¨¨ 

outerAngle
¨¨ 
=
¨¨ 
DrawConeHandles
¨¨ .
(
¨¨. /
zeroPos
¨¨/ 6
,
¨¨6 7
light
¨¨8 =
.
¨¨= >
	spotAngle
¨¨> G
,
¨¨G H
range
¨¨I N
,
¨¨N O"
DrawHandleDirections
¨¨P d
,
¨¨d e

outerLabel
¨¨f p
)
¨¨p q
;
¨¨q r
if
≠≠ 
(
≠≠ 
	EditorGUI
≠≠ 
.
≠≠ 
EndChangeCheck
≠≠ (
(
≠≠( )
)
≠≠) *
)
≠≠* +
{
ÆÆ 
Undo
ØØ 
.
ØØ 
RecordObjects
ØØ "
(
ØØ" #
new
ØØ# &
[
ØØ& '
]
ØØ' (
{
ØØ) *
light
ØØ+ 0
}
ØØ1 2
,
ØØ2 3
$str
ØØ4 N
)
ØØN O
;
ØØO P
}
∞∞ 
float
≥≥ 

innerAngle
≥≥ 
=
≥≥ 
$num
≥≥  
;
≥≥  !
const
¥¥ 
string
¥¥ 

innerLabel
¥¥ #
=
¥¥$ %
$str
¥¥& 5
;
¥¥5 6
if
µµ 
(
µµ 
light
µµ 
.
µµ 
innerSpotAngle
µµ $
>
µµ% &
$num
µµ' )
&&
µµ* , 
drawInnerConeAngle
µµ- ?
)
µµ? @
{
∂∂ "
DrawHandleDirections
∑∑ $
=
∑∑% &
HandleDirections
∑∑' 7
.
∑∑7 8
Left
∑∑8 <
|
∑∑= >
HandleDirections
∑∑? O
.
∑∑O P
Right
∑∑P U
;
∑∑U V
	EditorGUI
∏∏ 
.
∏∏ 
BeginChangeCheck
∏∏ *
(
∏∏* +
)
∏∏+ ,
;
∏∏, -

innerAngle
ππ 
=
ππ 
DrawConeHandles
ππ ,
(
ππ, -
zeroPos
ππ- 4
,
ππ4 5
light
ππ6 ;
.
ππ; <
innerSpotAngle
ππ< J
,
ππJ K
range
ππL Q
,
ππQ R"
DrawHandleDirections
ππS g
,
ππg h

innerLabel
ππi s
)
ππs t
;
ππt u
if
∫∫ 
(
∫∫ 
	EditorGUI
∫∫ 
.
∫∫ 
EndChangeCheck
∫∫ ,
(
∫∫, -
)
∫∫- .
)
∫∫. /
{
ªª 
Undo
ºº 
.
ºº 
RecordObjects
ºº &
(
ºº& '
new
ºº' *
[
ºº* +
]
ºº+ ,
{
ºº- .
light
ºº/ 4
}
ºº5 6
,
ºº6 7
$str
ºº8 R
)
ººR S
;
ººS T
}
ΩΩ 
}
ææ 
float
¡¡ 
nearPlaneRange
¡¡  
=
¡¡! "
light
¡¡# (
.
¡¡( )
shadowNearPlane
¡¡) 8
;
¡¡8 9
if
¬¬ 
(
¬¬ 
light
¬¬ 
.
¬¬ 
shadows
¬¬ 
!=
¬¬ 
LightShadows
¬¬  ,
.
¬¬, -
None
¬¬- 1
&&
¬¬2 4
light
¬¬5 :
.
¬¬: ;
lightmapBakeType
¬¬; K
!=
¬¬L N
LightmapBakeType
¬¬O _
.
¬¬_ `
Baked
¬¬` e
)
¬¬e f
{
√√ 
	EditorGUI
ƒƒ 
.
ƒƒ 
BeginChangeCheck
ƒƒ *
(
ƒƒ* +
)
ƒƒ+ ,
;
ƒƒ, -
nearPlaneRange
≈≈ 
=
≈≈  
SliderLineHandle
≈≈! 1
(
≈≈1 2

GUIUtility
≈≈2 <
.
≈≈< =
GetControlID
≈≈= I
(
≈≈I J
	FocusType
≈≈J S
.
≈≈S T
Passive
≈≈T [
)
≈≈[ \
,
≈≈\ ]
Vector3
≈≈^ e
.
≈≈e f
zero
≈≈f j
,
≈≈j k
Vector3
≈≈l s
.
≈≈s t
forward
≈≈t {
,
≈≈{ |
nearPlaneRange≈≈} ã
,≈≈ã å
$str≈≈ç õ
)≈≈õ ú
;≈≈ú ù
if
∆∆ 
(
∆∆ 
	EditorGUI
∆∆ 
.
∆∆ 
EndChangeCheck
∆∆ ,
(
∆∆, -
)
∆∆- .
)
∆∆. /
{
«« 
Undo
»» 
.
»» 
RecordObjects
»» &
(
»»& '
new
»»' *
[
»»* +
]
»»+ ,
{
»»- .
light
»»/ 4
}
»»5 6
,
»»6 7
$str
»»8 X
)
»»X Y
;
»»Y Z
nearPlaneRange
…… "
=
……# $
Mathf
……% *
.
……* +
Clamp
……+ 0
(
……0 1
nearPlaneRange
……1 ?
,
……? @
$num
……A E
,
……E F
light
……G L
.
……L M
range
……M R
)
……R S
;
……S T
}
   
}
ÀÀ 
if
ŒŒ 
(
ŒŒ 
GUI
ŒŒ 
.
ŒŒ 
changed
ŒŒ 
)
ŒŒ 
{
œœ 
light
–– 
.
–– 
	spotAngle
–– 
=
––  !

outerAngle
––" ,
;
––, -
light
—— 
.
—— 
innerSpotAngle
—— $
=
——% &

innerAngle
——' 1
;
——1 2
light
““ 
.
““ 
range
““ 
=
““ 
Math
““ "
.
““" #
Max
““# &
(
““& '
range
““' ,
,
““, -
$num
““. 3
)
““3 4
;
““4 5
light
”” 
.
”” 
shadowNearPlane
”” %
=
””& '
Mathf
””( -
.
””- .
Clamp
””. 3
(
””3 4
nearPlaneRange
””4 B
,
””B C
$num
””D H
,
””H I
light
””J O
.
””O P
range
””P U
)
””U V
;
””V W
}
‘‘ 
}
’’ 	
static
◊◊ 
Color
◊◊ $
GetLightInnerConeColor
◊◊ +
(
◊◊+ ,
Color
◊◊, 1
wireframeColor
◊◊2 @
)
◊◊@ A
{
ÿÿ 	
Color
ŸŸ 
color
ŸŸ 
=
ŸŸ 
wireframeColor
ŸŸ (
;
ŸŸ( )
color
⁄⁄ 
.
⁄⁄ 
a
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
return
€€ 
RemapLightColor
€€ "
(
€€" #
	CoreUtils
€€# ,
.
€€, --
ConvertLinearToActiveColorSpace
€€- L
(
€€L M
color
€€M R
.
€€R S
linear
€€S Y
)
€€Y Z
)
€€Z [
;
€€[ \
}
‹‹ 	
static
ﬁﬁ 
Color
ﬁﬁ /
!GetLightAboveObjectWireframeColor
ﬁﬁ 6
(
ﬁﬁ6 7
Color
ﬁﬁ7 <
wireframeColor
ﬁﬁ= K
)
ﬁﬁK L
{
ﬂﬂ 	
Color
‡‡ 
color
‡‡ 
=
‡‡ 
wireframeColor
‡‡ (
;
‡‡( )
color
·· 
.
·· 
a
·· 
=
·· 
$num
·· 
;
·· 
return
‚‚ 
RemapLightColor
‚‚ !
(
‚‚! "
	CoreUtils
‚‚" +
.
‚‚+ ,-
ConvertLinearToActiveColorSpace
‚‚, K
(
‚‚K L
color
‚‚L Q
.
‚‚Q R
linear
‚‚R X
)
‚‚X Y
)
‚‚Y Z
;
‚‚Z [
}
„„ 	
static
ÂÂ 
Color
ÂÂ 0
"GetLightBehindObjectWireframeColor
ÂÂ 7
(
ÂÂ7 8
Color
ÂÂ8 =
wireframeColor
ÂÂ> L
)
ÂÂL M
{
ÊÊ 	
Color
ÁÁ 
color
ÁÁ 
=
ÁÁ 
wireframeColor
ÁÁ (
;
ÁÁ( )
color
ËË 
.
ËË 
a
ËË 
=
ËË 
$num
ËË 
;
ËË 
return
ÈÈ 
RemapLightColor
ÈÈ "
(
ÈÈ" #
	CoreUtils
ÈÈ# ,
.
ÈÈ, --
ConvertLinearToActiveColorSpace
ÈÈ- L
(
ÈÈL M
color
ÈÈM R
.
ÈÈR S
linear
ÈÈS Y
)
ÈÈY Z
)
ÈÈZ [
;
ÈÈ[ \
}
ÍÍ 	
static
ÏÏ 
Color
ÏÏ 
RemapLightColor
ÏÏ $
(
ÏÏ$ %
Color
ÏÏ% *
src
ÏÏ+ .
)
ÏÏ. /
{
ÌÌ 	
Color
ÓÓ 
color
ÓÓ 
=
ÓÓ 
src
ÓÓ 
;
ÓÓ 
float
ÔÔ 
max
ÔÔ 
=
ÔÔ 
Mathf
ÔÔ 
.
ÔÔ 
Max
ÔÔ !
(
ÔÔ! "
Mathf
ÔÔ# (
.
ÔÔ( )
Max
ÔÔ) ,
(
ÔÔ, -
color
ÔÔ- 2
.
ÔÔ2 3
r
ÔÔ3 4
,
ÔÔ4 5
color
ÔÔ6 ;
.
ÔÔ; <
g
ÔÔ< =
)
ÔÔ= >
,
ÔÔ> ?
color
ÔÔ@ E
.
ÔÔE F
b
ÔÔF G
)
ÔÔG H
;
ÔÔH I
if
 
(
 
max
 
>
 
$num
 
)
 
{
ÒÒ 
float
ÚÚ 
mult
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
/
ÚÚ  !
max
ÚÚ" %
;
ÚÚ% &
color
ÛÛ 
.
ÛÛ 
r
ÛÛ 
*=
ÛÛ 
mult
ÛÛ 
;
ÛÛ  
color
ÙÙ 
.
ÙÙ 
g
ÙÙ 
*=
ÙÙ 
mult
ÙÙ 
;
ÙÙ  
color
ıı 
.
ıı 
b
ıı 
*=
ıı 
mult
ıı 
;
ıı  
}
ˆˆ 
else
˜˜ 
{
¯¯ 
color
˘˘ 
=
˘˘ 
Color
˘˘ 
.
˘˘ 
white
˘˘ #
;
˘˘# $
}
˙˙ 
return
¸¸ 
color
¸¸ 
;
¸¸ 
}
˝˝ 	
static
ˇˇ 
void
ˇˇ $
DrawSpotlightWireframe
ˇˇ *
(
ˇˇ* +
Light
ˇˇ+ 0
	spotlight
ˇˇ1 :
,
ˇˇ: ;
Color
ˇˇ< A

outerColor
ˇˇB L
,
ˇˇL M
Color
ˇˇN S

innerColor
ˇˇT ^
)
ˇˇ^ _
{
ÄÄ 	
HandleDirections
ÇÇ "
DrawHandleDirections
ÇÇ 1
;
ÇÇ1 2
float
ÑÑ 

outerAngle
ÑÑ 
=
ÑÑ 
	spotlight
ÑÑ (
.
ÑÑ( )
	spotAngle
ÑÑ) 2
;
ÑÑ2 3
float
ÖÖ 

innerAngle
ÖÖ 
=
ÖÖ 
	spotlight
ÖÖ (
.
ÖÖ( )
innerSpotAngle
ÖÖ) 7
;
ÖÖ7 8
float
ÜÜ 
range
ÜÜ 
=
ÜÜ 
	spotlight
ÜÜ #
.
ÜÜ# $
range
ÜÜ$ )
;
ÜÜ) *
var
àà 
outerDiscRadius
àà 
=
àà  !
range
àà" '
*
àà( )
Mathf
àà* /
.
àà/ 0
Sin
àà0 3
(
àà3 4

outerAngle
àà4 >
*
àà? @
Mathf
ààA F
.
ààF G
Deg2Rad
ààG N
*
ààO P
$num
ààQ U
)
ààU V
;
ààV W
var
ââ 
outerDiscDistance
ââ !
=
ââ" #
Mathf
ââ$ )
.
ââ) *
Cos
ââ* -
(
ââ- .
Mathf
ââ. 3
.
ââ3 4
Deg2Rad
ââ4 ;
*
ââ< =

outerAngle
ââ> H
*
ââI J
$num
ââK O
)
ââO P
*
ââQ R
range
ââS X
;
ââX Y
var
ää 
vectorLineUp
ää 
=
ää 
Vector3
ää &
.
ää& '
	Normalize
ää' 0
(
ää0 1
Vector3
ää1 8
.
ää8 9
forward
ää9 @
*
ääA B
outerDiscDistance
ääC T
+
ääU V
Vector3
ääW ^
.
ää^ _
up
ää_ a
*
ääb c
outerDiscRadius
ääd s
)
ääs t
;
äät u
var
ãã 
vectorLineLeft
ãã 
=
ãã  
Vector3
ãã! (
.
ãã( )
	Normalize
ãã) 2
(
ãã2 3
Vector3
ãã3 :
.
ãã: ;
forward
ãã; B
*
ããC D
outerDiscDistance
ããE V
+
ããW X
Vector3
ããY `
.
ãã` a
left
ããa e
*
ããf g
outerDiscRadius
ããh w
)
ããw x
;
ããx y
if
èè 
(
èè 

innerAngle
èè 
>
èè 
$num
èè 
&&
èè ! 
drawInnerConeAngle
èè" 4
)
èè4 5
{
êê "
DrawHandleDirections
ëë $
=
ëë% &
HandleDirections
ëë' 7
.
ëë7 8
Up
ëë8 :
|
ëë; <
HandleDirections
ëë= M
.
ëëM N
Down
ëëN R
;
ëëR S
var
íí 
innerDiscRadius
íí #
=
íí$ %
range
íí& +
*
íí, -
Mathf
íí. 3
.
íí3 4
Sin
íí4 7
(
íí7 8

innerAngle
íí8 B
*
ííC D
Mathf
ííE J
.
ííJ K
Deg2Rad
ííK R
*
ííS T
$num
ííU Y
)
ííY Z
;
ííZ [
var
ìì 
innerDiscDistance
ìì %
=
ìì& '
Mathf
ìì( -
.
ìì- .
Cos
ìì. 1
(
ìì1 2
Mathf
ìì2 7
.
ìì7 8
Deg2Rad
ìì8 ?
*
ìì@ A

innerAngle
ììB L
*
ììM N
$num
ììO S
)
ììS T
*
ììU V
range
ììW \
;
ìì\ ]
Handles
ññ 
.
ññ 
color
ññ 
=
ññ 

innerColor
ññ  *
;
ññ* +
DrawConeWireframe
óó !
(
óó! "
innerDiscRadius
óó" 1
,
óó1 2
innerDiscDistance
óó3 D
,
óóD E"
DrawHandleDirections
óóF Z
)
óóZ [
;
óó[ \
}
òò 
Handles
õõ 
.
õõ 
color
õõ 
=
õõ 

innerColor
õõ &
;
õõ& '
var
úú 
rangeCenter
úú 
=
úú 
Vector3
úú %
.
úú% &
forward
úú& -
*
úú. /
range
úú0 5
;
úú5 6
Handles
ùù 
.
ùù 
DrawLine
ùù 
(
ùù 
Vector3
ùù $
.
ùù$ %
zero
ùù% )
,
ùù) *
rangeCenter
ùù+ 6
)
ùù6 7
;
ùù7 8
Handles
†† 
.
†† 
color
†† 
=
†† 

outerColor
†† &
;
††& '"
DrawHandleDirections
¢¢  
=
¢¢! "
HandleDirections
¢¢# 3
.
¢¢3 4
Left
¢¢4 8
|
¢¢9 :
HandleDirections
¢¢; K
.
¢¢K L
Right
¢¢L Q
;
¢¢Q R
DrawConeWireframe
££ 
(
££ 
outerDiscRadius
££ -
,
££- .
outerDiscDistance
££/ @
,
££@ A"
DrawHandleDirections
££B V
)
££V W
;
££W X
Handles
¶¶ 
.
¶¶ 
DrawWireArc
¶¶ 
(
¶¶  
Vector3
¶¶  '
.
¶¶' (
zero
¶¶( ,
,
¶¶, -
Vector3
¶¶. 5
.
¶¶5 6
right
¶¶6 ;
,
¶¶; <
vectorLineUp
¶¶= I
,
¶¶I J

outerAngle
¶¶K U
,
¶¶U V
range
¶¶W \
)
¶¶\ ]
;
¶¶] ^
Handles
ßß 
.
ßß 
DrawWireArc
ßß 
(
ßß  
Vector3
ßß  '
.
ßß' (
zero
ßß( ,
,
ßß, -
Vector3
ßß. 5
.
ßß5 6
up
ßß6 8
,
ßß8 9
vectorLineLeft
ßß: H
,
ßßH I

outerAngle
ßßJ T
,
ßßT U
range
ßßV [
)
ßß[ \
;
ßß\ ]
if
™™ 
(
™™ 
	spotlight
™™ 
.
™™ 
shadows
™™  
!=
™™! #
LightShadows
™™$ 0
.
™™0 1
None
™™1 5
&&
™™6 8
	spotlight
™™9 B
.
™™B C
lightmapBakeType
™™C S
!=
™™T V
LightmapBakeType
™™W g
.
™™g h
Baked
™™h m
)
™™m n
{
´´ !
DrawShadowNearPlane
¨¨ #
(
¨¨# $
	spotlight
¨¨$ -
,
¨¨- .

innerColor
¨¨/ 9
)
¨¨9 :
;
¨¨: ;
}
≠≠ 
}
ÆÆ 	
static
∞∞ 
void
∞∞ !
DrawShadowNearPlane
∞∞ '
(
∞∞' (
Light
∞∞( -
	spotlight
∞∞. 7
,
∞∞7 8
Color
∞∞9 >
color
∞∞? D
)
∞∞D E
{
±± 	
Color
≤≤ 
previousColor
≤≤ 
=
≤≤  !
Handles
≤≤" )
.
≤≤) *
color
≤≤* /
;
≤≤/ 0
Handles
≥≥ 
.
≥≥ 
color
≥≥ 
=
≥≥ 
color
≥≥ !
;
≥≥! "
var
µµ 
shadowDiscRadius
µµ  
=
µµ! "
Mathf
µµ# (
.
µµ( )
Tan
µµ) ,
(
µµ, -
	spotlight
µµ- 6
.
µµ6 7
	spotAngle
µµ7 @
*
µµA B
Mathf
µµC H
.
µµH I
Deg2Rad
µµI P
*
µµQ R
$num
µµS W
)
µµW X
*
µµY Z
	spotlight
µµ[ d
.
µµd e
shadowNearPlane
µµe t
;
µµt u
var
∂∂  
shadowDiscDistance
∂∂ "
=
∂∂# $
	spotlight
∂∂% .
.
∂∂. /
shadowNearPlane
∂∂/ >
;
∂∂? @
Handles
∑∑ 
.
∑∑ 
DrawWireDisc
∑∑  
(
∑∑  !
Vector3
∑∑! (
.
∑∑( )
forward
∑∑) 0
*
∑∑1 2 
shadowDiscDistance
∑∑3 E
,
∑∑E F
Vector3
∑∑G N
.
∑∑N O
forward
∑∑O V
,
∑∑V W
shadowDiscRadius
∑∑X h
)
∑∑h i
;
∑∑i j
Handles
∏∏ 
.
∏∏ 
DrawLine
∏∏ 
(
∏∏ 
Vector3
∏∏ $
.
∏∏$ %
forward
∏∏% ,
*
∏∏- . 
shadowDiscDistance
∏∏/ A
,
∏∏A B
(
∏∏C D
Vector3
∏∏D K
.
∏∏K L
right
∏∏L Q
*
∏∏R S
shadowDiscRadius
∏∏T d
)
∏∏d e
+
∏∏f g
(
∏∏h i
Vector3
∏∏i p
.
∏∏p q
forward
∏∏q x
*
∏∏y z!
shadowDiscDistance∏∏{ ç
)∏∏ç é
)∏∏é è
;∏∏è ê
Handles
ππ 
.
ππ 
DrawLine
ππ 
(
ππ 
Vector3
ππ $
.
ππ$ %
forward
ππ% ,
*
ππ- . 
shadowDiscDistance
ππ/ A
,
ππA B
(
ππC D
-
ππD E
Vector3
ππE L
.
ππL M
right
ππM R
*
ππS T
shadowDiscRadius
ππU e
)
ππe f
+
ππg h
(
ππi j
Vector3
ππj q
.
ππq r
forward
ππr y
*
ππz {!
shadowDiscDistanceππ| é
)ππé è
)ππè ê
;ππê ë
Handles
ªª 
.
ªª 
color
ªª 
=
ªª 
previousColor
ªª )
;
ªª) *
}
ºº 	
static
ææ 
void
ææ 
DrawConeWireframe
ææ %
(
ææ% &
float
ææ& +
radius
ææ, 2
,
ææ2 3
float
ææ4 9
height
ææ: @
,
ææ@ A
HandleDirections
ææB R
handleDirections
ææS c
)
ææc d
{
øø 	
var
¿¿ 
rangeCenter
¿¿ 
=
¿¿ 
Vector3
¿¿ %
.
¿¿% &
forward
¿¿& -
*
¿¿. /
height
¿¿0 6
;
¿¿6 7
if
¡¡ 
(
¡¡ 
handleDirections
¡¡  
.
¡¡  !
HasFlag
¡¡! (
(
¡¡( )
HandleDirections
¡¡) 9
.
¡¡9 :
Up
¡¡: <
)
¡¡< =
)
¡¡= >
{
¬¬ 
var
√√ 
rangeUp
√√ 
=
√√ 
rangeCenter
√√ )
+
√√* +
Vector3
√√, 3
.
√√3 4
up
√√4 6
*
√√7 8
radius
√√9 ?
;
√√? @
Handles
ƒƒ 
.
ƒƒ 
DrawLine
ƒƒ  
(
ƒƒ  !
Vector3
ƒƒ! (
.
ƒƒ( )
zero
ƒƒ) -
,
ƒƒ- .
rangeUp
ƒƒ/ 6
)
ƒƒ6 7
;
ƒƒ7 8
}
≈≈ 
if
«« 
(
«« 
handleDirections
««  
.
««  !
HasFlag
««! (
(
««( )
HandleDirections
««) 9
.
««9 :
Down
««: >
)
««> ?
)
««? @
{
»» 
var
…… 
	rangeDown
…… 
=
…… 
rangeCenter
……  +
-
……, -
Vector3
……. 5
.
……5 6
up
……6 8
*
……9 :
radius
……; A
;
……A B
Handles
   
.
   
DrawLine
    
(
    !
Vector3
  ! (
.
  ( )
zero
  ) -
,
  - .
	rangeDown
  / 8
)
  8 9
;
  9 :
}
ÀÀ 
if
ÕÕ 
(
ÕÕ 
handleDirections
ÕÕ  
.
ÕÕ  !
HasFlag
ÕÕ! (
(
ÕÕ( )
HandleDirections
ÕÕ) 9
.
ÕÕ9 :
Right
ÕÕ: ?
)
ÕÕ? @
)
ÕÕ@ A
{
ŒŒ 
var
œœ 

rangeRight
œœ 
=
œœ  
rangeCenter
œœ! ,
+
œœ- .
Vector3
œœ/ 6
.
œœ6 7
right
œœ7 <
*
œœ= >
radius
œœ? E
;
œœE F
Handles
–– 
.
–– 
DrawLine
––  
(
––  !
Vector3
––! (
.
––( )
zero
––) -
,
––- .

rangeRight
––/ 9
)
––9 :
;
––: ;
}
—— 
if
”” 
(
”” 
handleDirections
””  
.
””  !
HasFlag
””! (
(
””( )
HandleDirections
””) 9
.
””9 :
Left
””: >
)
””> ?
)
””? @
{
‘‘ 
var
’’ 
	rangeLeft
’’ 
=
’’ 
rangeCenter
’’  +
-
’’, -
Vector3
’’. 5
.
’’5 6
right
’’6 ;
*
’’< =
radius
’’> D
;
’’D E
Handles
÷÷ 
.
÷÷ 
DrawLine
÷÷  
(
÷÷  !
Vector3
÷÷! (
.
÷÷( )
zero
÷÷) -
,
÷÷- .
	rangeLeft
÷÷/ 8
)
÷÷8 9
;
÷÷9 :
}
◊◊ 
Handles
⁄⁄ 
.
⁄⁄ 
DrawWireDisc
⁄⁄  
(
⁄⁄  !
rangeCenter
⁄⁄! ,
,
⁄⁄, -
Vector3
⁄⁄. 5
.
⁄⁄5 6
forward
⁄⁄6 =
,
⁄⁄= >
radius
⁄⁄? E
)
⁄⁄E F
;
⁄⁄F G
}
€€ 	
static
›› 
float
›› 
DrawConeHandles
›› $
(
››$ %
Vector3
››% ,
position
››- 5
,
››5 6
float
››7 <
angle
››= B
,
››B C
float
››D I
range
››J O
,
››O P
HandleDirections
››Q a
handleDirections
››b r
,
››r s
string
››t z
controlName››{ Ü
)››Ü á
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
handleDirections
ﬂﬂ 
.
ﬂﬂ  
HasFlag
ﬂﬂ  '
(
ﬂﬂ' (
HandleDirections
ﬂﬂ( 8
.
ﬂﬂ8 9
Left
ﬂﬂ9 =
)
ﬂﬂ= >
)
ﬂﬂ> ?
{
‡‡ 
angle
·· 
=
·· !
SizeSliderSpotAngle
·· +
(
··+ ,
position
··, 4
,
··4 5
Vector3
··6 =
.
··= >
forward
··> E
,
··E F
-
··G H
Vector3
··H O
.
··O P
right
··P U
,
··U V
range
··W \
,
··\ ]
angle
··^ c
,
··c d
controlName
··e p
)
··p q
;
··q r
}
‚‚ 
if
„„ 
(
„„ 
handleDirections
„„ 
.
„„  
HasFlag
„„  '
(
„„' (
HandleDirections
„„( 8
.
„„8 9
Up
„„9 ;
)
„„; <
)
„„< =
{
‰‰ 
angle
ÂÂ 
=
ÂÂ !
SizeSliderSpotAngle
ÂÂ +
(
ÂÂ+ ,
position
ÂÂ, 4
,
ÂÂ4 5
Vector3
ÂÂ6 =
.
ÂÂ= >
forward
ÂÂ> E
,
ÂÂE F
Vector3
ÂÂG N
.
ÂÂN O
up
ÂÂO Q
,
ÂÂQ R
range
ÂÂS X
,
ÂÂX Y
angle
ÂÂZ _
,
ÂÂ_ `
controlName
ÂÂa l
)
ÂÂl m
;
ÂÂm n
}
ÊÊ 
if
ÁÁ 
(
ÁÁ 
handleDirections
ÁÁ 
.
ÁÁ  
HasFlag
ÁÁ  '
(
ÁÁ' (
HandleDirections
ÁÁ( 8
.
ÁÁ8 9
Right
ÁÁ9 >
)
ÁÁ> ?
)
ÁÁ? @
{
ËË 
angle
ÈÈ 
=
ÈÈ !
SizeSliderSpotAngle
ÈÈ +
(
ÈÈ+ ,
position
ÈÈ, 4
,
ÈÈ4 5
Vector3
ÈÈ6 =
.
ÈÈ= >
forward
ÈÈ> E
,
ÈÈE F
Vector3
ÈÈG N
.
ÈÈN O
right
ÈÈO T
,
ÈÈT U
range
ÈÈV [
,
ÈÈ[ \
angle
ÈÈ] b
,
ÈÈb c
controlName
ÈÈd o
)
ÈÈo p
;
ÈÈp q
}
ÍÍ 
if
ÎÎ 
(
ÎÎ 
handleDirections
ÎÎ 
.
ÎÎ  
HasFlag
ÎÎ  '
(
ÎÎ' (
HandleDirections
ÎÎ( 8
.
ÎÎ8 9
Down
ÎÎ9 =
)
ÎÎ= >
)
ÎÎ> ?
{
ÏÏ 
angle
ÌÌ 
=
ÌÌ !
SizeSliderSpotAngle
ÌÌ +
(
ÌÌ+ ,
position
ÌÌ, 4
,
ÌÌ4 5
Vector3
ÌÌ6 =
.
ÌÌ= >
forward
ÌÌ> E
,
ÌÌE F
-
ÌÌG H
Vector3
ÌÌH O
.
ÌÌO P
up
ÌÌP R
,
ÌÌR S
range
ÌÌT Y
,
ÌÌY Z
angle
ÌÌ[ `
,
ÌÌ` a
controlName
ÌÌb m
)
ÌÌm n
;
ÌÌn o
}
ÓÓ 
return
ÔÔ 
angle
ÔÔ 
;
ÔÔ 
}
 	
static
ÚÚ 
float
ÚÚ 
SliderLineHandle
ÚÚ %
(
ÚÚ% &
int
ÚÚ& )
id
ÚÚ* ,
,
ÚÚ, -
Vector3
ÚÚ. 5
position
ÚÚ6 >
,
ÚÚ> ?
Vector3
ÚÚ@ G
	direction
ÚÚH Q
,
ÚÚQ R
float
ÚÚS X
value
ÚÚY ^
,
ÚÚ^ _
string
ÚÚ` f
	labelText
ÚÚg p
=
ÚÚq r
$str
ÚÚs u
)
ÚÚu v
{
ÛÛ 	
Vector3
ÙÙ 
pos
ÙÙ 
=
ÙÙ 
position
ÙÙ "
+
ÙÙ# $
	direction
ÙÙ% .
*
ÙÙ/ 0
value
ÙÙ1 6
;
ÙÙ6 7
float
ıı 

sizeHandle
ıı 
=
ıı 
HandleUtility
ıı ,
.
ıı, -
GetHandleSize
ıı- :
(
ıı: ;
pos
ıı; >
)
ıı> ?
;
ıı? @
bool
ˆˆ 
temp
ˆˆ 
=
ˆˆ 
GUI
ˆˆ 
.
ˆˆ 
changed
ˆˆ #
;
ˆˆ# $
GUI
˜˜ 
.
˜˜ 
changed
˜˜ 
=
˜˜ 
false
˜˜ 
;
˜˜  
pos
¯¯ 
=
¯¯ 
Handles
¯¯ 
.
¯¯ 
Slider
¯¯  
(
¯¯  !
id
¯¯! #
,
¯¯# $
pos
¯¯% (
,
¯¯( )
	direction
¯¯* 3
,
¯¯3 4

sizeHandle
¯¯5 ?
*
¯¯@ A
$num
¯¯B G
,
¯¯G H
Handles
¯¯I P
.
¯¯P Q
DotHandleCap
¯¯Q ]
,
¯¯] ^
$num
¯¯_ a
)
¯¯a b
;
¯¯b c
if
˘˘ 
(
˘˘ 
GUI
˘˘ 
.
˘˘ 
changed
˘˘ 
)
˘˘ 
{
˙˙ 
value
˚˚ 
=
˚˚ 
Vector3
˚˚ 
.
˚˚  
Dot
˚˚  #
(
˚˚# $
pos
˚˚$ '
-
˚˚( )
position
˚˚* 2
,
˚˚2 3
	direction
˚˚4 =
)
˚˚= >
;
˚˚> ?
}
¸¸ 
GUI
˝˝ 
.
˝˝ 
changed
˝˝ 
|=
˝˝ 
temp
˝˝ 
;
˝˝  
if
ˇˇ 
(
ˇˇ 

GUIUtility
ˇˇ 
.
ˇˇ 

hotControl
ˇˇ %
==
ˇˇ& (
id
ˇˇ) +
&&
ˇˇ, .
!
ˇˇ/ 0
String
ˇˇ0 6
.
ˇˇ6 7
IsNullOrEmpty
ˇˇ7 D
(
ˇˇD E
	labelText
ˇˇE N
)
ˇˇN O
)
ˇˇO P
{
ÄÄ 
	labelText
ÅÅ 
+=
ÅÅ 
FormattableString
ÅÅ .
.
ÅÅ. /
	Invariant
ÅÅ/ 8
(
ÅÅ8 9
$"
ÅÅ9 ;
{
ÅÅ; <
value
ÅÅ< A
:
ÅÅA B
0.00
ÅÅB F
}
ÅÅF G
"
ÅÅG H
)
ÅÅH I
;
ÅÅI J
DrawHandleLabel
ÇÇ 
(
ÇÇ  
pos
ÇÇ  #
,
ÇÇ# $
	labelText
ÇÇ% .
)
ÇÇ. /
;
ÇÇ/ 0
}
ÉÉ 
return
ÖÖ 
value
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
static
àà 
float
àà !
SizeSliderSpotAngle
àà (
(
àà( )
Vector3
àà) 0
position
àà1 9
,
àà9 :
Vector3
àà; B
forward
ààC J
,
ààJ K
Vector3
ààL S
axis
ààT X
,
ààX Y
float
ààZ _
range
àà` e
,
ààe f
float
ààg l
	spotAngle
ààm v
,
ààv w
string
ààx ~
controlNameàà ä
)ààä ã
{
ââ 	
if
ää 
(
ää 
Math
ää 
.
ää 
Abs
ää 
(
ää 
	spotAngle
ää "
)
ää" #
<=
ää$ &
$num
ää' ,
)
ää, -
return
ãã 
	spotAngle
ãã  
;
ãã  !
var
åå 
angledForward
åå 
=
åå 

Quaternion
åå  *
.
åå* +
	AngleAxis
åå+ 4
(
åå4 5
Mathf
åå5 :
.
åå: ;
Max
åå; >
(
åå> ?
	spotAngle
åå? H
,
ååH I
$num
ååJ O
)
ååO P
*
ååQ R
$num
ååS W
,
ååW X
axis
ååY ]
)
åå] ^
*
åå_ `
forward
ååa h
;
ååh i
var
çç "
centerToLeftOnSphere
çç $
=
çç% &
(
çç' (
angledForward
çç( 5
*
çç6 7
range
çç8 =
+
çç> ?
position
çç@ H
)
ççH I
-
ççJ K
(
ççL M
position
ççM U
+
ççV W
forward
ççX _
*
çç` a
range
ççb g
)
ççg h
;
ççh i
bool
éé 
temp
éé 
=
éé 
GUI
éé 
.
éé 
changed
éé #
;
éé# $
GUI
èè 
.
èè 
changed
èè 
=
èè 
false
èè 
;
èè  
var
êê 
handlePosition
êê 
=
êê  
position
êê! )
+
êê* +
forward
êê, 3
*
êê4 5
range
êê6 ;
;
êê; <
var
ëë 
id
ëë 
=
ëë 

GUIUtility
ëë 
.
ëë  
GetControlID
ëë  ,
(
ëë, -
	FocusType
ëë- 6
.
ëë6 7
Passive
ëë7 >
)
ëë> ?
;
ëë? @
var
íí 
newMagnitude
íí 
=
íí 
Mathf
íí $
.
íí$ %
Max
íí% (
(
íí( )
$num
íí) +
,
íí+ ,
SliderLineHandle
íí- =
(
íí= >
id
íí> @
,
íí@ A
handlePosition
ííB P
,
ííP Q"
centerToLeftOnSphere
ííR f
.
ííf g

normalized
ííg q
,
ííq r#
centerToLeftOnSphereíís á
.ííá à
	magnitudeííà ë
)ííë í
)ííí ì
;ííì î
if
ìì 
(
ìì 
GUI
ìì 
.
ìì 
changed
ìì 
)
ìì 
{
îî "
centerToLeftOnSphere
ïï $
=
ïï% &"
centerToLeftOnSphere
ïï' ;
.
ïï; <

normalized
ïï< F
*
ïïG H
newMagnitude
ïïI U
;
ïïU V
angledForward
ññ 
=
ññ 
(
ññ  !"
centerToLeftOnSphere
ññ! 5
+
ññ6 7
(
ññ8 9
position
ññ9 A
+
ññB C
forward
ññD K
*
ññL M
range
ññN S
)
ññS T
-
ññU V
position
ññW _
)
ññ_ `
.
ññ` a

normalized
ñña k
;
ññk l
	spotAngle
óó 
=
óó 
Mathf
óó !
.
óó! "
Clamp
óó" '
(
óó' (
Mathf
óó( -
.
óó- .
Acos
óó. 2
(
óó2 3
Vector3
óó3 :
.
óó: ;
Dot
óó; >
(
óó> ?
forward
óó? F
,
óóF G
angledForward
óóH U
)
óóU V
)
óóV W
*
óóX Y
Mathf
óóZ _
.
óó_ `
Rad2Deg
óó` g
*
óóh i
$num
óój k
,
óók l
$num
óóm o
,
óóo p
$num
óóq u
)
óóu v
;
óóv w
if
òò 
(
òò 
	spotAngle
òò 
<=
òò  
$num
òò! &
||
òò' )
float
òò* /
.
òò/ 0
IsNaN
òò0 5
(
òò5 6
	spotAngle
òò6 ?
)
òò? @
)
òò@ A
	spotAngle
ôô 
=
ôô 
$num
ôô  "
;
ôô" #
}
öö 
GUI
õõ 
.
õõ 
changed
õõ 
|=
õõ 
temp
õõ 
;
õõ  
if
ùù 
(
ùù 

GUIUtility
ùù 
.
ùù 

hotControl
ùù %
==
ùù& (
id
ùù) +
)
ùù+ ,
{
ûû 
var
üü 
pos
üü 
=
üü 
handlePosition
üü (
+
üü) *"
centerToLeftOnSphere
üü+ ?
.
üü? @

normalized
üü@ J
*
üüK L
newMagnitude
üüM Y
;
üüY Z
string
†† 
	labelText
††  
=
††! "
FormattableString
††# 4
.
††4 5
	Invariant
††5 >
(
††> ?
$"
††? A
{
††A B
controlName
††B M
}
††M N
{
††O P
	spotAngle
††P Y
:
††Y Z
0.00
††Z ^
}
††^ _
"
††_ `
)
††` a
;
††a b
DrawHandleLabel
°° 
(
°°  
pos
°°  #
,
°°# $
	labelText
°°% .
)
°°. /
;
°°/ 0
}
¢¢ 
return
§§ 
	spotAngle
§§ 
;
§§ 
}
•• 	
}
¶¶ 
}ßß ´
™D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\ShaderGenerator\ShaderGeneratorMenu.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
class 	
ShaderGeneratorMenu
 
{ 
[ 	
MenuItem	 
( 
$str A
,A B
priorityC K
=L M
	CoreUtilsN W
.W X
editMenuPriority1X i
)i j
]j k
static 
void "
GenerateShaderIncludes *
(* +
)+ ,
{		 	
CSharpToHLSL

 
.

 
GenerateAll

 $
(

$ %
)

% &
;

& '
AssetDatabase 
. 
Refresh !
(! "
)" #
;# $
} 	
} 
} Î;
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\IESObject.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public

 

enum

 
IESLightType

 
{ 
Point 
, 
Spot 
, 
} 
public 

enum 
IESResolution 
{ 
IESResolution16 
= 
$num 
, 
IESResolution32 
= 
$num 
, 
IESResolution64   
=   
$num   
,   
IESResolution128"" 
="" 
$num"" 
,"" 
IESResolution256$$ 
=$$ 
$num$$ 
,$$ 
IESResolution512&& 
=&& 
$num&& 
,&& 
IESResolution1024(( 
=(( 
$num((  
,((  !
IESResolution2048** 
=** 
$num**  
,**  !
IESResolution4096,, 
=,, 
$num,,  
}-- 
[22 
System22 
.22 
Serializable22 
]22 
public33 

class33 
IESMetaData33 
{44 
public88 
string88 
FileFormatVersion88 '
;88' (
public<< 
string<< 
IESPhotometricType<< (
;<<( )
public@@ 
float@@ 
IESMaximumIntensity@@ (
;@@( )
publicDD 
stringDD #
IESMaximumIntensityUnitDD -
;DD- .
publicJJ 
stringJJ 
ManufacturerJJ "
;JJ" #
publicNN 
stringNN "
LuminaireCatalogNumberNN ,
;NN, -
publicRR 
stringRR  
LuminaireDescriptionRR *
;RR* +
publicVV 
stringVV 
LampCatalogNumberVV '
;VV' (
publicZZ 
stringZZ 
LampDescriptionZZ %
;ZZ% &
public__ 
IESLightType__ 
PrefabLightType__ +
=__, -
IESLightType__. :
.__: ;
Point__; @
;__@ A
[ee 	
Rangeee	 
(ee 
$numee 
,ee 
$numee 
)ee 
]ee 
publicff 
floatff 
	SpotAngleff 
=ff  
$numff! %
;ff% &
publickk 
IESResolutionkk 
iesSizekk $
=kk% &
IESResolutionkk' 4
.kk4 5
IESResolution128kk5 E
;kkE F
publicpp 
boolpp !
ApplyLightAttenuationpp )
=pp* +
truepp, 0
;pp0 1
publictt 
booltt "
UseIESMaximumIntensitytt *
=tt+ ,
truett- 1
;tt1 2
publicyy &
TextureImporterCompressionyy )
CookieCompressionyy* ;
=yy< =&
TextureImporterCompressionyy> X
.yyX Y
CompressedHQyyY e
;yye f
[~~ 	
Range~~	 
(~~ 
-~~ 
$num~~ 
,~~ 
$num~~ 
)~~ 
]~~ 
public 
float  
LightAimAxisRotation )
=* +
-, -
$num- 0
;0 1
public
ÖÖ 
override
ÖÖ 
int
ÖÖ 
GetHashCode
ÖÖ '
(
ÖÖ' (
)
ÖÖ( )
{
ÜÜ 	
int
áá 
hash
áá 
=
áá 
base
áá 
.
áá 
GetHashCode
áá '
(
áá' (
)
áá( )
;
áá) *
hash
ââ 
=
ââ 
hash
ââ 
*
ââ 
$num
ââ 
+
ââ 
FileFormatVersion
ââ 0
.
ââ0 1
GetHashCode
ââ1 <
(
ââ< =
)
ââ= >
;
ââ> ?
hash
ää 
=
ää 
hash
ää 
*
ää 
$num
ää 
+
ää  
IESPhotometricType
ää 1
.
ää1 2
GetHashCode
ää2 =
(
ää= >
)
ää> ?
;
ää? @
hash
ãã 
=
ãã 
hash
ãã 
*
ãã 
$num
ãã 
+
ãã !
IESMaximumIntensity
ãã 2
.
ãã2 3
GetHashCode
ãã3 >
(
ãã> ?
)
ãã? @
;
ãã@ A
hash
åå 
=
åå 
hash
åå 
*
åå 
$num
åå 
+
åå %
IESMaximumIntensityUnit
åå 6
.
åå6 7
GetHashCode
åå7 B
(
ååB C
)
ååC D
;
ååD E
hash
éé 
=
éé 
hash
éé 
*
éé 
$num
éé 
+
éé 
Manufacturer
éé +
.
éé+ ,
GetHashCode
éé, 7
(
éé7 8
)
éé8 9
;
éé9 :
hash
èè 
=
èè 
hash
èè 
*
èè 
$num
èè 
+
èè $
LuminaireCatalogNumber
èè 5
.
èè5 6
GetHashCode
èè6 A
(
èèA B
)
èèB C
;
èèC D
hash
êê 
=
êê 
hash
êê 
*
êê 
$num
êê 
+
êê "
LuminaireDescription
êê 3
.
êê3 4
GetHashCode
êê4 ?
(
êê? @
)
êê@ A
;
êêA B
hash
ëë 
=
ëë 
hash
ëë 
*
ëë 
$num
ëë 
+
ëë 
LampCatalogNumber
ëë 0
.
ëë0 1
GetHashCode
ëë1 <
(
ëë< =
)
ëë= >
;
ëë> ?
hash
íí 
=
íí 
hash
íí 
*
íí 
$num
íí 
+
íí 
LampDescription
íí .
.
íí. /
GetHashCode
íí/ :
(
íí: ;
)
íí; <
;
íí< =
hash
îî 
=
îî 
hash
îî 
*
îî 
$num
îî 
+
îî 
PrefabLightType
îî .
.
îî. /
GetHashCode
îî/ :
(
îî: ;
)
îî; <
;
îî< =
hash
ññ 
=
ññ 
hash
ññ 
*
ññ 
$num
ññ 
+
ññ 
	SpotAngle
ññ (
.
ññ( )
GetHashCode
ññ) 4
(
ññ4 5
)
ññ5 6
;
ññ6 7
hash
òò 
=
òò 
hash
òò 
*
òò 
$num
òò 
+
òò 
iesSize
òò &
.
òò& '
GetHashCode
òò' 2
(
òò2 3
)
òò3 4
;
òò4 5
hash
ôô 
=
ôô 
hash
ôô 
*
ôô 
$num
ôô 
+
ôô #
ApplyLightAttenuation
ôô 4
.
ôô4 5
GetHashCode
ôô5 @
(
ôô@ A
)
ôôA B
;
ôôB C
hash
öö 
=
öö 
hash
öö 
*
öö 
$num
öö 
+
öö $
UseIESMaximumIntensity
öö 5
.
öö5 6
GetHashCode
öö6 A
(
ööA B
)
ööB C
;
ööC D
return
úú 
hash
úú 
;
úú 
}
ùù 	
}
ûû 
[
££ 
System
££ 
.
££ 
Serializable
££ 
]
££ 
public
§§ 

class
§§ 
	IESObject
§§ 
:
§§ 
ScriptableObject
§§ -
{
•• 
public
©© 
IESMetaData
©© 
iesMetaData
©© &
=
©©' (
new
©©) ,
IESMetaData
©©- 8
(
©©8 9
)
©©9 :
;
©©: ;
}
™™ 
}´´ íA
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\DropArea.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
class 	
DropArea
 
{		 
readonly

 
Type

 
[

 
]

 
k_AcceptedTypes

 '
;

' (
bool 
	droppable 
; 
public 
DropArea 
( 
Type 
[ 
] 
acceptedTypes ,
,, -
VisualElement. ;
area< @
,@ A
ActionB H
<H I
UnityEngineI T
.T U
ObjectU [
,[ \
Vector2] d
>d e
OnDropf l
)l m
{ 	
k_AcceptedTypes 
= 
acceptedTypes +
;+ ,
area 
. 
RegisterCallback !
<! "
DragPerformEvent" 2
>2 3
(3 4
evt4 7
=>8 :
Drop; ?
(? @
evt@ C
,C D
OnDropE K
)K L
)L M
;M N
area 
. 
RegisterCallback !
<! "
DragEnterEvent" 0
>0 1
(1 2
evt2 5
=>6 8
	DragEnter9 B
(B C
evtC F
)F G
)G H
;H I
area 
. 
RegisterCallback !
<! "
DragLeaveEvent" 0
>0 1
(1 2
evt2 5
=>6 8
	DragLeave9 B
(B C
evtC F
)F G
)G H
;H I
area 
. 
RegisterCallback !
<! "
DragExitedEvent" 1
>1 2
(2 3
evt3 6
=>7 9
DragExit: B
(B C
evtC F
)F G
)G H
;H I
area 
. 
RegisterCallback !
<! "
DragUpdatedEvent" 2
>2 3
(3 4
evt4 7
=>8 :

DragUpdate; E
(E F
evtF I
)I J
)J K
;K L
} 	
void 
	DragEnter 
( 
DragEnterEvent %
evt& )
)) *
{ 	
	droppable 
= 
false 
; 
foreach 
( 
UnityEngine  
.  !
Object! '
obj( +
in, .
DragAndDrop/ :
.: ;
objectReferences; K
)K L
{ 
if 
( 
! 
IsInAcceptedTypes &
(& '
obj' *
.* +
GetType+ 2
(2 3
)3 4
)4 5
)5 6
continue 
; 
	droppable 
= 
true  
;  !
evt   
.   
StopPropagation   #
(  # $
)  $ %
;  % &
return!! 
;!! 
}"" 
}## 	
void%% 
	DragLeave%% 
(%% 
DragLeaveEvent%% %
evt%%& )
)%%) *
{&& 	
foreach'' 
('' 
UnityEngine''  
.''  !
Object''! '
obj''( +
in'', .
DragAndDrop''/ :
.'': ;
objectReferences''; K
)''K L
{(( 
if)) 
()) 
!)) 
IsInAcceptedTypes)) &
())& '
obj))' *
.))* +
GetType))+ 2
())2 3
)))3 4
)))4 5
)))5 6
continue** 
;** 
DragAndDrop,, 
.,, 

visualMode,, &
=,,' (!
DragAndDropVisualMode,,) >
.,,> ?
Rejected,,? G
;,,G H
evt-- 
.-- 
StopPropagation-- #
(--# $
)--$ %
;--% &
return.. 
;.. 
}// 
}00 	
void22 
DragExit22 
(22 
DragExitedEvent22 %
evt22& )
)22) *
{33 	
foreach44 
(44 
UnityEngine44  
.44  !
Object44! '
obj44( +
in44, .
DragAndDrop44/ :
.44: ;
objectReferences44; K
)44K L
{55 
if66 
(66 
!66 
IsInAcceptedTypes66 &
(66& '
obj66' *
.66* +
GetType66+ 2
(662 3
)663 4
)664 5
)665 6
continue77 
;77 
DragAndDrop99 
.99 

visualMode99 &
=99' (!
DragAndDropVisualMode99) >
.99> ?
Rejected99? G
;99G H
evt:: 
.:: 
StopPropagation:: #
(::# $
)::$ %
;::% &
return;; 
;;; 
}<< 
}== 	
void?? 

DragUpdate?? 
(?? 
DragUpdatedEvent?? (
evt??) ,
)??, -
{@@ 	
foreachAA 
(AA 
UnityEngineAA  
.AA  !
ObjectAA! '
objAA( +
inAA, .
DragAndDropAA/ :
.AA: ;
objectReferencesAA; K
)AAK L
{BB 
ifCC 
(CC 
!CC 
IsInAcceptedTypesCC &
(CC& '
objCC' *
.CC* +
GetTypeCC+ 2
(CC2 3
)CC3 4
)CC4 5
)CC5 6
continueDD 
;DD 
DragAndDropFF 
.FF 

visualModeFF &
=FF' (
	droppableFF) 2
?FF3 4!
DragAndDropVisualModeFF5 J
.FFJ K
LinkFFK O
:FFP Q!
DragAndDropVisualModeFFR g
.FFg h
RejectedFFh p
;FFp q
evtGG 
.GG 
StopPropagationGG #
(GG# $
)GG$ %
;GG% &
}HH 
}II 	
voidKK 
DropKK 
(KK 
DragPerformEventKK "
evtKK# &
,KK& '
ActionKK( .
<KK. /
UnityEngineKK/ :
.KK: ;
ObjectKK; A
,KKA B
Vector2KKC J
>KKJ K
OnDropKKL R
)KKR S
{LL 	
boolMM 
atLeastOneAcceptedMM #
=MM$ %
falseMM& +
;MM+ ,
foreachNN 
(NN 
UnityEngineNN  
.NN  !
ObjectNN! '
objNN( +
inNN, .
DragAndDropNN/ :
.NN: ;
objectReferencesNN; K
)NNK L
{OO 
ifPP 
(PP 
!PP 
IsInAcceptedTypesPP &
(PP& '
objPP' *
.PP* +
GetTypePP+ 2
(PP2 3
)PP3 4
)PP4 5
)PP5 6
continueQQ 
;QQ 
OnDropSS 
.SS 
InvokeSS 
(SS 
objSS !
,SS! "
evtSS# &
.SS& '
localMousePositionSS' 9
)SS9 :
;SS: ;
atLeastOneAcceptedTT "
=TT# $
trueTT% )
;TT) *
}UU 
ifVV 
(VV 
atLeastOneAcceptedVV "
)VV" #
{WW 
DragAndDropXX 
.XX 

AcceptDragXX &
(XX& '
)XX' (
;XX( )
evtYY 
.YY 
StopPropagationYY #
(YY# $
)YY$ %
;YY% &
}ZZ 
}[[ 	
bool]] 
IsInAcceptedTypes]] 
(]] 
Type]] #

testedType]]$ .
)]]. /
{^^ 	
foreach__ 
(__ 
Type__ 
type__ 
in__ !
k_AcceptedTypes__" 1
)__1 2
{`` 
ifaa 
(aa 

testedTypeaa 
.aa 
IsAssignableFromaa /
(aa/ 0
typeaa0 4
)aa4 5
)aa5 6
returnbb 
truebb 
;bb  
}cc 
returndd 
falsedd 
;dd 
}ee 	
}ff 
}gg ·¸
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\IESImporterEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

class 
IESImporterEditor "
{ 
GUIStyle 
m_WordWrapStyle  
=! "
new# &
GUIStyle' /
(/ 0
)0 1
;1 2
SerializedProperty #
m_FileFormatVersionProp 2
;2 3
SerializedProperty $
m_IESPhotometricTypeProp 3
;3 4
SerializedProperty %
m_IESMaximumIntensityProp 4
;4 5
SerializedProperty )
m_IESMaximumIntensityUnitProp 8
;8 9
SerializedProperty 
m_ManufacturerProp -
;- .
SerializedProperty (
m_LuminaireCatalogNumberProp 7
;7 8
SerializedProperty &
m_LuminaireDescriptionProp 5
;5 6
SerializedProperty #
m_LampCatalogNumberProp 2
;2 3
SerializedProperty !
m_LampDescriptionProp 0
;0 1
SerializedProperty !
m_PrefabLightTypeProp 0
;0 1
SerializedProperty   
m_SpotAngleProp   *
;  * +
SerializedProperty!! 
m_IESSizeProp!! (
;!!( )
SerializedProperty"" '
m_ApplyLightAttenuationProp"" 6
;""6 7
SerializedProperty## (
m_UseIESMaximumIntensityProp## 7
;##7 8
SerializedProperty$$ #
m_CookieCompressionProp$$ 2
;$$2 3
	protected)) 
SerializedProperty)) $&
m_LightAimAxisRotationProp))% ?
;))? @
bool++ -
!m_ShowLuminaireProductInformation++ .
=++/ 0
true++1 5
;++5 6
bool,, !
m_ShowLightProperties,, "
=,,# $
true,,% )
;,,) *
	protected11  
PreviewRenderUtility11 &"
m_PreviewRenderUtility11' =
=11> ?
null11@ D
;11D E
public66 
delegate66 
void66 6
*LayoutRenderPipelineUseIesMaximumIntensity66 G
(66G H
)66H I
;66I J
public;; 
delegate;; 
void;; ,
 SetupRenderPipelinePreviewCamera;; =
(;;= >
Camera;;> D
camera;;E K
);;K L
;;;L M
public@@ 
delegate@@ 
void@@ +
SetupRenderPipelinePreviewLight@@ <
(@@< =
Light@@= B
light@@C H
)@@H I
;@@I J
publicEE 
delegateEE 
voidEE 2
&SetupRenderPipelinePreviewWallRendererEE C
(EEC D
MeshRendererEED P
wallRendererEEQ ]
)EE] ^
;EE^ _
publicJJ 
delegateJJ 
voidJJ 3
'SetupRenderPipelinePreviewFloorRendererJJ D
(JJD E
MeshRendererJJE Q
floorRendererJJR _
)JJ_ `
;JJ` a
publicRR 
delegateRR 
voidRR 4
(SetupRenderPipelinePreviewLightIntensityRR E
(RRE F
LightRRF K
lightRRL Q
,RRQ R
SerializedPropertyRRS e'
useIESMaximumIntensityProp	RRf Ä
,
RRÄ Å 
SerializedProperty
RRÇ î)
iesMaximumIntensityUnitProp
RRï ∞
,
RR∞ ± 
SerializedProperty
RR≤ ƒ%
iesMaximumIntensityProp
RR≈ ‹
)
RR‹ ›
;
RR› ﬁ
publicXX 
voidXX 
CommonOnEnableXX "
(XX" #
SerializedPropertyXX# 5
serializedObjectXX6 F
)XXF G
{YY 	
m_WordWrapStyleZZ 
.ZZ 
wordWrapZZ $
=ZZ% &
trueZZ' +
;ZZ+ ,#
m_FileFormatVersionProp\\ #
=\\$ %
serializedObject\\& 6
.\\6 7 
FindPropertyRelative\\7 K
(\\K L
$str\\L _
)\\_ `
;\\` a$
m_IESPhotometricTypeProp]] $
=]]% &
serializedObject]]' 7
.]]7 8 
FindPropertyRelative]]8 L
(]]L M
$str]]M a
)]]a b
;]]b c%
m_IESMaximumIntensityProp^^ %
=^^& '
serializedObject^^( 8
.^^8 9 
FindPropertyRelative^^9 M
(^^M N
$str^^N c
)^^c d
;^^d e)
m_IESMaximumIntensityUnitProp__ )
=__* +
serializedObject__, <
.__< = 
FindPropertyRelative__= Q
(__Q R
$str__R k
)__k l
;__l m
m_ManufacturerPropaa 
=aa  
serializedObjectaa! 1
.aa1 2 
FindPropertyRelativeaa2 F
(aaF G
$straaG U
)aaU V
;aaV W(
m_LuminaireCatalogNumberPropbb (
=bb) *
serializedObjectbb+ ;
.bb; < 
FindPropertyRelativebb< P
(bbP Q
$strbbQ i
)bbi j
;bbj k&
m_LuminaireDescriptionPropcc &
=cc' (
serializedObjectcc) 9
.cc9 : 
FindPropertyRelativecc: N
(ccN O
$strccO e
)cce f
;ccf g#
m_LampCatalogNumberPropdd #
=dd$ %
serializedObjectdd& 6
.dd6 7 
FindPropertyRelativedd7 K
(ddK L
$strddL _
)dd_ `
;dd` a!
m_LampDescriptionPropee !
=ee" #
serializedObjectee$ 4
.ee4 5 
FindPropertyRelativeee5 I
(eeI J
$streeJ [
)ee[ \
;ee\ ]!
m_PrefabLightTypePropgg !
=gg" #
serializedObjectgg$ 4
.gg4 5 
FindPropertyRelativegg5 I
(ggI J
$strggJ [
)gg[ \
;gg\ ]
m_SpotAngleProphh 
=hh 
serializedObjecthh .
.hh. / 
FindPropertyRelativehh/ C
(hhC D
$strhhD O
)hhO P
;hhP Q
m_IESSizePropii 
=ii 
serializedObjectii ,
.ii, - 
FindPropertyRelativeii- A
(iiA B
$striiB K
)iiK L
;iiL M'
m_ApplyLightAttenuationPropjj '
=jj( )
serializedObjectjj* :
.jj: ; 
FindPropertyRelativejj; O
(jjO P
$strjjP g
)jjg h
;jjh i(
m_UseIESMaximumIntensityPropkk (
=kk) *
serializedObjectkk+ ;
.kk; < 
FindPropertyRelativekk< P
(kkP Q
$strkkQ i
)kki j
;kkj k#
m_CookieCompressionPropll #
=ll$ %
serializedObjectll& 6
.ll6 7 
FindPropertyRelativell7 K
(llK L
$strllL _
)ll_ `
;ll` a&
m_LightAimAxisRotationPropmm &
=mm' (
serializedObjectmm) 9
.mm9 : 
FindPropertyRelativemm: N
(mmN O
$strmmO e
)mme f
;mmf g
}nn 	
publictt 
voidtt  
CommonOnInspectorGUItt (
(tt( )"
ScriptedImporterEditortt) ?
scriptedImportertt@ P
)ttP Q
{uu 	
scriptedImportervv 
.vv 
serializedObjectvv -
.vv- .
Updatevv. 4
(vv4 5
)vv5 6
;vv6 7
EditorGUILayoutxx 
.xx 

LabelFieldxx &
(xx& '
$strxx' <
,xx< =#
m_FileFormatVersionPropxx> U
.xxU V
stringValuexxV a
)xxa b
;xxb c
EditorGUILayoutyy 
.yy 

LabelFieldyy &
(yy& '
$stryy' 9
,yy9 :$
m_IESPhotometricTypePropyy; S
.yyS T
stringValueyyT _
)yy_ `
;yy` a
EditorGUILayoutzz 
.zz 

LabelFieldzz &
(zz& '
$strzz' :
,zz: ;
$"zz< >
{zz> ?%
m_IESMaximumIntensityPropzz? X
.zzX Y

floatValuezzY c
}zzc d
{zze f*
m_IESMaximumIntensityUnitProp	zzf É
.
zzÉ Ñ
stringValue
zzÑ è
}
zzè ê
"
zzê ë
)
zzë í
;
zzí ì
if|| 
(|| -
!m_ShowLuminaireProductInformation|| 1
=||2 3
EditorGUILayout||4 C
.||C D
Foldout||D K
(||K L-
!m_ShowLuminaireProductInformation||L m
,||m n
$str	||o é
)
||é è
)
||è ê
{}} 
EditorGUILayout~~ 
.~~  

LabelField~~  *
(~~* +
m_ManufacturerProp~~+ =
.~~= >
displayName~~> I
,~~I J
m_ManufacturerProp~~K ]
.~~] ^
stringValue~~^ i
,~~i j
m_WordWrapStyle~~k z
)~~z {
;~~{ |
EditorGUILayout 
.  

LabelField  *
(* +(
m_LuminaireCatalogNumberProp+ G
.G H
displayNameH S
,S T(
m_LuminaireCatalogNumberPropU q
.q r
stringValuer }
,} ~
m_WordWrapStyle	 é
)
é è
;
è ê
EditorGUILayout
ÄÄ 
.
ÄÄ  

LabelField
ÄÄ  *
(
ÄÄ* +(
m_LuminaireDescriptionProp
ÄÄ+ E
.
ÄÄE F
displayName
ÄÄF Q
,
ÄÄQ R(
m_LuminaireDescriptionProp
ÄÄS m
.
ÄÄm n
stringValue
ÄÄn y
,
ÄÄy z
m_WordWrapStyleÄÄ{ ä
)ÄÄä ã
;ÄÄã å
EditorGUILayout
ÅÅ 
.
ÅÅ  

LabelField
ÅÅ  *
(
ÅÅ* +%
m_LampCatalogNumberProp
ÅÅ+ B
.
ÅÅB C
displayName
ÅÅC N
,
ÅÅN O%
m_LampCatalogNumberProp
ÅÅP g
.
ÅÅg h
stringValue
ÅÅh s
,
ÅÅs t
m_WordWrapStyleÅÅu Ñ
)ÅÅÑ Ö
;ÅÅÖ Ü
EditorGUILayout
ÇÇ 
.
ÇÇ  

LabelField
ÇÇ  *
(
ÇÇ* +#
m_LampDescriptionProp
ÇÇ+ @
.
ÇÇ@ A
displayName
ÇÇA L
,
ÇÇL M#
m_LampDescriptionProp
ÇÇN c
.
ÇÇc d
stringValue
ÇÇd o
,
ÇÇo p
m_WordWrapStyleÇÇq Ä
)ÇÇÄ Å
;ÇÇÅ Ç
}
ÉÉ 
if
ÖÖ 
(
ÖÖ #
m_ShowLightProperties
ÖÖ %
=
ÖÖ& '
EditorGUILayout
ÖÖ( 7
.
ÖÖ7 8
Foldout
ÖÖ8 ?
(
ÖÖ? @#
m_ShowLightProperties
ÖÖ@ U
,
ÖÖU V
$str
ÖÖW t
)
ÖÖt u
)
ÖÖu v
{
ÜÜ 
EditorGUILayout
áá 
.
áá  
PropertyField
áá  -
(
áá- .#
m_PrefabLightTypeProp
áá. C
,
ááC D
new
ááE H

GUIContent
ááI S
(
ááS T
$str
ááT `
)
áá` a
)
ááa b
;
ááb c
EditorGUILayout
àà 
.
àà  
PropertyField
àà  -
(
àà- .
m_SpotAngleProp
àà. =
)
àà= >
;
àà> ?
EditorGUILayout
ââ 
.
ââ  
PropertyField
ââ  -
(
ââ- .
m_IESSizeProp
ââ. ;
,
ââ; <
new
ââ= @

GUIContent
ââA K
(
ââK L
$str
ââL V
)
ââV W
)
ââW X
;
ââX Y
EditorGUILayout
ää 
.
ää  
PropertyField
ää  -
(
ää- .)
m_ApplyLightAttenuationProp
ää. I
)
ääI J
;
ääJ K
EditorGUILayout
ãã 
.
ãã  
PropertyField
ãã  -
(
ãã- .%
m_CookieCompressionProp
ãã. E
,
ããE F
new
ããG J

GUIContent
ããK U
(
ããU V
$str
ããV g
)
ããg h
)
ããh i
;
ããi j
EditorGUILayout
éé 
.
éé  
PropertyField
éé  -
(
éé- .*
m_UseIESMaximumIntensityProp
éé. J
,
ééJ K
new
ééL O

GUIContent
ééP Z
(
ééZ [
$str
éé[ v
)
éév w
)
ééw x
;
ééx y
using
êê 
(
êê 
new
êê 
EditorGUILayout
êê *
.
êê* +
HorizontalScope
êê+ :
(
êê: ;
)
êê; <
)
êê< =
{
ëë 
EditorGUILayout
íí #
.
íí# $
PropertyField
íí$ 1
(
íí1 2(
m_LightAimAxisRotationProp
íí2 L
,
ííL M
new
ííN Q

GUIContent
ííR \
(
íí\ ]
$str
íí] p
)
ííp q
)
ííq r
;
íír s
if
îî 
(
îî 
	GUILayout
îî !
.
îî! "
Button
îî" (
(
îî( )
$str
îî) 0
,
îî0 1
	GUILayout
îî2 ;
.
îî; <
Width
îî< A
(
îîA B
$num
îîB D
)
îîD E
)
îîE F
)
îîF G
{
ïï (
m_LightAimAxisRotationProp
ññ 2
.
ññ2 3

floatValue
ññ3 =
=
ññ> ?
-
ññ@ A
$num
ññA D
;
ññD E
}
óó 
}
òò 
}
ôô 
scriptedImporter
õõ 
.
õõ 
serializedObject
õõ -
.
õõ- .%
ApplyModifiedProperties
õõ. E
(
õõE F
)
õõF G
;
õõG H
}
úú 	
public
°° 
void
°° 
CommonApply
°° 
(
°°  
)
°°  !
{
¢¢ 	
if
££ 
(
££ $
m_PreviewRenderUtility
££ &
!=
££' )
null
££* .
)
££. /
{
§§ $
m_PreviewRenderUtility
•• &
.
••& '
Cleanup
••' .
(
••. /
)
••/ 0
;
••0 1$
m_PreviewRenderUtility
¶¶ &
=
¶¶' (
null
¶¶) -
;
¶¶- .
}
ßß 
}
®® 	
public
≤≤ 
bool
≤≤ !
CommonHasPreviewGUI
≤≤ '
(
≤≤' (.
 SetupRenderPipelinePreviewCamera
≤≤( H.
 setupRenderPipelinePreviewCamera
≤≤I i
,
≤≤i j-
SetupRenderPipelinePreviewLight
≥≥( G-
setupRenderPipelinePreviewLight
≥≥H g
,
≥≥g h4
&SetupRenderPipelinePreviewWallRenderer
¥¥( N4
&setupRenderPipelinePreviewWallRenderer
¥¥O u
,
¥¥u v5
'SetupRenderPipelinePreviewFloorRenderer
µµ( O5
'setupRenderPipelinePreviewFloorRenderer
µµP w
)
µµw x
{
∂∂ 	
if
∑∑ 
(
∑∑ $
m_PreviewRenderUtility
∑∑ &
==
∑∑' )
null
∑∑* .
)
∑∑. /
{
∏∏ $
m_PreviewRenderUtility
ππ &
=
ππ' (
new
ππ) ,"
PreviewRenderUtility
ππ- A
(
ππA B
)
ππB C
;
ππC D$
m_PreviewRenderUtility
ªª &
.
ªª& '
ambientColor
ªª' 3
=
ªª4 5
Color
ªª6 ;
.
ªª; <
black
ªª< A
;
ªªA B$
m_PreviewRenderUtility
ΩΩ &
.
ΩΩ& '
camera
ΩΩ' -
.
ΩΩ- .
fieldOfView
ΩΩ. 9
=
ΩΩ: ;
$num
ΩΩ< ?
;
ΩΩ? @$
m_PreviewRenderUtility
ææ &
.
ææ& '
camera
ææ' -
.
ææ- .
nearClipPlane
ææ. ;
=
ææ< =
$num
ææ> B
;
ææB C$
m_PreviewRenderUtility
øø &
.
øø& '
camera
øø' -
.
øø- .
farClipPlane
øø. :
=
øø; <
$num
øø= @
;
øø@ A$
m_PreviewRenderUtility
¿¿ &
.
¿¿& '
camera
¿¿' -
.
¿¿- .
	transform
¿¿. 7
.
¿¿7 8
localPosition
¿¿8 E
=
¿¿F G
new
¿¿H K
Vector3
¿¿L S
(
¿¿S T
$num
¿¿T Y
,
¿¿Y Z
$num
¿¿[ `
,
¿¿` a
$num
¿¿b d
)
¿¿d e
;
¿¿e f$
m_PreviewRenderUtility
¡¡ &
.
¡¡& '
camera
¡¡' -
.
¡¡- .
	transform
¡¡. 7
.
¡¡7 8
localEulerAngles
¡¡8 H
=
¡¡I J
new
¡¡K N
Vector3
¡¡O V
(
¡¡V W
$num
¡¡W Z
,
¡¡Z [
-
¡¡\ ]
$num
¡¡] `
,
¡¡` a
$num
¡¡b d
)
¡¡d e
;
¡¡e f.
 setupRenderPipelinePreviewCamera
√√ 0
(
√√0 1$
m_PreviewRenderUtility
√√1 G
.
√√G H
camera
√√H N
)
√√N O
;
√√O P$
m_PreviewRenderUtility
≈≈ &
.
≈≈& '
lights
≈≈' -
[
≈≈- .
$num
≈≈. /
]
≈≈/ 0
.
≈≈0 1
type
≈≈1 5
=
≈≈6 7
(
≈≈8 9#
m_PrefabLightTypeProp
≈≈9 N
.
≈≈N O
enumValueIndex
≈≈O ]
==
≈≈^ `
(
≈≈a b
int
≈≈b e
)
≈≈e f
IESLightType
≈≈f r
.
≈≈r s
Point
≈≈s x
)
≈≈x y
?
≈≈z {
	LightType≈≈| Ö
.≈≈Ö Ü
Point≈≈Ü ã
:≈≈å ç
	LightType≈≈é ó
.≈≈ó ò
Spot≈≈ò ú
;≈≈ú ù$
m_PreviewRenderUtility
∆∆ &
.
∆∆& '
lights
∆∆' -
[
∆∆- .
$num
∆∆. /
]
∆∆/ 0
.
∆∆0 1
color
∆∆1 6
=
∆∆7 8
Color
∆∆9 >
.
∆∆> ?
white
∆∆? D
;
∆∆D E$
m_PreviewRenderUtility
«« &
.
««& '
lights
««' -
[
««- .
$num
««. /
]
««/ 0
.
««0 1
	intensity
««1 :
=
««; <
$num
««= ?
;
««? @$
m_PreviewRenderUtility
»» &
.
»»& '
lights
»»' -
[
»»- .
$num
»». /
]
»»/ 0
.
»»0 1
range
»»1 6
=
»»7 8
$num
»»9 <
;
»»< =$
m_PreviewRenderUtility
…… &
.
……& '
lights
……' -
[
……- .
$num
……. /
]
……/ 0
.
……0 1
	spotAngle
……1 :
=
……; <
m_SpotAngleProp
……= L
.
……L M

floatValue
……M W
;
……W X$
m_PreviewRenderUtility
   &
.
  & '
lights
  ' -
[
  - .
$num
  . /
]
  / 0
.
  0 1
	transform
  1 :
.
  : ;
localPosition
  ; H
=
  I J
new
  K N
Vector3
  O V
(
  V W
$num
  W \
,
  \ ]
$num
  ^ `
,
  ` a
$num
  b d
)
  d e
;
  e f$
m_PreviewRenderUtility
ÀÀ &
.
ÀÀ& '
lights
ÀÀ' -
[
ÀÀ- .
$num
ÀÀ. /
]
ÀÀ/ 0
.
ÀÀ0 1
	transform
ÀÀ1 :
.
ÀÀ: ;
localEulerAngles
ÀÀ; K
=
ÀÀL M
new
ÀÀN Q
Vector3
ÀÀR Y
(
ÀÀY Z
$num
ÀÀZ ]
,
ÀÀ] ^
$num
ÀÀ_ a
,
ÀÀa b
-
ÀÀc d
$num
ÀÀd g
)
ÀÀg h
;
ÀÀh i-
setupRenderPipelinePreviewLight
ÕÕ /
(
ÕÕ/ 0$
m_PreviewRenderUtility
ÕÕ0 F
.
ÕÕF G
lights
ÕÕG M
[
ÕÕM N
$num
ÕÕN O
]
ÕÕO P
)
ÕÕP Q
;
ÕÕQ R$
m_PreviewRenderUtility
œœ &
.
œœ& '
lights
œœ' -
[
œœ- .
$num
œœ. /
]
œœ/ 0
.
œœ0 1
	intensity
œœ1 :
=
œœ; <
$num
œœ= ?
;
œœ? @

GameObject
—— 
previewWall
—— &
=
——' (

GameObject
——) 3
.
——3 4
CreatePrimitive
——4 C
(
——C D
PrimitiveType
——D Q
.
——Q R
Plane
——R W
)
——W X
;
——X Y
previewWall
““ 
.
““ 
name
““  
=
““! "
$str
““# 3
;
““3 4
previewWall
”” 
.
”” 
	hideFlags
”” %
=
””& '
	HideFlags
””( 1
.
””1 2
HideAndDontSave
””2 A
;
””A B
previewWall
‘‘ 
.
‘‘ 
	transform
‘‘ %
.
‘‘% &
localPosition
‘‘& 3
=
‘‘4 5
new
‘‘6 9
Vector3
‘‘: A
(
‘‘A B
$num
‘‘B D
,
‘‘D E
$num
‘‘F H
,
‘‘H I
$num
‘‘J L
)
‘‘L M
;
‘‘M N
previewWall
’’ 
.
’’ 
	transform
’’ %
.
’’% &
localEulerAngles
’’& 6
=
’’7 8
new
’’9 <
Vector3
’’= D
(
’’D E
$num
’’E G
,
’’G H
$num
’’I K
,
’’K L
-
’’M N
$num
’’N Q
)
’’Q R
;
’’R S
previewWall
÷÷ 
.
÷÷ 
	transform
÷÷ %
.
÷÷% &

localScale
÷÷& 0
=
÷÷1 2
new
÷÷3 6
Vector3
÷÷7 >
(
÷÷> ?
$num
÷÷? A
,
÷÷A B
$num
÷÷C E
,
÷÷E F
$num
÷÷G J
)
÷÷J K
;
÷÷K L
MeshRenderer
◊◊ !
previewWallRenderer
◊◊ 0
=
◊◊1 2
previewWall
◊◊3 >
.
◊◊> ?
GetComponent
◊◊? K
<
◊◊K L
MeshRenderer
◊◊L X
>
◊◊X Y
(
◊◊Y Z
)
◊◊Z [
;
◊◊[ \!
previewWallRenderer
ÿÿ #
.
ÿÿ# $
lightProbeUsage
ÿÿ$ 3
=
ÿÿ4 5
LightProbeUsage
ÿÿ6 E
.
ÿÿE F
Off
ÿÿF I
;
ÿÿI J!
previewWallRenderer
ŸŸ #
.
ŸŸ# $"
reflectionProbeUsage
ŸŸ$ 8
=
ŸŸ9 :"
ReflectionProbeUsage
ŸŸ; O
.
ŸŸO P
Off
ŸŸP S
;
ŸŸS T!
previewWallRenderer
⁄⁄ #
.
⁄⁄# $
material
⁄⁄$ ,
=
⁄⁄- .
AssetDatabase
⁄⁄/ <
.
⁄⁄< =%
GetBuiltinExtraResource
⁄⁄= T
<
⁄⁄T U
Material
⁄⁄U ]
>
⁄⁄] ^
(
⁄⁄^ _
$str
⁄⁄_ u
)
⁄⁄u v
;
⁄⁄v w4
&setupRenderPipelinePreviewWallRenderer
‹‹ 6
(
‹‹6 7!
previewWallRenderer
‹‹7 J
)
‹‹J K
;
‹‹K L$
m_PreviewRenderUtility
ﬁﬁ &
.
ﬁﬁ& '
AddSingleGO
ﬁﬁ' 2
(
ﬁﬁ2 3
previewWall
ﬁﬁ3 >
)
ﬁﬁ> ?
;
ﬁﬁ? @

GameObject
‡‡ 
previewFloor
‡‡ '
=
‡‡( )

GameObject
‡‡* 4
.
‡‡4 5
CreatePrimitive
‡‡5 D
(
‡‡D E
PrimitiveType
‡‡E R
.
‡‡R S
Plane
‡‡S X
)
‡‡X Y
;
‡‡Y Z
previewFloor
·· 
.
·· 
name
·· !
=
··" #
$str
··$ 5
;
··5 6
previewFloor
‚‚ 
.
‚‚ 
	hideFlags
‚‚ &
=
‚‚' (
	HideFlags
‚‚) 2
.
‚‚2 3
HideAndDontSave
‚‚3 B
;
‚‚B C
previewFloor
„„ 
.
„„ 
	transform
„„ &
.
„„& '
localPosition
„„' 4
=
„„5 6
new
„„7 :
Vector3
„„; B
(
„„B C
$num
„„C E
,
„„E F
$num
„„G I
,
„„I J
$num
„„K M
)
„„M N
;
„„N O
previewFloor
‰‰ 
.
‰‰ 
	transform
‰‰ &
.
‰‰& '
localEulerAngles
‰‰' 7
=
‰‰8 9
new
‰‰: =
Vector3
‰‰> E
(
‰‰E F
$num
‰‰F H
,
‰‰H I
$num
‰‰J L
,
‰‰L M
$num
‰‰N P
)
‰‰P Q
;
‰‰Q R
previewFloor
ÂÂ 
.
ÂÂ 
	transform
ÂÂ &
.
ÂÂ& '

localScale
ÂÂ' 1
=
ÂÂ2 3
new
ÂÂ4 7
Vector3
ÂÂ8 ?
(
ÂÂ? @
$num
ÂÂ@ B
,
ÂÂB C
$num
ÂÂD F
,
ÂÂF G
$num
ÂÂH K
)
ÂÂK L
;
ÂÂL M
MeshRenderer
ÊÊ "
previewFloorRenderer
ÊÊ 1
=
ÊÊ2 3
previewFloor
ÊÊ4 @
.
ÊÊ@ A
GetComponent
ÊÊA M
<
ÊÊM N
MeshRenderer
ÊÊN Z
>
ÊÊZ [
(
ÊÊ[ \
)
ÊÊ\ ]
;
ÊÊ] ^"
previewFloorRenderer
ÁÁ $
.
ÁÁ$ %
lightProbeUsage
ÁÁ% 4
=
ÁÁ5 6
LightProbeUsage
ÁÁ7 F
.
ÁÁF G
Off
ÁÁG J
;
ÁÁJ K"
previewFloorRenderer
ËË $
.
ËË$ %"
reflectionProbeUsage
ËË% 9
=
ËË: ;"
ReflectionProbeUsage
ËË< P
.
ËËP Q
Off
ËËQ T
;
ËËT U"
previewFloorRenderer
ÈÈ $
.
ÈÈ$ %
material
ÈÈ% -
=
ÈÈ. /
AssetDatabase
ÈÈ0 =
.
ÈÈ= >%
GetBuiltinExtraResource
ÈÈ> U
<
ÈÈU V
Material
ÈÈV ^
>
ÈÈ^ _
(
ÈÈ_ `
$str
ÈÈ` u
)
ÈÈu v
;
ÈÈv w5
'setupRenderPipelinePreviewFloorRenderer
ÎÎ 7
(
ÎÎ7 8"
previewFloorRenderer
ÎÎ8 L
)
ÎÎL M
;
ÎÎM N$
m_PreviewRenderUtility
ÌÌ &
.
ÌÌ& '
AddSingleGO
ÌÌ' 2
(
ÌÌ2 3
previewFloor
ÌÌ3 ?
)
ÌÌ? @
;
ÌÌ@ A
}
ÓÓ 
return
 
true
 
;
 
}
ÒÒ 	
public
˜˜ 

GUIContent
˜˜ #
CommonGetPreviewTitle
˜˜ /
(
˜˜/ 0
)
˜˜0 1
{
¯¯ 	
return
˘˘ 
new
˘˘ 

GUIContent
˘˘ !
(
˘˘! "
$str
˘˘" 9
)
˘˘9 :
;
˘˘: ;
}
˙˙ 	
public
ÉÉ 
void
ÉÉ  
CommonOnPreviewGUI
ÉÉ &
(
ÉÉ& '
Rect
ÉÉ' +
r
ÉÉ, -
,
ÉÉ- .
GUIStyle
ÉÉ/ 7

background
ÉÉ8 B
,
ÉÉB C
ScriptedImporter
ÉÉD T
target
ÉÉU [
,
ÉÉ[ \6
(SetupRenderPipelinePreviewLightIntensity
ÑÑ( P6
(setupRenderPipelinePreviewLightIntensity
ÑÑQ y
)
ÑÑy z
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
Event
ÜÜ 
.
ÜÜ 
current
ÜÜ 
.
ÜÜ 
type
ÜÜ "
==
ÜÜ# %
	EventType
ÜÜ& /
.
ÜÜ/ 0
Repaint
ÜÜ0 7
)
ÜÜ7 8
{
áá 
Texture
àà 
cookieTexture
àà %
=
àà& '
null
àà( ,
;
àà, -
Texture
ââ 
previewTexture
ââ &
=
ââ' (
null
ââ) -
;
ââ- .
if
ãã 
(
ãã #
m_PrefabLightTypeProp
ãã )
.
ãã) *
enumValueIndex
ãã* 8
==
ãã9 ;
(
ãã< =
int
ãã= @
)
ãã@ A
IESLightType
ããA M
.
ããM N
Point
ããN S
)
ããS T
{
åå 
foreach
çç 
(
çç 
var
çç  
subAsset
çç! )
in
çç* ,
AssetDatabase
çç- :
.
çç: ;/
!LoadAllAssetRepresentationsAtPath
çç; \
(
çç\ ]
target
çç] c
.
ççc d
	assetPath
ççd m
)
ççm n
)
ççn o
{
éé 
if
èè 
(
èè 
subAsset
èè $
.
èè$ %
name
èè% )
.
èè) *
EndsWith
èè* 2
(
èè2 3
$str
èè3 >
)
èè> ?
)
èè? @
{
êê 
cookieTexture
ëë )
=
ëë* +
subAsset
ëë, 4
as
ëë5 7
Texture
ëë8 ?
;
ëë? @
break
íí !
;
íí! "
}
ìì 
}
îî 
}
ïï 
else
ññ 
{
óó 
foreach
òò 
(
òò 
var
òò  
subAsset
òò! )
in
òò* ,
AssetDatabase
òò- :
.
òò: ;/
!LoadAllAssetRepresentationsAtPath
òò; \
(
òò\ ]
target
òò] c
.
òòc d
	assetPath
òòd m
)
òòm n
)
òòn o
{
ôô 
if
öö 
(
öö 
subAsset
öö $
.
öö$ %
name
öö% )
.
öö) *
EndsWith
öö* 2
(
öö2 3
$str
öö3 <
)
öö< =
)
öö= >
{
õõ 
cookieTexture
úú )
=
úú* +
subAsset
úú, 4
as
úú5 7
Texture
úú8 ?
;
úú? @
break
ùù !
;
ùù! "
}
ûû 
}
üü 
}
†† 
if
¢¢ 
(
¢¢ 
cookieTexture
¢¢ !
!=
¢¢" $
null
¢¢% )
)
¢¢) *
{
££ $
m_PreviewRenderUtility
§§ *
.
§§* +
lights
§§+ 1
[
§§1 2
$num
§§2 3
]
§§3 4
.
§§4 5
	transform
§§5 >
.
§§> ?
localEulerAngles
§§? O
=
§§P Q
new
§§R U
Vector3
§§V ]
(
§§] ^
$num
§§^ a
,
§§a b
$num
§§c e
,
§§e f)
m_LightAimAxisRotationProp§§g Å
.§§Å Ç

floatValue§§Ç å
)§§å ç
;§§ç é6
(setupRenderPipelinePreviewLightIntensity
•• <
(
••< =$
m_PreviewRenderUtility
••= S
.
••S T
lights
••T Z
[
••Z [
$num
••[ \
]
••\ ]
,
••] ^*
m_UseIESMaximumIntensityProp
••_ {
,
••{ |,
m_IESMaximumIntensityUnitProp••} ö
,••ö õ)
m_IESMaximumIntensityProp••ú µ
)••µ ∂
;••∂ ∑$
m_PreviewRenderUtility
¶¶ *
.
¶¶* +
lights
¶¶+ 1
[
¶¶1 2
$num
¶¶2 3
]
¶¶3 4
.
¶¶4 5
cookie
¶¶5 ;
=
¶¶< =
cookieTexture
¶¶> K
;
¶¶K L$
m_PreviewRenderUtility
ßß *
.
ßß* +
lights
ßß+ 1
[
ßß1 2
$num
ßß2 3
]
ßß3 4
.
ßß4 5
type
ßß5 9
=
ßß: ;#
m_PrefabLightTypeProp
ßß< Q
.
ßßQ R
enumValueIndex
ßßR `
==
ßßa c
(
ßßd e
int
ßße h
)
ßßh i
IESLightType
ßßi u
.
ßßu v
Point
ßßv {
?
ßß| }
	LightTypeßß~ á
.ßßá à
Pointßßà ç
:ßßé è
	LightTypeßßê ô
.ßßô ö
Spotßßö û
;ßßû ü$
m_PreviewRenderUtility
©© *
.
©©* +
BeginPreview
©©+ 7
(
©©7 8
r
©©8 9
,
©©9 :

background
©©; E
)
©©E F
;
©©F G
bool
´´ 
fog
´´ 
=
´´ 
RenderSettings
´´ -
.
´´- .
fog
´´. 1
;
´´1 2
Unsupported
¨¨ 
.
¨¨  ,
SetRenderSettingsUseFogNoDirty
¨¨  >
(
¨¨> ?
false
¨¨? D
)
¨¨D E
;
¨¨E F$
m_PreviewRenderUtility
ÆÆ *
.
ÆÆ* +
camera
ÆÆ+ 1
.
ÆÆ1 2
Render
ÆÆ2 8
(
ÆÆ8 9
)
ÆÆ9 :
;
ÆÆ: ;
Unsupported
∞∞ 
.
∞∞  ,
SetRenderSettingsUseFogNoDirty
∞∞  >
(
∞∞> ?
fog
∞∞? B
)
∞∞B C
;
∞∞C D
previewTexture
≤≤ "
=
≤≤# $$
m_PreviewRenderUtility
≤≤% ;
.
≤≤; <

EndPreview
≤≤< F
(
≤≤F G
)
≤≤G H
;
≤≤H I
}
≥≥ 
if
µµ 
(
µµ 
previewTexture
µµ "
==
µµ# %
null
µµ& *
)
µµ* +
{
∂∂ 
GUI
∑∑ 
.
∑∑ 
DrawTexture
∑∑ #
(
∑∑# $
r
∑∑$ %
,
∑∑% &
	Texture2D
∑∑' 0
.
∑∑0 1
blackTexture
∑∑1 =
,
∑∑= >
	ScaleMode
∑∑? H
.
∑∑H I
StretchToFill
∑∑I V
,
∑∑V W
false
∑∑X ]
)
∑∑] ^
;
∑∑^ _
}
∏∏ 
else
ππ 
{
∫∫ 
GUI
ªª 
.
ªª 
DrawTexture
ªª #
(
ªª# $
r
ªª$ %
,
ªª% &
previewTexture
ªª' 5
,
ªª5 6
	ScaleMode
ªª7 @
.
ªª@ A

ScaleToFit
ªªA K
,
ªªK L
false
ªªM R
)
ªªR S
;
ªªS T
}
ºº 
}
ΩΩ 
}
ææ 	
public
√√ 
void
√√ 
CommonOnDisable
√√ #
(
√√# $
)
√√$ %
{
ƒƒ 	
if
≈≈ 
(
≈≈ $
m_PreviewRenderUtility
≈≈ &
!=
≈≈' )
null
≈≈* .
)
≈≈. /
{
∆∆ $
m_PreviewRenderUtility
«« &
.
««& '
Cleanup
««' .
(
««. /
)
««/ 0
;
««0 1$
m_PreviewRenderUtility
»» &
=
»»' (
null
»») -
;
»»- .
}
…… 
}
   	
}
ÀÀ 
}ÃÃ ËÑ
™D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\Drawers\FloatParameterDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "
MinFloatParameter" 3
)3 4
)4 5
]5 6
sealed 

class #
MinFloatParameterDrawer (
:) *!
VolumeParameterDrawer+ @
{ 
public		 
override		 
bool		 
OnGUI		 "
(		" ##
SerializedDataParameter		# :
	parameter		; D
,		D E

GUIContent		F P
title		Q V
)		V W
{

 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Float= B
)B C
return 
false 
; 
var 
o 
= 
	parameter 
. 
GetObjectRef *
<* +
MinFloatParameter+ <
>< =
(= >
)> ?
;? @
float 
v 
= 
EditorGUILayout %
.% &

FloatField& 0
(0 1
title1 6
,6 7
value8 =
.= >

floatValue> H
)H I
;I J
value 
. 

floatValue 
= 
Mathf $
.$ %
Max% (
(( )
v) *
,* +
o, -
.- .
min. 1
)1 2
;2 3
return 
true 
; 
} 	
} 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "%
NoInterpMinFloatParameter" ;
); <
)< =
]= >
sealed 

class +
NoInterpMinFloatParameterDrawer 0
:1 2!
VolumeParameterDrawer3 H
{ 
public 
override 
bool 
OnGUI "
(" ##
SerializedDataParameter# :
	parameter; D
,D E

GUIContentF P
titleQ V
)V W
{ 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Float= B
)B C
return 
false 
; 
var!! 
o!! 
=!! 
	parameter!! 
.!! 
GetObjectRef!! *
<!!* +%
NoInterpMinFloatParameter!!+ D
>!!D E
(!!E F
)!!F G
;!!G H
float"" 
v"" 
="" 
EditorGUILayout"" %
.""% &

FloatField""& 0
(""0 1
title""1 6
,""6 7
value""8 =
.""= >

floatValue""> H
)""H I
;""I J
value## 
.## 

floatValue## 
=## 
Mathf## $
.##$ %
Max##% (
(##( )
v##) *
,##* +
o##, -
.##- .
min##. 1
)##1 2
;##2 3
return$$ 
true$$ 
;$$ 
}%% 	
}&& 
[(( !
VolumeParameterDrawer(( 
((( 
typeof(( !
(((! "
MaxFloatParameter((" 3
)((3 4
)((4 5
]((5 6
sealed)) 

class)) #
MaxFloatParameterDrawer)) (
:))) *!
VolumeParameterDrawer))+ @
{** 
public++ 
override++ 
bool++ 
OnGUI++ "
(++" ##
SerializedDataParameter++# :
	parameter++; D
,++D E

GUIContent++F P
title++Q V
)++V W
{,, 	
var-- 
value-- 
=-- 
	parameter-- !
.--! "
value--" '
;--' (
if// 
(// 
value// 
.// 
propertyType// "
!=//# %"
SerializedPropertyType//& <
.//< =
Float//= B
)//B C
return00 
false00 
;00 
var22 
o22 
=22 
	parameter22 
.22 
GetObjectRef22 *
<22* +
MaxFloatParameter22+ <
>22< =
(22= >
)22> ?
;22? @
float33 
v33 
=33 
EditorGUILayout33 %
.33% &

FloatField33& 0
(330 1
title331 6
,336 7
value338 =
.33= >

floatValue33> H
)33H I
;33I J
value44 
.44 

floatValue44 
=44 
Mathf44 $
.44$ %
Min44% (
(44( )
v44) *
,44* +
o44, -
.44- .
max44. 1
)441 2
;442 3
return55 
true55 
;55 
}66 	
}77 
[99 !
VolumeParameterDrawer99 
(99 
typeof99 !
(99! "%
NoInterpMaxFloatParameter99" ;
)99; <
)99< =
]99= >
sealed:: 

class:: +
NoInterpMaxFloatParameterDrawer:: 0
:::1 2!
VolumeParameterDrawer::3 H
{;; 
public<< 
override<< 
bool<< 
OnGUI<< "
(<<" ##
SerializedDataParameter<<# :
	parameter<<; D
,<<D E

GUIContent<<F P
title<<Q V
)<<V W
{== 	
var>> 
value>> 
=>> 
	parameter>> !
.>>! "
value>>" '
;>>' (
if@@ 
(@@ 
value@@ 
.@@ 
propertyType@@ "
!=@@# %"
SerializedPropertyType@@& <
.@@< =
Float@@= B
)@@B C
returnAA 
falseAA 
;AA 
varCC 
oCC 
=CC 
	parameterCC 
.CC 
GetObjectRefCC *
<CC* +%
NoInterpMaxFloatParameterCC+ D
>CCD E
(CCE F
)CCF G
;CCG H
floatDD 
vDD 
=DD 
EditorGUILayoutDD %
.DD% &

FloatFieldDD& 0
(DD0 1
titleDD1 6
,DD6 7
valueDD8 =
.DD= >

floatValueDD> H
)DDH I
;DDI J
valueEE 
.EE 

floatValueEE 
=EE 
MathfEE $
.EE$ %
MinEE% (
(EE( )
vEE) *
,EE* +
oEE, -
.EE- .
maxEE. 1
)EE1 2
;EE2 3
returnFF 
trueFF 
;FF 
}GG 	
}HH 
[JJ !
VolumeParameterDrawerJJ 
(JJ 
typeofJJ !
(JJ! "!
ClampedFloatParameterJJ" 7
)JJ7 8
)JJ8 9
]JJ9 :
sealedKK 

classKK '
ClampedFloatParameterDrawerKK ,
:KK- .!
VolumeParameterDrawerKK/ D
{LL 
publicMM 
overrideMM 
boolMM 
OnGUIMM "
(MM" ##
SerializedDataParameterMM# :
	parameterMM; D
,MMD E

GUIContentMMF P
titleMMQ V
)MMV W
{NN 	
varOO 
valueOO 
=OO 
	parameterOO !
.OO! "
valueOO" '
;OO' (
ifQQ 
(QQ 
valueQQ 
.QQ 
propertyTypeQQ "
!=QQ# %"
SerializedPropertyTypeQQ& <
.QQ< =
FloatQQ= B
)QQB C
returnRR 
falseRR 
;RR 
varTT 
oTT 
=TT 
	parameterTT 
.TT 
GetObjectRefTT *
<TT* +!
ClampedFloatParameterTT+ @
>TT@ A
(TTA B
)TTB C
;TTC D
EditorGUILayoutUU 
.UU 
SliderUU "
(UU" #
valueUU# (
,UU( )
oUU* +
.UU+ ,
minUU, /
,UU/ 0
oUU1 2
.UU2 3
maxUU3 6
,UU6 7
titleUU8 =
)UU= >
;UU> ?
valueVV 
.VV 

floatValueVV 
=VV 
MathfVV $
.VV$ %
ClampVV% *
(VV* +
valueVV+ 0
.VV0 1

floatValueVV1 ;
,VV; <
oVV= >
.VV> ?
minVV? B
,VVB C
oVVD E
.VVE F
maxVVF I
)VVI J
;VVJ K
returnWW 
trueWW 
;WW 
}XX 	
}YY 
[[[ !
VolumeParameterDrawer[[ 
([[ 
typeof[[ !
([[! ")
NoInterpClampedFloatParameter[[" ?
)[[? @
)[[@ A
][[A B
sealed\\ 

class\\ /
#NoInterpClampedFloatParameterDrawer\\ 4
:\\5 6!
VolumeParameterDrawer\\7 L
{]] 
public^^ 
override^^ 
bool^^ 
OnGUI^^ "
(^^" ##
SerializedDataParameter^^# :
	parameter^^; D
,^^D E

GUIContent^^F P
title^^Q V
)^^V W
{__ 	
var`` 
value`` 
=`` 
	parameter`` !
.``! "
value``" '
;``' (
ifbb 
(bb 
valuebb 
.bb 
propertyTypebb "
!=bb# %"
SerializedPropertyTypebb& <
.bb< =
Floatbb= B
)bbB C
returncc 
falsecc 
;cc 
varee 
oee 
=ee 
	parameteree 
.ee 
GetObjectRefee *
<ee* +)
NoInterpClampedFloatParameteree+ H
>eeH I
(eeI J
)eeJ K
;eeK L
EditorGUILayoutff 
.ff 
Sliderff "
(ff" #
valueff# (
,ff( )
off* +
.ff+ ,
minff, /
,ff/ 0
off1 2
.ff2 3
maxff3 6
,ff6 7
titleff8 =
)ff= >
;ff> ?
valuegg 
.gg 

floatValuegg 
=gg 
Mathfgg $
.gg$ %
Clampgg% *
(gg* +
valuegg+ 0
.gg0 1

floatValuegg1 ;
,gg; <
ogg= >
.gg> ?
mingg? B
,ggB C
oggD E
.ggE F
maxggF I
)ggI J
;ggJ K
returnhh 
truehh 
;hh 
}ii 	
}jj 
[ll !
VolumeParameterDrawerll 
(ll 
typeofll !
(ll! "
FloatRangeParameterll" 5
)ll5 6
)ll6 7
]ll7 8
sealedmm 

classmm %
FloatRangeParameterDrawermm *
:mm+ ,!
VolumeParameterDrawermm- B
{nn 
publicoo 
overrideoo 
booloo 
OnGUIoo "
(oo" ##
SerializedDataParameteroo# :
	parameteroo; D
,ooD E

GUIContentooF P
titleooQ V
)ooV W
{pp 	
varqq 
valueqq 
=qq 
	parameterqq !
.qq! "
valueqq" '
;qq' (
ifss 
(ss 
valuess 
.ss 
propertyTypess "
!=ss# %"
SerializedPropertyTypess& <
.ss< =
Vector2ss= D
)ssD E
returntt 
falsett 
;tt 
varvv 
ovv 
=vv 
	parametervv 
.vv 
GetObjectRefvv *
<vv* +
FloatRangeParametervv+ >
>vv> ?
(vv? @
)vv@ A
;vvA B
varww 
vww 
=ww 
valueww 
.ww 
vector2Valueww &
;ww& '
const|| 
int|| 
kFloatFieldWidth|| &
=||' (
$num||) +
;||+ ,
const}} 
int}} 
kSeparatorWidth}} %
=}}& '
$num}}( )
;}}) *
float~~ 
indentOffset~~ 
=~~  
	EditorGUI~~! *
.~~* +
indentLevel~~+ 6
*~~7 8
$num~~9 <
;~~< =
var 
lineRect 
= 
GUILayoutUtility +
.+ ,
GetRect, 3
(3 4
$num4 5
,5 6
EditorGUIUtility7 G
.G H
singleLineHeightH X
)X Y
;Y Z
lineRect
ÄÄ 
.
ÄÄ 
xMin
ÄÄ 
+=
ÄÄ 
$num
ÄÄ 
;
ÄÄ  
lineRect
ÅÅ 
.
ÅÅ 
y
ÅÅ 
+=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
var
ÇÇ 
	labelRect
ÇÇ 
=
ÇÇ 
new
ÇÇ 
Rect
ÇÇ  $
(
ÇÇ$ %
lineRect
ÇÇ% -
.
ÇÇ- .
x
ÇÇ. /
,
ÇÇ/ 0
lineRect
ÇÇ1 9
.
ÇÇ9 :
y
ÇÇ: ;
,
ÇÇ; <
EditorGUIUtility
ÇÇ= M
.
ÇÇM N

labelWidth
ÇÇN X
-
ÇÇY Z
indentOffset
ÇÇ[ g
,
ÇÇg h
lineRect
ÇÇi q
.
ÇÇq r
height
ÇÇr x
)
ÇÇx y
;
ÇÇy z
var
ÉÉ 
floatFieldLeft
ÉÉ 
=
ÉÉ  
new
ÉÉ! $
Rect
ÉÉ% )
(
ÉÉ) *
	labelRect
ÉÉ* 3
.
ÉÉ3 4
xMax
ÉÉ4 8
,
ÉÉ8 9
lineRect
ÉÉ: B
.
ÉÉB C
y
ÉÉC D
,
ÉÉD E
kFloatFieldWidth
ÉÉF V
+
ÉÉW X
indentOffset
ÉÉY e
,
ÉÉe f
lineRect
ÉÉg o
.
ÉÉo p
height
ÉÉp v
)
ÉÉv w
;
ÉÉw x
var
ÑÑ 

sliderRect
ÑÑ 
=
ÑÑ 
new
ÑÑ  
Rect
ÑÑ! %
(
ÑÑ% &
floatFieldLeft
ÑÑ& 4
.
ÑÑ4 5
xMax
ÑÑ5 9
+
ÑÑ: ;
kSeparatorWidth
ÑÑ< K
-
ÑÑL M
indentOffset
ÑÑN Z
,
ÑÑZ [
lineRect
ÑÑ\ d
.
ÑÑd e
y
ÑÑe f
,
ÑÑf g
lineRect
ÑÑh p
.
ÑÑp q
width
ÑÑq v
-
ÑÑw x
	labelRectÑÑy Ç
.ÑÑÇ É
widthÑÑÉ à
-ÑÑâ ä 
kFloatFieldWidthÑÑã õ
*ÑÑú ù
$numÑÑû ü
-ÑÑ† °
kSeparatorWidthÑÑ¢ ±
*ÑÑ≤ ≥
$numÑÑ¥ µ
,ÑÑµ ∂
lineRectÑÑ∑ ø
.ÑÑø ¿
heightÑÑ¿ ∆
)ÑÑ∆ «
;ÑÑ« »
var
ÖÖ 
floatFieldRight
ÖÖ 
=
ÖÖ  !
new
ÖÖ" %
Rect
ÖÖ& *
(
ÖÖ* +

sliderRect
ÖÖ+ 5
.
ÖÖ5 6
xMax
ÖÖ6 :
+
ÖÖ; <
kSeparatorWidth
ÖÖ= L
-
ÖÖM N
indentOffset
ÖÖO [
,
ÖÖ[ \
lineRect
ÖÖ] e
.
ÖÖe f
y
ÖÖf g
,
ÖÖg h
kFloatFieldWidth
ÖÖi y
+
ÖÖz {
indentOffsetÖÖ| à
,ÖÖà â
lineRectÖÖä í
.ÖÖí ì
heightÖÖì ô
)ÖÖô ö
;ÖÖö õ
	EditorGUI
áá 
.
áá 
PrefixLabel
áá !
(
áá! "
	labelRect
áá" +
,
áá+ ,
title
áá- 2
)
áá2 3
;
áá3 4
v
àà 
.
àà 
x
àà 
=
àà 
	EditorGUI
àà 
.
àà 

FloatField
àà &
(
àà& '
floatFieldLeft
àà' 5
,
àà5 6
v
àà7 8
.
àà8 9
x
àà9 :
)
àà: ;
;
àà; <
	EditorGUI
ââ 
.
ââ 
MinMaxSlider
ââ "
(
ââ" #

sliderRect
ââ# -
,
ââ- .
ref
ââ/ 2
v
ââ3 4
.
ââ4 5
x
ââ5 6
,
ââ6 7
ref
ââ8 ;
v
ââ< =
.
ââ= >
y
ââ> ?
,
ââ? @
o
ââA B
.
ââB C
min
ââC F
,
ââF G
o
ââH I
.
ââI J
max
ââJ M
)
ââM N
;
ââN O
v
ää 
.
ää 
y
ää 
=
ää 
	EditorGUI
ää 
.
ää 

FloatField
ää &
(
ää& '
floatFieldRight
ää' 6
,
ää6 7
v
ää8 9
.
ää9 :
y
ää: ;
)
ää; <
;
ää< =
value
åå 
.
åå 
vector2Value
åå 
=
åå  
v
åå! "
;
åå" #
return
çç 
true
çç 
;
çç 
}
éé 	
}
èè 
}êê ó±
§D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\RenderGraph\RenderGraphViewer.cs
public		 
class		 
RenderGraphViewer		 
:		  
EditorWindow		! -
{

 
static 

class 
Style 
{ 
public 
static 
readonly 

GUIContent )
title* /
=0 1
EditorGUIUtility2 B
.B C
TrTextContentC P
(P Q
$strQ f
)f g
;g h
} 
const 	
float
 
kRenderPassWidth  
=! "
$num# (
;( )
const 	
float
 
kResourceHeight 
=  !
$num" '
;' (
class 	
CellElement
 
: 
VisualElement %
{ 
public 
CellElement 
( 
int 
idxStart '
,' (
int) ,
idxEnd- 3
)3 4
{ 	
style 
. "
borderBottomLeftRadius (
=) *
style+ 0
.0 1
borderTopLeftRadius1 D
=E F
styleG L
.L M#
borderBottomRightRadiusM d
=e f
styleg l
.l m!
borderTopRightRadius	m Å
=
Ç É
$num
Ñ Ö
;
Ö Ü
style 
. 
borderBottomWidth #
=$ %
style& +
.+ ,
borderTopWidth, :
=; <
style= B
.B C
borderLeftWidthC R
=S T
styleU Z
.Z [
borderRightWidth[ k
=l m
$numn p
;p q
style 
. 
borderBottomColor #
=$ %
style& +
.+ ,
borderTopColor, :
=; <
style= B
.B C
borderLeftColorC R
=S T
styleU Z
.Z [
borderRightColor[ k
=l m
newn q
Colorr w
(w x
$numx z
,z {
$num| ~
,~ 
$num
Ä Ç
,
Ç É
$num
Ñ Ü
)
Ü á
;
á à
style 
. 
backgroundColor !
=" #
($ %
Color% *
)* +
new+ .
Color32/ 6
(6 7
$num7 9
,9 :
$num; =
,= >
$num? A
,A B
$numC F
)F G
;G H
style 
. 
height 
= 
kResourceHeight *
;* +
style 
. 
left 
= 
idxStart !
*" #
kRenderPassWidth$ 4
;4 5
style 
. 
width 
= 
( 
idxEnd !
-" #
idxStart$ ,
+- .
$num/ 0
)0 1
*2 3
kRenderPassWidth4 D
;D E
} 	
public   
void   
SetColor   
(   

StyleColor   '
color  ( -
)  - .
{!! 	
style"" 
."" 
backgroundColor"" !
=""" #
color""$ )
;"") *
}## 	
}$$ 
[&& 
MenuItem&& 
(&& 
$str&& :
,&&: ;
false&&< A
,&&A B
$num&&C H
)&&H I
]&&I J
static'' 

void'' 
Init'' 
('' 
)'' 
{(( 
var** 
window** 
=** 
	GetWindow** 
<** 
RenderGraphViewer** 0
>**0 1
(**1 2
)**2 3
;**3 4
window++ 
.++ 
titleContent++ 
=++ 
new++ !

GUIContent++" ,
(++, -
$str++- B
)++B C
;++C D
},, 
[.. 
System.. 
... 
Flags.. 
].. 
enum// 
Filter//	 
{00 
ImportedResources11 
=11 
$num11 
<<11  
$num11! "
,11" #
CulledPasses22 
=22 
$num22 
<<22 
$num22 
,22 
Textures33 
=33 
$num33 
<<33 
$num33 
,33 
ComputeBuffers44 
=44 
$num44 
<<44 
$num44 
,44  
}55 
struct77 

ResourceElementInfo77 
{88 
public99 
VisualElement99 
lifetime99 %
;99% &
public:: 
VisualElement:: 
resourceLabel:: *
;::* +
public<< 
void<< 
Reset<< 
(<< 
)<< 
{== 	
lifetime>> 
=>> 
null>> 
;>> 
resourceLabel?? 
=?? 
null??  
;??  !
}@@ 	
}AA 
structCC 

PassElementInfoCC 
{DD 
publicEE 
VisualElementEE 
passEE !
;EE! "
publicFF 
intFF 
remapFF 
;FF 
publicHH 
voidHH 
ResetHH 
(HH 
)HH 
{II 	
passJJ 
=JJ 
nullJJ 
;JJ 
remapKK 
=KK 
-KK 
$numKK 
;KK 
}LL 	
}MM 
RenderGraphOO  
m_CurrentRenderGraphOO $
;OO$ %
VisualElementQQ 
m_RootQQ 
;QQ 
VisualElementRR 
m_HeaderElementRR !
;RR! "
VisualElementSS  
m_GraphViewerElementSS &
;SS& '
readonlyUU 

StyleColorUU 
m_ResourceColorReadUU +
=UU, -
newUU. 1

StyleColorUU2 <
(UU< =
newUU= @
ColorUUA F
(UUF G
$numUUG K
,UUK L
$numUUM Q
,UUQ R
$numUUS W
)UUW X
)UUX Y
;UUY Z
readonlyVV 

StyleColorVV  
m_ResourceColorWriteVV ,
=VV- .
newVV/ 2

StyleColorVV3 =
(VV= >
newVV> A
ColorVVB G
(VVG H
$numVVH L
,VVL M
$numVVN R
,VVR S
$numVVT X
)VVX Y
)VVY Z
;VVZ [
readonlyWW 

StyleColorWW #
m_ImportedResourceColorWW /
=WW0 1
newWW2 5

StyleColorWW6 @
(WW@ A
newWWA D
ColorWWE J
(WWJ K
$numWWK O
,WWO P
$numWWQ V
,WWV W
$numWWX ]
)WW] ^
)WW^ _
;WW_ `
readonlyXX 

StyleColorXX 
m_CulledPassColorXX )
=XX* +
newXX, /

StyleColorXX0 :
(XX: ;
ColorXX; @
.XX@ A
blackXXA F
)XXF G
;XXG H
readonlyYY 

StyleColorYY $
m_ResourceHighlightColorYY 0
=YY1 2
newYY3 6

StyleColorYY7 A
(YYA B
ColorYYB G
.YYG H
whiteYYH M
)YYM N
;YYN O
readonlyZZ 

StyleColorZZ (
m_ResourceLifeHighLightColorZZ 4
=ZZ5 6
newZZ7 :

StyleColorZZ; E
(ZZE F
newZZF I
Color32ZZJ Q
(ZZQ R
$numZZR U
,ZZU V
$numZZW Z
,ZZZ [
$numZZ\ _
,ZZ_ `
$numZZa d
)ZZd e
)ZZe f
;ZZf g

StyleColor[[ '
m_OriginalResourceLifeColor[[ *
;[[* +

StyleColor\\ 
m_OriginalPassColor\\ "
;\\" #

StyleColor]] #
m_OriginalResourceColor]] &
;]]& '
DynamicArray__ 
<__ 
ResourceElementInfo__ $
>__$ %
[__% &
]__& '"
m_ResourceElementsInfo__( >
=__? @
new__A D
DynamicArray__E Q
<__Q R
ResourceElementInfo__R e
>__e f
[__f g
(__g h
int__h k
)__k l$
RenderGraphResourceType	__l É
.
__É Ñ
Count
__Ñ â
]
__â ä
;
__ä ã
DynamicArray`` 
<`` 
PassElementInfo``  
>``  !
m_PassElementsInfo``" 4
=``5 6
new``7 :
DynamicArray``; G
<``G H
PassElementInfo``H W
>``W X
(``X Y
)``Y Z
;``Z [
Filterbb 

m_Filterbb 
=bb 
Filterbb 
.bb 
Texturesbb %
|bb& '
Filterbb( .
.bb. /
ComputeBuffersbb/ =
;bb= >
voiddd "
RenderPassLabelChangeddd	 
(dd   
GeometryChangedEventdd  4
evtdd5 8
)dd8 9
{ee 
varff 
labelff 
=ff 
evtff 
.ff 
currentTargetff %
asff& (
Labelff) .
;ff. /
Vector2gg 
textSizegg 
=gg 
labelgg  
.gg  !
MeasureTextSizegg! 0
(gg0 1
labelgg1 6
.gg6 7
textgg7 ;
,gg; <
$numgg= >
,gg> ?
VisualElementgg@ M
.ggM N
MeasureModeggN Y
.ggY Z
	UndefinedggZ c
,ggc d
$numgge g
,ggg h
VisualElementggi v
.ggv w
MeasureMode	ggw Ç
.
ggÇ É
	Undefined
ggÉ å
)
ggå ç
;
ggç é
floathh 
	textWidthhh 
=hh 
Mathfhh 
.hh  
Maxhh  #
(hh# $
kRenderPassWidthhh$ 4
,hh4 5
textSizehh6 >
.hh> ?
xhh? @
)hh@ A
;hhA B
floatii 
desiredHeightii 
=ii 
Mathfii #
.ii# $
Sqrtii$ (
(ii( )
	textWidthii) 2
*ii3 4
	textWidthii5 >
-ii? @
kRenderPassWidthiiA Q
*iiR S
kRenderPassWidthiiT d
)iid e
;iie f
varll $
passNamesContainerHeightll $
=ll% &
Mathfll' ,
.ll, -
Maxll- 0
(ll0 1
labelll1 6
.ll6 7
parentll7 =
.ll= >
parentll> D
.llD E
stylellE J
.llJ K
heightllK Q
.llQ R
valuellR W
.llW X
valuellX ]
,ll] ^
desiredHeightll_ l
)lll m
;llm n
labelmm 
.mm 
parentmm 
.mm 
parentmm 
.mm 
stylemm !
.mm! "
heightmm" (
=mm) *$
passNamesContainerHeightmm+ C
;mmC D
labelnn 
.nn 
parentnn 
.nn 
parentnn 
.nn 
stylenn !
.nn! "
	minHeightnn" +
=nn, -$
passNamesContainerHeightnn. F
;nnF G
varpp 
topRowElementpp 
=pp  
m_GraphViewerElementpp 0
.pp0 1
Qpp1 2
<pp2 3
VisualElementpp3 @
>pp@ A
(ppA B
$strppB ]
)pp] ^
;pp^ _
topRowElementqq 
.qq 
styleqq 
.qq 
	minHeightqq %
=qq& '$
passNamesContainerHeightqq( @
;qq@ A
}ss 
voiduu &
LastRenderPassLabelChangeduu	 #
(uu# $ 
GeometryChangedEventuu$ 8
evtuu9 <
)uu< =
{vv 
varww 
labelww 
=ww 
evtww 
.ww 
currentTargetww %
asww& (
Labelww) .
;ww. /
Vector2xx 
textSizexx 
=xx 
labelxx  
.xx  !
MeasureTextSizexx! 0
(xx0 1
labelxx1 6
.xx6 7
textxx7 ;
,xx; <
$numxx= >
,xx> ?
VisualElementxx@ M
.xxM N
MeasureModexxN Y
.xxY Z
	UndefinedxxZ c
,xxc d
$numxxe g
,xxg h
VisualElementxxi v
.xxv w
MeasureMode	xxw Ç
.
xxÇ É
	Undefined
xxÉ å
)
xxå ç
;
xxç é
floatyy 
	textWidthyy 
=yy 
Mathfyy 
.yy  
Maxyy  #
(yy# $
kRenderPassWidthyy$ 4
,yy4 5
textSizeyy6 >
.yy> ?
xyy? @
)yy@ A
;yyA B
var|| 
viewerContainer|| 
=||  
m_GraphViewerElement|| 2
.||2 3
Q||3 4
<||4 5
VisualElement||5 B
>||B C
(||C D
$str||D a
)||a b
;||b c
viewerContainer}} 
.}} 
style}} 
.}} 
marginRight}} )
=}}* +
Mathf}}, 1
.}}1 2
Max}}2 5
(}}5 6
viewerContainer}}6 E
.}}E F
style}}F K
.}}K L
marginRight}}L W
.}}W X
value}}X ]
.}}] ^
value}}^ c
,}}c d
(}}e f
	textWidth}}f o
-}}p q
kRenderPassWidth	}}r Ç
)
}}Ç É
)
}}É Ñ
;
}}Ñ Ö
}~~ 
void
ÄÄ )
UpdateResourceLifetimeColor
ÄÄ	 $
(
ÄÄ$ %
int
ÄÄ% (
	passIndex
ÄÄ) 2
,
ÄÄ2 3

StyleColor
ÄÄ4 >
	colorRead
ÄÄ? H
,
ÄÄH I

StyleColor
ÄÄJ T

colorWrite
ÄÄU _
)
ÄÄ_ `
{
ÅÅ 
var
ÇÇ 
	debugData
ÇÇ 
=
ÇÇ "
m_CurrentRenderGraph
ÇÇ ,
.
ÇÇ, -
GetDebugData
ÇÇ- 9
(
ÇÇ9 :
)
ÇÇ: ;
;
ÇÇ; <
var
ÉÉ 
pass
ÉÉ 
=
ÉÉ 
	debugData
ÉÉ 
.
ÉÉ 
passList
ÉÉ %
[
ÉÉ% &
	passIndex
ÉÉ& /
]
ÉÉ/ 0
;
ÉÉ0 1
if
ÖÖ 

(
ÖÖ 
pass
ÖÖ 
.
ÖÖ 
culled
ÖÖ 
)
ÖÖ 
return
ÜÜ 
;
ÜÜ 
for
àà 
(
àà 
int
àà 
type
àà 
=
àà 
$num
àà 
;
àà 
type
àà 
<
àà  !
(
àà" #
int
àà# &
)
àà& '%
RenderGraphResourceType
àà' >
.
àà> ?
Count
àà? D
;
ààD E
++
ààF H
type
ààH L
)
ààL M
{
ââ 	
foreach
ää 
(
ää 
int
ää 
resourceRead
ää %
in
ää& (
pass
ää) -
.
ää- .
resourceReadLists
ää. ?
[
ää? @
type
ää@ D
]
ääD E
)
ääE F
{
ãã 
CellElement
åå 
resourceLifetime
åå ,
=
åå- .$
m_ResourceElementsInfo
åå/ E
[
ååE F
type
ååF J
]
ååJ K
[
ååK L
resourceRead
ååL X
]
ååX Y
.
ååY Z
lifetime
ååZ b
as
ååc e
CellElement
ååf q
;
ååq r
if
çç 
(
çç 
resourceLifetime
çç $
!=
çç% '
null
çç( ,
)
çç, -
resourceLifetime
éé $
.
éé$ %
SetColor
éé% -
(
éé- .
	colorRead
éé. 7
)
éé7 8
;
éé8 9
}
èè 
foreach
ëë 
(
ëë 
int
ëë 
resourceWrite
ëë &
in
ëë' )
pass
ëë* .
.
ëë. / 
resourceWriteLists
ëë/ A
[
ëëA B
type
ëëB F
]
ëëF G
)
ëëG H
{
íí 
CellElement
ìì 
resourceLifetime
ìì ,
=
ìì- .$
m_ResourceElementsInfo
ìì/ E
[
ììE F
type
ììF J
]
ììJ K
[
ììK L
resourceWrite
ììL Y
]
ììY Z
.
ììZ [
lifetime
ìì[ c
as
ììd f
CellElement
ììg r
;
ììr s
if
îî 
(
îî 
resourceLifetime
îî $
!=
îî% '
null
îî( ,
)
îî, -
resourceLifetime
ïï $
.
ïï$ %
SetColor
ïï% -
(
ïï- .

colorWrite
ïï. 8
)
ïï8 9
;
ïï9 :
}
ññ 
}
óó 	
}
òò 
void
öö $
MouseEnterPassCallback
öö	 
(
öö  
MouseEnterEvent
öö  /
evt
öö0 3
,
öö3 4
int
öö5 8
index
öö9 >
)
öö> ?
{
õõ )
UpdateResourceLifetimeColor
úú #
(
úú# $
index
úú$ )
,
úú) *!
m_ResourceColorRead
úú+ >
,
úú> ?"
m_ResourceColorWrite
úú@ T
)
úúT U
;
úúU V
}
ùù 
void
üü $
MouseLeavePassCallback
üü	 
(
üü  
MouseLeaveEvent
üü  /
evt
üü0 3
,
üü3 4
int
üü5 8
index
üü9 >
)
üü> ?
{
†† )
UpdateResourceLifetimeColor
°° #
(
°°# $
index
°°$ )
,
°°) *)
m_OriginalResourceLifeColor
°°+ F
,
°°F G)
m_OriginalResourceLifeColor
°°H c
)
°°c d
;
°°d e
}
¢¢ 
void
§§ 
UpdatePassColor
§§	 
(
§§ 
(
§§ 
int
§§ 
index
§§ #
,
§§# $
int
§§% (
resourceType
§§) 5
)
§§5 6
resInfo
§§7 >
,
§§> ?

StyleColor
§§@ J
	colorRead
§§K T
,
§§T U

StyleColor
§§V `

colorWrite
§§a k
)
§§k l
{
•• 
var
¶¶ 
	debugData
¶¶ 
=
¶¶ "
m_CurrentRenderGraph
¶¶ ,
.
¶¶, -
GetDebugData
¶¶- 9
(
¶¶9 :
)
¶¶: ;
;
¶¶; <
var
ßß 
resource
ßß 
=
ßß 
	debugData
ßß  
.
ßß  !
resourceLists
ßß! .
[
ßß. /
resInfo
ßß/ 6
.
ßß6 7
resourceType
ßß7 C
]
ßßC D
[
ßßD E
resInfo
ßßE L
.
ßßL M
index
ßßM R
]
ßßR S
;
ßßS T
foreach
©© 
(
©© 
int
©© 
consumer
©© 
in
©©  
resource
©©! )
.
©©) *
consumerList
©©* 6
)
©©6 7
{
™™ 	
var
´´ 
passDebugData
´´ 
=
´´ 
	debugData
´´  )
.
´´) *
passList
´´* 2
[
´´2 3
consumer
´´3 ;
]
´´; <
;
´´< =
if
¨¨ 
(
¨¨ 
passDebugData
¨¨ 
.
¨¨ 
culled
¨¨ $
)
¨¨$ %
continue
≠≠ 
;
≠≠ 
VisualElement
ØØ 
passElement
ØØ %
=
ØØ& ' 
m_PassElementsInfo
ØØ( :
[
ØØ: ;
consumer
ØØ; C
]
ØØC D
.
ØØD E
pass
ØØE I
;
ØØI J
if
∞∞ 
(
∞∞ 
passElement
∞∞ 
!=
∞∞ 
null
∞∞ #
)
∞∞# $
{
±± 
VisualElement
≤≤ 

passButton
≤≤ (
=
≤≤) *
passElement
≤≤+ 6
.
≤≤6 7
Q
≤≤7 8
(
≤≤8 9
$str
≤≤9 J
)
≤≤J K
;
≤≤K L

passButton
≥≥ 
.
≥≥ 
style
≥≥  
.
≥≥  !
backgroundColor
≥≥! 0
=
≥≥1 2
	colorRead
≥≥3 <
;
≥≥< =
}
¥¥ 
}
µµ 	
foreach
∑∑ 
(
∑∑ 
int
∑∑ 
producer
∑∑ 
in
∑∑  
resource
∑∑! )
.
∑∑) *
producerList
∑∑* 6
)
∑∑6 7
{
∏∏ 	
var
ππ 
passDebugData
ππ 
=
ππ 
	debugData
ππ  )
.
ππ) *
passList
ππ* 2
[
ππ2 3
producer
ππ3 ;
]
ππ; <
;
ππ< =
if
∫∫ 
(
∫∫ 
passDebugData
∫∫ 
.
∫∫ 
culled
∫∫ $
)
∫∫$ %
continue
ªª 
;
ªª 
VisualElement
ΩΩ 
passElement
ΩΩ %
=
ΩΩ& ' 
m_PassElementsInfo
ΩΩ( :
[
ΩΩ: ;
producer
ΩΩ; C
]
ΩΩC D
.
ΩΩD E
pass
ΩΩE I
;
ΩΩI J
if
ææ 
(
ææ 
passElement
ææ 
!=
ææ 
null
ææ #
)
ææ# $
{
øø 
VisualElement
¿¿ 

passButton
¿¿ (
=
¿¿) *
passElement
¿¿+ 6
.
¿¿6 7
Q
¿¿7 8
(
¿¿8 9
$str
¿¿9 J
)
¿¿J K
;
¿¿K L

passButton
¡¡ 
.
¡¡ 
style
¡¡  
.
¡¡  !
backgroundColor
¡¡! 0
=
¡¡1 2

colorWrite
¡¡3 =
;
¡¡= >
}
¬¬ 
}
√√ 	
}
ƒƒ 
void
∆∆ &
UpdateResourceLabelColor
∆∆	 !
(
∆∆! "
(
∆∆" #
int
∆∆# &
index
∆∆' ,
,
∆∆, -
int
∆∆. 1
resourceType
∆∆2 >
)
∆∆> ?
resInfo
∆∆@ G
,
∆∆G H

StyleColor
∆∆I S
color
∆∆T Y
)
∆∆Y Z
{
«« 
var
»» 
label
»» 
=
»» $
m_ResourceElementsInfo
»» *
[
»»* +
resInfo
»»+ 2
.
»»2 3
resourceType
»»3 ?
]
»»? @
[
»»@ A
resInfo
»»A H
.
»»H I
index
»»I N
]
»»N O
.
»»O P
resourceLabel
»»P ]
;
»»] ^
if
…… 

(
…… 
label
…… 
!=
…… 
null
…… 
)
…… 
{
   	
label
ÀÀ 
.
ÀÀ 
style
ÀÀ 
.
ÀÀ 
color
ÀÀ 
=
ÀÀ 
color
ÀÀ  %
;
ÀÀ% &
}
ÃÃ 	
}
ÕÕ 
void
œœ (
MouseEnterResourceCallback
œœ	 #
(
œœ# $
MouseEnterEvent
œœ$ 3
evt
œœ4 7
,
œœ7 8
(
œœ9 :
int
œœ: =
index
œœ> C
,
œœC D
int
œœE H
resourceType
œœI U
)
œœU V
info
œœW [
)
œœ[ \
{
–– 
CellElement
—— 
resourceLifetime
—— $
=
——% &$
m_ResourceElementsInfo
——' =
[
——= >
info
——> B
.
——B C
resourceType
——C O
]
——O P
[
——P Q
info
——Q U
.
——U V
index
——V [
]
——[ \
.
——\ ]
lifetime
——] e
as
——f h
CellElement
——i t
;
——t u
resourceLifetime
““ 
.
““ 
SetColor
““ !
(
““! "*
m_ResourceLifeHighLightColor
““" >
)
““> ?
;
““? @
UpdatePassColor
‘‘ 
(
‘‘ 
info
‘‘ 
,
‘‘ !
m_ResourceColorRead
‘‘ 1
,
‘‘1 2"
m_ResourceColorWrite
‘‘3 G
)
‘‘G H
;
‘‘H I&
UpdateResourceLabelColor
’’  
(
’’  !
info
’’! %
,
’’% &&
m_ResourceHighlightColor
’’' ?
)
’’? @
;
’’@ A
}
÷÷ 
void
ÿÿ (
MouseLeaveResourceCallback
ÿÿ	 #
(
ÿÿ# $
MouseLeaveEvent
ÿÿ$ 3
evt
ÿÿ4 7
,
ÿÿ7 8
(
ÿÿ9 :
int
ÿÿ: =
index
ÿÿ> C
,
ÿÿC D
int
ÿÿE H
resourceType
ÿÿI U
)
ÿÿU V
info
ÿÿW [
)
ÿÿ[ \
{
ŸŸ 
CellElement
⁄⁄ 
resourceLifetime
⁄⁄ $
=
⁄⁄% &$
m_ResourceElementsInfo
⁄⁄' =
[
⁄⁄= >
info
⁄⁄> B
.
⁄⁄B C
resourceType
⁄⁄C O
]
⁄⁄O P
[
⁄⁄P Q
info
⁄⁄Q U
.
⁄⁄U V
index
⁄⁄V [
]
⁄⁄[ \
.
⁄⁄\ ]
lifetime
⁄⁄] e
as
⁄⁄f h
CellElement
⁄⁄i t
;
⁄⁄t u
resourceLifetime
€€ 
.
€€ 
SetColor
€€ !
(
€€! ")
m_OriginalResourceLifeColor
€€" =
)
€€= >
;
€€> ?
var
›› 
resource
›› 
=
›› "
m_CurrentRenderGraph
›› +
.
››+ ,
GetDebugData
››, 8
(
››8 9
)
››9 :
.
››: ;
resourceLists
››; H
[
››H I
info
››I M
.
››M N
resourceType
››N Z
]
››Z [
[
››[ \
info
››\ `
.
››` a
index
››a f
]
››f g
;
››g h
UpdatePassColor
ﬁﬁ 
(
ﬁﬁ 
info
ﬁﬁ 
,
ﬁﬁ !
m_OriginalPassColor
ﬁﬁ 1
,
ﬁﬁ1 2!
m_OriginalPassColor
ﬁﬁ3 F
)
ﬁﬁF G
;
ﬁﬁG H&
UpdateResourceLabelColor
ﬂﬂ  
(
ﬂﬂ  !
info
ﬂﬂ! %
,
ﬂﬂ% &
resource
ﬂﬂ' /
.
ﬂﬂ/ 0
imported
ﬂﬂ0 8
?
ﬂﬂ9 :%
m_ImportedResourceColor
ﬂﬂ; R
:
ﬂﬂS T%
m_OriginalResourceColor
ﬂﬂU l
)
ﬂﬂl m
;
ﬂﬂm n
;
ﬂﬂo p
}
‡‡ 
VisualElement
‚‚ 
CreateRenderPass
‚‚ "
(
‚‚" #
string
‚‚# )
name
‚‚* .
,
‚‚. /
int
‚‚0 3
index
‚‚4 9
,
‚‚9 :
bool
‚‚; ?
culled
‚‚@ F
)
‚‚F G
{
„„ 
var
‰‰ 
	container
‰‰ 
=
‰‰ 
new
‰‰ 
VisualElement
‰‰ )
(
‰‰) *
)
‰‰* +
;
‰‰+ ,
	container
ÂÂ 
.
ÂÂ 
name
ÂÂ 
=
ÂÂ 
$str
ÂÂ %
;
ÂÂ% &
	container
ÊÊ 
.
ÊÊ 
style
ÊÊ 
.
ÊÊ 
width
ÊÊ 
=
ÊÊ 
kRenderPassWidth
ÊÊ  0
;
ÊÊ0 1
	container
ÁÁ 
.
ÁÁ 
style
ÁÁ 
.
ÁÁ 
overflow
ÁÁ  
=
ÁÁ! "
Overflow
ÁÁ# +
.
ÁÁ+ ,
Visible
ÁÁ, 3
;
ÁÁ3 4
	container
ËË 
.
ËË 
style
ËË 
.
ËË 
flexDirection
ËË %
=
ËË& '
FlexDirection
ËË( 5
.
ËË5 6
ColumnReverse
ËË6 C
;
ËËC D
	container
ÈÈ 
.
ÈÈ 
style
ÈÈ 
.
ÈÈ 
minWidth
ÈÈ  
=
ÈÈ! "
kRenderPassWidth
ÈÈ# 3
;
ÈÈ3 4
var
ÎÎ 
cell
ÎÎ 
=
ÎÎ 
new
ÎÎ 
Button
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ  
cell
ÏÏ 
.
ÏÏ 
name
ÏÏ 
=
ÏÏ 
$str
ÏÏ %
;
ÏÏ% &
cell
ÌÌ 
.
ÌÌ 
style
ÌÌ 
.
ÌÌ 
marginBottom
ÌÌ 
=
ÌÌ  !
$num
ÌÌ" &
;
ÌÌ& '
cell
ÓÓ 
.
ÓÓ 
style
ÓÓ 
.
ÓÓ 

marginLeft
ÓÓ 
=
ÓÓ 
$num
ÓÓ  $
;
ÓÓ$ %
cell
ÔÔ 
.
ÔÔ 
style
ÔÔ 
.
ÔÔ 
marginRight
ÔÔ 
=
ÔÔ  
$num
ÔÔ! %
;
ÔÔ% &
cell
 
.
 
style
 
.
 
	marginTop
 
=
 
$num
 #
;
# $
cell
ÒÒ 
.
ÒÒ 
RegisterCallback
ÒÒ 
<
ÒÒ 
MouseEnterEvent
ÒÒ -
,
ÒÒ- .
int
ÒÒ/ 2
>
ÒÒ2 3
(
ÒÒ3 4$
MouseEnterPassCallback
ÒÒ4 J
,
ÒÒJ K
index
ÒÒL Q
)
ÒÒQ R
;
ÒÒR S
cell
ÚÚ 
.
ÚÚ 
RegisterCallback
ÚÚ 
<
ÚÚ 
MouseLeaveEvent
ÚÚ -
,
ÚÚ- .
int
ÚÚ/ 2
>
ÚÚ2 3
(
ÚÚ3 4$
MouseLeavePassCallback
ÚÚ4 J
,
ÚÚJ K
index
ÚÚL Q
)
ÚÚQ R
;
ÚÚR S!
m_OriginalPassColor
ÙÙ 
=
ÙÙ 
cell
ÙÙ "
.
ÙÙ" #
style
ÙÙ# (
.
ÙÙ( )
backgroundColor
ÙÙ) 8
;
ÙÙ8 9
if
ˆˆ 

(
ˆˆ 
culled
ˆˆ 
)
ˆˆ 
cell
˜˜ 
.
˜˜ 
style
˜˜ 
.
˜˜ 
backgroundColor
˜˜ &
=
˜˜' (
m_CulledPassColor
˜˜) :
;
˜˜: ;
	container
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
cell
˘˘ 
)
˘˘ 
;
˘˘ 
var
˚˚ 
label
˚˚ 
=
˚˚ 
new
˚˚ 
Label
˚˚ 
(
˚˚ 
name
˚˚ "
)
˚˚" #
;
˚˚# $
label
¸¸ 
.
¸¸ 
name
¸¸ 
=
¸¸ 
$str
¸¸ '
;
¸¸' (
label
˝˝ 
.
˝˝ 
	transform
˝˝ 
.
˝˝ 
rotation
˝˝  
=
˝˝! "

Quaternion
˝˝# -
.
˝˝- .
Euler
˝˝. 3
(
˝˝3 4
new
˝˝4 7
Vector3
˝˝8 ?
(
˝˝? @
$num
˝˝@ D
,
˝˝D E
$num
˝˝F J
,
˝˝J K
-
˝˝L M
$num
˝˝M R
)
˝˝R S
)
˝˝S T
;
˝˝T U
	container
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
label
˛˛ 
)
˛˛ 
;
˛˛ 
label
ÄÄ 
.
ÄÄ 
RegisterCallback
ÄÄ 
<
ÄÄ "
GeometryChangedEvent
ÄÄ 3
>
ÄÄ3 4
(
ÄÄ4 5$
RenderPassLabelChanged
ÄÄ5 K
)
ÄÄK L
;
ÄÄL M
return
ÇÇ 
	container
ÇÇ 
;
ÇÇ 
}
ÉÉ 
void
ÖÖ +
ResourceNamesContainerChanged
ÖÖ	 &
(
ÖÖ& '"
GeometryChangedEvent
ÖÖ' ;
evt
ÖÖ< ?
)
ÖÖ? @
{
ÜÜ 
var
áá 
label
áá 
=
áá 
evt
áá 
.
áá 
currentTarget
áá %
as
áá& (
Label
áá) .
;
áá. /
float
àà 
	textWidth
àà 
=
àà 
label
àà 
.
àà  
MeasureTextSize
àà  /
(
àà/ 0
label
àà0 5
.
àà5 6
text
àà6 :
,
àà: ;
$num
àà< =
,
àà= >
VisualElement
àà? L
.
ààL M
MeasureMode
ààM X
.
ààX Y
	Undefined
ààY b
,
ààb c
$num
ààd f
,
ààf g
VisualElement
ààh u
.
ààu v
MeasureModeààv Å
.ààÅ Ç
	UndefinedààÇ ã
)ààã å
.ààå ç
xààç é
;ààé è
var
ää 
cornerElement
ää 
=
ää "
m_GraphViewerElement
ää 0
.
ää0 1
Q
ää1 2
<
ää2 3
VisualElement
ää3 @
>
ää@ A
(
ääA B
$str
ääB V
)
ääV W
;
ääW X
cornerElement
ãã 
.
ãã 
style
ãã 
.
ãã 
width
ãã !
=
ãã" #
Mathf
ãã$ )
.
ãã) *
Max
ãã* -
(
ãã- .
	textWidth
ãã. 7
,
ãã7 8
cornerElement
ãã9 F
.
ããF G
style
ããG L
.
ããL M
width
ããM R
.
ããR S
value
ããS X
.
ããX Y
value
ããY ^
)
ãã^ _
;
ãã_ `
cornerElement
åå 
.
åå 
style
åå 
.
åå 
minWidth
åå $
=
åå% &
Mathf
åå' ,
.
åå, -
Max
åå- 0
(
åå0 1
	textWidth
åå1 :
,
åå: ;
cornerElement
åå< I
.
ååI J
style
ååJ O
.
ååO P
minWidth
ååP X
.
ååX Y
value
ååY ^
.
åå^ _
value
åå_ d
)
ååd e
;
ååe f"
m_GraphViewerElement
èè 
.
èè 
Query
èè "
(
èè" #
$str
èè# H
)
èèH I
.
èèI J
Build
èèJ O
(
èèO P
)
èèP Q
.
èèQ R
ForEach
èèR Y
(
èèY Z
(
èèZ [
elem
èè[ _
)
èè_ `
=>
èèa c
{
êê 	
elem
ëë 
.
ëë 
style
ëë 
.
ëë 
width
ëë 
=
ëë 
Mathf
ëë $
.
ëë$ %
Max
ëë% (
(
ëë( )
	textWidth
ëë) 2
,
ëë2 3
elem
ëë4 8
.
ëë8 9
style
ëë9 >
.
ëë> ?
width
ëë? D
.
ëëD E
value
ëëE J
.
ëëJ K
value
ëëK P
)
ëëP Q
;
ëëQ R
elem
íí 
.
íí 
style
íí 
.
íí 
minWidth
íí 
=
íí  !
Mathf
íí" '
.
íí' (
Max
íí( +
(
íí+ ,
	textWidth
íí, 5
,
íí5 6
elem
íí7 ;
.
íí; <
style
íí< A
.
ííA B
minWidth
ííB J
.
ííJ K
value
ííK P
.
ííP Q
value
ííQ V
)
ííV W
;
ííW X
}
ìì 	
)
ìì	 

;
ìì
 "
m_GraphViewerElement
ïï 
.
ïï 
Query
ïï "
(
ïï" #
$str
ïï# K
)
ïïK L
.
ïïL M
Build
ïïM R
(
ïïR S
)
ïïS T
.
ïïT U
ForEach
ïïU \
(
ïï\ ]
(
ïï] ^
elem
ïï^ b
)
ïïb c
=>
ïïd f
{
ññ 	
elem
óó 
.
óó 
style
óó 
.
óó 
width
óó 
=
óó 
Mathf
óó $
.
óó$ %
Max
óó% (
(
óó( )
	textWidth
óó) 2
,
óó2 3
elem
óó4 8
.
óó8 9
style
óó9 >
.
óó> ?
width
óó? D
.
óóD E
value
óóE J
.
óóJ K
value
óóK P
)
óóP Q
;
óóQ R
elem
òò 
.
òò 
style
òò 
.
òò 
minWidth
òò 
=
òò  !
Mathf
òò" '
.
òò' (
Max
òò( +
(
òò+ ,
	textWidth
òò, 5
,
òò5 6
elem
òò7 ;
.
òò; <
style
òò< A
.
òòA B
minWidth
òòB J
.
òòJ K
value
òòK P
.
òòP Q
value
òòQ V
)
òòV W
;
òòW X
}
ôô 	
)
ôô	 

;
ôô
 
}
öö 
VisualElement
úú !
CreateResourceLabel
úú %
(
úú% &
string
úú& ,
name
úú- 1
,
úú1 2
bool
úú3 7
imported
úú8 @
)
úú@ A
{
ùù 
var
ûû 
label
ûû 
=
ûû 
new
ûû 
Label
ûû 
(
ûû 
name
ûû "
)
ûû" #
;
ûû# $
label
üü 
.
üü 
style
üü 
.
üü 
height
üü 
=
üü 
kResourceHeight
üü ,
;
üü, -
label
†† 
.
†† 
style
†† 
.
†† 
overflow
†† 
=
†† 
Overflow
†† '
.
††' (
Hidden
††( .
;
††. /
label
°° 
.
°° 
style
°° 
.
°° 
textOverflow
°°  
=
°°! "
TextOverflow
°°# /
.
°°/ 0
Ellipsis
°°0 8
;
°°8 9
label
¢¢ 
.
¢¢ 
style
¢¢ 
.
¢¢ '
unityTextOverflowPosition
¢¢ -
=
¢¢. /"
TextOverflowPosition
¢¢0 D
.
¢¢D E
End
¢¢E H
;
¢¢H I
if
££ 

(
££ 
imported
££ 
)
££ 
label
§§ 
.
§§ 
style
§§ 
.
§§ 
color
§§ 
=
§§ %
m_ImportedResourceColor
§§  7
;
§§7 8
else
•• %
m_OriginalResourceColor
¶¶ #
=
¶¶$ %
label
¶¶& +
.
¶¶+ ,
style
¶¶, 1
.
¶¶1 2
color
¶¶2 7
;
¶¶7 8
return
®® 
label
®® 
;
®® 
}
©© 
VisualElement
´´ 
CreateColorLegend
´´ #
(
´´# $
string
´´$ *
name
´´+ /
,
´´/ 0

StyleColor
´´1 ;
color
´´< A
)
´´A B
{
¨¨ 
VisualElement
≠≠ 
legend
≠≠ 
=
≠≠ 
new
≠≠ "
VisualElement
≠≠# 0
(
≠≠0 1
)
≠≠1 2
;
≠≠2 3
legend
ÆÆ 
.
ÆÆ 
style
ÆÆ 
.
ÆÆ 
flexDirection
ÆÆ "
=
ÆÆ# $
FlexDirection
ÆÆ% 2
.
ÆÆ2 3
Row
ÆÆ3 6
;
ÆÆ6 7
Button
ØØ 
button
ØØ 
=
ØØ 
new
ØØ 
Button
ØØ "
(
ØØ" #
)
ØØ# $
;
ØØ$ %
button
∞∞ 
.
∞∞ 
style
∞∞ 
.
∞∞ 
width
∞∞ 
=
∞∞ 
kRenderPassWidth
∞∞ -
;
∞∞- .
button
±± 
.
±± 
style
±± 
.
±± 
backgroundColor
±± $
=
±±% &
color
±±' ,
;
±±, -
legend
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
button
≤≤ 
)
≤≤ 
;
≤≤ 
var
≥≥ 
label
≥≥ 
=
≥≥ 
new
≥≥ 
Label
≥≥ 
(
≥≥ 
name
≥≥ "
)
≥≥" #
;
≥≥# $
label
¥¥ 
.
¥¥ 
style
¥¥ 
.
¥¥ 
unityTextAlign
¥¥ "
=
¥¥# $

TextAnchor
¥¥% /
.
¥¥/ 0
MiddleCenter
¥¥0 <
;
¥¥< =
legend
µµ 
.
µµ 
Add
µµ 
(
µµ 
label
µµ 
)
µµ 
;
µµ 
return
∂∂ 
legend
∂∂ 
;
∂∂ 
}
∑∑ 
string
ππ 
&
RenderGraphPopupCallback
ππ #
(
ππ# $
RenderGraph
ππ$ /
rg
ππ0 2
)
ππ2 3
{
∫∫ 
return
ªª 
rg
ªª 
.
ªª 
name
ªª 
;
ªª 
}
ºº 
string
ææ 
+
EmptyRenderGraphPopupCallback
ææ (
(
ææ( )
RenderGraph
ææ) 4
rg
ææ5 7
)
ææ7 8
{
øø 
return
¿¿ 
$str
¿¿ 
;
¿¿ 
}
¡¡ 
void
√√ 
OnCaptureGraph
√√	 
(
√√ 
)
√√ 
{
ƒƒ "
RebuildGraphViewerUI
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
void
»» 
RebuildHeaderUI
»»	 
(
»» 
)
»» 
{
…… 
m_HeaderElement
   
.
   
Clear
   
(
   
)
   
;
    
var
ÃÃ 
controlsElement
ÃÃ 
=
ÃÃ 
new
ÃÃ !
VisualElement
ÃÃ" /
(
ÃÃ/ 0
)
ÃÃ0 1
;
ÃÃ1 2
controlsElement
ÕÕ 
.
ÕÕ 
name
ÕÕ 
=
ÕÕ 
$str
ÕÕ 0
;
ÕÕ0 1
controlsElement
ŒŒ 
.
ŒŒ 
style
ŒŒ 
.
ŒŒ 
flexDirection
ŒŒ +
=
ŒŒ, -
FlexDirection
ŒŒ. ;
.
ŒŒ; <
Row
ŒŒ< ?
;
ŒŒ? @
var
–– 
renderGraphList
–– 
=
–– 
new
–– !
List
––" &
<
––& '
RenderGraph
––' 2
>
––2 3
(
––3 4
RenderGraph
––4 ?
.
––? @'
GetRegisteredRenderGraphs
––@ Y
(
––Y Z
)
––Z [
)
––[ \
;
––\ ]

PopupField
““ 
<
““ 
RenderGraph
““ 
>
““ 
popup
““  %
=
““& '
null
““( ,
;
““, -
if
”” 

(
”” 
renderGraphList
”” 
.
”” 
Count
”” !
!=
””" $
$num
””% &
)
””& '
{
‘‘ 	
popup
’’ 
=
’’ 
new
’’ 

PopupField
’’ "
<
’’" #
RenderGraph
’’# .
>
’’. /
(
’’/ 0
$str
’’0 ?
,
’’? @
renderGraphList
’’A P
,
’’P Q
$num
’’R S
,
’’S T&
RenderGraphPopupCallback
’’U m
,
’’m n'
RenderGraphPopupCallback’’o á
)’’á à
;’’à â
}
÷÷ 	
else
◊◊ 
{
ÿÿ 	
renderGraphList
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ  
null
ŸŸ  $
)
ŸŸ$ %
;
ŸŸ% &
popup
⁄⁄ 
=
⁄⁄ 
new
⁄⁄ 

PopupField
⁄⁄ "
<
⁄⁄" #
RenderGraph
⁄⁄# .
>
⁄⁄. /
(
⁄⁄/ 0
$str
⁄⁄0 ?
,
⁄⁄? @
renderGraphList
⁄⁄A P
,
⁄⁄P Q
$num
⁄⁄R S
,
⁄⁄S T+
EmptyRenderGraphPopupCallback
⁄⁄U r
,
⁄⁄r s,
EmptyRenderGraphPopupCallback⁄⁄t ë
)⁄⁄ë í
;⁄⁄í ì
}
€€ 	
popup
›› 
.
›› 
labelElement
›› 
.
›› 
style
››  
.
››  !
minWidth
››! )
=
››* +
$num
››, -
;
››- .
popup
ﬁﬁ 
.
ﬁﬁ 
name
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ .
;
ﬁﬁ. /
controlsElement
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ 
(
ﬂﬂ 
popup
ﬂﬂ !
)
ﬂﬂ! "
;
ﬂﬂ" #
var
·· 
captureButton
·· 
=
·· 
new
·· 
Button
··  &
(
··& '
OnCaptureGraph
··' 5
)
··5 6
;
··6 7
captureButton
‚‚ 
.
‚‚ 
text
‚‚ 
=
‚‚ 
$str
‚‚ ,
;
‚‚, -
controlsElement
„„ 
.
„„ 
Add
„„ 
(
„„ 
captureButton
„„ )
)
„„) *
;
„„* +
var
ÂÂ 
filters
ÂÂ 
=
ÂÂ 
new
ÂÂ 
EnumFlagsField
ÂÂ (
(
ÂÂ( )
$str
ÂÂ) 2
,
ÂÂ2 3
m_Filter
ÂÂ4 <
)
ÂÂ< =
;
ÂÂ= >
filters
ÊÊ 
.
ÊÊ 
labelElement
ÊÊ 
.
ÊÊ 
style
ÊÊ "
.
ÊÊ" #
minWidth
ÊÊ# +
=
ÊÊ, -
$num
ÊÊ. /
;
ÊÊ/ 0
filters
ÁÁ 
.
ÁÁ 
labelElement
ÁÁ 
.
ÁÁ 
style
ÁÁ "
.
ÁÁ" #

alignItems
ÁÁ# -
=
ÁÁ. /
Align
ÁÁ0 5
.
ÁÁ5 6
Center
ÁÁ6 <
;
ÁÁ< =
filters
ËË 
.
ËË 
RegisterCallback
ËË  
<
ËË  !
ChangeEvent
ËË! ,
<
ËË, -
System
ËË- 3
.
ËË3 4
Enum
ËË4 8
>
ËË8 9
>
ËË9 :
(
ËË: ;
(
ËË; <
evt
ËË< ?
)
ËË? @
=>
ËËA C
{
ÈÈ 	
m_Filter
ÍÍ 
=
ÍÍ 
(
ÍÍ 
Filter
ÍÍ 
)
ÍÍ 
evt
ÍÍ "
.
ÍÍ" #
newValue
ÍÍ# +
;
ÍÍ+ ,"
RebuildGraphViewerUI
ÎÎ  
(
ÎÎ  !
)
ÎÎ! "
;
ÎÎ" #
}
ÏÏ 	
)
ÏÏ	 

;
ÏÏ
 
controlsElement
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
filters
ÌÌ #
)
ÌÌ# $
;
ÌÌ$ %
m_HeaderElement
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ 
controlsElement
ÔÔ +
)
ÔÔ+ ,
;
ÔÔ, -
var
ÒÒ 
legendsElement
ÒÒ 
=
ÒÒ 
new
ÒÒ  
VisualElement
ÒÒ! .
(
ÒÒ. /
)
ÒÒ/ 0
;
ÒÒ0 1
legendsElement
ÚÚ 
.
ÚÚ 
name
ÚÚ 
=
ÚÚ 
$str
ÚÚ .
;
ÚÚ. /
legendsElement
ÛÛ 
.
ÛÛ 
style
ÛÛ 
.
ÛÛ 
flexDirection
ÛÛ *
=
ÛÛ+ ,
FlexDirection
ÛÛ- :
.
ÛÛ: ;
Row
ÛÛ; >
;
ÛÛ> ?
legendsElement
ÙÙ 
.
ÙÙ 
style
ÙÙ 
.
ÙÙ 
alignContent
ÙÙ )
=
ÙÙ* +
Align
ÙÙ, 1
.
ÙÙ1 2
FlexEnd
ÙÙ2 9
;
ÙÙ9 :
legendsElement
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
CreateColorLegend
ˆˆ ,
(
ˆˆ, -
$str
ˆˆ- <
,
ˆˆ< =!
m_ResourceColorRead
ˆˆ> Q
)
ˆˆQ R
)
ˆˆR S
;
ˆˆS T
legendsElement
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
CreateColorLegend
˜˜ ,
(
˜˜, -
$str
˜˜- =
,
˜˜= >"
m_ResourceColorWrite
˜˜? S
)
˜˜S T
)
˜˜T U
;
˜˜U V
legendsElement
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
CreateColorLegend
¯¯ ,
(
¯¯, -
$str
¯¯- :
,
¯¯: ;
m_CulledPassColor
¯¯< M
)
¯¯M N
)
¯¯N O
;
¯¯O P
legendsElement
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
CreateColorLegend
˘˘ ,
(
˘˘, -
$str
˘˘- @
,
˘˘@ A%
m_ImportedResourceColor
˘˘B Y
)
˘˘Y Z
)
˘˘Z [
;
˘˘[ \
m_HeaderElement
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
legendsElement
˚˚ *
)
˚˚* +
;
˚˚+ ,
}
¸¸ 
RenderGraph
˛˛ #
GetCurrentRenderGraph
˛˛ %
(
˛˛% &
)
˛˛& '
{
ˇˇ 
var
ÄÄ 
popup
ÄÄ 
=
ÄÄ 
m_HeaderElement
ÄÄ #
.
ÄÄ# $
Q
ÄÄ$ %
<
ÄÄ% &

PopupField
ÄÄ& 0
<
ÄÄ0 1
RenderGraph
ÄÄ1 <
>
ÄÄ< =
>
ÄÄ= >
(
ÄÄ> ?
$str
ÄÄ? X
)
ÄÄX Y
;
ÄÄY Z
if
ÅÅ 

(
ÅÅ 
popup
ÅÅ 
!=
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
return
ÉÉ 
popup
ÉÉ 
.
ÉÉ 
value
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
return
ÜÜ 
null
ÜÜ 
;
ÜÜ 
}
áá 
VisualElement
ââ $
CreateTopRowWithPasses
ââ (
(
ââ( )"
RenderGraphDebugData
ââ) =
	debugData
ââ> G
,
ââG H
out
ââI L
int
ââM P
finalPassCount
ââQ _
)
ââ_ `
{
ää 
var
ãã 
topRowElement
ãã 
=
ãã 
new
ãã 
VisualElement
ãã  -
(
ãã- .
)
ãã. /
;
ãã/ 0
topRowElement
åå 
.
åå 
name
åå 
=
åå 
$str
åå 8
;
åå8 9
topRowElement
çç 
.
çç 
style
çç 
.
çç 
flexDirection
çç )
=
çç* +
FlexDirection
çç, 9
.
çç9 :
Row
çç: =
;
çç= >
var
èè 
cornerElement
èè 
=
èè 
new
èè 
VisualElement
èè  -
(
èè- .
)
èè. /
;
èè/ 0
cornerElement
êê 
.
êê 
name
êê 
=
êê 
$str
êê 1
;
êê1 2
topRowElement
íí 
.
íí 
Add
íí 
(
íí 
cornerElement
íí '
)
íí' (
;
íí( )
var
îî 
passNamesElement
îî 
=
îî 
new
îî "
VisualElement
îî# 0
(
îî0 1
)
îî1 2
;
îî2 3
passNamesElement
ïï 
.
ïï 
name
ïï 
=
ïï 
$str
ïï  E
;
ïïE F
passNamesElement
ññ 
.
ññ 
style
ññ 
.
ññ 
flexDirection
ññ ,
=
ññ- .
FlexDirection
ññ/ <
.
ññ< =
Row
ññ= @
;
ññ@ A
int
òò 
	passIndex
òò 
=
òò 
$num
òò 
;
òò 
finalPassCount
ôô 
=
ôô 
$num
ôô 
;
ôô 
int
öö  
lastValidPassIndex
öö 
=
öö  
-
öö! "
$num
öö" #
;
öö# $
foreach
õõ 
(
õõ 
var
õõ 
pass
õõ 
in
õõ 
	debugData
õõ &
.
õõ& '
passList
õõ' /
)
õõ/ 0
{
úú 	
if
ùù 
(
ùù 
(
ùù 
pass
ùù 
.
ùù 
culled
ùù 
&&
ùù 
!
ùù  !
m_Filter
ùù! )
.
ùù) *
HasFlag
ùù* 1
(
ùù1 2
Filter
ùù2 8
.
ùù8 9
CulledPasses
ùù9 E
)
ùùE F
)
ùùF G
||
ùùH J
!
ùùK L
pass
ùùL P
.
ùùP Q
generateDebugData
ùùQ b
)
ùùb c
{
ûû  
m_PassElementsInfo
üü "
[
üü" #
	passIndex
üü# ,
]
üü, -
.
üü- .
Reset
üü. 3
(
üü3 4
)
üü4 5
;
üü5 6
}
†† 
else
°° 
{
¢¢ 
var
££ 
passElement
££ 
=
££  !
CreateRenderPass
££" 2
(
££2 3
pass
££3 7
.
££7 8
name
££8 <
,
££< =
	passIndex
££> G
,
££G H
pass
££I M
.
££M N
culled
££N T
)
££T U
;
££U V 
m_PassElementsInfo
§§ "
[
§§" #
	passIndex
§§# ,
]
§§, -
.
§§- .
pass
§§. 2
=
§§3 4
passElement
§§5 @
;
§§@ A 
m_PassElementsInfo
•• "
[
••" #
	passIndex
••# ,
]
••, -
.
••- .
remap
••. 3
=
••4 5
finalPassCount
••6 D
;
••D E
passNamesElement
¶¶  
.
¶¶  !
Add
¶¶! $
(
¶¶$ %
passElement
¶¶% 0
)
¶¶0 1
;
¶¶1 2
finalPassCount
ßß 
++
ßß  
;
ßß  ! 
lastValidPassIndex
®® "
=
®®# $
	passIndex
®®% .
;
®®. /
}
©© 
	passIndex
™™ 
++
™™ 
;
™™ 
}
´´ 	
if
≠≠ 

(
≠≠  
lastValidPassIndex
≠≠ 
>
≠≠  
$num
≠≠! "
)
≠≠" #
{
ÆÆ 	
var
ØØ 
label
ØØ 
=
ØØ  
m_PassElementsInfo
ØØ *
[
ØØ* + 
lastValidPassIndex
ØØ+ =
]
ØØ= >
.
ØØ> ?
pass
ØØ? C
.
ØØC D
Q
ØØD E
<
ØØE F
Label
ØØF K
>
ØØK L
(
ØØL M
$str
ØØM _
)
ØØ_ `
;
ØØ` a
label
∞∞ 
.
∞∞ 
RegisterCallback
∞∞ "
<
∞∞" #"
GeometryChangedEvent
∞∞# 7
>
∞∞7 8
(
∞∞8 9(
LastRenderPassLabelChanged
∞∞9 S
)
∞∞S T
;
∞∞T U
}
±± 	
topRowElement
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
passNamesElement
≥≥ *
)
≥≥* +
;
≥≥+ ,
return
µµ 
topRowElement
µµ 
;
µµ 
}
∂∂ 
VisualElement
∏∏ "
CreateResourceViewer
∏∏ &
(
∏∏& '"
RenderGraphDebugData
∏∏' ;
	debugData
∏∏< E
,
∏∏E F
int
∏∏G J
resourceType
∏∏K W
,
∏∏W X
int
∏∏Y \
	passCount
∏∏] f
)
∏∏f g
{
ππ 
var
∫∫ 
resourceElement
∫∫ 
=
∫∫ 
new
∫∫ !
VisualElement
∫∫" /
(
∫∫/ 0
)
∫∫0 1
;
∫∫1 2
resourceElement
ªª 
.
ªª 
name
ªª 
=
ªª 
$str
ªª 6
;
ªª6 7
resourceElement
ºº 
.
ºº 
style
ºº 
.
ºº 
flexDirection
ºº +
=
ºº, -
FlexDirection
ºº. ;
.
ºº; <
Row
ºº< ?
;
ºº? @
var
ææ $
resourceNamesContainer
ææ "
=
ææ# $
new
ææ% (
VisualElement
ææ) 6
(
ææ6 7
)
ææ7 8
;
ææ8 9$
resourceNamesContainer
øø 
.
øø 
name
øø #
=
øø$ %
$str
øø& K
;
øøK L$
resourceNamesContainer
¿¿ 
.
¿¿ 
style
¿¿ $
.
¿¿$ %
flexDirection
¿¿% 2
=
¿¿3 4
FlexDirection
¿¿5 B
.
¿¿B C
Column
¿¿C I
;
¿¿I J$
resourceNamesContainer
¡¡ 
.
¡¡ 
style
¡¡ $
.
¡¡$ %
overflow
¡¡% -
=
¡¡. /
Overflow
¡¡0 8
.
¡¡8 9
Hidden
¡¡9 ?
;
¡¡? @$
resourceNamesContainer
¬¬ 
.
¬¬ 
style
¬¬ $
.
¬¬$ %

alignItems
¬¬% /
=
¬¬0 1
Align
¬¬2 7
.
¬¬7 8
FlexEnd
¬¬8 ?
;
¬¬? @
var
ƒƒ &
resourcesLifeTimeElement
ƒƒ $
=
ƒƒ% &
new
ƒƒ' *
VisualElement
ƒƒ+ 8
(
ƒƒ8 9
)
ƒƒ9 :
;
ƒƒ: ;&
resourcesLifeTimeElement
≈≈  
.
≈≈  !
name
≈≈! %
=
≈≈& '
$str
≈≈( P
;
≈≈P Q&
resourcesLifeTimeElement
∆∆  
.
∆∆  !
style
∆∆! &
.
∆∆& '
flexDirection
∆∆' 4
=
∆∆5 6
FlexDirection
∆∆7 D
.
∆∆D E
Column
∆∆E K
;
∆∆K L&
resourcesLifeTimeElement
««  
.
««  !
style
««! &
.
««& '
width
««' ,
=
««- .
kRenderPassWidth
««/ ?
*
««@ A
	passCount
««B K
;
««K L
int
…… 
index
…… 
=
…… 
$num
…… 
;
…… 
foreach
   
(
   
var
   
resource
   
in
    
	debugData
  ! *
.
  * +
resourceLists
  + 8
[
  8 9
resourceType
  9 E
]
  E F
)
  F G
{
ÀÀ 	
if
ÕÕ 
(
ÕÕ 
resource
ÕÕ 
.
ÕÕ 
releasePassIndex
ÕÕ )
==
ÕÕ* ,
-
ÕÕ- .
$num
ÕÕ. /
&&
ÕÕ0 2
resource
ÕÕ3 ;
.
ÕÕ; <
creationPassIndex
ÕÕ< M
==
ÕÕN P
-
ÕÕQ R
$num
ÕÕR S
||
ŒŒ 
(
ŒŒ 
resource
ŒŒ 
.
ŒŒ 
imported
ŒŒ %
&&
ŒŒ& (
!
ŒŒ) *
m_Filter
ŒŒ* 2
.
ŒŒ2 3
HasFlag
ŒŒ3 :
(
ŒŒ: ;
Filter
ŒŒ; A
.
ŒŒA B
ImportedResources
ŒŒB S
)
ŒŒS T
)
ŒŒT U
)
ŒŒU V
{
œœ $
m_ResourceElementsInfo
–– &
[
––& '
resourceType
––' 3
]
––3 4
[
––4 5
index
––5 :
++
––: <
]
––< =
.
––= >
Reset
––> C
(
––C D
)
––D E
;
––E F
continue
—— 
;
—— 
}
““ 
var
‘‘ 
label
‘‘ 
=
‘‘ !
CreateResourceLabel
‘‘ +
(
‘‘+ ,
resource
‘‘, 4
.
‘‘4 5
name
‘‘5 9
,
‘‘9 :
resource
‘‘; C
.
‘‘C D
imported
‘‘D L
)
‘‘L M
;
‘‘M N$
m_ResourceElementsInfo
’’ "
[
’’" #
resourceType
’’# /
]
’’/ 0
[
’’0 1
index
’’1 6
]
’’6 7
.
’’7 8
resourceLabel
’’8 E
=
’’F G
label
’’H M
;
’’M N$
resourceNamesContainer
÷÷ "
.
÷÷" #
Add
÷÷# &
(
÷÷& '
label
÷÷' ,
)
÷÷, -
;
÷÷- .
var
ÿÿ 
newCell
ÿÿ 
=
ÿÿ 
new
ÿÿ 
CellElement
ÿÿ )
(
ÿÿ) * 
m_PassElementsInfo
ÿÿ* <
[
ÿÿ< =
resource
ÿÿ= E
.
ÿÿE F
creationPassIndex
ÿÿF W
]
ÿÿW X
.
ÿÿX Y
remap
ÿÿY ^
,
ÿÿ^ _ 
m_PassElementsInfo
ÿÿ` r
[
ÿÿr s
resource
ÿÿs {
.
ÿÿ{ |
releasePassIndexÿÿ| å
]ÿÿå ç
.ÿÿç é
remapÿÿé ì
)ÿÿì î
;ÿÿî ï
newCell
ŸŸ 
.
ŸŸ 
RegisterCallback
ŸŸ $
<
ŸŸ$ %
MouseEnterEvent
ŸŸ% 4
,
ŸŸ4 5
(
ŸŸ6 7
int
ŸŸ7 :
,
ŸŸ: ;
int
ŸŸ< ?
)
ŸŸ? @
>
ŸŸ@ A
(
ŸŸA B(
MouseEnterResourceCallback
ŸŸB \
,
ŸŸ\ ]
(
ŸŸ^ _
index
ŸŸ_ d
,
ŸŸd e
resourceType
ŸŸf r
)
ŸŸr s
)
ŸŸs t
;
ŸŸt u
newCell
⁄⁄ 
.
⁄⁄ 
RegisterCallback
⁄⁄ $
<
⁄⁄$ %
MouseLeaveEvent
⁄⁄% 4
,
⁄⁄4 5
(
⁄⁄6 7
int
⁄⁄7 :
,
⁄⁄: ;
int
⁄⁄< ?
)
⁄⁄? @
>
⁄⁄@ A
(
⁄⁄A B(
MouseLeaveResourceCallback
⁄⁄B \
,
⁄⁄\ ]
(
⁄⁄^ _
index
⁄⁄_ d
,
⁄⁄d e
resourceType
⁄⁄f r
)
⁄⁄r s
)
⁄⁄s t
;
⁄⁄t u)
m_OriginalResourceLifeColor
€€ '
=
€€( )
newCell
€€* 1
.
€€1 2
style
€€2 7
.
€€7 8
backgroundColor
€€8 G
;
€€G H&
resourcesLifeTimeElement
‹‹ $
.
‹‹$ %
Add
‹‹% (
(
‹‹( )
newCell
‹‹) 0
)
‹‹0 1
;
‹‹1 2$
m_ResourceElementsInfo
ﬁﬁ "
[
ﬁﬁ" #
resourceType
ﬁﬁ# /
]
ﬁﬁ/ 0
[
ﬁﬁ0 1
index
ﬁﬁ1 6
++
ﬁﬁ6 8
]
ﬁﬁ8 9
.
ﬁﬁ9 :
lifetime
ﬁﬁ: B
=
ﬁﬁC D
newCell
ﬁﬁE L
;
ﬁﬁL M
}
ﬂﬂ 	
resourceElement
·· 
.
·· 
Add
·· 
(
·· $
resourceNamesContainer
·· 2
)
··2 3
;
··3 4
resourceElement
‚‚ 
.
‚‚ 
Add
‚‚ 
(
‚‚ &
resourcesLifeTimeElement
‚‚ 4
)
‚‚4 5
;
‚‚5 6
return
‰‰ 
resourceElement
‰‰ 
;
‰‰ 
}
ÂÂ 
void
ÁÁ "
RebuildGraphViewerUI
ÁÁ	 
(
ÁÁ 
)
ÁÁ 
{
ËË "
m_GraphViewerElement
ÈÈ 
.
ÈÈ 
Clear
ÈÈ "
(
ÈÈ" #
)
ÈÈ# $
;
ÈÈ$ %"
m_CurrentRenderGraph
ÎÎ 
=
ÎÎ #
GetCurrentRenderGraph
ÎÎ 4
(
ÎÎ4 5
)
ÎÎ5 6
;
ÎÎ6 7
if
ÏÏ 

(
ÏÏ "
m_CurrentRenderGraph
ÏÏ  
==
ÏÏ! #
null
ÏÏ$ (
)
ÏÏ( )
return
ÌÌ 
;
ÌÌ 
var
ÔÔ 
	debugData
ÔÔ 
=
ÔÔ "
m_CurrentRenderGraph
ÔÔ ,
.
ÔÔ, -
GetDebugData
ÔÔ- 9
(
ÔÔ9 :
)
ÔÔ: ;
;
ÔÔ; <
if
 

(
 
	debugData
 
.
 
passList
 
.
 
Count
 $
==
% '
$num
( )
)
) *
return
ÒÒ 
;
ÒÒ 
for
ÛÛ 
(
ÛÛ 
int
ÛÛ 
i
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
i
ÛÛ 
<
ÛÛ 
(
ÛÛ 
int
ÛÛ  
)
ÛÛ  !%
RenderGraphResourceType
ÛÛ! 8
.
ÛÛ8 9
Count
ÛÛ9 >
;
ÛÛ> ?
++
ÛÛ@ B
i
ÛÛB C
)
ÛÛC D$
m_ResourceElementsInfo
ÙÙ "
[
ÙÙ" #
i
ÙÙ# $
]
ÙÙ$ %
.
ÙÙ% &
Resize
ÙÙ& ,
(
ÙÙ, -
	debugData
ÙÙ- 6
.
ÙÙ6 7
resourceLists
ÙÙ7 D
[
ÙÙD E
i
ÙÙE F
]
ÙÙF G
.
ÙÙG H
Count
ÙÙH M
)
ÙÙM N
;
ÙÙN O 
m_PassElementsInfo
ıı 
.
ıı 
Resize
ıı !
(
ıı! "
	debugData
ıı" +
.
ıı+ ,
passList
ıı, 4
.
ıı4 5
Count
ıı5 :
)
ıı: ;
;
ıı; <
var
˜˜ "
horizontalScrollView
˜˜  
=
˜˜! "
new
˜˜# &

ScrollView
˜˜' 1
(
˜˜1 2
ScrollViewMode
˜˜2 @
.
˜˜@ A

Horizontal
˜˜A K
)
˜˜K L
;
˜˜L M"
horizontalScrollView
¯¯ 
.
¯¯ 
name
¯¯ !
=
¯¯" #
$str
¯¯$ F
;
¯¯F G
var
˙˙  
graphViewerElement
˙˙ 
=
˙˙  
new
˙˙! $
VisualElement
˙˙% 2
(
˙˙2 3
)
˙˙3 4
;
˙˙4 5 
graphViewerElement
˚˚ 
.
˚˚ 
name
˚˚ 
=
˚˚  !
$str
˚˚" ?
;
˚˚? @ 
graphViewerElement
¸¸ 
.
¸¸ 
style
¸¸  
.
¸¸  !
flexDirection
¸¸! .
=
¸¸/ 0
FlexDirection
¸¸1 >
.
¸¸> ?
Column
¸¸? E
;
¸¸E F
var
˛˛ 
topRowElement
˛˛ 
=
˛˛ $
CreateTopRowWithPasses
˛˛ 2
(
˛˛2 3
	debugData
˛˛3 <
,
˛˛< =
out
˛˛> A
int
˛˛B E
finalPassCount
˛˛F T
)
˛˛T U
;
˛˛U V
var
ÄÄ  
resourceScrollView
ÄÄ 
=
ÄÄ  
new
ÄÄ! $

ScrollView
ÄÄ% /
(
ÄÄ/ 0
ScrollViewMode
ÄÄ0 >
.
ÄÄ> ?
Vertical
ÄÄ? G
)
ÄÄG H
;
ÄÄH I 
resourceScrollView
ÅÅ 
.
ÅÅ 
name
ÅÅ 
=
ÅÅ  !
$str
ÅÅ" B
;
ÅÅB C
Filter
ÑÑ 
[
ÑÑ 
]
ÑÑ !
resourceFilterFlags
ÑÑ $
=
ÑÑ% &
{
ÑÑ' (
Filter
ÑÑ) /
.
ÑÑ/ 0
Textures
ÑÑ0 8
,
ÑÑ8 9
Filter
ÑÑ: @
.
ÑÑ@ A
ComputeBuffers
ÑÑA O
}
ÑÑP Q
;
ÑÑQ R
string
ÖÖ 
[
ÖÖ 
]
ÖÖ 
resourceNames
ÖÖ 
=
ÖÖ  
{
ÖÖ! "
$str
ÖÖ# 7
,
ÖÖ7 8
$str
ÖÖ9 S
}
ÖÖT U
;
ÖÖU V
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
(
áá 
int
áá  
)
áá  !%
RenderGraphResourceType
áá! 8
.
áá8 9
Count
áá9 >
;
áá> ?
++
áá@ B
i
ááB C
)
ááC D
{
àà 	
if
ââ 
(
ââ 
m_Filter
ââ 
.
ââ 
HasFlag
ââ  
(
ââ  !!
resourceFilterFlags
ââ! 4
[
ââ4 5
i
ââ5 6
]
ââ6 7
)
ââ7 8
)
ââ8 9
{
ää 
var
ãã #
resourceViewerElement
ãã )
=
ãã* +"
CreateResourceViewer
ãã, @
(
ãã@ A
	debugData
ããA J
,
ããJ K
i
ããL M
,
ããM N
finalPassCount
ããO ]
)
ãã] ^
;
ãã^ _
var
åå 
resourceNameLabel
åå %
=
åå& '
new
åå( +
Label
åå, 1
(
åå1 2
resourceNames
åå2 ?
[
åå? @
i
åå@ A
]
ååA B
)
ååB C
;
ååC D
resourceNameLabel
çç !
.
çç! "
name
çç" &
=
çç' (
$str
çç) Q
;
ççQ R
resourceNameLabel
éé !
.
éé! "
style
éé" '
.
éé' (
unityTextAlign
éé( 6
=
éé7 8

TextAnchor
éé9 C
.
ééC D
MiddleRight
ééD O
;
ééO P
resourceNameLabel
èè !
.
èè! "
style
èè" '
.
èè' (%
unityFontStyleAndWeight
èè( ?
=
èè@ A
	FontStyle
èèB K
.
èèK L
Bold
èèL P
;
èèP Q
resourceNameLabel
êê !
.
êê! "
style
êê" '
.
êê' (
fontSize
êê( 0
=
êê1 2
$num
êê3 5
;
êê5 6
resourceNameLabel
ëë !
.
ëë! "
RegisterCallback
ëë" 2
<
ëë2 3"
GeometryChangedEvent
ëë3 G
>
ëëG H
(
ëëH I+
ResourceNamesContainerChanged
ëëI f
)
ëëf g
;
ëëg h 
resourceScrollView
íí "
.
íí" #
Add
íí# &
(
íí& '
resourceNameLabel
íí' 8
)
íí8 9
;
íí9 : 
resourceScrollView
ìì "
.
ìì" #
Add
ìì# &
(
ìì& '#
resourceViewerElement
ìì' <
)
ìì< =
;
ìì= >
VisualElement
ïï 
	separator
ïï '
=
ïï( )
new
ïï* -
VisualElement
ïï. ;
(
ïï; <
)
ïï< =
;
ïï= >
	separator
ññ 
.
ññ 
style
ññ 
.
ññ  
	minHeight
ññ  )
=
ññ* +
kResourceHeight
ññ, ;
;
ññ; < 
resourceScrollView
óó "
.
óó" #
Add
óó# &
(
óó& '
	separator
óó' 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 	 
graphViewerElement
õõ 
.
õõ 
Add
õõ 
(
õõ 
topRowElement
õõ ,
)
õõ, -
;
õõ- . 
graphViewerElement
úú 
.
úú 
Add
úú 
(
úú  
resourceScrollView
úú 1
)
úú1 2
;
úú2 3"
horizontalScrollView
ûû 
.
ûû 
Add
ûû  
(
ûû  ! 
graphViewerElement
ûû! 3
)
ûû3 4
;
ûû4 5"
m_GraphViewerElement
†† 
.
†† 
Add
††  
(
††  !"
horizontalScrollView
††! 5
)
††5 6
;
††6 7
}
°° 
void
££ 
	RebuildUI
££	 
(
££ 
)
££ 
{
§§ 
rootVisualElement
•• 
.
•• 
Clear
•• 
(
••  
)
••  !
;
••! "
titleContent
ßß 
=
ßß 
Style
ßß 
.
ßß 
title
ßß "
;
ßß" #
m_Root
©© 
=
©© 
new
©© 
VisualElement
©© "
(
©©" #
)
©©# $
;
©©$ %
m_Root
™™ 
.
™™ 
name
™™ 
=
™™ 
$str
™™ 
;
™™ 
m_Root
´´ 
.
´´ 
style
´´ 
.
´´ 
flexDirection
´´ "
=
´´# $
FlexDirection
´´% 2
.
´´2 3
Column
´´3 9
;
´´9 :
m_HeaderElement
≠≠ 
=
≠≠ 
new
≠≠ 
VisualElement
≠≠ +
(
≠≠+ ,
)
≠≠, -
;
≠≠- .
m_HeaderElement
ÆÆ 
.
ÆÆ 
name
ÆÆ 
=
ÆÆ 
$str
ÆÆ '
;
ÆÆ' (
m_HeaderElement
ØØ 
.
ØØ 
style
ØØ 
.
ØØ 
flexDirection
ØØ +
=
ØØ, -
FlexDirection
ØØ. ;
.
ØØ; <
Row
ØØ< ?
;
ØØ? @
m_HeaderElement
∞∞ 
.
∞∞ 
style
∞∞ 
.
∞∞ 
justifyContent
∞∞ ,
=
∞∞- .
Justify
∞∞/ 6
.
∞∞6 7
SpaceBetween
∞∞7 C
;
∞∞C D
m_HeaderElement
±± 
.
±± 
style
±± 
.
±± 
	minHeight
±± '
=
±±( )
$num
±±* /
;
±±/ 0
m_HeaderElement
≤≤ 
.
≤≤ 
style
≤≤ 
.
≤≤ 
marginBottom
≤≤ *
=
≤≤+ ,
$num
≤≤- 1
;
≤≤1 2
m_HeaderElement
≥≥ 
.
≥≥ 
style
≥≥ 
.
≥≥ 
	marginTop
≥≥ '
=
≥≥( )
$num
≥≥* .
;
≥≥. /
m_HeaderElement
¥¥ 
.
¥¥ 
style
¥¥ 
.
¥¥ 
borderTopWidth
¥¥ ,
=
¥¥- .
$num
¥¥/ 3
;
¥¥3 4
m_HeaderElement
µµ 
.
µµ 
style
µµ 
.
µµ 
borderBottomWidth
µµ /
=
µµ0 1
$num
µµ2 6
;
µµ6 7
RebuildHeaderUI
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ "
m_GraphViewerElement
ππ 
=
ππ 
new
ππ "
VisualElement
ππ# 0
(
ππ0 1
)
ππ1 2
;
ππ2 3"
m_GraphViewerElement
∫∫ 
.
∫∫ 
name
∫∫ !
=
∫∫" #
$str
∫∫$ 1
;
∫∫1 2"
m_GraphViewerElement
ªª 
.
ªª 
style
ªª "
.
ªª" #

marginLeft
ªª# -
=
ªª. /
$num
ªª0 5
;
ªª5 6"
m_GraphViewerElement
ºº 
.
ºº 
style
ºº "
.
ºº" #
flexDirection
ºº# 0
=
ºº1 2
FlexDirection
ºº3 @
.
ºº@ A
Column
ººA G
;
ººG H"
RebuildGraphViewerUI
ææ 
(
ææ 
)
ææ 
;
ææ 
m_Root
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
m_HeaderElement
¿¿ "
)
¿¿" #
;
¿¿# $
m_Root
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ "
m_GraphViewerElement
¡¡ '
)
¡¡' (
;
¡¡( )
rootVisualElement
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
m_Root
¬¬ $
)
¬¬$ %
;
¬¬% &
}
√√ 
void
≈≈ 
OnGraphRegistered
≈≈	 
(
≈≈ 
RenderGraph
≈≈ &
graph
≈≈' ,
)
≈≈, -
{
∆∆ 
RebuildHeaderUI
«« 
(
«« 
)
«« 
;
«« 
}
»» 
void
   !
OnGraphUnregistered
  	 
(
   
RenderGraph
   (
graph
  ) .
)
  . /
{
ÀÀ 
RebuildHeaderUI
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 
void
œœ 
OnEnable
œœ	 
(
œœ 
)
œœ 
{
–– 
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
—— 
<
—— 
(
—— 
int
——  
)
——  !%
RenderGraphResourceType
——! 8
.
——8 9
Count
——9 >
;
——> ?
++
——@ B
i
——B C
)
——C D$
m_ResourceElementsInfo
““ "
[
““" #
i
““# $
]
““$ %
=
““& '
new
““( +
DynamicArray
““, 8
<
““8 9!
ResourceElementInfo
““9 L
>
““L M
(
““M N
)
““N O
;
““O P
RenderGraph
‘‘ 
.
‘‘ 
requireDebugData
‘‘ $
=
‘‘% &
true
‘‘' +
;
‘‘+ ,
RenderGraph
’’ 
.
’’ 
onGraphRegistered
’’ %
+=
’’& (
OnGraphRegistered
’’) :
;
’’: ;
RenderGraph
÷÷ 
.
÷÷ 
onGraphRegistered
÷÷ %
+=
÷÷& (!
OnGraphUnregistered
÷÷) <
;
÷÷< =
	RebuildUI
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
}
ŸŸ 
void
€€ 
	OnDisable
€€	 
(
€€ 
)
€€ 
{
‹‹ 
RenderGraph
›› 
.
›› 
requireDebugData
›› $
=
››% &
false
››' ,
;
››, -
RenderGraph
ﬁﬁ 
.
ﬁﬁ 
onGraphRegistered
ﬁﬁ %
-=
ﬁﬁ& (
OnGraphRegistered
ﬁﬁ) :
;
ﬁﬁ: ;
RenderGraph
ﬂﬂ 
.
ﬂﬂ 
onGraphRegistered
ﬂﬂ %
-=
ﬂﬂ& (!
OnGraphUnregistered
ﬂﬂ) <
;
ﬂﬂ< =
}
‡‡ 
}·· ´
¨D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\Drawers\Vector4ParameterDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "
Vector4Parameter" 2
)2 3
)3 4
]4 5
sealed 

class !
Vector4ParametrDrawer &
:' (!
VolumeParameterDrawer) >
{ 
public		 
override		 
bool		 
OnGUI		 "
(		" ##
SerializedDataParameter		# :
	parameter		; D
,		D E

GUIContent		F P
title		Q V
)		V W
{

 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Vector4= D
)D E
return 
false 
; 
value 
. 
vector4Value 
=  
EditorGUILayout! 0
.0 1
Vector4Field1 =
(= >
title> C
,C D
valueE J
.J K
vector4ValueK W
)W X
;X Y
return 
true 
; 
} 	
} 
} ﬁÒ
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\Stage.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{		 
class 	
Stage
 
: 
IDisposable 
{ 
const 
int &
k_PreviewCullingLayerIndex ,
=- .
$num/ 1
;1 2
private 
readonly 
Scene 
m_PreviewScene -
;- .
private 
readonly 
List 
< 

GameObject (
>( )
m_GameObjects* 7
=8 9
new: =
List> B
<B C

GameObjectC M
>M N
(N O
)O P
;P Q
private 
readonly 
List 
< 

GameObject (
>( )#
m_PersistentGameObjects* A
=B C
newD G
ListH L
<L M

GameObjectM W
>W X
(X Y
)Y Z
;Z [
private 
readonly 
Camera 
m_Camera  (
;( )
private 
readonly 
Light 

m_SunLight )
;) *
public 
Camera 
camera 
=> 
m_Camera  (
;( )
public 
Light 
sunLight 
=>  

m_SunLight! +
;+ ,
public!! 
Scene!! 
scene!! 
=>!! 
m_PreviewScene!! ,
;!!, -
private## !
StageRuntimeInterface## %
SRI##& )
;##) *
public%% !
StageRuntimeInterface%% $
runtimeInterface%%% 5
=>&& 
SRI&& 
??&& 
(&& 
SRI&& 
=&& 
new&&  !
StageRuntimeInterface&&! 6
(&&6 7%
CreateGameObjectIntoStage'' )
,'') *
((( 
)(( 
=>(( 
camera(( 
,(( 
()) 
))) 
=>)) 
sunLight)) 
))) 
)))  
;))  !
public00 
Stage00 
(00 
string00 
	sceneName00 %
)00% &
{11 	
if22 
(22 
string22 
.22 
IsNullOrEmpty22 $
(22$ %
	sceneName22% .
)22. /
)22/ 0
throw33 
new33 
System33  
.33  !!
ArgumentNullException33! 6
(336 7
$str337 B
)33B C
;33C D
m_PreviewScene55 
=55 
EditorSceneManager55 /
.55/ 0
NewPreviewScene550 ?
(55? @
)55@ A
;55A B
m_PreviewScene66 
.66 
name66 
=66  !
	sceneName66" +
;66+ ,
var88 
camGO88 
=88 
EditorUtility88 %
.88% &)
CreateGameObjectWithHideFlags88& C
(88C D
$str88D U
,88U V
	HideFlags88W `
.88` a
HideAndDontSave88a p
,88p q
typeof88r x
(88x y
Camera88y 
)	88 Ä
)
88Ä Å
;
88Å Ç
MoveIntoStage99 
(99 
camGO99 
,99  
true99! %
)99% &
;99& '
camGO:: 
.:: 
layer:: 
=:: &
k_PreviewCullingLayerIndex:: 4
;::4 5
m_Camera<< 
=<< 
camGO<< 
.<< 
GetComponent<< )
<<<) *
Camera<<* 0
><<0 1
(<<1 2
)<<2 3
;<<3 4
m_Camera== 
.== 

cameraType== 
===  !

CameraType==" ,
.==, -
Game==- 1
;==1 2
m_Camera>> 
.>> 
enabled>> 
=>> 
false>> $
;>>$ %
m_Camera?? 
.?? 

clearFlags?? 
=??  !
CameraClearFlags??" 2
.??2 3
Depth??3 8
;??8 9
m_Camera@@ 
.@@ 
cullingMask@@  
=@@! "
$num@@# $
<<@@% '&
k_PreviewCullingLayerIndex@@( B
;@@B C
m_CameraAA 
.AA 
renderingPathAA "
=AA# $
RenderingPathAA% 2
.AA2 3
DeferredShadingAA3 B
;AAB C
m_CameraBB 
.BB 
useOcclusionCullingBB (
=BB) *
falseBB+ 0
;BB0 1
m_CameraCC 
.CC 
sceneCC 
=CC 
m_PreviewSceneCC +
;CC+ ,
varEE 
lightGOEE 
=EE 
EditorUtilityEE '
.EE' ()
CreateGameObjectWithHideFlagsEE( E
(EEE F
$strEEF T
,EET U
	HideFlagsEEV _
.EE_ `
HideAndDontSaveEE` o
,EEo p
typeofEEq w
(EEw x
LightEEx }
)EE} ~
)EE~ 
;	EE Ä
MoveIntoStageFF 
(FF 
lightGOFF !
,FF! "
trueFF# '
)FF' (
;FF( )

m_SunLightGG 
=GG 
lightGOGG  
.GG  !
GetComponentGG! -
<GG- .
LightGG. 3
>GG3 4
(GG4 5
)GG5 6
;GG6 7

m_SunLightHH 
.HH 
typeHH 
=HH 
	LightTypeHH '
.HH' (
DirectionalHH( 3
;HH3 4

m_SunLightII 
.II 
shadowsII 
=II  
LightShadowsII! -
.II- .
SoftII. 2
;II2 3

m_SunLightJJ 
.JJ 
	intensityJJ  
=JJ! "
$numJJ# %
;JJ% &
}KK 	
publicVV 
voidVV 
MoveIntoStageVV !
(VV! "

GameObjectVV" ,

gameObjectVV- 7
,VV7 8
boolVV9 =

persistentVV> H
=VVI J
falseVVK P
)VVP Q
=>WW 
MoveIntoStageWW 
(WW 

gameObjectWW '
,WW' (
Vector3WW) 0
.WW0 1
zeroWW1 5
,WW5 6

gameObjectWW7 A
.WWA B
	transformWWB K
.WWK L
rotationWWL T
,WWT U

persistentWWV `
)WW` a
;WWa b
publicee 
voidee 
MoveIntoStageee !
(ee! "

GameObjectee" ,

gameObjectee- 7
,ee7 8
Vector3ee9 @
positioneeA I
,eeI J

QuaternioneeK U
rotationeeV ^
,ee^ _
boolee` d

persistenteee o
=eep q
falseeer w
)eew x
{ff 	
ifgg 
(gg 
m_GameObjectsgg 
.gg 
Containsgg &
(gg& '

gameObjectgg' 1
)gg1 2
)gg2 3
returnhh 
;hh 
SceneManagerjj 
.jj !
MoveGameObjectToScenejj .
(jj. /

gameObjectjj/ 9
,jj9 :
m_PreviewScenejj; I
)jjI J
;jjJ K

gameObjectkk 
.kk 
	transformkk  
.kk  !
positionkk! )
=kk* +
positionkk, 4
;kk4 5

gameObjectll 
.ll 
	transformll  
.ll  !
rotationll! )
=ll* +
rotationll, 4
;ll4 5
ifmm 
(mm 

persistentmm 
)mm #
m_PersistentGameObjectsnn '
.nn' (
Addnn( +
(nn+ ,

gameObjectnn, 6
)nn6 7
;nn7 8
elseoo 
m_GameObjectspp 
.pp 
Addpp !
(pp! "

gameObjectpp" ,
)pp, -
;pp- .'
InitAddedObjectsRecursivelyrr '
(rr' (

gameObjectrr( 2
)rr2 3
;rr3 4
}ss 	
public
ÄÄ 

GameObject
ÄÄ "
InstantiateIntoStage
ÄÄ .
(
ÄÄ. /

GameObject
ÄÄ/ 9!
prefabOrSceneObject
ÄÄ: M
,
ÄÄM N
bool
ÄÄO S

persistent
ÄÄT ^
=
ÄÄ_ `
false
ÄÄa f
)
ÄÄf g
=>
ÅÅ "
InstantiateIntoStage
ÅÅ #
(
ÅÅ# $!
prefabOrSceneObject
ÅÅ$ 7
,
ÅÅ7 8
Vector3
ÅÅ9 @
.
ÅÅ@ A
zero
ÅÅA E
,
ÅÅE F!
prefabOrSceneObject
ÅÅG Z
.
ÅÅZ [
	transform
ÅÅ[ d
.
ÅÅd e
rotation
ÅÅe m
,
ÅÅm n

persistent
ÅÅo y
)
ÅÅy z
;
ÅÅz {
public
êê 

GameObject
êê "
InstantiateIntoStage
êê .
(
êê. /

GameObject
êê/ 9!
prefabOrSceneObject
êê: M
,
êêM N
Vector3
êêO V
position
êêW _
,
êê_ `

Quaternion
êêa k
rotation
êêl t
,
êêt u
bool
êêv z

persistentêê{ Ö
=êêÜ á
falseêêà ç
)êêç é
{
ëë 	
var
íí 
handle
íí 
=
íí 

GameObject
íí #
.
íí# $
Instantiate
íí$ /
(
íí/ 0!
prefabOrSceneObject
íí0 C
)
ííC D
;
ííD E
MoveIntoStage
ìì 
(
ìì 
handle
ìì  
,
ìì  !
position
ìì" *
,
ìì* +
rotation
ìì, 4
,
ìì4 5

persistent
ìì6 @
)
ìì@ A
;
ììA B
return
îî 
handle
îî 
;
îî 
}
ïï 	
public
ùù 

GameObject
ùù '
CreateGameObjectIntoStage
ùù 3
(
ùù3 4
bool
ùù4 8

persistent
ùù9 C
=
ùùD E
false
ùùF K
)
ùùK L
{
ûû 	
var
üü 
handle
üü 
=
üü 
new
üü 

GameObject
üü '
(
üü' (
)
üü( )
;
üü) *
MoveIntoStage
†† 
(
†† 
handle
††  
,
††  !

persistent
††" ,
)
††, -
;
††- .
return
°° 
handle
°° 
;
°° 
}
¢¢ 	
public
©© 
void
©© 
Clear
©© 
(
©© 
bool
©© 

persistent
©© )
=
©©* +
false
©©, 1
)
©©1 2
{
™™ 	
foreach
´´ 
(
´´ 
var
´´ 
go
´´ 
in
´´ 
m_GameObjects
´´ ,
)
´´, -
UnityEngine
¨¨ 
.
¨¨ 
Object
¨¨ "
.
¨¨" #
DestroyImmediate
¨¨# 3
(
¨¨3 4
go
¨¨4 6
)
¨¨6 7
;
¨¨7 8
m_GameObjects
≠≠ 
.
≠≠ 
Clear
≠≠ 
(
≠≠  
)
≠≠  !
;
≠≠! "
if
ØØ 
(
ØØ 

persistent
ØØ 
)
ØØ 
{
∞∞ 
foreach
±± 
(
±± 
var
±± 
go
±± 
in
±±  "%
m_PersistentGameObjects
±±# :
)
±±: ;
UnityEngine
≤≤ 
.
≤≤  
Object
≤≤  &
.
≤≤& '
DestroyImmediate
≤≤' 7
(
≤≤7 8
go
≤≤8 :
)
≤≤: ;
;
≤≤; <%
m_PersistentGameObjects
≥≥ '
.
≥≥' (
Clear
≥≥( -
(
≥≥- .
)
≥≥. /
;
≥≥/ 0
}
¥¥ 
}
µµ 	
static
∑∑ 
void
∑∑ )
InitAddedObjectsRecursively
∑∑ /
(
∑∑/ 0

GameObject
∑∑0 :
go
∑∑; =
)
∑∑= >
{
∏∏ 	
go
ππ 
.
ππ 
	hideFlags
ππ 
=
ππ 
	HideFlags
ππ $
.
ππ$ %
HideAndDontSave
ππ% 4
;
ππ4 5
go
∫∫ 
.
∫∫ 
layer
∫∫ 
=
∫∫ (
k_PreviewCullingLayerIndex
∫∫ 1
;
∫∫1 2
var
ºº 
meshRenderer
ºº 
=
ºº 
go
ºº !
.
ºº! "
GetComponent
ºº" .
<
ºº. /
MeshRenderer
ºº/ ;
>
ºº; <
(
ºº< =
)
ºº= >
;
ºº> ?
if
ΩΩ 
(
ΩΩ 
meshRenderer
ΩΩ 
!=
ΩΩ 
null
ΩΩ  $
)
ΩΩ$ %
meshRenderer
ææ 
.
ææ 
lightProbeUsage
ææ ,
=
ææ- .
UnityEngine
ææ/ :
.
ææ: ;
	Rendering
ææ; D
.
ææD E
LightProbeUsage
ææE T
.
ææT U
Off
ææU X
;
ææX Y
var
¿¿ !
skinnedMeshRenderer
¿¿ #
=
¿¿$ %
go
¿¿& (
.
¿¿( )
GetComponent
¿¿) 5
<
¿¿5 6!
SkinnedMeshRenderer
¿¿6 I
>
¿¿I J
(
¿¿J K
)
¿¿K L
;
¿¿L M
if
¡¡ 
(
¡¡ !
skinnedMeshRenderer
¡¡ #
!=
¡¡$ &
null
¡¡' +
)
¡¡+ ,!
skinnedMeshRenderer
¬¬ #
.
¬¬# $
lightProbeUsage
¬¬$ 3
=
¬¬4 5
UnityEngine
¬¬6 A
.
¬¬A B
	Rendering
¬¬B K
.
¬¬K L
LightProbeUsage
¬¬L [
.
¬¬[ \
Off
¬¬\ _
;
¬¬_ `
var
ƒƒ 
lineRenderer
ƒƒ 
=
ƒƒ 
go
ƒƒ !
.
ƒƒ! "
GetComponent
ƒƒ" .
<
ƒƒ. /
LineRenderer
ƒƒ/ ;
>
ƒƒ; <
(
ƒƒ< =
)
ƒƒ= >
;
ƒƒ> ?
if
≈≈ 
(
≈≈ 
lineRenderer
≈≈ 
!=
≈≈ 
null
≈≈  $
)
≈≈$ %
lineRenderer
∆∆ 
.
∆∆ 
lightProbeUsage
∆∆ ,
=
∆∆- .
UnityEngine
∆∆/ :
.
∆∆: ;
	Rendering
∆∆; D
.
∆∆D E
LightProbeUsage
∆∆E T
.
∆∆T U
Off
∆∆U X
;
∆∆X Y
var
»» 
volumes
»» 
=
»» 
go
»» 
.
»» 
GetComponents
»» *
<
»»* +
UnityEngine
»»+ 6
.
»»6 7
	Rendering
»»7 @
.
»»@ A
Volume
»»A G
>
»»G H
(
»»H I
)
»»I J
;
»»J K
foreach
…… 
(
…… 
var
…… 
volume
…… 
in
……  "
volumes
……# *
)
……* +
volume
   
.
   
UpdateLayer
   "
(
  " #
)
  # $
;
  $ %
foreach
ÃÃ 
(
ÃÃ 
	Transform
ÃÃ 
child
ÃÃ $
in
ÃÃ% '
go
ÃÃ( *
.
ÃÃ* +
	transform
ÃÃ+ 4
)
ÃÃ4 5)
InitAddedObjectsRecursively
ÕÕ +
(
ÕÕ+ ,
child
ÕÕ, 1
.
ÕÕ1 2

gameObject
ÕÕ2 <
)
ÕÕ< =
;
ÕÕ= >
}
ŒŒ 	
void
’’ "
SetGameObjectVisible
’’ !
(
’’! "
bool
’’" &
visible
’’' .
)
’’. /
{
÷÷ 	
foreach
◊◊ 
(
◊◊ 

GameObject
◊◊ 
go
◊◊  "
in
◊◊# %
m_GameObjects
◊◊& 3
)
◊◊3 4
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
go
ŸŸ 
==
ŸŸ 
null
ŸŸ 
||
ŸŸ !
go
ŸŸ" $
.
ŸŸ$ %
Equals
ŸŸ% +
(
ŸŸ+ ,
null
ŸŸ, 0
)
ŸŸ0 1
)
ŸŸ1 2
continue
⁄⁄ 
;
⁄⁄ 
foreach
€€ 
(
€€ 
UnityEngine
€€ $
.
€€$ %
Renderer
€€% -
renderer
€€. 6
in
€€7 9
go
€€: <
.
€€< =%
GetComponentsInChildren
€€= T
<
€€T U
UnityEngine
€€U `
.
€€` a
Renderer
€€a i
>
€€i j
(
€€j k
)
€€k l
)
€€l m
{
‹‹ 
if
›› 
(
›› 
(
›› 
renderer
››  
.
››  !
	hideFlags
››! *
&
››+ ,
	HideFlags
››- 6
.
››6 7
HideInInspector
››7 F
)
››F G
==
››H J
$num
››K L
&&
››M O
(
››P Q
(
››Q R
renderer
››R Z
.
››Z [
	hideFlags
››[ d
&
››e f
	HideFlags
››g p
.
››p q
HideAndDontSave››q Ä
)››Ä Å
==››Ç Ñ
$num››Ö Ü
)››Ü á
)››á à
renderer
ﬁﬁ  
.
ﬁﬁ  !
enabled
ﬁﬁ! (
=
ﬁﬁ) *
visible
ﬁﬁ+ 2
;
ﬁﬁ2 3
}
ﬂﬂ 
foreach
‡‡ 
(
‡‡ 
Light
‡‡ 
light
‡‡ $
in
‡‡% '
go
‡‡( *
.
‡‡* +%
GetComponentsInChildren
‡‡+ B
<
‡‡B C
Light
‡‡C H
>
‡‡H I
(
‡‡I J
)
‡‡J K
)
‡‡K L
{
·· 
if
‚‚ 
(
‚‚ 
(
‚‚ 
light
‚‚ 
.
‚‚ 
	hideFlags
‚‚ (
&
‚‚) *
	HideFlags
‚‚+ 4
.
‚‚4 5
HideInInspector
‚‚5 D
)
‚‚D E
==
‚‚F H
$num
‚‚I J
&&
‚‚K M
(
‚‚N O
(
‚‚O P
light
‚‚P U
.
‚‚U V
	hideFlags
‚‚V _
&
‚‚` a
	HideFlags
‚‚b k
.
‚‚k l
HideAndDontSave
‚‚l {
)
‚‚{ |
==
‚‚} 
$num‚‚Ä Å
)‚‚Å Ç
)‚‚Ç É
light
„„ 
.
„„ 
enabled
„„ %
=
„„& '
visible
„„( /
;
„„/ 0
}
‰‰ 
}
ÂÂ 
foreach
ËË 
(
ËË 
UnityEngine
ËË  
.
ËË  !
Renderer
ËË! )
renderer
ËË* 2
in
ËË3 5
m_Camera
ËË6 >
.
ËË> ?%
GetComponentsInChildren
ËË? V
<
ËËV W
UnityEngine
ËËW b
.
ËËb c
Renderer
ËËc k
>
ËËk l
(
ËËl m
)
ËËm n
)
ËËn o
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
(
ÍÍ 
renderer
ÍÍ 
.
ÍÍ 
	hideFlags
ÍÍ '
&
ÍÍ( )
	HideFlags
ÍÍ* 3
.
ÍÍ3 4
HideInInspector
ÍÍ4 C
)
ÍÍC D
==
ÍÍE G
$num
ÍÍH I
&&
ÍÍJ L
(
ÍÍM N
(
ÍÍN O
renderer
ÍÍO W
.
ÍÍW X
	hideFlags
ÍÍX a
&
ÍÍb c
	HideFlags
ÍÍd m
.
ÍÍm n
HideAndDontSave
ÍÍn }
)
ÍÍ} ~
==ÍÍ Å
$numÍÍÇ É
)ÍÍÉ Ñ
)ÍÍÑ Ö
renderer
ÎÎ 
.
ÎÎ 
enabled
ÎÎ $
=
ÎÎ% &
visible
ÎÎ' .
;
ÎÎ. /
}
ÏÏ 
foreach
ÌÌ 
(
ÌÌ 
Light
ÌÌ 
light
ÌÌ  
in
ÌÌ! #
m_Camera
ÌÌ$ ,
.
ÌÌ, -%
GetComponentsInChildren
ÌÌ- D
<
ÌÌD E
Light
ÌÌE J
>
ÌÌJ K
(
ÌÌK L
)
ÌÌL M
)
ÌÌM N
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
(
ÔÔ 
light
ÔÔ 
.
ÔÔ 
	hideFlags
ÔÔ $
&
ÔÔ% &
	HideFlags
ÔÔ' 0
.
ÔÔ0 1
HideInInspector
ÔÔ1 @
)
ÔÔ@ A
==
ÔÔB D
$num
ÔÔE F
&&
ÔÔG I
(
ÔÔJ K
(
ÔÔK L
light
ÔÔL Q
.
ÔÔQ R
	hideFlags
ÔÔR [
&
ÔÔ\ ]
	HideFlags
ÔÔ^ g
.
ÔÔg h
HideAndDontSave
ÔÔh w
)
ÔÔw x
==
ÔÔy {
$num
ÔÔ| }
)
ÔÔ} ~
)
ÔÔ~ 
light
 
.
 
enabled
 !
=
" #
visible
$ +
;
+ ,
}
ÒÒ 
}
ÚÚ 	
public
ÙÙ 
void
ÙÙ 
OnBeginRendering
ÙÙ $
(
ÙÙ$ %
IDataProvider
ÙÙ% 2
dataProvider
ÙÙ3 ?
)
ÙÙ? @
{
ıı 	"
SetGameObjectVisible
ˆˆ  
(
ˆˆ  !
true
ˆˆ! %
)
ˆˆ% &
;
ˆˆ& '
dataProvider
˜˜ 
.
˜˜ 
OnBeginRendering
˜˜ )
(
˜˜) *
runtimeInterface
˜˜* :
)
˜˜: ;
;
˜˜; <
}
¯¯ 	
public
˙˙ 
void
˙˙ 
OnEndRendering
˙˙ "
(
˙˙" #
IDataProvider
˙˙# 0
dataProvider
˙˙1 =
)
˙˙= >
{
˚˚ 	"
SetGameObjectVisible
¸¸  
(
¸¸  !
false
¸¸! &
)
¸¸& '
;
¸¸' (
dataProvider
˝˝ 
.
˝˝ 
OnEndRendering
˝˝ '
(
˝˝' (
runtimeInterface
˝˝( 8
)
˝˝8 9
;
˝˝9 :
}
˛˛ 	
private
ÄÄ 
bool
ÄÄ 
disposedValue
ÄÄ "
=
ÄÄ# $
false
ÄÄ% *
;
ÄÄ* +
void
ÇÇ 
CleanUp
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
disposedValue
ÑÑ 
)
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
SRI
ÜÜ 
!=
ÜÜ 
null
ÜÜ 
)
ÜÜ  
SRI
áá 
.
áá 
SRPData
áá 
=
áá  !
null
áá" &
;
áá& '
SRI
àà 
=
àà 
null
àà 
;
àà  
EditorSceneManager
ââ "
.
ââ" #
ClosePreviewScene
ââ# 4
(
ââ4 5
m_PreviewScene
ââ5 C
)
ââC D
;
ââD E
disposedValue
ãã 
=
ãã 
true
ãã  $
;
ãã$ %
}
åå 
}
çç 	
~
èè 	
Stage
èè	 
(
èè 
)
èè 
=>
èè 
CleanUp
èè 
(
èè 
)
èè 
;
èè 
public
íí 
void
íí 
Dispose
íí 
(
íí 
)
íí 
{
ìì 	
CleanUp
îî 
(
îî 
)
îî 
;
îî 
GC
ïï 
.
ïï 
SuppressFinalize
ïï 
(
ïï  
this
ïï  $
)
ïï$ %
;
ïï% &
}
ññ 	
}
óó 
class
ôô 	

StageCache
ôô
 
:
ôô 
IDisposable
ôô "
{
öö 
const
õõ 
string
õõ 
firstStageName
õõ #
=
õõ$ %
$str
õõ& 8
;
õõ8 9
const
úú 
string
úú 
secondStageName
úú $
=
úú% &
$str
úú' :
;
úú: ;
Stage
ûû 
[
ûû 
]
ûû 
m_Stages
ûû 
;
ûû 
Context
üü 

m_Contexts
üü 
;
üü 
IDataProvider
†† #
m_CurrentDataProvider
†† +
;
††+ ,
public
¢¢ 
Stage
¢¢ 
this
¢¢ 
[
¢¢ 
	ViewIndex
¢¢ #
index
¢¢$ )
]
¢¢) *
=>
££ 
m_Stages
££ 
[
££ 
(
££ 
int
££ 
)
££ 
index
££ "
]
££" #
;
££# $
public
•• 
bool
•• 
initialized
•• 
{
••  !
get
••" %
;
••% &
private
••' .
set
••/ 2
;
••2 3
}
••4 5
public
ßß 

StageCache
ßß 
(
ßß 
IDataProvider
ßß '
dataProvider
ßß( 4
,
ßß4 5
Context
ßß6 =
contexts
ßß> F
)
ßßF G
{
®® 	

m_Contexts
©© 
=
©© 
contexts
©© !
;
©©! "
m_Stages
™™ 
=
™™ 
new
™™ 
Stage
™™  
[
™™  !
$num
™™! "
]
™™" #
{
´´ 
	InitStage
¨¨ 
(
¨¨ 
	ViewIndex
¨¨ #
.
¨¨# $
First
¨¨$ )
,
¨¨) *
dataProvider
¨¨+ 7
)
¨¨7 8
,
¨¨8 9
	InitStage
≠≠ 
(
≠≠ 
	ViewIndex
≠≠ #
.
≠≠# $
Second
≠≠$ *
,
≠≠* +
dataProvider
≠≠, 8
)
≠≠8 9
}
ÆÆ 
;
ÆÆ 
initialized
ØØ 
=
ØØ 
true
ØØ 
;
ØØ 
}
∞∞ 	
Stage
≤≤ 
	InitStage
≤≤ 
(
≤≤ 
	ViewIndex
≤≤ !
index
≤≤" '
,
≤≤' (
IDataProvider
≤≤) 6
dataProvider
≤≤7 C
)
≤≤C D
{
≥≥ 	
Stage
¥¥ 
stage
¥¥ 
;
¥¥ 
switch
µµ 
(
µµ 
index
µµ 
)
µµ 
{
∂∂ 
case
∑∑ 
	ViewIndex
∑∑ 
.
∑∑ 
First
∑∑ $
:
∑∑$ %
stage
∏∏ 
=
∏∏ 
new
∏∏ 
Stage
∏∏  %
(
∏∏% &
firstStageName
∏∏& 4
)
∏∏4 5
;
∏∏5 6
stage
ππ 
.
ππ 
camera
ππ  
.
ππ  !
backgroundColor
ππ! 0
=
ππ1 2
new
ππ3 6
Color32
ππ7 >
(
ππ> ?
$num
ππ? @
,
ππ@ A
$num
ππB C
,
ππC D
$num
ππE F
,
ππF G
$num
ππH K
)
ππK L
;
ππL M
stage
∫∫ 
.
∫∫ 
camera
∫∫  
.
∫∫  !
name
∫∫! %
+=
∫∫& (
$str
∫∫) -
;
∫∫- .
break
ªª 
;
ªª 
case
ºº 
	ViewIndex
ºº 
.
ºº 
Second
ºº %
:
ºº% &
stage
ΩΩ 
=
ΩΩ 
new
ΩΩ 
Stage
ΩΩ  %
(
ΩΩ% &
secondStageName
ΩΩ& 5
)
ΩΩ5 6
;
ΩΩ6 7
stage
ææ 
.
ææ 
camera
ææ  
.
ææ  !
backgroundColor
ææ! 0
=
ææ1 2
new
ææ3 6
Color32
ææ7 >
(
ææ> ?
$num
ææ? @
,
ææ@ A
$num
ææB C
,
ææC D
$num
ææE F
,
ææF G
$num
ææH K
)
ææK L
;
ææL M
stage
øø 
.
øø 
camera
øø  
.
øø  !
name
øø! %
+=
øø& (
$str
øø) -
;
øø- .
break
¿¿ 
;
¿¿ 
default
¡¡ 
:
¡¡ 
throw
¬¬ 
new
¬¬ 
ArgumentException
¬¬ /
(
¬¬/ 0
$str
¬¬0 E
+
¬¬F G
index
¬¬H M
)
¬¬M N
;
¬¬N O
}
√√ 
dataProvider
≈≈ 
.
≈≈ 
FirstInitScene
≈≈ '
(
≈≈' (
stage
≈≈( -
.
≈≈- .
runtimeInterface
≈≈. >
)
≈≈> ?
;
≈≈? @#
m_CurrentDataProvider
«« !
=
««" #
dataProvider
««$ 0
;
««0 1
return
»» 
stage
»» 
;
»» 
}
…… 	
public
ÀÀ 
void
ÀÀ  
UpdateSceneObjects
ÀÀ &
(
ÀÀ& '
	ViewIndex
ÀÀ' 0
index
ÀÀ1 6
)
ÀÀ6 7
{
ÃÃ 	
Stage
ÕÕ 
stage
ÕÕ 
=
ÕÕ 
this
ÕÕ 
[
ÕÕ 
index
ÕÕ $
]
ÕÕ$ %
;
ÕÕ% &
stage
ŒŒ 
.
ŒŒ 
Clear
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
var
–– 
viewContent
–– 
=
–– 

m_Contexts
–– (
.
––( )
GetViewContent
––) 7
(
––7 8
index
––8 =
)
––= >
;
––> ?
if
—— 
(
—— 
viewContent
—— 
==
—— 
null
—— #
)
——# $
{
““ 
viewContent
”” 
.
”” %
viewedInstanceInPreview
”” 3
=
””4 5
null
””6 :
;
””: ;
return
‘‘ 
;
‘‘ 
}
’’ 
if
◊◊ 
(
◊◊ 
viewContent
◊◊ 
.
◊◊ #
viewedObjectReference
◊◊ 1
!=
◊◊2 4
null
◊◊5 9
&&
◊◊: <
!
◊◊= >
viewContent
◊◊> I
.
◊◊I J#
viewedObjectReference
◊◊J _
.
◊◊_ `
Equals
◊◊` f
(
◊◊f g
null
◊◊g k
)
◊◊k l
)
◊◊l m
viewContent
ÿÿ 
.
ÿÿ %
viewedInstanceInPreview
ÿÿ 3
=
ÿÿ4 5
stage
ÿÿ6 ;
.
ÿÿ; <"
InstantiateIntoStage
ÿÿ< P
(
ÿÿP Q
viewContent
ÿÿQ \
.
ÿÿ\ ]#
viewedObjectReference
ÿÿ] r
)
ÿÿr s
;
ÿÿs t
}
ŸŸ 	
public
€€ 
void
€€ !
UpdateSceneLighting
€€ '
(
€€' (
	ViewIndex
€€( 1
index
€€2 7
,
€€7 8
IDataProvider
€€9 F
provider
€€G O
)
€€O P
{
‹‹ 	
Stage
›› 
stage
›› 
=
›› 
this
›› 
[
›› 
index
›› $
]
››$ %
;
››% &
Environment
ﬁﬁ 
environment
ﬁﬁ #
=
ﬁﬁ$ %

m_Contexts
ﬁﬁ& 0
.
ﬁﬁ0 1
GetViewContent
ﬁﬁ1 ?
(
ﬁﬁ? @
index
ﬁﬁ@ E
)
ﬁﬁE F
.
ﬁﬁF G
environment
ﬁﬁG R
;
ﬁﬁR S
provider
ﬂﬂ 
.
ﬂﬂ 
	UpdateSky
ﬂﬂ 
(
ﬂﬂ 
stage
ﬂﬂ $
.
ﬂﬂ$ %
camera
ﬂﬂ% +
,
ﬂﬂ+ ,
environment
‡‡ 
==
‡‡ 
null
‡‡ #
?
‡‡$ %
default
‡‡& -
:
‡‡. /
environment
‡‡0 ;
.
‡‡; <
sky
‡‡< ?
,
‡‡? @
stage
·· 
.
·· 
runtimeInterface
·· &
)
··& '
;
··' (
}
‚‚ 	
private
‰‰ 
bool
‰‰ 
disposedValue
‰‰ "
=
‰‰# $
false
‰‰% *
;
‰‰* +
void
ÊÊ 
CleanUp
ÊÊ 
(
ÊÊ 
)
ÊÊ 
{
ÁÁ 	
if
ËË 
(
ËË 
!
ËË 
disposedValue
ËË 
)
ËË 
{
ÈÈ 
foreach
ÍÍ 
(
ÍÍ 
Stage
ÍÍ 
stage
ÍÍ $
in
ÍÍ% '
m_Stages
ÍÍ( 0
)
ÍÍ0 1
{
ÎÎ #
m_CurrentDataProvider
ÏÏ )
.
ÏÏ) *
Cleanup
ÏÏ* 1
(
ÏÏ1 2
stage
ÏÏ2 7
.
ÏÏ7 8
runtimeInterface
ÏÏ8 H
)
ÏÏH I
;
ÏÏI J
stage
ÌÌ 
.
ÌÌ 
Dispose
ÌÌ !
(
ÌÌ! "
)
ÌÌ" #
;
ÌÌ# $
}
ÓÓ 
disposedValue
 
=
 
true
  $
;
$ %
}
ÒÒ 
}
ÚÚ 	
~
ÙÙ 	

StageCache
ÙÙ	 
(
ÙÙ 
)
ÙÙ 
=>
ÙÙ 
CleanUp
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
;
ÙÙ" #
public
ˆˆ 
void
ˆˆ 
Dispose
ˆˆ 
(
ˆˆ 
)
ˆˆ 
{
˜˜ 	
CleanUp
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
GC
˘˘ 
.
˘˘ 
SuppressFinalize
˘˘ 
(
˘˘  
this
˘˘  $
)
˘˘$ %
;
˘˘% &
}
˙˙ 	
}
˚˚ 
}¸¸ ÇÈ
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeComponentEditor.cs
	namespace		 	
UnityEditor		
 
.		 
	Rendering		 
{

 
[ 
AttributeUsage 
( 
AttributeTargets $
.$ %
Class% *
,* +
AllowMultiple, 9
=: ;
false< A
)A B
]B C
public 

sealed 
class *
VolumeComponentEditorAttribute 6
:7 8
	Attribute9 B
{ 
public 
readonly 
Type 
componentType *
;* +
public *
VolumeComponentEditorAttribute -
(- .
Type. 2
componentType3 @
)@ A
{ 	
this   
.   
componentType   
=    
componentType  ! .
;  . /
}!! 	
}"" 
publicLL 

classLL !
VolumeComponentEditorLL &
{MM 
publicQQ 
VolumeComponentQQ 
targetQQ %
{QQ& '
getQQ( +
;QQ+ ,
privateQQ- 4
setQQ5 8
;QQ8 9
}QQ: ;
publicVV 
SerializedObjectVV 
serializedObjectVV  0
{VV1 2
getVV3 6
;VV6 7
privateVV8 ?
setVV@ C
;VVC D
}VVE F
public\\ 
SerializedProperty\\ !
baseProperty\\" .
{\\/ 0
get\\1 4
;\\4 5
internal\\6 >
set\\? B
;\\B C
}\\D E
publicbb 
SerializedPropertybb !
activePropertybb" 0
{bb1 2
getbb3 6
;bb6 7
internalbb8 @
setbbA D
;bbD E
}bbF G
SerializedPropertydd 
m_AdvancedModedd )
;dd) *
publicii 
virtualii 
boolii 
hasAdvancedModeii +
=>ii, .
falseii/ 4
;ii4 5
publicnn 
boolnn 
isInAdvancedModenn $
{oo 	
getpp 
=>pp 
m_AdvancedModepp !
!=pp" $
nullpp% )
&&pp* ,
m_AdvancedModepp- ;
.pp; <
	boolValuepp< E
;ppE F
internalqq 
setqq 
{rr 
ifss 
(ss 
m_AdvancedModess "
!=ss# %
nullss& *
)ss* +
{tt 
m_AdvancedModeuu "
.uu" #
	boolValueuu# ,
=uu- .
valueuu/ 4
;uu4 5
serializedObjectvv $
.vv$ %#
ApplyModifiedPropertiesvv% <
(vv< =
)vv= >
;vv> ?
}ww 
}xx 
}yy 	
	protected~~ 
Editor~~ 
m_Inspector~~ $
;~~$ %
List
ÄÄ 
<
ÄÄ 
(
ÄÄ 

GUIContent
ÄÄ 
displayName
ÄÄ $
,
ÄÄ$ %
int
ÄÄ& )
displayOrder
ÄÄ* 6
,
ÄÄ6 7%
SerializedDataParameter
ÄÄ8 O
param
ÄÄP U
)
ÄÄU V
>
ÄÄV W
m_Parameters
ÄÄX d
;
ÄÄd e
static
ÇÇ 

Dictionary
ÇÇ 
<
ÇÇ 
Type
ÇÇ 
,
ÇÇ #
VolumeParameterDrawer
ÇÇ  5
>
ÇÇ5 6 
s_ParameterDrawers
ÇÇ7 I
;
ÇÇI J
static
ÑÑ #
VolumeComponentEditor
ÑÑ $
(
ÑÑ$ %
)
ÑÑ% &
{
ÖÖ 	 
s_ParameterDrawers
ÜÜ 
=
ÜÜ  
new
ÜÜ! $

Dictionary
ÜÜ% /
<
ÜÜ/ 0
Type
ÜÜ0 4
,
ÜÜ4 5#
VolumeParameterDrawer
ÜÜ6 K
>
ÜÜK L
(
ÜÜL M
)
ÜÜM N
;
ÜÜN O"
ReloadDecoratorTypes
áá  
(
áá  !
)
áá! "
;
áá" #
}
àà 	
[
ää 	
	Callbacks
ää	 
.
ää 
DidReloadScripts
ää #
]
ää# $
static
ãã 
void
ãã 
OnEditorReload
ãã "
(
ãã" #
)
ãã# $
{
åå 	"
ReloadDecoratorTypes
çç  
(
çç  !
)
çç! "
;
çç" #
}
éé 	
static
êê 
void
êê "
ReloadDecoratorTypes
êê (
(
êê( )
)
êê) *
{
ëë 	 
s_ParameterDrawers
íí 
.
íí 
Clear
íí $
(
íí$ %
)
íí% &
;
íí& '
var
ïï 
types
ïï 
=
ïï 
	CoreUtils
ïï !
.
ïï! "$
GetAllTypesDerivedFrom
ïï" 8
<
ïï8 9#
VolumeParameterDrawer
ïï9 N
>
ïïN O
(
ïïO P
)
ïïP Q
.
ññ 
Where
ññ 
(
ññ 
t
óó 
=>
óó 
t
óó 
.
óó 
	IsDefined
óó $
(
óó$ %
typeof
óó% +
(
óó+ ,,
VolumeParameterDrawerAttribute
óó, J
)
óóJ K
,
óóK L
false
óóM R
)
óóR S
&&
òò 
!
òò 
t
òò 
.
òò 

IsAbstract
òò $
)
ôô 
;
ôô 
foreach
úú 
(
úú 
var
úú 
type
úú 
in
úú  
types
úú! &
)
úú& '
{
ùù 
var
ûû 
attr
ûû 
=
ûû 
(
ûû ,
VolumeParameterDrawerAttribute
ûû :
)
ûû: ;
type
ûû; ?
.
ûû? @!
GetCustomAttributes
ûû@ S
(
ûûS T
typeof
ûûT Z
(
ûûZ [,
VolumeParameterDrawerAttribute
ûû[ y
)
ûûy z
,
ûûz {
falseûû| Å
)ûûÅ Ç
[ûûÇ É
$numûûÉ Ñ
]ûûÑ Ö
;ûûÖ Ü
var
üü 
	decorator
üü 
=
üü 
(
üü  !#
VolumeParameterDrawer
üü! 6
)
üü6 7
	Activator
üü7 @
.
üü@ A
CreateInstance
üüA O
(
üüO P
type
üüP T
)
üüT U
;
üüU V 
s_ParameterDrawers
†† "
.
††" #
Add
††# &
(
††& '
attr
††' +
.
††+ ,
parameterType
††, 9
,
††9 :
	decorator
††; D
)
††D E
;
††E F
}
°° 
}
¢¢ 	
public
ßß 
void
ßß 
Repaint
ßß 
(
ßß 
)
ßß 
{
®® 	
m_Inspector
©© 
.
©© 
Repaint
©© 
(
©©  
)
©©  !
;
©©! "
}
™™ 	
internal
¨¨ 
void
¨¨ 
Init
¨¨ 
(
¨¨ 
VolumeComponent
¨¨ *
target
¨¨+ 1
,
¨¨1 2
Editor
¨¨3 9
	inspector
¨¨: C
)
¨¨C D
{
≠≠ 	
this
ÆÆ 
.
ÆÆ 
target
ÆÆ 
=
ÆÆ 
target
ÆÆ  
;
ÆÆ  !
m_Inspector
ØØ 
=
ØØ 
	inspector
ØØ #
;
ØØ# $
serializedObject
∞∞ 
=
∞∞ 
new
∞∞ "
SerializedObject
∞∞# 3
(
∞∞3 4
target
∞∞4 :
)
∞∞: ;
;
∞∞; <
activeProperty
±± 
=
±± 
serializedObject
±± -
.
±±- .
FindProperty
±±. :
(
±±: ;
$str
±±; C
)
±±C D
;
±±D E
m_AdvancedMode
≤≤ 
=
≤≤ 
serializedObject
≤≤ -
.
≤≤- .
FindProperty
≤≤. :
(
≤≤: ;
$str
≤≤; K
)
≤≤K L
;
≤≤L M
OnEnable
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
}
¥¥ 	
class
∑∑ 
ParameterSorter
∑∑ 
:
∑∑ 
Comparer
∑∑  (
<
∑∑( )
(
∑∑) *

GUIContent
∑∑* 4
displayName
∑∑5 @
,
∑∑@ A
int
∑∑B E
displayOrder
∑∑F R
,
∑∑R S%
SerializedDataParameter
∑∑T k
param
∑∑l q
)
∑∑q r
>
∑∑r s
{
∏∏ 	
public
ππ 
override
ππ 
int
ππ 
Compare
ππ  '
(
ππ' (
(
ππ( )

GUIContent
ππ) 3
displayName
ππ4 ?
,
ππ? @
int
ππA D
displayOrder
ππE Q
,
ππQ R%
SerializedDataParameter
ππS j
param
ππk p
)
ππp q
x
ππr s
,
ππs t
(
ππu v

GUIContentππv Ä
displayNameππÅ å
,ππå ç
intππé ë
displayOrderππí û
,ππû ü'
SerializedDataParameterππ† ∑
paramππ∏ Ω
)ππΩ æ
yππø ¿
)ππ¿ ¡
{
∫∫ 
if
ªª 
(
ªª 
x
ªª 
.
ªª 
displayOrder
ªª "
<
ªª# $
y
ªª% &
.
ªª& '
displayOrder
ªª' 3
)
ªª3 4
return
ºº 
-
ºº 
$num
ºº 
;
ºº 
else
ΩΩ 
if
ΩΩ 
(
ΩΩ 
x
ΩΩ 
.
ΩΩ 
displayOrder
ΩΩ '
==
ΩΩ( *
y
ΩΩ+ ,
.
ΩΩ, -
displayOrder
ΩΩ- 9
)
ΩΩ9 :
return
ææ 
$num
ææ 
;
ææ 
else
øø 
return
¿¿ 
$num
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 	
public
ÀÀ 
virtual
ÀÀ 
void
ÀÀ 
OnEnable
ÀÀ $
(
ÀÀ$ %
)
ÀÀ% &
{
ÃÃ 	
m_Parameters
ÕÕ 
=
ÕÕ 
new
ÕÕ 
List
ÕÕ #
<
ÕÕ# $
(
ÕÕ$ %

GUIContent
ÕÕ% /
,
ÕÕ/ 0
int
ÕÕ1 4
,
ÕÕ4 5%
SerializedDataParameter
ÕÕ6 M
)
ÕÕM N
>
ÕÕN O
(
ÕÕO P
)
ÕÕP Q
;
ÕÕQ R
var
—— 
fields
—— 
=
—— 
target
—— 
.
——  
GetType
——  '
(
——' (
)
——( )
.
““ 
	GetFields
““ 
(
““ 
BindingFlags
““ '
.
““' (
Instance
““( 0
|
““1 2
BindingFlags
““3 ?
.
““? @
Public
““@ F
|
““G H
BindingFlags
““I U
.
““U V
	NonPublic
““V _
)
““_ `
.
”” 
Where
”” 
(
”” 
t
”” 
=>
”” 
t
”” 
.
”” 
	FieldType
”” '
.
””' (
IsSubclassOf
””( 4
(
””4 5
typeof
””5 ;
(
””; <
VolumeParameter
””< K
)
””K L
)
””L M
)
””M N
.
‘‘ 
Where
‘‘ 
(
‘‘ 
t
‘‘ 
=>
‘‘ 
(
’’ 
t
’’ 
.
’’ 
IsPublic
’’ 
&&
’’  "
t
’’# $
.
’’$ %!
GetCustomAttributes
’’% 8
(
’’8 9
typeof
’’9 ?
(
’’? @$
NonSerializedAttribute
’’@ V
)
’’V W
,
’’W X
false
’’Y ^
)
’’^ _
.
’’_ `
Length
’’` f
==
’’g i
$num
’’j k
)
’’k l
||
’’m o
(
÷÷ 
t
÷÷ 
.
÷÷ !
GetCustomAttributes
÷÷ *
(
÷÷* +
typeof
÷÷+ 1
(
÷÷1 2
SerializeField
÷÷2 @
)
÷÷@ A
,
÷÷A B
false
÷÷C H
)
÷÷H I
.
÷÷I J
Length
÷÷J P
>
÷÷Q R
$num
÷÷S T
)
÷÷T U
)
◊◊ 
.
ÿÿ 
Where
ÿÿ 
(
ÿÿ 
t
ÿÿ 
=>
ÿÿ 
t
ÿÿ 
.
ÿÿ !
GetCustomAttributes
ÿÿ 1
(
ÿÿ1 2
typeof
ÿÿ2 8
(
ÿÿ8 9
HideInInspector
ÿÿ9 H
)
ÿÿH I
,
ÿÿI J
false
ÿÿK P
)
ÿÿP Q
.
ÿÿQ R
Length
ÿÿR X
==
ÿÿY [
$num
ÿÿ\ ]
)
ÿÿ] ^
.
ŸŸ 
ToList
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
foreach
‹‹ 
(
‹‹ 
var
‹‹ 
field
‹‹ 
in
‹‹ !
fields
‹‹" (
)
‹‹( )
{
›› 
var
ﬁﬁ 
property
ﬁﬁ 
=
ﬁﬁ 
serializedObject
ﬁﬁ /
.
ﬁﬁ/ 0
FindProperty
ﬁﬁ0 <
(
ﬁﬁ< =
field
ﬁﬁ= B
.
ﬁﬁB C
Name
ﬁﬁC G
)
ﬁﬁG H
;
ﬁﬁH I
var
ﬂﬂ 
name
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ 
;
ﬂﬂ 
var
‡‡ 
order
‡‡ 
=
‡‡ 
$num
‡‡ 
;
‡‡ 
var
·· 
attr
·· 
=
·· 
(
·· "
DisplayInfoAttribute
·· 0
[
··0 1
]
··1 2
)
··2 3
field
··3 8
.
··8 9!
GetCustomAttributes
··9 L
(
··L M
typeof
··M S
(
··S T"
DisplayInfoAttribute
··T h
)
··h i
,
··i j
true
··k o
)
··o p
;
··p q
if
‚‚ 
(
‚‚ 
attr
‚‚ 
.
‚‚ 
Length
‚‚ 
!=
‚‚  "
$num
‚‚# $
)
‚‚$ %
{
„„ 
name
‰‰ 
=
‰‰ 
attr
‰‰ 
[
‰‰  
$num
‰‰  !
]
‰‰! "
.
‰‰" #
name
‰‰# '
;
‰‰' (
order
ÂÂ 
=
ÂÂ 
attr
ÂÂ  
[
ÂÂ  !
$num
ÂÂ! "
]
ÂÂ" #
.
ÂÂ# $
order
ÂÂ$ )
;
ÂÂ) *
}
ÊÊ 
var
ËË 
	parameter
ËË 
=
ËË 
new
ËË  #%
SerializedDataParameter
ËË$ ;
(
ËË; <
property
ËË< D
)
ËËD E
;
ËËE F
m_Parameters
ÈÈ 
.
ÈÈ 
Add
ÈÈ  
(
ÈÈ  !
(
ÈÈ! "
new
ÈÈ" %

GUIContent
ÈÈ& 0
(
ÈÈ0 1
name
ÈÈ1 5
)
ÈÈ5 6
,
ÈÈ6 7
order
ÈÈ8 =
,
ÈÈ= >
	parameter
ÈÈ? H
)
ÈÈH I
)
ÈÈI J
;
ÈÈJ K
}
ÍÍ 
m_Parameters
ÎÎ 
.
ÎÎ 
Sort
ÎÎ 
(
ÎÎ 
new
ÎÎ !
ParameterSorter
ÎÎ" 1
(
ÎÎ1 2
)
ÎÎ2 3
)
ÎÎ3 4
;
ÎÎ4 5
}
ÏÏ 	
public
ÒÒ 
virtual
ÒÒ 
void
ÒÒ 
	OnDisable
ÒÒ %
(
ÒÒ% &
)
ÒÒ& '
{
ÚÚ 	
}
ÛÛ 	
internal
ıı 
void
ıı $
OnInternalInspectorGUI
ıı ,
(
ıı, -
)
ıı- .
{
ˆˆ 	
serializedObject
˜˜ 
.
˜˜ 
Update
˜˜ #
(
˜˜# $
)
˜˜$ %
;
˜˜% &
TopRowFields
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
OnInspectorGUI
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
EditorGUILayout
˙˙ 
.
˙˙ 
Space
˙˙ !
(
˙˙! "
)
˙˙" #
;
˙˙# $
serializedObject
˚˚ 
.
˚˚ %
ApplyModifiedProperties
˚˚ 4
(
˚˚4 5
)
˚˚5 6
;
˚˚6 7
}
¸¸ 	
public
ÜÜ 
virtual
ÜÜ 
void
ÜÜ 
OnInspectorGUI
ÜÜ *
(
ÜÜ* +
)
ÜÜ+ ,
{
áá 	
foreach
ââ 
(
ââ 
var
ââ 
	parameter
ââ "
in
ââ# %
m_Parameters
ââ& 2
)
ââ2 3
{
ää 
if
ãã 
(
ãã 
	parameter
ãã 
.
ãã 
displayName
ãã )
.
ãã) *
text
ãã* .
!=
ãã/ 1
$str
ãã2 4
)
ãã4 5
PropertyField
åå !
(
åå! "
	parameter
åå" +
.
åå+ ,
param
åå, 1
,
åå1 2
	parameter
åå3 <
.
åå< =
displayName
åå= H
)
ååH I
;
ååI J
else
çç 
PropertyField
éé !
(
éé! "
	parameter
éé" +
.
éé+ ,
param
éé, 1
)
éé1 2
;
éé2 3
}
èè 
}
êê 	
public
óó 
virtual
óó 
string
óó 
GetDisplayTitle
óó -
(
óó- .
)
óó. /
{
òò 	
return
ôô 
target
ôô 
.
ôô 
displayName
ôô %
==
ôô& (
$str
ôô) +
?
ôô, -
ObjectNames
ôô. 9
.
ôô9 : 
NicifyVariableName
ôô: L
(
ôôL M
target
ôôM S
.
ôôS T
GetType
ôôT [
(
ôô[ \
)
ôô\ ]
.
ôô] ^
Name
ôô^ b
)
ôôb c
:
ôôd e
target
ôôf l
.
ôôl m
displayName
ôôm x
;
ôôx y
}
öö 	
void
úú 
TopRowFields
úú 
(
úú 
)
úú 
{
ùù 	
using
ûû 
(
ûû 
new
ûû 
EditorGUILayout
ûû &
.
ûû& '
HorizontalScope
ûû' 6
(
ûû6 7
)
ûû7 8
)
ûû8 9
{
üü 
if
†† 
(
†† 
	GUILayout
†† 
.
†† 
Button
†† $
(
††$ %
EditorGUIUtility
††% 5
.
††5 6
TrTextContent
††6 C
(
††C D
$str
††D I
,
††I J
$str††K ∑
)††∑ ∏
,††∏ π 
CoreEditorStyles††∫  
.††  À
miniLabelButton††À ⁄
,††⁄ €
	GUILayout††‹ Â
.††Â Ê
Width††Ê Î
(††Î Ï
$num††Ï Ô
)††Ô 
,†† Ò
	GUILayout††Ú ˚
.††˚ ¸
ExpandWidth††¸ á
(††á à
false††à ç
)††ç é
)††é è
)††è ê
SetAllOverridesTo
°° %
(
°°% &
true
°°& *
)
°°* +
;
°°+ ,
if
££ 
(
££ 
	GUILayout
££ 
.
££ 
Button
££ $
(
££$ %
EditorGUIUtility
££% 5
.
££5 6
TrTextContent
££6 C
(
££C D
$str
££D J
,
££J K
$str
££L g
)
££g h
,
££h i
CoreEditorStyles
££j z
.
££z {
miniLabelButton££{ ä
,££ä ã
	GUILayout££å ï
.££ï ñ
Width££ñ õ
(££õ ú
$num££ú ü
)££ü †
,££† °
	GUILayout££¢ ´
.££´ ¨
ExpandWidth££¨ ∑
(££∑ ∏
false££∏ Ω
)££Ω æ
)££æ ø
)££ø ¿
SetAllOverridesTo
§§ %
(
§§% &
false
§§& +
)
§§+ ,
;
§§, -
}
•• 
}
¶¶ 	
internal
®® 
void
®® 
SetAllOverridesTo
®® '
(
®®' (
bool
®®( ,
state
®®- 2
)
®®2 3
{
©© 	
Undo
™™ 
.
™™ 
RecordObject
™™ 
(
™™ 
target
™™ $
,
™™$ %
$str
™™& 2
)
™™2 3
;
™™3 4
target
´´ 
.
´´ 
SetAllOverridesTo
´´ $
(
´´$ %
state
´´% *
)
´´* +
;
´´+ ,
serializedObject
¨¨ 
.
¨¨ 
Update
¨¨ #
(
¨¨# $
)
¨¨$ %
;
¨¨% &
}
≠≠ 	
	protected
∂∂ %
SerializedDataParameter
∂∂ )
Unpack
∂∂* 0
(
∂∂0 1 
SerializedProperty
∂∂1 C
property
∂∂D L
)
∂∂L M
{
∑∑ 	
Assert
∏∏ 
.
∏∏ 
	IsNotNull
∏∏ 
(
∏∏ 
property
∏∏ %
)
∏∏% &
;
∏∏& '
return
ππ 
new
ππ %
SerializedDataParameter
ππ .
(
ππ. /
property
ππ/ 7
)
ππ7 8
;
ππ8 9
}
∫∫ 	
	protected
¿¿ 
void
¿¿ 
PropertyField
¿¿ $
(
¿¿$ %%
SerializedDataParameter
¿¿% <
property
¿¿= E
)
¿¿E F
{
¡¡ 	
var
¬¬ 
title
¬¬ 
=
¬¬ 
EditorGUIUtility
¬¬ (
.
¬¬( )
TrTextContent
¬¬) 6
(
¬¬6 7
property
¬¬7 ?
.
¬¬? @
displayName
¬¬@ K
,
¬¬K L
property
¬¬M U
.
¬¬U V
GetAttribute
¬¬V b
<
¬¬b c
TooltipAttribute
¬¬c s
>
¬¬s t
(
¬¬t u
)
¬¬u v
?
¬¬v w
.
¬¬w x
tooltip
¬¬x 
)¬¬ Ä
;¬¬Ä Å
PropertyField
√√ 
(
√√ 
property
√√ "
,
√√" #
title
√√$ )
)
√√) *
;
√√* +
}
ƒƒ 	
	protected
ÃÃ 
void
ÃÃ 
PropertyField
ÃÃ $
(
ÃÃ$ %%
SerializedDataParameter
ÃÃ% <
property
ÃÃ= E
,
ÃÃE F

GUIContent
ÃÃG Q
title
ÃÃR W
)
ÃÃW X
{
ÕÕ 	
foreach
œœ 
(
œœ 
var
œœ 
attr
œœ 
in
œœ  
property
œœ! )
.
œœ) *

attributes
œœ* 4
)
œœ4 5
{
–– 
if
—— 
(
—— 
attr
—— 
is
—— 
PropertyAttribute
—— -
)
——- .
{
““ 
if
”” 
(
”” 
attr
”” 
is
”” 
SpaceAttribute
””  .
)
””. /
{
‘‘ 
EditorGUILayout
’’ '
.
’’' (
GetControlRect
’’( 6
(
’’6 7
false
’’7 <
,
’’< =
(
’’> ?
attr
’’? C
as
’’D F
SpaceAttribute
’’G U
)
’’U V
.
’’V W
height
’’W ]
)
’’] ^
;
’’^ _
}
÷÷ 
else
◊◊ 
if
◊◊ 
(
◊◊ 
attr
◊◊ !
is
◊◊" $
HeaderAttribute
◊◊% 4
)
◊◊4 5
{
ÿÿ 
var
ŸŸ 
rect
ŸŸ  
=
ŸŸ! "
EditorGUILayout
ŸŸ# 2
.
ŸŸ2 3
GetControlRect
ŸŸ3 A
(
ŸŸA B
false
ŸŸB G
,
ŸŸG H
EditorGUIUtility
ŸŸI Y
.
ŸŸY Z
singleLineHeight
ŸŸZ j
)
ŸŸj k
;
ŸŸk l
rect
⁄⁄ 
.
⁄⁄ 
y
⁄⁄ 
+=
⁄⁄ !
$num
⁄⁄" $
;
⁄⁄$ %
rect
€€ 
=
€€ 
	EditorGUI
€€ (
.
€€( )
IndentedRect
€€) 5
(
€€5 6
rect
€€6 :
)
€€: ;
;
€€; <
	EditorGUI
‹‹ !
.
‹‹! "

LabelField
‹‹" ,
(
‹‹, -
rect
‹‹- 1
,
‹‹1 2
(
‹‹3 4
attr
‹‹4 8
as
‹‹9 ;
HeaderAttribute
‹‹< K
)
‹‹K L
.
‹‹L M
header
‹‹M S
,
‹‹S T
EditorStyles
‹‹U a
.
‹‹a b
	miniLabel
‹‹b k
)
‹‹k l
;
‹‹l m
}
›› 
else
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ 
attr
ﬁﬁ !
is
ﬁﬁ" $
TooltipAttribute
ﬁﬁ% 5
)
ﬁﬁ5 6
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
string
‡‡ "
.
‡‡" #
IsNullOrEmpty
‡‡# 0
(
‡‡0 1
title
‡‡1 6
.
‡‡6 7
tooltip
‡‡7 >
)
‡‡> ?
)
‡‡? @
title
·· !
.
··! "
tooltip
··" )
=
··* +
(
··, -
attr
··- 1
as
··2 4
TooltipAttribute
··5 E
)
··E F
.
··F G
tooltip
··G N
;
··N O
}
‚‚ 
}
„„ 
}
‰‰ #
VolumeParameterDrawer
ÁÁ !
drawer
ÁÁ" (
;
ÁÁ( ) 
s_ParameterDrawers
ËË 
.
ËË 
TryGetValue
ËË *
(
ËË* +
property
ËË+ 3
.
ËË3 4
referenceType
ËË4 A
,
ËËA B
out
ËËC F
drawer
ËËG M
)
ËËM N
;
ËËN O
bool
ÍÍ 
invalidProp
ÍÍ 
=
ÍÍ 
false
ÍÍ $
;
ÍÍ$ %
if
ÏÏ 
(
ÏÏ 
drawer
ÏÏ 
!=
ÏÏ 
null
ÏÏ 
&&
ÏÏ !
!
ÏÏ" #
drawer
ÏÏ# )
.
ÏÏ) *
IsAutoProperty
ÏÏ* 8
(
ÏÏ8 9
)
ÏÏ9 :
)
ÏÏ: ;
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
drawer
ÓÓ 
.
ÓÓ 
OnGUI
ÓÓ  
(
ÓÓ  !
property
ÓÓ! )
,
ÓÓ) *
title
ÓÓ+ 0
)
ÓÓ0 1
)
ÓÓ1 2
return
ÔÔ 
;
ÔÔ 
invalidProp
ÒÒ 
=
ÒÒ 
true
ÒÒ "
;
ÒÒ" #
}
ÚÚ 
if
ıı 
(
ıı 
VolumeParameter
ıı 
.
ıı  
IsObjectParameter
ıı  1
(
ıı1 2
property
ıı2 :
.
ıı: ;
referenceType
ıı; H
)
ııH I
)
ııI J
{
ˆˆ 
bool
˜˜ 
expanded
˜˜ 
=
˜˜ 
property
˜˜  (
.
˜˜( )
value
˜˜) .
.
˜˜. /

isExpanded
˜˜/ 9
;
˜˜9 :
expanded
¯¯ 
=
¯¯ 
EditorGUILayout
¯¯ *
.
¯¯* +
Foldout
¯¯+ 2
(
¯¯2 3
expanded
¯¯3 ;
,
¯¯; <
title
¯¯= B
,
¯¯B C
true
¯¯D H
)
¯¯H I
;
¯¯I J
if
˙˙ 
(
˙˙ 
expanded
˙˙ 
)
˙˙ 
{
˚˚ 
	EditorGUI
¸¸ 
.
¸¸ 
indentLevel
¸¸ )
++
¸¸) +
;
¸¸+ ,
var
ˇˇ 
it
ˇˇ 
=
ˇˇ 
property
ˇˇ %
.
ˇˇ% &
value
ˇˇ& +
.
ˇˇ+ ,
Copy
ˇˇ, 0
(
ˇˇ0 1
)
ˇˇ1 2
;
ˇˇ2 3
var
ÄÄ 
end
ÄÄ 
=
ÄÄ 
it
ÄÄ  
.
ÄÄ  !
GetEndProperty
ÄÄ! /
(
ÄÄ/ 0
)
ÄÄ0 1
;
ÄÄ1 2
bool
ÅÅ 
first
ÅÅ 
=
ÅÅ  
true
ÅÅ! %
;
ÅÅ% &
while
ÉÉ 
(
ÉÉ 
it
ÉÉ 
.
ÉÉ 
Next
ÉÉ "
(
ÉÉ" #
first
ÉÉ# (
)
ÉÉ( )
&&
ÉÉ* ,
!
ÉÉ- . 
SerializedProperty
ÉÉ. @
.
ÉÉ@ A
EqualContents
ÉÉA N
(
ÉÉN O
it
ÉÉO Q
,
ÉÉQ R
end
ÉÉS V
)
ÉÉV W
)
ÉÉW X
{
ÑÑ 
PropertyField
ÖÖ %
(
ÖÖ% &
Unpack
ÖÖ& ,
(
ÖÖ, -
it
ÖÖ- /
)
ÖÖ/ 0
)
ÖÖ0 1
;
ÖÖ1 2
first
ÜÜ 
=
ÜÜ 
false
ÜÜ  %
;
ÜÜ% &
}
áá 
	EditorGUI
ââ 
.
ââ 
indentLevel
ââ )
--
ââ) +
;
ââ+ ,
}
ää 
property
åå 
.
åå 
value
åå 
.
åå 

isExpanded
åå )
=
åå* +
expanded
åå, 4
;
åå4 5
return
çç 
;
çç 
}
éé 
using
êê 
(
êê 
new
êê 
EditorGUILayout
êê &
.
êê& '
HorizontalScope
êê' 6
(
êê6 7
)
êê7 8
)
êê8 9
{
ëë "
DrawOverrideCheckbox
ìì $
(
ìì$ %
property
ìì% -
)
ìì- .
;
ìì. /
using
ññ 
(
ññ 
new
ññ 
	EditorGUI
ññ $
.
ññ$ %
DisabledScope
ññ% 2
(
ññ2 3
!
ññ3 4
property
ññ4 <
.
ññ< =
overrideState
ññ= J
.
ññJ K
	boolValue
ññK T
)
ññT U
)
ññU V
{
óó 
if
òò 
(
òò 
drawer
òò 
!=
òò !
null
òò" &
&&
òò' )
!
òò* +
invalidProp
òò+ 6
)
òò6 7
{
ôô 
if
öö 
(
öö 
drawer
öö "
.
öö" #
OnGUI
öö# (
(
öö( )
property
öö) 1
,
öö1 2
title
öö3 8
)
öö8 9
)
öö9 :
return
õõ "
;
õõ" #
}
úú 
EditorGUILayout
üü #
.
üü# $
PropertyField
üü$ 1
(
üü1 2
property
üü2 :
.
üü: ;
value
üü; @
,
üü@ A
title
üüB G
)
üüG H
;
üüH I
}
†† 
}
°° 
}
¢¢ 	
	protected
®® 
void
®® "
DrawOverrideCheckbox
®® +
(
®®+ ,%
SerializedDataParameter
®®, C
property
®®D L
)
®®L M
{
©© 	
var
™™ 
overrideRect
™™ 
=
™™ 
GUILayoutUtility
™™ /
.
™™/ 0
GetRect
™™0 7
(
™™7 8
$num
™™8 ;
,
™™; <
$num
™™= @
,
™™@ A
	GUILayout
™™B K
.
™™K L
ExpandWidth
™™L W
(
™™W X
false
™™X ]
)
™™] ^
)
™™^ _
;
™™_ `
overrideRect
´´ 
.
´´ 
yMin
´´ 
+=
´´  
$num
´´! #
;
´´# $
property
¨¨ 
.
¨¨ 
overrideState
¨¨ "
.
¨¨" #
	boolValue
¨¨# ,
=
¨¨- .
GUI
¨¨/ 2
.
¨¨2 3
Toggle
¨¨3 9
(
¨¨9 :
overrideRect
¨¨: F
,
¨¨F G
property
¨¨H P
.
¨¨P Q
overrideState
¨¨Q ^
.
¨¨^ _
	boolValue
¨¨_ h
,
¨¨h i
EditorGUIUtility
¨¨j z
.
¨¨z {
TrTextContent¨¨{ à
(¨¨à â
$str¨¨â ã
,¨¨ã å
$str¨¨ç µ
)¨¨µ ∂
,¨¨∂ ∑ 
CoreEditorStyles¨¨∏ »
.¨¨» …
smallTickbox¨¨… ’
)¨¨’ ÷
;¨¨÷ ◊
}
≠≠ 	
}
ÆÆ 
}ØØ üˆ
ßD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeComponentListEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{		 
public.. 

sealed.. 
class.. %
VolumeComponentListEditor.. 1
{// 
public33 
VolumeProfile33 
asset33 "
{33# $
get33% (
;33( )
private33* 1
set332 5
;335 6
}337 8
Editor55 
m_BaseEditor55 
;55 
SerializedObject77 
m_SerializedObject77 +
;77+ ,
SerializedProperty88  
m_ComponentsProperty88 /
;88/ 0

Dictionary:: 
<:: 
Type:: 
,:: 
Type:: 
>:: 
m_EditorTypes:: ,
;::, -
List;; 
<;; !
VolumeComponentEditor;; "
>;;" #
	m_Editors;;$ -
;;;- .
static== 

Dictionary== 
<== 
Type== 
,== 
string==  &
>==& '%
m_EditorDocumentationURLs==( A
;==A B
int?? 
m_CurrentHashCode?? 
;?? 
staticAA %
VolumeComponentListEditorAA (
(AA( )
)AA) *
{BB 	
ReloadDocumentationCC 
(CC  
)CC  !
;CC! "
}DD 	
publicKK %
VolumeComponentListEditorKK (
(KK( )
EditorKK) /
editorKK0 6
)KK6 7
{LL 	
AssertMM 
.MM 
	IsNotNullMM 
(MM 
editorMM #
)MM# $
;MM$ %
m_BaseEditorNN 
=NN 
editorNN !
;NN! "
}OO 	
publicWW 
voidWW 
InitWW 
(WW 
VolumeProfileWW &
assetWW' ,
,WW, -
SerializedObjectWW. >
serializedObjectWW? O
)WWO P
{XX 	
AssertYY 
.YY 
	IsNotNullYY 
(YY 
assetYY "
)YY" #
;YY# $
AssertZZ 
.ZZ 
	IsNotNullZZ 
(ZZ 
serializedObjectZZ -
)ZZ- .
;ZZ. /
this\\ 
.\\ 
asset\\ 
=\\ 
asset\\ 
;\\ 
m_SerializedObject]] 
=]]  
serializedObject]]! 1
;]]1 2 
m_ComponentsProperty^^  
=^^! "
serializedObject^^# 3
.^^3 4
Find^^4 8
(^^8 9
(^^9 :
VolumeProfile^^: G
x^^H I
)^^I J
=>^^K M
x^^N O
.^^O P

components^^P Z
)^^Z [
;^^[ \
Assert__ 
.__ 
	IsNotNull__ 
(__  
m_ComponentsProperty__ 1
)__1 2
;__2 3
m_EditorTypesaa 
=aa 
newaa 

Dictionaryaa  *
<aa* +
Typeaa+ /
,aa/ 0
Typeaa1 5
>aa5 6
(aa6 7
)aa7 8
;aa8 9
	m_Editorsbb 
=bb 
newbb 
Listbb  
<bb  !!
VolumeComponentEditorbb! 6
>bb6 7
(bb7 8
)bb8 9
;bb9 :
varee 
editorTypesee 
=ee 
	CoreUtilsee '
.ee' ("
GetAllTypesDerivedFromee( >
<ee> ?!
VolumeComponentEditoree? T
>eeT U
(eeU V
)eeV W
.ff 
Whereff 
(ff 
tgg 
=>gg 
tgg 
.gg 
	IsDefinedgg $
(gg$ %
typeofgg% +
(gg+ ,*
VolumeComponentEditorAttributegg, J
)ggJ K
,ggK L
falseggM R
)ggR S
&&hh 
!hh 
thh 
.hh 

IsAbstracthh $
)ii 
;ii 
foreachll 
(ll 
varll 

editorTypell #
inll$ &
editorTypesll' 2
)ll2 3
{mm 
varnn 
	attributenn 
=nn 
(nn  !*
VolumeComponentEditorAttributenn! ?
)nn? @

editorTypenn@ J
.nnJ K
GetCustomAttributesnnK ^
(nn^ _
typeofnn_ e
(nne f+
VolumeComponentEditorAttribute	nnf Ñ
)
nnÑ Ö
,
nnÖ Ü
false
nná å
)
nnå ç
[
nnç é
$num
nné è
]
nnè ê
;
nnê ë
m_EditorTypesoo 
.oo 
Addoo !
(oo! "
	attributeoo" +
.oo+ ,
componentTypeoo, 9
,oo9 :

editorTypeoo; E
)ooE F
;ooF G
}pp 
varss 

componentsss 
=ss 
assetss "
.ss" #

componentsss# -
;ss- .
fortt 
(tt 
inttt 
itt 
=tt 
$numtt 
;tt 
itt 
<tt 

componentstt  *
.tt* +
Counttt+ 0
;tt0 1
itt2 3
++tt3 5
)tt5 6
CreateEditoruu 
(uu 

componentsuu '
[uu' (
iuu( )
]uu) *
,uu* + 
m_ComponentsPropertyuu, @
.uu@ A"
GetArrayElementAtIndexuuA W
(uuW X
iuuX Y
)uuY Z
)uuZ [
;uu[ \
Undoxx 
.xx 
undoRedoPerformedxx "
+=xx# %
OnUndoRedoPerformedxx& 9
;xx9 :
}yy 	
void{{ 
OnUndoRedoPerformed{{  
({{  !
){{! "
{|| 	
asset}} 
.}} 
isDirty}} 
=}} 
true}}  
;}}  !
if
ÅÅ 
(
ÅÅ  
m_SerializedObject
ÅÅ "
!=
ÅÅ# %
null
ÅÅ& *
&&
ÇÇ 
!
ÇÇ  
m_SerializedObject
ÇÇ '
.
ÇÇ' (
Equals
ÇÇ( .
(
ÇÇ. /
null
ÇÇ/ 3
)
ÇÇ3 4
&&
ÉÉ  
m_SerializedObject
ÉÉ &
.
ÉÉ& '
targetObject
ÉÉ' 3
!=
ÉÉ4 6
null
ÉÉ7 ;
&&
ÑÑ 
!
ÑÑ  
m_SerializedObject
ÑÑ '
.
ÑÑ' (
targetObject
ÑÑ( 4
.
ÑÑ4 5
Equals
ÑÑ5 ;
(
ÑÑ; <
null
ÑÑ< @
)
ÑÑ@ A
)
ÑÑA B
{
ÖÖ  
m_SerializedObject
ÜÜ "
.
ÜÜ" #
Update
ÜÜ# )
(
ÜÜ) *
)
ÜÜ* +
;
ÜÜ+ , 
m_SerializedObject
áá "
.
áá" #%
ApplyModifiedProperties
áá# :
(
áá: ;
)
áá; <
;
áá< =
}
àà 
m_BaseEditor
åå 
.
åå 
Repaint
åå  
(
åå  !
)
åå! "
;
åå" #
}
çç 	
void
êê 
CreateEditor
êê 
(
êê 
VolumeComponent
êê )
	component
êê* 3
,
êê3 4 
SerializedProperty
êê5 G
property
êêH P
,
êêP Q
int
êêR U
index
êêV [
=
êê\ ]
-
êê^ _
$num
êê_ `
,
êê` a
bool
êêb f
	forceOpen
êêg p
=
êêq r
false
êês x
)
êêx y
{
ëë 	
var
íí 
componentType
íí 
=
íí 
	component
íí  )
.
íí) *
GetType
íí* 1
(
íí1 2
)
íí2 3
;
íí3 4
Type
ìì 

editorType
ìì 
;
ìì 
if
ïï 
(
ïï 
!
ïï 
m_EditorTypes
ïï 
.
ïï 
TryGetValue
ïï *
(
ïï* +
componentType
ïï+ 8
,
ïï8 9
out
ïï: =

editorType
ïï> H
)
ïïH I
)
ïïI J

editorType
ññ 
=
ññ 
typeof
ññ #
(
ññ# $#
VolumeComponentEditor
ññ$ 9
)
ññ9 :
;
ññ: ;
var
òò 
editor
òò 
=
òò 
(
òò #
VolumeComponentEditor
òò /
)
òò/ 0
	Activator
òò0 9
.
òò9 :
CreateInstance
òò: H
(
òòH I

editorType
òòI S
)
òòS T
;
òòT U
editor
ôô 
.
ôô 
Init
ôô 
(
ôô 
	component
ôô !
,
ôô! "
m_BaseEditor
ôô# /
)
ôô/ 0
;
ôô0 1
editor
öö 
.
öö 
baseProperty
öö 
=
öö  !
property
öö" *
.
öö* +
Copy
öö+ /
(
öö/ 0
)
öö0 1
;
öö1 2
if
úú 
(
úú 
	forceOpen
úú 
)
úú 
editor
ùù 
.
ùù 
baseProperty
ùù #
.
ùù# $

isExpanded
ùù$ .
=
ùù/ 0
true
ùù1 5
;
ùù5 6
if
üü 
(
üü 
index
üü 
<
üü 
$num
üü 
)
üü 
	m_Editors
†† 
.
†† 
Add
†† 
(
†† 
editor
†† $
)
††$ %
;
††% &
else
°° 
	m_Editors
¢¢ 
[
¢¢ 
index
¢¢ 
]
¢¢  
=
¢¢! "
editor
¢¢# )
;
¢¢) *
}
££ 	
void
•• 
RefreshEditors
•• 
(
•• 
)
•• 
{
¶¶ 	
foreach
®® 
(
®® 
var
®® 
editor
®® 
in
®®  "
	m_Editors
®®# ,
)
®®, -
editor
©© 
.
©© 
	OnDisable
©©  
(
©©  !
)
©©! "
;
©©" #
	m_Editors
¨¨ 
.
¨¨ 
Clear
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨  
m_SerializedObject
∞∞ 
.
∞∞ 
Update
∞∞ %
(
∞∞% &
)
∞∞& '
;
∞∞' ("
m_ComponentsProperty
±±  
=
±±! " 
m_SerializedObject
±±# 5
.
±±5 6
Find
±±6 :
(
±±: ;
(
±±; <
VolumeProfile
±±< I
x
±±J K
)
±±K L
=>
±±M O
x
±±P Q
.
±±Q R

components
±±R \
)
±±\ ]
;
±±] ^
Assert
≤≤ 
.
≤≤ 
	IsNotNull
≤≤ 
(
≤≤ "
m_ComponentsProperty
≤≤ 1
)
≤≤1 2
;
≤≤2 3
var
µµ 

components
µµ 
=
µµ 
asset
µµ "
.
µµ" #

components
µµ# -
;
µµ- .
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ 

components
∂∂  *
.
∂∂* +
Count
∂∂+ 0
;
∂∂0 1
i
∂∂2 3
++
∂∂3 5
)
∂∂5 6
CreateEditor
∑∑ 
(
∑∑ 

components
∑∑ '
[
∑∑' (
i
∑∑( )
]
∑∑) *
,
∑∑* +"
m_ComponentsProperty
∑∑, @
.
∑∑@ A$
GetArrayElementAtIndex
∑∑A W
(
∑∑W X
i
∑∑X Y
)
∑∑Y Z
)
∑∑Z [
;
∑∑[ \
}
∏∏ 	
public
ææ 
void
ææ 
Clear
ææ 
(
ææ 
)
ææ 
{
øø 	
if
¿¿ 
(
¿¿ 
	m_Editors
¿¿ 
==
¿¿ 
null
¿¿ !
)
¿¿! "
return
¡¡ 
;
¡¡ 
foreach
√√ 
(
√√ 
var
√√ 
editor
√√ 
in
√√  "
	m_Editors
√√# ,
)
√√, -
editor
ƒƒ 
.
ƒƒ 
	OnDisable
ƒƒ  
(
ƒƒ  !
)
ƒƒ! "
;
ƒƒ" #
	m_Editors
∆∆ 
.
∆∆ 
Clear
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
m_EditorTypes
«« 
.
«« 
Clear
«« 
(
««  
)
««  !
;
««! "
Undo
   
.
   
undoRedoPerformed
   "
-=
  # %!
OnUndoRedoPerformed
  & 9
;
  9 :
}
ÀÀ 	
public
–– 
void
–– 
OnGUI
–– 
(
–– 
)
–– 
{
—— 	
if
““ 
(
““ 
asset
““ 
==
““ 
null
““ 
)
““ 
return
”” 
;
”” 
if
◊◊ 
(
◊◊ 
asset
◊◊ 
.
◊◊ 
isDirty
◊◊ 
||
◊◊  
asset
◊◊! &
.
◊◊& '&
GetComponentListHashCode
◊◊' ?
(
◊◊? @
)
◊◊@ A
!=
◊◊B D
m_CurrentHashCode
◊◊E V
)
◊◊V W
{
ÿÿ 
RefreshEditors
ŸŸ 
(
ŸŸ 
)
ŸŸ  
;
ŸŸ  !
m_CurrentHashCode
⁄⁄ !
=
⁄⁄" #
asset
⁄⁄$ )
.
⁄⁄) *&
GetComponentListHashCode
⁄⁄* B
(
⁄⁄B C
)
⁄⁄C D
;
⁄⁄D E
asset
€€ 
.
€€ 
isDirty
€€ 
=
€€ 
false
€€  %
;
€€% &
}
‹‹ 
bool
ﬁﬁ 

isEditable
ﬁﬁ 
=
ﬁﬁ 
!
ﬁﬁ 
VersionControl
ﬁﬁ -
.
ﬁﬁ- .
Provider
ﬁﬁ. 6
.
ﬁﬁ6 7
isActive
ﬁﬁ7 ?
||
ﬂﬂ 
AssetDatabase
ﬂﬂ  
.
ﬂﬂ  !
IsOpenForEdit
ﬂﬂ! .
(
ﬂﬂ. /
asset
ﬂﬂ/ 4
,
ﬂﬂ4 5 
StatusQueryOptions
ﬂﬂ6 H
.
ﬂﬂH I!
UseCachedIfPossible
ﬂﬂI \
)
ﬂﬂ\ ]
;
ﬂﬂ] ^
using
·· 
(
·· 
new
·· 
	EditorGUI
··  
.
··  !
DisabledScope
··! .
(
··. /
!
··/ 0

isEditable
··0 :
)
··: ;
)
··; <
{
‚‚ 
for
‰‰ 
(
‰‰ 
int
‰‰ 
i
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰ 
i
‰‰  !
<
‰‰" #
	m_Editors
‰‰$ -
.
‰‰- .
Count
‰‰. 3
;
‰‰3 4
i
‰‰5 6
++
‰‰6 8
)
‰‰8 9
{
ÂÂ 
var
ÊÊ 
editor
ÊÊ 
=
ÊÊ  
	m_Editors
ÊÊ! *
[
ÊÊ* +
i
ÊÊ+ ,
]
ÊÊ, -
;
ÊÊ- .
string
ÁÁ 
title
ÁÁ  
=
ÁÁ! "
editor
ÁÁ# )
.
ÁÁ) *
GetDisplayTitle
ÁÁ* 9
(
ÁÁ9 :
)
ÁÁ: ;
;
ÁÁ; <
int
ËË 
id
ËË 
=
ËË 
i
ËË 
;
ËË '
m_EditorDocumentationURLs
ÍÍ -
.
ÍÍ- .
TryGetValue
ÍÍ. 9
(
ÍÍ9 :
editor
ÍÍ: @
.
ÍÍ@ A
target
ÍÍA G
.
ÍÍG H
GetType
ÍÍH O
(
ÍÍO P
)
ÍÍP Q
,
ÍÍQ R
out
ÍÍS V
var
ÍÍW Z
documentationURL
ÍÍ[ k
)
ÍÍk l
;
ÍÍl m
CoreEditorUtils
ÏÏ #
.
ÏÏ# $
DrawSplitter
ÏÏ$ 0
(
ÏÏ0 1
)
ÏÏ1 2
;
ÏÏ2 3
bool
ÌÌ 
displayContent
ÌÌ '
=
ÌÌ( )
CoreEditorUtils
ÌÌ* 9
.
ÌÌ9 :
DrawHeaderToggle
ÌÌ: J
(
ÌÌJ K
title
ÓÓ !
,
ÓÓ! "
editor
ÔÔ "
.
ÔÔ" #
baseProperty
ÔÔ# /
,
ÔÔ/ 0
editor
 "
.
" #
activeProperty
# 1
,
1 2
pos
ÒÒ 
=>
ÒÒ  "
OnContextClick
ÒÒ# 1
(
ÒÒ1 2
pos
ÒÒ2 5
,
ÒÒ5 6
editor
ÒÒ7 =
.
ÒÒ= >
target
ÒÒ> D
,
ÒÒD E
id
ÒÒF H
)
ÒÒH I
,
ÒÒI J
editor
ÚÚ "
.
ÚÚ" #
hasAdvancedMode
ÚÚ# 2
?
ÚÚ3 4
(
ÚÚ5 6
)
ÚÚ6 7
=>
ÚÚ8 :
editor
ÚÚ; A
.
ÚÚA B
isInAdvancedMode
ÚÚB R
:
ÚÚS T
(
ÚÚU V
Func
ÚÚV Z
<
ÚÚZ [
bool
ÚÚ[ _
>
ÚÚ_ `
)
ÚÚ` a
null
ÚÚa e
,
ÚÚe f
(
ÛÛ 
)
ÛÛ 
=>
ÛÛ !
editor
ÛÛ" (
.
ÛÛ( )
isInAdvancedMode
ÛÛ) 9
^=
ÛÛ: <
true
ÛÛ= A
,
ÛÛA B
documentationURL
ÙÙ ,
)
ıı 
;
ıı 
if
˜˜ 
(
˜˜ 
displayContent
˜˜ &
)
˜˜& '
{
¯¯ 
using
˘˘ 
(
˘˘ 
new
˘˘ "
	EditorGUI
˘˘# ,
.
˘˘, -
DisabledScope
˘˘- :
(
˘˘: ;
!
˘˘; <
editor
˘˘< B
.
˘˘B C
activeProperty
˘˘C Q
.
˘˘Q R
	boolValue
˘˘R [
)
˘˘[ \
)
˘˘\ ]
editor
˙˙ "
.
˙˙" #$
OnInternalInspectorGUI
˙˙# 9
(
˙˙9 :
)
˙˙: ;
;
˙˙; <
}
˚˚ 
}
¸¸ 
if
˛˛ 
(
˛˛ 
	m_Editors
˛˛ 
.
˛˛ 
Count
˛˛ #
>
˛˛$ %
$num
˛˛& '
)
˛˛' (
CoreEditorUtils
ˇˇ #
.
ˇˇ# $
DrawSplitter
ˇˇ$ 0
(
ˇˇ0 1
)
ˇˇ1 2
;
ˇˇ2 3
else
ÄÄ 
EditorGUILayout
ÅÅ #
.
ÅÅ# $
HelpBox
ÅÅ$ +
(
ÅÅ+ ,
$str
ÅÅ, X
,
ÅÅX Y
MessageType
ÅÅZ e
.
ÅÅe f
Info
ÅÅf j
)
ÅÅj k
;
ÅÅk l
EditorGUILayout
ÉÉ 
.
ÉÉ  
Space
ÉÉ  %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
using
ÖÖ 
(
ÖÖ 
var
ÖÖ 
hscope
ÖÖ !
=
ÖÖ" #
new
ÖÖ$ '
EditorGUILayout
ÖÖ( 7
.
ÖÖ7 8
HorizontalScope
ÖÖ8 G
(
ÖÖG H
)
ÖÖH I
)
ÖÖI J
{
ÜÜ 
if
áá 
(
áá 
	GUILayout
áá !
.
áá! "
Button
áá" (
(
áá( )
EditorGUIUtility
áá) 9
.
áá9 :
TrTextContent
áá: G
(
ááG H
$str
ááH V
)
ááV W
,
ááW X
EditorStyles
ááY e
.
ááe f

miniButton
ááf p
)
ááp q
)
ááq r
{
àà 
var
ââ 
r
ââ 
=
ââ 
hscope
ââ  &
.
ââ& '
rect
ââ' +
;
ââ+ ,
var
ää 
pos
ää 
=
ää  !
new
ää" %
Vector2
ää& -
(
ää- .
r
ää. /
.
ää/ 0
x
ää0 1
+
ää2 3
r
ää4 5
.
ää5 6
width
ää6 ;
/
ää< =
$num
ää> @
,
ää@ A
r
ääB C
.
ääC D
yMax
ääD H
+
ääI J
$num
ääK N
)
ääN O
;
ääO P
FilterWindow
ãã $
.
ãã$ %
Show
ãã% )
(
ãã) *
pos
ãã* -
,
ãã- .
new
ãã/ 2%
VolumeComponentProvider
ãã3 J
(
ããJ K
asset
ããK P
,
ããP Q
this
ããR V
)
ããV W
)
ããW X
;
ããX Y
}
åå 
}
çç 
}
éé 
}
èè 	
void
ëë 
OnContextClick
ëë 
(
ëë 
Vector2
ëë #
position
ëë$ ,
,
ëë, -
VolumeComponent
ëë. =
targetComponent
ëë> M
,
ëëM N
int
ëëO R
id
ëëS U
)
ëëU V
{
íí 	
var
ìì 
menu
ìì 
=
ìì 
new
ìì 
GenericMenu
ìì &
(
ìì& '
)
ìì' (
;
ìì( )
if
ïï 
(
ïï 
id
ïï 
==
ïï 
$num
ïï 
)
ïï 
{
ññ 
menu
óó 
.
óó 
AddDisabledItem
óó $
(
óó$ %
EditorGUIUtility
óó% 5
.
óó5 6
TrTextContent
óó6 C
(
óóC D
$str
óóD M
)
óóM N
)
óóN O
;
óóO P
menu
òò 
.
òò 
AddDisabledItem
òò $
(
òò$ %
EditorGUIUtility
òò% 5
.
òò5 6
TrTextContent
òò6 C
(
òòC D
$str
òòD Q
)
òòQ R
)
òòR S
;
òòS T
}
ôô 
else
öö 
{
õõ 
menu
úú 
.
úú 
AddItem
úú 
(
úú 
EditorGUIUtility
úú -
.
úú- .
TrTextContent
úú. ;
(
úú; <
$str
úú< I
)
úúI J
,
úúJ K
false
úúL Q
,
úúQ R
(
úúS T
)
úúT U
=>
úúV X
MoveComponent
úúY f
(
úúf g
id
úúg i
,
úúi j
-
úúk l
id
úúl n
)
úún o
)
úúo p
;
úúp q
menu
ùù 
.
ùù 
AddItem
ùù 
(
ùù 
EditorGUIUtility
ùù -
.
ùù- .
TrTextContent
ùù. ;
(
ùù; <
$str
ùù< E
)
ùùE F
,
ùùF G
false
ùùH M
,
ùùM N
(
ùùO P
)
ùùP Q
=>
ùùR T
MoveComponent
ùùU b
(
ùùb c
id
ùùc e
,
ùùe f
-
ùùg h
$num
ùùh i
)
ùùi j
)
ùùj k
;
ùùk l
}
ûû 
if
†† 
(
†† 
id
†† 
==
†† 
	m_Editors
†† 
.
††  
Count
††  %
-
††& '
$num
††( )
)
††) *
{
°° 
menu
¢¢ 
.
¢¢ 
AddDisabledItem
¢¢ $
(
¢¢$ %
EditorGUIUtility
¢¢% 5
.
¢¢5 6
TrTextContent
¢¢6 C
(
¢¢C D
$str
¢¢D T
)
¢¢T U
)
¢¢U V
;
¢¢V W
menu
££ 
.
££ 
AddDisabledItem
££ $
(
££$ %
EditorGUIUtility
££% 5
.
££5 6
TrTextContent
££6 C
(
££C D
$str
££D O
)
££O P
)
££P Q
;
££Q R
}
§§ 
else
•• 
{
¶¶ 
menu
ßß 
.
ßß 
AddItem
ßß 
(
ßß 
EditorGUIUtility
ßß -
.
ßß- .
TrTextContent
ßß. ;
(
ßß; <
$str
ßß< L
)
ßßL M
,
ßßM N
false
ßßO T
,
ßßT U
(
ßßV W
)
ßßW X
=>
ßßY [
MoveComponent
ßß\ i
(
ßßi j
id
ßßj l
,
ßßl m
(
ßßn o
	m_Editors
ßßo x
.
ßßx y
Count
ßßy ~
-ßß Ä
$numßßÄ Å
)ßßÅ Ç
-ßßÉ Ñ
idßßÖ á
)ßßá à
)ßßà â
;ßßâ ä
menu
®® 
.
®® 
AddItem
®® 
(
®® 
EditorGUIUtility
®® -
.
®®- .
TrTextContent
®®. ;
(
®®; <
$str
®®< G
)
®®G H
,
®®H I
false
®®J O
,
®®O P
(
®®Q R
)
®®R S
=>
®®T V
MoveComponent
®®W d
(
®®d e
id
®®e g
,
®®g h
$num
®®i j
)
®®j k
)
®®k l
;
®®l m
}
©© 
menu
´´ 
.
´´ 
AddSeparator
´´ 
(
´´ 
string
´´ $
.
´´$ %
Empty
´´% *
)
´´* +
;
´´+ ,
menu
¨¨ 
.
¨¨ 
AddItem
¨¨ 
(
¨¨ 
EditorGUIUtility
¨¨ )
.
¨¨) *
TrTextContent
¨¨* 7
(
¨¨7 8
$str
¨¨8 F
)
¨¨F G
,
¨¨G H
false
¨¨I N
,
¨¨N O
(
¨¨P Q
)
¨¨Q R
=>
¨¨S U 
CollapseComponents
¨¨V h
(
¨¨h i
)
¨¨i j
)
¨¨j k
;
¨¨k l
menu
≠≠ 
.
≠≠ 
AddItem
≠≠ 
(
≠≠ 
EditorGUIUtility
≠≠ )
.
≠≠) *
TrTextContent
≠≠* 7
(
≠≠7 8
$str
≠≠8 D
)
≠≠D E
,
≠≠E F
false
≠≠G L
,
≠≠L M
(
≠≠N O
)
≠≠O P
=>
≠≠Q S
ExpandComponents
≠≠T d
(
≠≠d e
)
≠≠e f
)
≠≠f g
;
≠≠g h
menu
ÆÆ 
.
ÆÆ 
AddSeparator
ÆÆ 
(
ÆÆ 
string
ÆÆ $
.
ÆÆ$ %
Empty
ÆÆ% *
)
ÆÆ* +
;
ÆÆ+ ,
menu
ØØ 
.
ØØ 
AddItem
ØØ 
(
ØØ 
EditorGUIUtility
ØØ )
.
ØØ) *
TrTextContent
ØØ* 7
(
ØØ7 8
$str
ØØ8 ?
)
ØØ? @
,
ØØ@ A
false
ØØB G
,
ØØG H
(
ØØI J
)
ØØJ K
=>
ØØL N
ResetComponent
ØØO ]
(
ØØ] ^
targetComponent
ØØ^ m
.
ØØm n
GetType
ØØn u
(
ØØu v
)
ØØv w
,
ØØw x
id
ØØy {
)
ØØ{ |
)
ØØ| }
;
ØØ} ~
menu
∞∞ 
.
∞∞ 
AddItem
∞∞ 
(
∞∞ 
EditorGUIUtility
∞∞ )
.
∞∞) *
TrTextContent
∞∞* 7
(
∞∞7 8
$str
∞∞8 @
)
∞∞@ A
,
∞∞A B
false
∞∞C H
,
∞∞H I
(
∞∞J K
)
∞∞K L
=>
∞∞M O
RemoveComponent
∞∞P _
(
∞∞_ `
id
∞∞` b
)
∞∞b c
)
∞∞c d
;
∞∞d e
menu
±± 
.
±± 
AddSeparator
±± 
(
±± 
string
±± $
.
±±$ %
Empty
±±% *
)
±±* +
;
±±+ ,
menu
≤≤ 
.
≤≤ 
AddItem
≤≤ 
(
≤≤ 
EditorGUIUtility
≤≤ )
.
≤≤) *
TrTextContent
≤≤* 7
(
≤≤7 8
$str
≤≤8 G
)
≤≤G H
,
≤≤H I
false
≤≤J O
,
≤≤O P
(
≤≤Q R
)
≤≤R S
=>
≤≤T V
CopySettings
≤≤W c
(
≤≤c d
targetComponent
≤≤d s
)
≤≤s t
)
≤≤t u
;
≤≤u v
if
¥¥ 
(
¥¥ 
CanPaste
¥¥ 
(
¥¥ 
targetComponent
¥¥ (
)
¥¥( )
)
¥¥) *
menu
µµ 
.
µµ 
AddItem
µµ 
(
µµ 
EditorGUIUtility
µµ -
.
µµ- .
TrTextContent
µµ. ;
(
µµ; <
$str
µµ< L
)
µµL M
,
µµM N
false
µµO T
,
µµT U
(
µµV W
)
µµW X
=>
µµY [
PasteSettings
µµ\ i
(
µµi j
targetComponent
µµj y
)
µµy z
)
µµz {
;
µµ{ |
else
∂∂ 
menu
∑∑ 
.
∑∑ 
AddDisabledItem
∑∑ $
(
∑∑$ %
EditorGUIUtility
∑∑% 5
.
∑∑5 6
TrTextContent
∑∑6 C
(
∑∑C D
$str
∑∑D T
)
∑∑T U
)
∑∑U V
;
∑∑V W
menu
ππ 
.
ππ 
AddSeparator
ππ 
(
ππ 
string
ππ $
.
ππ$ %
Empty
ππ% *
)
ππ* +
;
ππ+ ,
menu
∫∫ 
.
∫∫ 
AddItem
∫∫ 
(
∫∫ 
EditorGUIUtility
∫∫ )
.
∫∫) *
TrTextContent
∫∫* 7
(
∫∫7 8
$str
∫∫8 D
)
∫∫D E
,
∫∫E F
false
∫∫G L
,
∫∫L M
(
∫∫N O
)
∫∫O P
=>
∫∫Q S
	m_Editors
∫∫T ]
[
∫∫] ^
id
∫∫^ `
]
∫∫` a
.
∫∫a b
SetAllOverridesTo
∫∫b s
(
∫∫s t
true
∫∫t x
)
∫∫x y
)
∫∫y z
;
∫∫z {
menu
ªª 
.
ªª 
AddItem
ªª 
(
ªª 
EditorGUIUtility
ªª )
.
ªª) *
TrTextContent
ªª* 7
(
ªª7 8
$str
ªª8 E
)
ªªE F
,
ªªF G
false
ªªH M
,
ªªM N
(
ªªO P
)
ªªP Q
=>
ªªR T
	m_Editors
ªªU ^
[
ªª^ _
id
ªª_ a
]
ªªa b
.
ªªb c
SetAllOverridesTo
ªªc t
(
ªªt u
false
ªªu z
)
ªªz {
)
ªª{ |
;
ªª| }
menu
ΩΩ 
.
ΩΩ 
DropDown
ΩΩ 
(
ΩΩ 
new
ΩΩ 
Rect
ΩΩ "
(
ΩΩ" #
position
ΩΩ# +
,
ΩΩ+ ,
Vector2
ΩΩ- 4
.
ΩΩ4 5
zero
ΩΩ5 9
)
ΩΩ9 :
)
ΩΩ: ;
;
ΩΩ; <
}
ææ 	
VolumeComponent
¿¿  
CreateNewComponent
¿¿ *
(
¿¿* +
Type
¿¿+ /
type
¿¿0 4
)
¿¿4 5
{
¡¡ 	
var
¬¬ 
effect
¬¬ 
=
¬¬ 
(
¬¬ 
VolumeComponent
¬¬ )
)
¬¬) *
ScriptableObject
¬¬* :
.
¬¬: ;
CreateInstance
¬¬; I
(
¬¬I J
type
¬¬J N
)
¬¬N O
;
¬¬O P
effect
√√ 
.
√√ 
	hideFlags
√√ 
=
√√ 
	HideFlags
√√ (
.
√√( )
HideInInspector
√√) 8
|
√√9 :
	HideFlags
√√; D
.
√√D E
HideInHierarchy
√√E T
;
√√T U
effect
ƒƒ 
.
ƒƒ 
name
ƒƒ 
=
ƒƒ 
type
ƒƒ 
.
ƒƒ 
Name
ƒƒ #
;
ƒƒ# $
return
≈≈ 
effect
≈≈ 
;
≈≈ 
}
∆∆ 	
internal
»» 
void
»» 
AddComponent
»» "
(
»»" #
Type
»»# '
type
»»( ,
)
»», -
{
…… 	 
m_SerializedObject
   
.
   
Update
   %
(
  % &
)
  & '
;
  ' (
var
ÃÃ 
	component
ÃÃ 
=
ÃÃ  
CreateNewComponent
ÃÃ .
(
ÃÃ. /
type
ÃÃ/ 3
)
ÃÃ3 4
;
ÃÃ4 5
Undo
ÕÕ 
.
ÕÕ '
RegisterCreatedObjectUndo
ÕÕ *
(
ÕÕ* +
	component
ÕÕ+ 4
,
ÕÕ4 5
$str
ÕÕ6 K
)
ÕÕK L
;
ÕÕL M
if
—— 
(
—— 
EditorUtility
—— 
.
—— 
IsPersistent
—— *
(
——* +
asset
——+ 0
)
——0 1
)
——1 2
AssetDatabase
““ 
.
““ 
AddObjectToAsset
““ .
(
““. /
	component
““/ 8
,
““8 9
asset
““: ?
)
““? @
;
““@ A"
m_ComponentsProperty
’’  
.
’’  !
	arraySize
’’! *
++
’’* ,
;
’’, -
var
÷÷ 
componentProp
÷÷ 
=
÷÷ "
m_ComponentsProperty
÷÷  4
.
÷÷4 5$
GetArrayElementAtIndex
÷÷5 K
(
÷÷K L"
m_ComponentsProperty
÷÷L `
.
÷÷` a
	arraySize
÷÷a j
-
÷÷k l
$num
÷÷m n
)
÷÷n o
;
÷÷o p
componentProp
◊◊ 
.
◊◊ "
objectReferenceValue
◊◊ .
=
◊◊/ 0
	component
◊◊1 :
;
◊◊: ;
if
⁄⁄ 
(
⁄⁄ 
EditorUtility
⁄⁄ 
.
⁄⁄ 
IsPersistent
⁄⁄ *
(
⁄⁄* +
asset
⁄⁄+ 0
)
⁄⁄0 1
)
⁄⁄1 2
{
€€ 
EditorUtility
‹‹ 
.
‹‹ 
SetDirty
‹‹ &
(
‹‹& '
asset
‹‹' ,
)
‹‹, -
;
‹‹- .
AssetDatabase
›› 
.
›› 

SaveAssets
›› (
(
››( )
)
››) *
;
››* +
}
ﬁﬁ 
CreateEditor
·· 
(
·· 
	component
·· "
,
··" #
componentProp
··$ 1
,
··1 2
	forceOpen
··3 <
:
··< =
true
··> B
)
··B C
;
··C D 
m_SerializedObject
„„ 
.
„„ %
ApplyModifiedProperties
„„ 6
(
„„6 7
)
„„7 8
;
„„8 9
}
‰‰ 	
internal
ÊÊ 
void
ÊÊ 
RemoveComponent
ÊÊ %
(
ÊÊ% &
int
ÊÊ& )
id
ÊÊ* ,
)
ÊÊ, -
{
ÁÁ 	
bool
ÈÈ 
nextFoldoutState
ÈÈ !
=
ÈÈ" #
false
ÈÈ$ )
;
ÈÈ) *
if
ÍÍ 
(
ÍÍ 
id
ÍÍ 
<
ÍÍ 
	m_Editors
ÍÍ 
.
ÍÍ 
Count
ÍÍ $
-
ÍÍ% &
$num
ÍÍ' (
)
ÍÍ( )
nextFoldoutState
ÎÎ  
=
ÎÎ! "
	m_Editors
ÎÎ# ,
[
ÎÎ, -
id
ÎÎ- /
+
ÎÎ0 1
$num
ÎÎ2 3
]
ÎÎ3 4
.
ÎÎ4 5
baseProperty
ÎÎ5 A
.
ÎÎA B

isExpanded
ÎÎB L
;
ÎÎL M
	m_Editors
ÓÓ 
[
ÓÓ 
id
ÓÓ 
]
ÓÓ 
.
ÓÓ 
	OnDisable
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
;
ÓÓ% &
	m_Editors
ÔÔ 
.
ÔÔ 
RemoveAt
ÔÔ 
(
ÔÔ 
id
ÔÔ !
)
ÔÔ! "
;
ÔÔ" # 
m_SerializedObject
ÒÒ 
.
ÒÒ 
Update
ÒÒ %
(
ÒÒ% &
)
ÒÒ& '
;
ÒÒ' (
var
ÛÛ 
property
ÛÛ 
=
ÛÛ "
m_ComponentsProperty
ÛÛ /
.
ÛÛ/ 0$
GetArrayElementAtIndex
ÛÛ0 F
(
ÛÛF G
id
ÛÛG I
)
ÛÛI J
;
ÛÛJ K
var
ÙÙ 
	component
ÙÙ 
=
ÙÙ 
property
ÙÙ $
.
ÙÙ$ %"
objectReferenceValue
ÙÙ% 9
;
ÙÙ9 :
property
˜˜ 
.
˜˜ "
objectReferenceValue
˜˜ )
=
˜˜* +
null
˜˜, 0
;
˜˜0 1"
m_ComponentsProperty
˙˙  
.
˙˙  !'
DeleteArrayElementAtIndex
˙˙! :
(
˙˙: ;
id
˙˙; =
)
˙˙= >
;
˙˙> ?
for
˝˝ 
(
˝˝ 
int
˝˝ 
i
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
i
˝˝ 
<
˝˝ 
	m_Editors
˝˝  )
.
˝˝) *
Count
˝˝* /
;
˝˝/ 0
i
˝˝1 2
++
˝˝2 4
)
˝˝4 5
	m_Editors
˛˛ 
[
˛˛ 
i
˛˛ 
]
˛˛ 
.
˛˛ 
baseProperty
˛˛ )
=
˛˛* +"
m_ComponentsProperty
˛˛, @
.
˛˛@ A$
GetArrayElementAtIndex
˛˛A W
(
˛˛W X
i
˛˛X Y
)
˛˛Y Z
.
˛˛Z [
Copy
˛˛[ _
(
˛˛_ `
)
˛˛` a
;
˛˛a b
if
ÅÅ 
(
ÅÅ 
id
ÅÅ 
<
ÅÅ 
	m_Editors
ÅÅ 
.
ÅÅ 
Count
ÅÅ $
)
ÅÅ$ %
	m_Editors
ÇÇ 
[
ÇÇ 
id
ÇÇ 
]
ÇÇ 
.
ÇÇ 
baseProperty
ÇÇ *
.
ÇÇ* +

isExpanded
ÇÇ+ 5
=
ÇÇ6 7
nextFoldoutState
ÇÇ8 H
;
ÇÇH I 
m_SerializedObject
ÑÑ 
.
ÑÑ %
ApplyModifiedProperties
ÑÑ 6
(
ÑÑ6 7
)
ÑÑ7 8
;
ÑÑ8 9
Undo
ââ 
.
ââ $
DestroyObjectImmediate
ââ '
(
ââ' (
	component
ââ( 1
)
ââ1 2
;
ââ2 3
EditorUtility
åå 
.
åå 
SetDirty
åå "
(
åå" #
asset
åå# (
)
åå( )
;
åå) *
AssetDatabase
çç 
.
çç 

SaveAssets
çç $
(
çç$ %
)
çç% &
;
çç& '
}
éé 	
internal
íí 
void
íí 
ResetComponent
íí $
(
íí$ %
Type
íí% )
type
íí* .
,
íí. /
int
íí0 3
id
íí4 6
)
íí6 7
{
ìì 	
	m_Editors
ïï 
[
ïï 
id
ïï 
]
ïï 
.
ïï 
	OnDisable
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
	m_Editors
ññ 
[
ññ 
id
ññ 
]
ññ 
=
ññ 
null
ññ  
;
ññ  ! 
m_SerializedObject
òò 
.
òò 
Update
òò %
(
òò% &
)
òò& '
;
òò' (
var
öö 
property
öö 
=
öö "
m_ComponentsProperty
öö /
.
öö/ 0$
GetArrayElementAtIndex
öö0 F
(
ööF G
id
ööG I
)
ööI J
;
ööJ K
var
õõ 
prevComponent
õõ 
=
õõ 
property
õõ  (
.
õõ( )"
objectReferenceValue
õõ) =
;
õõ= >
property
ûû 
.
ûû "
objectReferenceValue
ûû )
=
ûû* +
null
ûû, 0
;
ûû0 1
var
°° 
newComponent
°° 
=
°°  
CreateNewComponent
°° 1
(
°°1 2
type
°°2 6
)
°°6 7
;
°°7 8
Undo
¢¢ 
.
¢¢ '
RegisterCreatedObjectUndo
¢¢ *
(
¢¢* +
newComponent
¢¢+ 7
,
¢¢7 8
$str
¢¢9 Q
)
¢¢Q R
;
¢¢R S
AssetDatabase
•• 
.
•• 
AddObjectToAsset
•• *
(
••* +
newComponent
••+ 7
,
••7 8
asset
••9 >
)
••> ?
;
••? @
property
®® 
.
®® "
objectReferenceValue
®® )
=
®®* +
newComponent
®®, 8
;
®®8 9
CreateEditor
´´ 
(
´´ 
newComponent
´´ %
,
´´% &
property
´´' /
,
´´/ 0
id
´´1 3
)
´´3 4
;
´´4 5 
m_SerializedObject
≠≠ 
.
≠≠ %
ApplyModifiedProperties
≠≠ 6
(
≠≠6 7
)
≠≠7 8
;
≠≠8 9
Undo
±± 
.
±± $
DestroyObjectImmediate
±± '
(
±±' (
prevComponent
±±( 5
)
±±5 6
;
±±6 7
EditorUtility
¥¥ 
.
¥¥ 
SetDirty
¥¥ "
(
¥¥" #
asset
¥¥# (
)
¥¥( )
;
¥¥) *
AssetDatabase
µµ 
.
µµ 

SaveAssets
µµ $
(
µµ$ %
)
µµ% &
;
µµ& '
}
∂∂ 	
internal
∏∏ 
void
∏∏ 
MoveComponent
∏∏ #
(
∏∏# $
int
∏∏$ '
id
∏∏( *
,
∏∏* +
int
∏∏, /
offset
∏∏0 6
)
∏∏6 7
{
ππ 	 
m_SerializedObject
ªª 
.
ªª 
Update
ªª %
(
ªª% &
)
ªª& '
;
ªª' ("
m_ComponentsProperty
ºº  
.
ºº  !
MoveArrayElement
ºº! 1
(
ºº1 2
id
ºº2 4
,
ºº4 5
id
ºº6 8
+
ºº9 :
offset
ºº; A
)
ººA B
;
ººB C 
m_SerializedObject
ΩΩ 
.
ΩΩ %
ApplyModifiedProperties
ΩΩ 6
(
ΩΩ6 7
)
ΩΩ7 8
;
ΩΩ8 9
bool
¿¿ 
targetExpanded
¿¿ 
=
¿¿  !
	m_Editors
¿¿" +
[
¿¿+ ,
id
¿¿, .
+
¿¿/ 0
offset
¿¿1 7
]
¿¿7 8
.
¿¿8 9
baseProperty
¿¿9 E
.
¿¿E F

isExpanded
¿¿F P
;
¿¿P Q
bool
¡¡ 
sourceExpanded
¡¡ 
=
¡¡  !
	m_Editors
¡¡" +
[
¡¡+ ,
id
¡¡, .
]
¡¡. /
.
¡¡/ 0
baseProperty
¡¡0 <
.
¡¡< =

isExpanded
¡¡= G
;
¡¡G H
var
ƒƒ 
prev
ƒƒ 
=
ƒƒ 
	m_Editors
ƒƒ  
[
ƒƒ  !
id
ƒƒ! #
+
ƒƒ$ %
offset
ƒƒ& ,
]
ƒƒ, -
;
ƒƒ- .
	m_Editors
≈≈ 
[
≈≈ 
id
≈≈ 
+
≈≈ 
offset
≈≈ !
]
≈≈! "
=
≈≈# $
	m_Editors
≈≈% .
[
≈≈. /
id
≈≈/ 1
]
≈≈1 2
;
≈≈2 3
	m_Editors
∆∆ 
[
∆∆ 
id
∆∆ 
]
∆∆ 
=
∆∆ 
prev
∆∆  
;
∆∆  !
	m_Editors
…… 
[
…… 
id
…… 
+
…… 
offset
…… !
]
……! "
.
……" #
baseProperty
……# /
.
……/ 0

isExpanded
……0 :
=
……; <
targetExpanded
……= K
;
……K L
	m_Editors
   
[
   
id
   
]
   
.
   
baseProperty
   &
.
  & '

isExpanded
  ' 1
=
  2 3
sourceExpanded
  4 B
;
  B C
}
ÀÀ 	
internal
ÕÕ 
void
ÕÕ  
CollapseComponents
ÕÕ (
(
ÕÕ( )
)
ÕÕ) *
{
ŒŒ 	 
m_SerializedObject
–– 
.
–– 
Update
–– %
(
––% &
)
––& '
;
––' (
int
—— 

numEditors
—— 
=
—— 
	m_Editors
—— &
.
——& '
Count
——' ,
;
——, -
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““ 
<
““ 

numEditors
““  *
;
““* +
++
““, .
i
““. /
)
““/ 0
{
”” 
	m_Editors
‘‘ 
[
‘‘ 
i
‘‘ 
]
‘‘ 
.
‘‘ 
baseProperty
‘‘ )
.
‘‘) *

isExpanded
‘‘* 4
=
‘‘5 6
false
‘‘7 <
;
‘‘< =
}
’’  
m_SerializedObject
÷÷ 
.
÷÷ %
ApplyModifiedProperties
÷÷ 6
(
÷÷6 7
)
÷÷7 8
;
÷÷8 9
}
◊◊ 	
internal
ŸŸ 
void
ŸŸ 
ExpandComponents
ŸŸ &
(
ŸŸ& '
)
ŸŸ' (
{
⁄⁄ 	 
m_SerializedObject
‹‹ 
.
‹‹ 
Update
‹‹ %
(
‹‹% &
)
‹‹& '
;
‹‹' (
int
›› 

numEditors
›› 
=
›› 
	m_Editors
›› &
.
››& '
Count
››' ,
;
››, -
for
ﬁﬁ 
(
ﬁﬁ 
int
ﬁﬁ 
i
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
i
ﬁﬁ 
<
ﬁﬁ 

numEditors
ﬁﬁ  *
;
ﬁﬁ* +
++
ﬁﬁ, .
i
ﬁﬁ. /
)
ﬁﬁ/ 0
{
ﬂﬂ 
	m_Editors
‡‡ 
[
‡‡ 
i
‡‡ 
]
‡‡ 
.
‡‡ 
baseProperty
‡‡ )
.
‡‡) *

isExpanded
‡‡* 4
=
‡‡5 6
true
‡‡7 ;
;
‡‡; <
}
··  
m_SerializedObject
‚‚ 
.
‚‚ %
ApplyModifiedProperties
‚‚ 6
(
‚‚6 7
)
‚‚7 8
;
‚‚8 9
}
„„ 	
static
ÊÊ 
bool
ÊÊ 
CanPaste
ÊÊ 
(
ÊÊ 
VolumeComponent
ÊÊ ,
targetComponent
ÊÊ- <
)
ÊÊ< =
{
ÁÁ 	
if
ËË 
(
ËË 
string
ËË 
.
ËË  
IsNullOrWhiteSpace
ËË )
(
ËË) *
EditorGUIUtility
ËË* :
.
ËË: ;
systemCopyBuffer
ËË; K
)
ËËK L
)
ËËL M
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
string
ÎÎ 
	clipboard
ÎÎ 
=
ÎÎ 
EditorGUIUtility
ÎÎ /
.
ÎÎ/ 0
systemCopyBuffer
ÎÎ0 @
;
ÎÎ@ A
int
ÏÏ 
	separator
ÏÏ 
=
ÏÏ 
	clipboard
ÏÏ %
.
ÏÏ% &
IndexOf
ÏÏ& -
(
ÏÏ- .
$char
ÏÏ. 1
)
ÏÏ1 2
;
ÏÏ2 3
if
ÓÓ 
(
ÓÓ 
	separator
ÓÓ 
<
ÓÓ 
$num
ÓÓ 
)
ÓÓ 
return
ÔÔ 
false
ÔÔ 
;
ÔÔ 
return
ÒÒ 
targetComponent
ÒÒ "
.
ÒÒ" #
GetType
ÒÒ# *
(
ÒÒ* +
)
ÒÒ+ ,
.
ÒÒ, -#
AssemblyQualifiedName
ÒÒ- B
==
ÒÒC E
	clipboard
ÒÒF O
.
ÒÒO P
	Substring
ÒÒP Y
(
ÒÒY Z
$num
ÒÒZ [
,
ÒÒ[ \
	separator
ÒÒ] f
)
ÒÒf g
;
ÒÒg h
}
ÚÚ 	
static
ÙÙ 
void
ÙÙ 
CopySettings
ÙÙ  
(
ÙÙ  !
VolumeComponent
ÙÙ! 0
targetComponent
ÙÙ1 @
)
ÙÙ@ A
{
ıı 	
string
ˆˆ 
typeName
ˆˆ 
=
ˆˆ 
targetComponent
ˆˆ -
.
ˆˆ- .
GetType
ˆˆ. 5
(
ˆˆ5 6
)
ˆˆ6 7
.
ˆˆ7 8#
AssemblyQualifiedName
ˆˆ8 M
;
ˆˆM N
string
˜˜ 
typeData
˜˜ 
=
˜˜ 
JsonUtility
˜˜ )
.
˜˜) *
ToJson
˜˜* 0
(
˜˜0 1
targetComponent
˜˜1 @
)
˜˜@ A
;
˜˜A B
EditorGUIUtility
¯¯ 
.
¯¯ 
systemCopyBuffer
¯¯ -
=
¯¯. /
$"
¯¯0 2
{
¯¯2 3
typeName
¯¯3 ;
}
¯¯; <
|
¯¯< =
{
¯¯= >
typeData
¯¯> F
}
¯¯F G
"
¯¯G H
;
¯¯H I
}
˘˘ 	
static
˚˚ 
void
˚˚ 
PasteSettings
˚˚ !
(
˚˚! "
VolumeComponent
˚˚" 1
targetComponent
˚˚2 A
)
˚˚A B
{
¸¸ 	
string
˝˝ 
	clipboard
˝˝ 
=
˝˝ 
EditorGUIUtility
˝˝ /
.
˝˝/ 0
systemCopyBuffer
˝˝0 @
;
˝˝@ A
string
˛˛ 
typeData
˛˛ 
=
˛˛ 
	clipboard
˛˛ '
.
˛˛' (
	Substring
˛˛( 1
(
˛˛1 2
	clipboard
˛˛2 ;
.
˛˛; <
IndexOf
˛˛< C
(
˛˛C D
$char
˛˛D G
)
˛˛G H
+
˛˛I J
$num
˛˛K L
)
˛˛L M
;
˛˛M N
Undo
ˇˇ 
.
ˇˇ 
RecordObject
ˇˇ 
(
ˇˇ 
targetComponent
ˇˇ -
,
ˇˇ- .
$str
ˇˇ/ ?
)
ˇˇ? @
;
ˇˇ@ A
JsonUtility
ÄÄ 
.
ÄÄ 
FromJsonOverwrite
ÄÄ )
(
ÄÄ) *
typeData
ÄÄ* 2
,
ÄÄ2 3
targetComponent
ÄÄ4 C
)
ÄÄC D
;
ÄÄD E
}
ÅÅ 	
static
ÉÉ 
void
ÉÉ !
ReloadDocumentation
ÉÉ '
(
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ '
m_EditorDocumentationURLs
ÖÖ )
==
ÖÖ* ,
null
ÖÖ- 1
)
ÖÖ1 2'
m_EditorDocumentationURLs
ÜÜ )
=
ÜÜ* +
new
ÜÜ, /

Dictionary
ÜÜ0 :
<
ÜÜ: ;
Type
ÜÜ; ?
,
ÜÜ? @
string
ÜÜA G
>
ÜÜG H
(
ÜÜH I
)
ÜÜI J
;
ÜÜJ K'
m_EditorDocumentationURLs
áá %
.
áá% &
Clear
áá& +
(
áá+ ,
)
áá, -
;
áá- .
string
ââ -
GetVolumeComponentDocumentation
ââ 2
(
ââ2 3
Type
ââ3 7
	component
ââ8 A
)
ââA B
{
ää 
var
ãã 
attrs
ãã 
=
ãã 
	component
ãã %
.
ãã% &!
GetCustomAttributes
ãã& 9
(
ãã9 :
false
ãã: ?
)
ãã? @
;
ãã@ A
foreach
åå 
(
åå 
var
åå 
attr
åå !
in
åå" $
attrs
åå% *
)
åå* +
{
çç 
if
éé 
(
éé 
attr
éé 
is
éé 
HelpURLAttribute
éé  0
attrDocumentation
éé1 B
)
ééB C
return
èè 
attrDocumentation
èè 0
.
èè0 1
URL
èè1 4
;
èè4 5
}
êê 
return
ìì 
null
ìì 
;
ìì 
}
îî 
var
ññ 
componentTypes
ññ 
=
ññ  
	CoreUtils
ññ! *
.
ññ* +$
GetAllTypesDerivedFrom
ññ+ A
<
ññA B
VolumeComponent
ññB Q
>
ññQ R
(
ññR S
)
ññS T
;
ññT U
foreach
óó 
(
óó 
var
óó 
componentType
óó &
in
óó' )
componentTypes
óó* 8
)
óó8 9
{
òò 
if
ôô 
(
ôô 
!
ôô '
m_EditorDocumentationURLs
ôô .
.
ôô. /
ContainsKey
ôô/ :
(
ôô: ;
componentType
ôô; H
)
ôôH I
)
ôôI J'
m_EditorDocumentationURLs
öö -
.
öö- .
Add
öö. 1
(
öö1 2
componentType
öö2 ?
,
öö? @-
GetVolumeComponentDocumentation
ööA `
(
öö` a
componentType
ööa n
)
öön o
)
ööo p
;
ööp q
}
õõ 
}
úú 	
}
ùù 
}ûû Ìø
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\InspectorCurveEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

sealed 
class  
InspectorCurveEditor ,
{ 
enum 
EditMode 
{ 	
None 
, 
Moving 
, 
TangentEdit 
} 	
enum 
Tangent 
{ 	
In 
, 
Out 
} 	
public 
struct 
Settings 
{ 	
public## 
Rect## 
bounds## 
;## 
public(( 

RectOffset(( 
padding(( %
;((% &
public-- 
Color-- 
selectionColor-- '
;--' (
public22 
float22  
curvePickingDistance22 -
;22- .
public77 
float77 #
keyTimeClampingDistance77 0
;770 1
publicAA 
staticAA 
SettingsAA "
defaultSettingsAA# 2
=>AA3 5
newAA6 9
SettingsAA: B
{BB 
boundsCC 
=CC 
newCC 
RectCC !
(CC! "
$numCC" $
,CC$ %
$numCC& (
,CC( )
$numCC* ,
,CC, -
$numCC. 0
)CC0 1
,CC1 2
paddingDD 
=DD 
newDD 

RectOffsetDD (
(DD( )
$numDD) *
,DD* +
$numDD, -
,DD- .
$numDD/ 0
,DD0 1
$numDD2 3
)DD3 4
,DD4 5
selectionColorEE 
=EE  
ColorEE! &
.EE& '
yellowEE' -
,EE- . 
curvePickingDistanceFF $
=FF% &
$numFF' )
,FF) *#
keyTimeClampingDistanceGG '
=GG( )
$numGG* /
}HH 
;HH 
}II 	
publicNN 
structNN 

CurveStateNN  
{OO 	
publicSS 
boolSS 
visibleSS 
;SS  
publicXX 
boolXX 
editableXX  
;XX  !
public]] 
uint]] 
minPointCount]] %
;]]% &
publicbb 
floatbb  
zeroKeyConstantValuebb -
;bb- .
publicgg 
Colorgg 
colorgg 
;gg 
publicll 
floatll 
widthll 
;ll 
publicqq 
floatqq 
handleWidthqq $
;qq$ %
publicvv 
boolvv "
showNonEditableHandlesvv .
;vv. /
public{{ 
bool{{ &
onlyShowHandlesOnSelection{{ 2
;{{2 3
public
ÄÄ 
bool
ÄÄ 
loopInBounds
ÄÄ $
;
ÄÄ$ %
public
èè 
static
èè 

CurveState
èè $
defaultState
èè% 1
=>
èè2 4
new
èè5 8

CurveState
èè9 C
{
êê 
visible
ëë 
=
ëë 
true
ëë 
,
ëë 
editable
íí 
=
íí 
true
íí 
,
íí  
minPointCount
ìì 
=
ìì 
$num
ìì  !
,
ìì! ""
zeroKeyConstantValue
îî $
=
îî% &
$num
îî' )
,
îî) *
color
ïï 
=
ïï 
Color
ïï 
.
ïï 
white
ïï #
,
ïï# $
width
ññ 
=
ññ 
$num
ññ 
,
ññ 
handleWidth
óó 
=
óó 
$num
óó  
,
óó  !$
showNonEditableHandles
òò &
=
òò' (
true
òò) -
,
òò- .(
onlyShowHandlesOnSelection
ôô *
=
ôô+ ,
false
ôô- 2
,
ôô2 3
loopInBounds
öö 
=
öö 
false
öö $
}
õõ 
;
õõ 
}
úú 	
public
°° 
struct
°° 
	Selection
°° 
{
¢¢ 	
public
¶¶  
SerializedProperty
¶¶ %
curve
¶¶& +
;
¶¶+ ,
public
´´ 
int
´´ 
keyframeIndex
´´ $
;
´´$ %
public
∞∞ 
Keyframe
∞∞ 
?
∞∞ 
keyframe
∞∞ %
;
∞∞% &
public
∏∏ 
	Selection
∏∏ 
(
∏∏  
SerializedProperty
∏∏ /
curve
∏∏0 5
,
∏∏5 6
int
∏∏7 :
keyframeIndex
∏∏; H
,
∏∏H I
Keyframe
∏∏J R
?
∏∏R S
keyframe
∏∏T \
)
∏∏\ ]
{
ππ 
this
∫∫ 
.
∫∫ 
curve
∫∫ 
=
∫∫ 
curve
∫∫ "
;
∫∫" #
this
ªª 
.
ªª 
keyframeIndex
ªª "
=
ªª# $
keyframeIndex
ªª% 2
;
ªª2 3
this
ºº 
.
ºº 
keyframe
ºº 
=
ºº 
keyframe
ºº  (
;
ºº( )
}
ΩΩ 
}
ææ 	
internal
¿¿ 
struct
¿¿ 

MenuAction
¿¿ "
{
¡¡ 	
internal
¬¬  
SerializedProperty
¬¬ '
curve
¬¬( -
;
¬¬- .
internal
√√ 
int
√√ 
index
√√ 
;
√√ 
internal
ƒƒ 
Vector3
ƒƒ 
position
ƒƒ %
;
ƒƒ% &
internal
∆∆ 

MenuAction
∆∆ 
(
∆∆   
SerializedProperty
∆∆  2
curve
∆∆3 8
)
∆∆8 9
{
«« 
this
»» 
.
»» 
curve
»» 
=
»» 
curve
»» "
;
»»" #
this
…… 
.
…… 
index
…… 
=
…… 
-
…… 
$num
…… 
;
……  
this
   
.
   
position
   
=
   
Vector3
    '
.
  ' (
zero
  ( ,
;
  , -
}
ÀÀ 
internal
ÕÕ 

MenuAction
ÕÕ 
(
ÕÕ   
SerializedProperty
ÕÕ  2
curve
ÕÕ3 8
,
ÕÕ8 9
int
ÕÕ: =
index
ÕÕ> C
)
ÕÕC D
{
ŒŒ 
this
œœ 
.
œœ 
curve
œœ 
=
œœ 
curve
œœ "
;
œœ" #
this
–– 
.
–– 
index
–– 
=
–– 
index
–– "
;
––" #
this
—— 
.
—— 
position
—— 
=
—— 
Vector3
——  '
.
——' (
zero
——( ,
;
——, -
}
““ 
internal
‘‘ 

MenuAction
‘‘ 
(
‘‘   
SerializedProperty
‘‘  2
curve
‘‘3 8
,
‘‘8 9
Vector3
‘‘: A
position
‘‘B J
)
‘‘J K
{
’’ 
this
÷÷ 
.
÷÷ 
curve
÷÷ 
=
÷÷ 
curve
÷÷ "
;
÷÷" #
this
◊◊ 
.
◊◊ 
index
◊◊ 
=
◊◊ 
-
◊◊ 
$num
◊◊ 
;
◊◊  
this
ÿÿ 
.
ÿÿ 
position
ÿÿ 
=
ÿÿ 
position
ÿÿ  (
;
ÿÿ( )
}
ŸŸ 
}
⁄⁄ 	
public
ﬂﬂ 
readonly
ﬂﬂ 
Settings
ﬂﬂ  
settings
ﬂﬂ! )
;
ﬂﬂ) *
readonly
·· 

Dictionary
·· 
<
··  
SerializedProperty
·· .
,
··. /

CurveState
··0 :
>
··: ;
m_Curves
··< D
;
··D E
Rect
‚‚ 
m_CurveArea
‚‚ 
;
‚‚  
SerializedProperty
‰‰ 
m_SelectedCurve
‰‰ *
;
‰‰* +
int
ÂÂ %
m_SelectedKeyframeIndex
ÂÂ #
=
ÂÂ$ %
-
ÂÂ& '
$num
ÂÂ' (
;
ÂÂ( )
EditMode
ÁÁ 

m_EditMode
ÁÁ 
=
ÁÁ 
EditMode
ÁÁ &
.
ÁÁ& '
None
ÁÁ' +
;
ÁÁ+ ,
Tangent
ËË 
m_TangentEditMode
ËË !
;
ËË! "
bool
ÍÍ 
m_Dirty
ÍÍ 
;
ÍÍ 
public
 "
InspectorCurveEditor
 #
(
# $
)
$ %
:
ÒÒ 
this
ÒÒ 
(
ÒÒ 
Settings
ÒÒ 
.
ÒÒ 
defaultSettings
ÒÒ +
)
ÒÒ+ ,
{
ÒÒ- .
}
ÒÒ/ 0
public
˜˜ "
InspectorCurveEditor
˜˜ #
(
˜˜# $
Settings
˜˜$ ,
settings
˜˜- 5
)
˜˜5 6
{
¯¯ 	
this
˘˘ 
.
˘˘ 
settings
˘˘ 
=
˘˘ 
settings
˘˘ $
;
˘˘$ %
m_Curves
˙˙ 
=
˙˙ 
new
˙˙ 

Dictionary
˙˙ %
<
˙˙% & 
SerializedProperty
˙˙& 8
,
˙˙8 9

CurveState
˙˙: D
>
˙˙D E
(
˙˙E F
)
˙˙F G
;
˙˙G H
}
˚˚ 	
public
ÅÅ 
void
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
params
ÅÅ  
SerializedProperty
ÅÅ 1
[
ÅÅ1 2
]
ÅÅ2 3
curves
ÅÅ4 :
)
ÅÅ: ;
{
ÇÇ 	
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
curve
ÉÉ 
in
ÉÉ !
curves
ÉÉ" (
)
ÉÉ( )
Add
ÑÑ 
(
ÑÑ 
curve
ÑÑ 
,
ÑÑ 

CurveState
ÑÑ %
.
ÑÑ% &
defaultState
ÑÑ& 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÖÖ 	
public
ãã 
void
ãã 
Add
ãã 
(
ãã  
SerializedProperty
ãã *
curve
ãã+ 0
)
ãã0 1
{
åå 	
Add
çç 
(
çç 
curve
çç 
,
çç 

CurveState
çç !
.
çç! "
defaultState
çç" .
)
çç. /
;
çç/ 0
}
éé 	
public
ïï 
void
ïï 
Add
ïï 
(
ïï  
SerializedProperty
ïï *
curve
ïï+ 0
,
ïï0 1

CurveState
ïï2 <
state
ïï= B
)
ïïB C
{
ññ 	
var
òò 
	animCurve
òò 
=
òò 
curve
òò !
.
òò! "!
animationCurveValue
òò" 5
;
òò5 6
if
ôô 
(
ôô 
	animCurve
ôô 
==
ôô 
null
ôô !
)
ôô! "
throw
öö 
new
öö 
ArgumentException
öö +
(
öö+ ,
$str
öö, 3
)
öö3 4
;
öö4 5
if
úú 
(
úú 
m_Curves
úú 
.
úú 
ContainsKey
úú $
(
úú$ %
curve
úú% *
)
úú* +
)
úú+ ,
Debug
ùù 
.
ùù 

LogWarning
ùù  
(
ùù  !
$str
ùù! M
)
ùùM N
;
ùùN O
m_Curves
üü 
.
üü 
Add
üü 
(
üü 
curve
üü 
,
üü 
state
üü  %
)
üü% &
;
üü& '
}
†† 	
public
¶¶ 
void
¶¶ 
Remove
¶¶ 
(
¶¶  
SerializedProperty
¶¶ -
curve
¶¶. 3
)
¶¶3 4
{
ßß 	
m_Curves
®® 
.
®® 
Remove
®® 
(
®® 
curve
®® !
)
®®! "
;
®®" #
}
©© 	
public
ÆÆ 
void
ÆÆ 
	RemoveAll
ÆÆ 
(
ÆÆ 
)
ÆÆ 
{
ØØ 	
m_Curves
∞∞ 
.
∞∞ 
Clear
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
}
±± 	
public
∏∏ 

CurveState
∏∏ 
GetCurveState
∏∏ '
(
∏∏' ( 
SerializedProperty
∏∏( :
curve
∏∏; @
)
∏∏@ A
{
ππ 	
if
∫∫ 
(
∫∫ 
!
∫∫ 
m_Curves
∫∫ 
.
∫∫ 
TryGetValue
∫∫ %
(
∫∫% &
curve
∫∫& +
,
∫∫+ ,
out
∫∫- 0
var
∫∫1 4
state
∫∫5 :
)
∫∫: ;
)
∫∫; <
throw
ªª 
new
ªª "
KeyNotFoundException
ªª .
(
ªª. /
$str
ªª/ 6
)
ªª6 7
;
ªª7 8
return
ΩΩ 
state
ΩΩ 
;
ΩΩ 
}
ææ 	
public
≈≈ 
void
≈≈ 
SetCurveState
≈≈ !
(
≈≈! " 
SerializedProperty
≈≈" 4
curve
≈≈5 :
,
≈≈: ;

CurveState
≈≈< F
state
≈≈G L
)
≈≈L M
{
∆∆ 	
if
«« 
(
«« 
!
«« 
m_Curves
«« 
.
«« 
ContainsKey
«« %
(
««% &
curve
««& +
)
««+ ,
)
««, -
throw
»» 
new
»» "
KeyNotFoundException
»» .
(
»». /
$str
»»/ 6
)
»»6 7
;
»»7 8
m_Curves
   
[
   
curve
   
]
   
=
   
state
   #
;
  # $
}
ÀÀ 	
public
—— 
	Selection
—— 
GetSelection
—— %
(
——% &
)
——& '
{
““ 	
Keyframe
”” 
?
”” 
key
”” 
=
”” 
null
””  
;
””  !
if
‘‘ 
(
‘‘ %
m_SelectedKeyframeIndex
‘‘ '
>
‘‘( )
-
‘‘* +
$num
‘‘+ ,
)
‘‘, -
{
’’ 
var
÷÷ 
curve
÷÷ 
=
÷÷ 
m_SelectedCurve
÷÷ +
.
÷÷+ ,!
animationCurveValue
÷÷, ?
;
÷÷? @
if
ÿÿ 
(
ÿÿ %
m_SelectedKeyframeIndex
ÿÿ +
>=
ÿÿ, .
curve
ÿÿ/ 4
.
ÿÿ4 5
length
ÿÿ5 ;
)
ÿÿ; <%
m_SelectedKeyframeIndex
ŸŸ +
=
ŸŸ, -
-
ŸŸ. /
$num
ŸŸ/ 0
;
ŸŸ0 1
else
⁄⁄ 
key
€€ 
=
€€ 
curve
€€ 
[
€€  %
m_SelectedKeyframeIndex
€€  7
]
€€7 8
;
€€8 9
}
‹‹ 
return
ﬁﬁ 
new
ﬁﬁ 
	Selection
ﬁﬁ  
(
ﬁﬁ  !
m_SelectedCurve
ﬁﬁ! 0
,
ﬁﬁ0 1%
m_SelectedKeyframeIndex
ﬁﬁ2 I
,
ﬁﬁI J
key
ﬁﬁK N
)
ﬁﬁN O
;
ﬁﬁO P
}
ﬂﬂ 	
public
ÁÁ 
void
ÁÁ 
SetKeyframe
ÁÁ 
(
ÁÁ   
SerializedProperty
ÁÁ  2
curve
ÁÁ3 8
,
ÁÁ8 9
int
ÁÁ: =
keyframeIndex
ÁÁ> K
,
ÁÁK L
Keyframe
ÁÁM U
keyframe
ÁÁV ^
)
ÁÁ^ _
{
ËË 	
var
ÈÈ 
	animCurve
ÈÈ 
=
ÈÈ 
curve
ÈÈ !
.
ÈÈ! "!
animationCurveValue
ÈÈ" 5
;
ÈÈ5 6
SetKeyframe
ÍÍ 
(
ÍÍ 
	animCurve
ÍÍ !
,
ÍÍ! "
keyframeIndex
ÍÍ# 0
,
ÍÍ0 1
keyframe
ÍÍ2 :
)
ÍÍ: ;
;
ÍÍ; <
	SaveCurve
ÎÎ 
(
ÎÎ 
curve
ÎÎ 
,
ÎÎ 
	animCurve
ÎÎ &
)
ÎÎ& '
;
ÎÎ' (
}
ÏÏ 	
public
ÛÛ 
bool
ÛÛ 
OnGUI
ÛÛ 
(
ÛÛ 
Rect
ÛÛ 
rect
ÛÛ #
)
ÛÛ# $
{
ÙÙ 	
if
ıı 
(
ıı 
Event
ıı 
.
ıı 
current
ıı 
.
ıı 
type
ıı "
==
ıı# %
	EventType
ıı& /
.
ıı/ 0
Repaint
ıı0 7
)
ıı7 8
m_Dirty
ˆˆ 
=
ˆˆ 
false
ˆˆ 
;
ˆˆ  
GUI
¯¯ 
.
¯¯ 
	BeginClip
¯¯ 
(
¯¯ 
rect
¯¯ 
)
¯¯ 
;
¯¯  
{
˘˘ 
var
˙˙ 
area
˙˙ 
=
˙˙ 
new
˙˙ 
Rect
˙˙ #
(
˙˙# $
Vector2
˙˙$ +
.
˙˙+ ,
zero
˙˙, 0
,
˙˙0 1
rect
˙˙2 6
.
˙˙6 7
size
˙˙7 ;
)
˙˙; <
;
˙˙< =
m_CurveArea
˚˚ 
=
˚˚ 
settings
˚˚ &
.
˚˚& '
padding
˚˚' .
.
˚˚. /
Remove
˚˚/ 5
(
˚˚5 6
area
˚˚6 :
)
˚˚: ;
;
˚˚; <
foreach
˝˝ 
(
˝˝ 
var
˝˝ 
curve
˝˝ "
in
˝˝# %
m_Curves
˝˝& .
)
˝˝. /

OnCurveGUI
˛˛ 
(
˛˛ 
area
˛˛ #
,
˛˛# $
curve
˛˛% *
.
˛˛* +
Key
˛˛+ .
,
˛˛. /
curve
˛˛0 5
.
˛˛5 6
Value
˛˛6 ;
)
˛˛; <
;
˛˛< =
OnGeneralUI
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
GUI
ÇÇ 
.
ÇÇ 
EndClip
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
return
ÑÑ 
m_Dirty
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
void
áá 

OnCurveGUI
áá 
(
áá 
Rect
áá 
rect
áá !
,
áá! " 
SerializedProperty
áá# 5
curve
áá6 ;
,
áá; <

CurveState
áá= G
state
ááH M
)
ááM N
{
àà 	
if
ää 
(
ää 
!
ää 
state
ää 
.
ää 
visible
ää 
)
ää 
return
ãã 
;
ãã 
var
çç 
	animCurve
çç 
=
çç 
curve
çç !
.
çç! "!
animationCurveValue
çç" 5
;
çç5 6
var
éé 
keys
éé 
=
éé 
	animCurve
éé  
.
éé  !
keys
éé! %
;
éé% &
var
èè 
length
èè 
=
èè 
keys
èè 
.
èè 
Length
èè $
;
èè$ %
var
ìì 
color
ìì 
=
ìì 
state
ìì 
.
ìì 
color
ìì #
;
ìì# $
if
îî 
(
îî 
!
îî 
state
îî 
.
îî 
editable
îî 
||
îî  "
!
îî# $
GUI
îî$ '
.
îî' (
enabled
îî( /
)
îî/ 0
color
ïï 
.
ïï 
a
ïï 
*=
ïï 
$num
ïï 
;
ïï  
Handles
óó 
.
óó 
color
óó 
=
óó 
color
óó !
;
óó! "
var
òò 
bounds
òò 
=
òò 
settings
òò !
.
òò! "
bounds
òò" (
;
òò( )
if
öö 
(
öö 
length
öö 
==
öö 
$num
öö 
)
öö 
{
õõ 
var
úú 
p1
úú 
=
úú 
CurveToCanvas
úú &
(
úú& '
new
úú' *
Vector3
úú+ 2
(
úú2 3
bounds
úú3 9
.
úú9 :
xMin
úú: >
,
úú> ?
state
úú@ E
.
úúE F"
zeroKeyConstantValue
úúF Z
)
úúZ [
)
úú[ \
;
úú\ ]
var
ùù 
p2
ùù 
=
ùù 
CurveToCanvas
ùù &
(
ùù& '
new
ùù' *
Vector3
ùù+ 2
(
ùù2 3
bounds
ùù3 9
.
ùù9 :
xMax
ùù: >
,
ùù> ?
state
ùù@ E
.
ùùE F"
zeroKeyConstantValue
ùùF Z
)
ùùZ [
)
ùù[ \
;
ùù\ ]
Handles
ûû 
.
ûû 
DrawAAPolyLine
ûû &
(
ûû& '
state
ûû' ,
.
ûû, -
width
ûû- 2
,
ûû2 3
p1
ûû4 6
,
ûû6 7
p2
ûû8 :
)
ûû: ;
;
ûû; <
}
üü 
else
†† 
if
†† 
(
†† 
length
†† 
==
†† 
$num
††  
)
††  !
{
°° 
var
¢¢ 
p1
¢¢ 
=
¢¢ 
CurveToCanvas
¢¢ &
(
¢¢& '
new
¢¢' *
Vector3
¢¢+ 2
(
¢¢2 3
bounds
¢¢3 9
.
¢¢9 :
xMin
¢¢: >
,
¢¢> ?
keys
¢¢@ D
[
¢¢D E
$num
¢¢E F
]
¢¢F G
.
¢¢G H
value
¢¢H M
)
¢¢M N
)
¢¢N O
;
¢¢O P
var
££ 
p2
££ 
=
££ 
CurveToCanvas
££ &
(
££& '
new
££' *
Vector3
££+ 2
(
££2 3
bounds
££3 9
.
££9 :
xMax
££: >
,
££> ?
keys
££@ D
[
££D E
$num
££E F
]
££F G
.
££G H
value
££H M
)
££M N
)
££N O
;
££O P
Handles
§§ 
.
§§ 
DrawAAPolyLine
§§ &
(
§§& '
state
§§' ,
.
§§, -
width
§§- 2
,
§§2 3
p1
§§4 6
,
§§6 7
p2
§§8 :
)
§§: ;
;
§§; <
}
•• 
else
¶¶ 
{
ßß 
var
®® 
prevKey
®® 
=
®® 
keys
®® "
[
®®" #
$num
®®# $
]
®®$ %
;
®®% &
for
©© 
(
©© 
int
©© 
k
©© 
=
©© 
$num
©© 
;
©© 
k
©©  !
<
©©" #
length
©©$ *
;
©©* +
k
©©, -
++
©©- /
)
©©/ 0
{
™™ 
var
´´ 
key
´´ 
=
´´ 
keys
´´ "
[
´´" #
k
´´# $
]
´´$ %
;
´´% &
var
¨¨ 
pts
¨¨ 
=
¨¨ 
BezierSegment
¨¨ +
(
¨¨+ ,
prevKey
¨¨, 3
,
¨¨3 4
key
¨¨5 8
)
¨¨8 9
;
¨¨9 :
if
ÆÆ 
(
ÆÆ 
float
ÆÆ 
.
ÆÆ 

IsInfinity
ÆÆ (
(
ÆÆ( )
prevKey
ÆÆ) 0
.
ÆÆ0 1

outTangent
ÆÆ1 ;
)
ÆÆ; <
||
ÆÆ= ?
float
ÆÆ@ E
.
ÆÆE F

IsInfinity
ÆÆF P
(
ÆÆP Q
key
ÆÆQ T
.
ÆÆT U
	inTangent
ÆÆU ^
)
ÆÆ^ _
)
ÆÆ_ `
{
ØØ 
var
∞∞ 
s
∞∞ 
=
∞∞ 
HardSegment
∞∞  +
(
∞∞+ ,
prevKey
∞∞, 3
,
∞∞3 4
key
∞∞5 8
)
∞∞8 9
;
∞∞9 :
Handles
±± 
.
±±  
DrawAAPolyLine
±±  .
(
±±. /
state
±±/ 4
.
±±4 5
width
±±5 :
,
±±: ;
s
±±< =
[
±±= >
$num
±±> ?
]
±±? @
,
±±@ A
s
±±B C
[
±±C D
$num
±±D E
]
±±E F
,
±±F G
s
±±H I
[
±±I J
$num
±±J K
]
±±K L
)
±±L M
;
±±M N
}
≤≤ 
else
≥≥ 
Handles
≥≥  
.
≥≥  !

DrawBezier
≥≥! +
(
≥≥+ ,
pts
≥≥, /
[
≥≥/ 0
$num
≥≥0 1
]
≥≥1 2
,
≥≥2 3
pts
≥≥4 7
[
≥≥7 8
$num
≥≥8 9
]
≥≥9 :
,
≥≥: ;
pts
≥≥< ?
[
≥≥? @
$num
≥≥@ A
]
≥≥A B
,
≥≥B C
pts
≥≥D G
[
≥≥G H
$num
≥≥H I
]
≥≥I J
,
≥≥J K
color
≥≥L Q
,
≥≥Q R
null
≥≥S W
,
≥≥W X
state
≥≥Y ^
.
≥≥^ _
width
≥≥_ d
)
≥≥d e
;
≥≥e f
prevKey
µµ 
=
µµ 
key
µµ !
;
µµ! "
}
∂∂ 
if
ππ 
(
ππ 
keys
ππ 
[
ππ 
$num
ππ 
]
ππ 
.
ππ 
time
ππ  
>
ππ! "
bounds
ππ# )
.
ππ) *
xMin
ππ* .
)
ππ. /
{
∫∫ 
if
ªª 
(
ªª 
state
ªª 
.
ªª 
loopInBounds
ªª *
)
ªª* +
{
ºº 
var
ΩΩ 
p1
ΩΩ 
=
ΩΩ  
keys
ΩΩ! %
[
ΩΩ% &
length
ΩΩ& ,
-
ΩΩ- .
$num
ΩΩ/ 0
]
ΩΩ0 1
;
ΩΩ1 2
p1
ææ 
.
ææ 
time
ææ 
-=
ææ  "
settings
ææ# +
.
ææ+ ,
bounds
ææ, 2
.
ææ2 3
width
ææ3 8
;
ææ8 9
var
øø 
p2
øø 
=
øø  
keys
øø! %
[
øø% &
$num
øø& '
]
øø' (
;
øø( )
var
¿¿ 
pts
¿¿ 
=
¿¿  !
BezierSegment
¿¿" /
(
¿¿/ 0
p1
¿¿0 2
,
¿¿2 3
p2
¿¿4 6
)
¿¿6 7
;
¿¿7 8
if
¬¬ 
(
¬¬ 
float
¬¬ !
.
¬¬! "

IsInfinity
¬¬" ,
(
¬¬, -
p1
¬¬- /
.
¬¬/ 0

outTangent
¬¬0 :
)
¬¬: ;
||
¬¬< >
float
¬¬? D
.
¬¬D E

IsInfinity
¬¬E O
(
¬¬O P
p2
¬¬P R
.
¬¬R S
	inTangent
¬¬S \
)
¬¬\ ]
)
¬¬] ^
{
√√ 
var
ƒƒ 
s
ƒƒ  !
=
ƒƒ" #
HardSegment
ƒƒ$ /
(
ƒƒ/ 0
p1
ƒƒ0 2
,
ƒƒ2 3
p2
ƒƒ4 6
)
ƒƒ6 7
;
ƒƒ7 8
Handles
≈≈ #
.
≈≈# $
DrawAAPolyLine
≈≈$ 2
(
≈≈2 3
state
≈≈3 8
.
≈≈8 9
width
≈≈9 >
,
≈≈> ?
s
≈≈@ A
[
≈≈A B
$num
≈≈B C
]
≈≈C D
,
≈≈D E
s
≈≈F G
[
≈≈G H
$num
≈≈H I
]
≈≈I J
,
≈≈J K
s
≈≈L M
[
≈≈M N
$num
≈≈N O
]
≈≈O P
)
≈≈P Q
;
≈≈Q R
}
∆∆ 
else
«« 
Handles
«« $
.
««$ %

DrawBezier
««% /
(
««/ 0
pts
««0 3
[
««3 4
$num
««4 5
]
««5 6
,
««6 7
pts
««8 ;
[
««; <
$num
««< =
]
««= >
,
««> ?
pts
««@ C
[
««C D
$num
««D E
]
««E F
,
««F G
pts
««H K
[
««K L
$num
««L M
]
««M N
,
««N O
color
««P U
,
««U V
null
««W [
,
««[ \
state
««] b
.
««b c
width
««c h
)
««h i
;
««i j
}
»» 
else
…… 
{
   
var
ÀÀ 
p1
ÀÀ 
=
ÀÀ  
CurveToCanvas
ÀÀ! .
(
ÀÀ. /
new
ÀÀ/ 2
Vector3
ÀÀ3 :
(
ÀÀ: ;
bounds
ÀÀ; A
.
ÀÀA B
xMin
ÀÀB F
,
ÀÀF G
keys
ÀÀH L
[
ÀÀL M
$num
ÀÀM N
]
ÀÀN O
.
ÀÀO P
value
ÀÀP U
)
ÀÀU V
)
ÀÀV W
;
ÀÀW X
var
ÃÃ 
p2
ÃÃ 
=
ÃÃ  
CurveToCanvas
ÃÃ! .
(
ÃÃ. /
keys
ÃÃ/ 3
[
ÃÃ3 4
$num
ÃÃ4 5
]
ÃÃ5 6
)
ÃÃ6 7
;
ÃÃ7 8
Handles
ÕÕ 
.
ÕÕ  
DrawAAPolyLine
ÕÕ  .
(
ÕÕ. /
state
ÕÕ/ 4
.
ÕÕ4 5
width
ÕÕ5 :
,
ÕÕ: ;
p1
ÕÕ< >
,
ÕÕ> ?
p2
ÕÕ@ B
)
ÕÕB C
;
ÕÕC D
}
ŒŒ 
}
œœ 
if
—— 
(
—— 
keys
—— 
[
—— 
length
—— 
-
——  !
$num
——" #
]
——# $
.
——$ %
time
——% )
<
——* +
bounds
——, 2
.
——2 3
xMax
——3 7
)
——7 8
{
““ 
if
”” 
(
”” 
state
”” 
.
”” 
loopInBounds
”” *
)
””* +
{
‘‘ 
var
’’ 
p1
’’ 
=
’’  
keys
’’! %
[
’’% &
length
’’& ,
-
’’- .
$num
’’/ 0
]
’’0 1
;
’’1 2
var
÷÷ 
p2
÷÷ 
=
÷÷  
keys
÷÷! %
[
÷÷% &
$num
÷÷& '
]
÷÷' (
;
÷÷( )
p2
◊◊ 
.
◊◊ 
time
◊◊ 
+=
◊◊  "
settings
◊◊# +
.
◊◊+ ,
bounds
◊◊, 2
.
◊◊2 3
width
◊◊3 8
;
◊◊8 9
var
ÿÿ 
pts
ÿÿ 
=
ÿÿ  !
BezierSegment
ÿÿ" /
(
ÿÿ/ 0
p1
ÿÿ0 2
,
ÿÿ2 3
p2
ÿÿ4 6
)
ÿÿ6 7
;
ÿÿ7 8
if
⁄⁄ 
(
⁄⁄ 
float
⁄⁄ !
.
⁄⁄! "

IsInfinity
⁄⁄" ,
(
⁄⁄, -
p1
⁄⁄- /
.
⁄⁄/ 0

outTangent
⁄⁄0 :
)
⁄⁄: ;
||
⁄⁄< >
float
⁄⁄? D
.
⁄⁄D E

IsInfinity
⁄⁄E O
(
⁄⁄O P
p2
⁄⁄P R
.
⁄⁄R S
	inTangent
⁄⁄S \
)
⁄⁄\ ]
)
⁄⁄] ^
{
€€ 
var
‹‹ 
s
‹‹  !
=
‹‹" #
HardSegment
‹‹$ /
(
‹‹/ 0
p1
‹‹0 2
,
‹‹2 3
p2
‹‹4 6
)
‹‹6 7
;
‹‹7 8
Handles
›› #
.
››# $
DrawAAPolyLine
››$ 2
(
››2 3
state
››3 8
.
››8 9
width
››9 >
,
››> ?
s
››@ A
[
››A B
$num
››B C
]
››C D
,
››D E
s
››F G
[
››G H
$num
››H I
]
››I J
,
››J K
s
››L M
[
››M N
$num
››N O
]
››O P
)
››P Q
;
››Q R
}
ﬁﬁ 
else
ﬂﬂ 
Handles
ﬂﬂ $
.
ﬂﬂ$ %

DrawBezier
ﬂﬂ% /
(
ﬂﬂ/ 0
pts
ﬂﬂ0 3
[
ﬂﬂ3 4
$num
ﬂﬂ4 5
]
ﬂﬂ5 6
,
ﬂﬂ6 7
pts
ﬂﬂ8 ;
[
ﬂﬂ; <
$num
ﬂﬂ< =
]
ﬂﬂ= >
,
ﬂﬂ> ?
pts
ﬂﬂ@ C
[
ﬂﬂC D
$num
ﬂﬂD E
]
ﬂﬂE F
,
ﬂﬂF G
pts
ﬂﬂH K
[
ﬂﬂK L
$num
ﬂﬂL M
]
ﬂﬂM N
,
ﬂﬂN O
color
ﬂﬂP U
,
ﬂﬂU V
null
ﬂﬂW [
,
ﬂﬂ[ \
state
ﬂﬂ] b
.
ﬂﬂb c
width
ﬂﬂc h
)
ﬂﬂh i
;
ﬂﬂi j
}
‡‡ 
else
·· 
{
‚‚ 
var
„„ 
p1
„„ 
=
„„  
CurveToCanvas
„„! .
(
„„. /
keys
„„/ 3
[
„„3 4
length
„„4 :
-
„„; <
$num
„„= >
]
„„> ?
)
„„? @
;
„„@ A
var
‰‰ 
p2
‰‰ 
=
‰‰  
CurveToCanvas
‰‰! .
(
‰‰. /
new
‰‰/ 2
Vector3
‰‰3 :
(
‰‰: ;
bounds
‰‰; A
.
‰‰A B
xMax
‰‰B F
,
‰‰F G
keys
‰‰H L
[
‰‰L M
length
‰‰M S
-
‰‰T U
$num
‰‰V W
]
‰‰W X
.
‰‰X Y
value
‰‰Y ^
)
‰‰^ _
)
‰‰_ `
;
‰‰` a
Handles
ÂÂ 
.
ÂÂ  
DrawAAPolyLine
ÂÂ  .
(
ÂÂ. /
state
ÂÂ/ 4
.
ÂÂ4 5
width
ÂÂ5 :
,
ÂÂ: ;
p1
ÂÂ< >
,
ÂÂ> ?
p2
ÂÂ@ B
)
ÂÂB C
;
ÂÂC D
}
ÊÊ 
}
ÁÁ 
}
ËË 
bool
ÎÎ &
isCurrentlySelectedCurve
ÎÎ )
=
ÎÎ* +
curve
ÎÎ, 1
==
ÎÎ2 4
m_SelectedCurve
ÎÎ5 D
;
ÎÎD E
if
ÌÌ 
(
ÌÌ &
isCurrentlySelectedCurve
ÌÌ (
&&
ÌÌ) +%
m_SelectedKeyframeIndex
ÌÌ, C
>=
ÌÌD F
length
ÌÌG M
)
ÌÌM N%
m_SelectedKeyframeIndex
ÓÓ '
=
ÓÓ( )
-
ÓÓ* +
$num
ÓÓ+ ,
;
ÓÓ, -
if
 
(
 
!
 
state
 
.
 
editable
 
)
  %
m_SelectedKeyframeIndex
ÒÒ '
=
ÒÒ( )
-
ÒÒ* +
$num
ÒÒ+ ,
;
ÒÒ, -
float
ÛÛ 
enabledFactor
ÛÛ 
=
ÛÛ  !
GUI
ÛÛ" %
.
ÛÛ% &
enabled
ÛÛ& -
?
ÛÛ. /
$num
ÛÛ0 2
:
ÛÛ3 4
$num
ÛÛ5 9
;
ÛÛ9 :
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
k
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
k
ˆˆ 
<
ˆˆ 
length
ˆˆ  &
;
ˆˆ& '
k
ˆˆ( )
++
ˆˆ) +
)
ˆˆ+ ,
{
˜˜ 
bool
¯¯ )
isCurrentlySelectedKeyframe
¯¯ 0
=
¯¯1 2
k
¯¯3 4
==
¯¯5 7%
m_SelectedKeyframeIndex
¯¯8 O
;
¯¯O P
var
˘˘ 
e
˘˘ 
=
˘˘ 
Event
˘˘ 
.
˘˘ 
current
˘˘ %
;
˘˘% &
var
˚˚ 
pos
˚˚ 
=
˚˚ 
CurveToCanvas
˚˚ '
(
˚˚' (
keys
˚˚( ,
[
˚˚, -
k
˚˚- .
]
˚˚. /
)
˚˚/ 0
;
˚˚0 1
var
¸¸ 
hitRect
¸¸ 
=
¸¸ 
new
¸¸ !
Rect
¸¸" &
(
¸¸& '
pos
¸¸' *
.
¸¸* +
x
¸¸+ ,
-
¸¸- .
$num
¸¸/ 1
,
¸¸1 2
pos
¸¸3 6
.
¸¸6 7
y
¸¸7 8
-
¸¸9 :
$num
¸¸; =
,
¸¸= >
$num
¸¸? B
,
¸¸B C
$num
¸¸D G
)
¸¸G H
;
¸¸H I
var
˝˝ 
offset
˝˝ 
=
˝˝ &
isCurrentlySelectedCurve
˝˝ 5
?
˛˛ 
new
˛˛ 

RectOffset
˛˛ $
(
˛˛$ %
$num
˛˛% &
,
˛˛& '
$num
˛˛( )
,
˛˛) *
$num
˛˛+ ,
,
˛˛, -
$num
˛˛. /
)
˛˛/ 0
:
ˇˇ 
new
ˇˇ 

RectOffset
ˇˇ $
(
ˇˇ$ %
$num
ˇˇ% &
,
ˇˇ& '
$num
ˇˇ( )
,
ˇˇ) *
$num
ˇˇ+ ,
,
ˇˇ, -
$num
ˇˇ. /
)
ˇˇ/ 0
;
ˇˇ0 1
var
ÅÅ 

outTangent
ÅÅ 
=
ÅÅ  
pos
ÅÅ! $
+
ÅÅ% &"
CurveTangentToCanvas
ÅÅ' ;
(
ÅÅ; <
keys
ÅÅ< @
[
ÅÅ@ A
k
ÅÅA B
]
ÅÅB C
.
ÅÅC D

outTangent
ÅÅD N
)
ÅÅN O
.
ÅÅO P

normalized
ÅÅP Z
*
ÅÅ[ \
$num
ÅÅ] `
;
ÅÅ` a
var
ÇÇ 
	inTangent
ÇÇ 
=
ÇÇ 
pos
ÇÇ  #
-
ÇÇ$ %"
CurveTangentToCanvas
ÇÇ& :
(
ÇÇ: ;
keys
ÇÇ; ?
[
ÇÇ? @
k
ÇÇ@ A
]
ÇÇA B
.
ÇÇB C
	inTangent
ÇÇC L
)
ÇÇL M
.
ÇÇM N

normalized
ÇÇN X
*
ÇÇY Z
$num
ÇÇ[ ^
;
ÇÇ^ _
var
ÉÉ 
inTangentHitRect
ÉÉ $
=
ÉÉ% &
new
ÉÉ' *
Rect
ÉÉ+ /
(
ÉÉ/ 0
	inTangent
ÉÉ0 9
.
ÉÉ9 :
x
ÉÉ: ;
-
ÉÉ< =
$num
ÉÉ> @
,
ÉÉ@ A
	inTangent
ÉÉB K
.
ÉÉK L
y
ÉÉL M
-
ÉÉN O
$num
ÉÉP R
,
ÉÉR S
$num
ÉÉT W
,
ÉÉW X
$num
ÉÉY \
)
ÉÉ\ ]
;
ÉÉ] ^
var
ÑÑ 
outTangentHitrect
ÑÑ %
=
ÑÑ& '
new
ÑÑ( +
Rect
ÑÑ, 0
(
ÑÑ0 1

outTangent
ÑÑ1 ;
.
ÑÑ; <
x
ÑÑ< =
-
ÑÑ> ?
$num
ÑÑ@ B
,
ÑÑB C

outTangent
ÑÑD N
.
ÑÑN O
y
ÑÑO P
-
ÑÑQ R
$num
ÑÑS U
,
ÑÑU V
$num
ÑÑW Z
,
ÑÑZ [
$num
ÑÑ\ _
)
ÑÑ_ `
;
ÑÑ` a
if
áá 
(
áá 
state
áá 
.
áá 
editable
áá "
||
áá# %
state
áá& +
.
áá+ ,$
showNonEditableHandles
áá, B
)
ááB C
{
àà 
if
ââ 
(
ââ 
e
ââ 
.
ââ 
type
ââ 
==
ââ !
	EventType
ââ" +
.
ââ+ ,
Repaint
ââ, 3
)
ââ3 4
{
ää 
var
ãã 
selectedColor
ãã )
=
ãã* +
(
ãã, -&
isCurrentlySelectedCurve
ãã- E
&&
ããF H)
isCurrentlySelectedKeyframe
ããI d
)
ããd e
?
åå 
settings
åå &
.
åå& '
selectionColor
åå' 5
:
çç 
state
çç #
.
çç# $
color
çç$ )
;
çç) *
	EditorGUI
êê !
.
êê! "
DrawRect
êê" *
(
êê* +
offset
êê+ 1
.
êê1 2
Remove
êê2 8
(
êê8 9
hitRect
êê9 @
)
êê@ A
,
êêA B
selectedColor
êêC P
*
êêQ R
enabledFactor
êêS `
)
êê` a
;
êêa b
if
ìì 
(
ìì 
length
ìì "
>
ìì# $
$num
ìì% &
&&
ìì' )&
isCurrentlySelectedCurve
ìì* B
&&
ììC E
(
ììF G
!
ììG H
state
ììH M
.
ììM N(
onlyShowHandlesOnSelection
ììN h
||
ììi k
(
ììl m
state
ììm r
.
ììr s)
onlyShowHandlesOnSelectionììs ç
&&ììé ê+
isCurrentlySelectedKeyframeììë ¨
)ìì¨ ≠
)ìì≠ Æ
)ììÆ Ø
{
îî 
Handles
ïï #
.
ïï# $
color
ïï$ )
=
ïï* +
selectedColor
ïï, 9
*
ïï: ;
enabledFactor
ïï< I
;
ïïI J
if
óó 
(
óó  
k
óó  !
>
óó" #
$num
óó$ %
||
óó& (
state
óó) .
.
óó. /
loopInBounds
óó/ ;
)
óó; <
{
òò 
Handles
ôô  '
.
ôô' (
DrawAAPolyLine
ôô( 6
(
ôô6 7
state
ôô7 <
.
ôô< =
handleWidth
ôô= H
,
ôôH I
pos
ôôJ M
,
ôôM N
	inTangent
ôôO X
)
ôôX Y
;
ôôY Z
	EditorGUI
öö  )
.
öö) *
DrawRect
öö* 2
(
öö2 3
offset
öö3 9
.
öö9 :
Remove
öö: @
(
öö@ A
inTangentHitRect
ööA Q
)
ööQ R
,
ööR S
selectedColor
ööT a
)
ööa b
;
ööb c
}
õõ 
if
ùù 
(
ùù  
k
ùù  !
<
ùù" #
length
ùù$ *
-
ùù+ ,
$num
ùù- .
||
ùù/ 1
state
ùù2 7
.
ùù7 8
loopInBounds
ùù8 D
)
ùùD E
{
ûû 
Handles
üü  '
.
üü' (
DrawAAPolyLine
üü( 6
(
üü6 7
state
üü7 <
.
üü< =
handleWidth
üü= H
,
üüH I
pos
üüJ M
,
üüM N

outTangent
üüO Y
)
üüY Z
;
üüZ [
	EditorGUI
††  )
.
††) *
DrawRect
††* 2
(
††2 3
offset
††3 9
.
††9 :
Remove
††: @
(
††@ A
outTangentHitrect
††A R
)
††R S
,
††S T
selectedColor
††U b
)
††b c
;
††c d
}
°° 
}
¢¢ 
}
££ 
}
§§ 
if
ßß 
(
ßß 
state
ßß 
.
ßß 
editable
ßß "
)
ßß" #
{
®® 
if
™™ 
(
™™ 

m_EditMode
™™ "
==
™™# %
EditMode
™™& .
.
™™. /
Moving
™™/ 5
&&
™™6 8
e
™™9 :
.
™™: ;
type
™™; ?
==
™™@ B
	EventType
™™C L
.
™™L M
	MouseDrag
™™M V
&&
™™W Y&
isCurrentlySelectedCurve
™™Z r
&&
™™s u*
isCurrentlySelectedKeyframe™™v ë
)™™ë í
{
´´ 
EditMoveKeyframe
¨¨ (
(
¨¨( )
	animCurve
¨¨) 2
,
¨¨2 3
keys
¨¨4 8
,
¨¨8 9
k
¨¨: ;
)
¨¨; <
;
¨¨< =
}
≠≠ 
if
∞∞ 
(
∞∞ 
length
∞∞ 
>
∞∞  
$num
∞∞! "
&&
∞∞# %

m_EditMode
∞∞& 0
==
∞∞1 3
EditMode
∞∞4 <
.
∞∞< =
TangentEdit
∞∞= H
&&
∞∞I K
e
∞∞L M
.
∞∞M N
type
∞∞N R
==
∞∞S U
	EventType
∞∞V _
.
∞∞_ `
	MouseDrag
∞∞` i
&&
∞∞j l'
isCurrentlySelectedCurve∞∞m Ö
&&∞∞Ü à+
isCurrentlySelectedKeyframe∞∞â §
)∞∞§ •
{
±± 
bool
≤≤ 
alreadyBroken
≤≤ *
=
≤≤+ ,
!
≤≤- .
(
≤≤. /
Mathf
≤≤/ 4
.
≤≤4 5
Approximately
≤≤5 B
(
≤≤B C
keys
≤≤C G
[
≤≤G H
k
≤≤H I
]
≤≤I J
.
≤≤J K
	inTangent
≤≤K T
,
≤≤T U
keys
≤≤V Z
[
≤≤Z [
k
≤≤[ \
]
≤≤\ ]
.
≤≤] ^

outTangent
≤≤^ h
)
≤≤h i
||
≤≤j l
(
≤≤m n
float
≤≤n s
.
≤≤s t

IsInfinity
≤≤t ~
(
≤≤~ 
keys≤≤ É
[≤≤É Ñ
k≤≤Ñ Ö
]≤≤Ö Ü
.≤≤Ü á
	inTangent≤≤á ê
)≤≤ê ë
&&≤≤í î
float≤≤ï ö
.≤≤ö õ

IsInfinity≤≤õ •
(≤≤• ¶
keys≤≤¶ ™
[≤≤™ ´
k≤≤´ ¨
]≤≤¨ ≠
.≤≤≠ Æ

outTangent≤≤Æ ∏
)≤≤∏ π
)≤≤π ∫
)≤≤∫ ª
;≤≤ª º
EditMoveTangent
≥≥ '
(
≥≥' (
	animCurve
≥≥( 1
,
≥≥1 2
keys
≥≥3 7
,
≥≥7 8
k
≥≥9 :
,
≥≥: ;
m_TangentEditMode
≥≥< M
,
≥≥M N
e
≥≥O P
.
≥≥P Q
shift
≥≥Q V
||
≥≥W Y
!
≥≥Z [
(
≥≥[ \
alreadyBroken
≥≥\ i
||
≥≥j l
e
≥≥m n
.
≥≥n o
control
≥≥o v
)
≥≥v w
)
≥≥w x
;
≥≥x y
}
¥¥ 
if
∑∑ 
(
∑∑ 
e
∑∑ 
.
∑∑ 
type
∑∑ 
==
∑∑ !
	EventType
∑∑" +
.
∑∑+ ,
	MouseDown
∑∑, 5
&&
∑∑6 8
rect
∑∑9 =
.
∑∑= >
Contains
∑∑> F
(
∑∑F G
e
∑∑G H
.
∑∑H I
mousePosition
∑∑I V
)
∑∑V W
)
∑∑W X
{
∏∏ 
if
ππ 
(
ππ 
hitRect
ππ #
.
ππ# $
Contains
ππ$ ,
(
ππ, -
e
ππ- .
.
ππ. /
mousePosition
ππ/ <
)
ππ< =
)
ππ= >
{
∫∫ 
if
ªª 
(
ªª  
e
ªª  !
.
ªª! "
button
ªª" (
==
ªª) +
$num
ªª, -
)
ªª- .
{
ºº 
SelectKeyframe
ΩΩ  .
(
ΩΩ. /
curve
ΩΩ/ 4
,
ΩΩ4 5
k
ΩΩ6 7
)
ΩΩ7 8
;
ΩΩ8 9

m_EditMode
ææ  *
=
ææ+ ,
EditMode
ææ- 5
.
ææ5 6
Moving
ææ6 <
;
ææ< =
e
øø  !
.
øø! "
Use
øø" %
(
øø% &
)
øø& '
;
øø' (
}
¿¿ 
else
¡¡  
if
¡¡! #
(
¡¡$ %
e
¡¡% &
.
¡¡& '
button
¡¡' -
==
¡¡. 0
$num
¡¡1 2
)
¡¡2 3
{
¬¬ 
var
ƒƒ  #
menu
ƒƒ$ (
=
ƒƒ) *
new
ƒƒ+ .
GenericMenu
ƒƒ/ :
(
ƒƒ: ;
)
ƒƒ; <
;
ƒƒ< =
menu
≈≈  $
.
≈≈$ %
AddItem
≈≈% ,
(
≈≈, -
new
≈≈- 0

GUIContent
≈≈1 ;
(
≈≈; <
$str
≈≈< H
)
≈≈H I
,
≈≈I J
false
≈≈K P
,
≈≈P Q
(
≈≈R S
x
≈≈S T
)
≈≈T U
=>
≈≈V X
{
∆∆  !
var
««$ '
action
««( .
=
««/ 0
(
««1 2

MenuAction
««2 <
)
««< =
x
««= >
;
««> ?
var
»»$ '

curveValue
»»( 2
=
»»3 4
action
»»5 ;
.
»»; <
curve
»»< A
.
»»A B!
animationCurveValue
»»B U
;
»»U V
action
……$ *
.
……* +
curve
……+ 0
.
……0 1
serializedObject
……1 A
.
……A B
Update
……B H
(
……H I
)
……I J
;
……J K
RemoveKeyframe
  $ 2
(
  2 3

curveValue
  3 =
,
  = >
action
  ? E
.
  E F
index
  F K
)
  K L
;
  L M%
m_SelectedKeyframeIndex
ÀÀ$ ;
=
ÀÀ< =
-
ÀÀ> ?
$num
ÀÀ? @
;
ÀÀ@ A
	SaveCurve
ÃÃ$ -
(
ÃÃ- .
action
ÃÃ. 4
.
ÃÃ4 5
curve
ÃÃ5 :
,
ÃÃ: ;

curveValue
ÃÃ< F
)
ÃÃF G
;
ÃÃG H
action
ÕÕ$ *
.
ÕÕ* +
curve
ÕÕ+ 0
.
ÕÕ0 1
serializedObject
ÕÕ1 A
.
ÕÕA B%
ApplyModifiedProperties
ÕÕB Y
(
ÕÕY Z
)
ÕÕZ [
;
ÕÕ[ \
}
ŒŒ  !
,
ŒŒ! "
new
ŒŒ# &

MenuAction
ŒŒ' 1
(
ŒŒ1 2
curve
ŒŒ2 7
,
ŒŒ7 8
k
ŒŒ9 :
)
ŒŒ: ;
)
ŒŒ; <
;
ŒŒ< =
menu
œœ  $
.
œœ$ %
ShowAsContext
œœ% 2
(
œœ2 3
)
œœ3 4
;
œœ4 5
e
––  !
.
––! "
Use
––" %
(
––% &
)
––& '
;
––' (
}
—— 
}
““ 
}
”” 
if
÷÷ 
(
÷÷ 
e
÷÷ 
.
÷÷ 
type
÷÷ 
==
÷÷ !
	EventType
÷÷" +
.
÷÷+ ,
	MouseDown
÷÷, 5
&&
÷÷6 8
length
÷÷9 ?
>
÷÷@ A
$num
÷÷B C
&&
÷÷D F
rect
÷÷G K
.
÷÷K L
Contains
÷÷L T
(
÷÷T U
e
÷÷U V
.
÷÷V W
mousePosition
÷÷W d
)
÷÷d e
)
÷÷e f
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
inTangentHitRect
ÿÿ ,
.
ÿÿ, -
Contains
ÿÿ- 5
(
ÿÿ5 6
e
ÿÿ6 7
.
ÿÿ7 8
mousePosition
ÿÿ8 E
)
ÿÿE F
&&
ÿÿG I
(
ÿÿJ K
k
ÿÿK L
>
ÿÿM N
$num
ÿÿO P
||
ÿÿQ S
state
ÿÿT Y
.
ÿÿY Z
loopInBounds
ÿÿZ f
)
ÿÿf g
)
ÿÿg h
{
ŸŸ 
SelectKeyframe
⁄⁄ *
(
⁄⁄* +
curve
⁄⁄+ 0
,
⁄⁄0 1
k
⁄⁄2 3
)
⁄⁄3 4
;
⁄⁄4 5

m_EditMode
€€ &
=
€€' (
EditMode
€€) 1
.
€€1 2
TangentEdit
€€2 =
;
€€= >
m_TangentEditMode
‹‹ -
=
‹‹. /
Tangent
‹‹0 7
.
‹‹7 8
In
‹‹8 :
;
‹‹: ;
e
›› 
.
›› 
Use
›› !
(
››! "
)
››" #
;
››# $
}
ﬁﬁ 
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ  !
outTangentHitrect
ﬂﬂ! 2
.
ﬂﬂ2 3
Contains
ﬂﬂ3 ;
(
ﬂﬂ; <
e
ﬂﬂ< =
.
ﬂﬂ= >
mousePosition
ﬂﬂ> K
)
ﬂﬂK L
&&
ﬂﬂM O
(
ﬂﬂP Q
k
ﬂﬂQ R
<
ﬂﬂS T
length
ﬂﬂU [
-
ﬂﬂ\ ]
$num
ﬂﬂ^ _
||
ﬂﬂ` b
state
ﬂﬂc h
.
ﬂﬂh i
loopInBounds
ﬂﬂi u
)
ﬂﬂu v
)
ﬂﬂv w
{
‡‡ 
SelectKeyframe
·· *
(
··* +
curve
··+ 0
,
··0 1
k
··2 3
)
··3 4
;
··4 5

m_EditMode
‚‚ &
=
‚‚' (
EditMode
‚‚) 1
.
‚‚1 2
TangentEdit
‚‚2 =
;
‚‚= >
m_TangentEditMode
„„ -
=
„„. /
Tangent
„„0 7
.
„„7 8
Out
„„8 ;
;
„„; <
e
‰‰ 
.
‰‰ 
Use
‰‰ !
(
‰‰! "
)
‰‰" #
;
‰‰# $
}
ÂÂ 
}
ÊÊ 
if
ÈÈ 
(
ÈÈ 
e
ÈÈ 
.
ÈÈ 
rawType
ÈÈ !
==
ÈÈ" $
	EventType
ÈÈ% .
.
ÈÈ. /
MouseUp
ÈÈ/ 6
&&
ÈÈ7 9

m_EditMode
ÈÈ: D
!=
ÈÈE G
EditMode
ÈÈH P
.
ÈÈP Q
None
ÈÈQ U
)
ÈÈU V
{
ÍÍ 

m_EditMode
ÎÎ "
=
ÎÎ# $
EditMode
ÎÎ% -
.
ÎÎ- .
None
ÎÎ. 2
;
ÎÎ2 3
}
ÏÏ 
{
ÔÔ 
EditorGUIUtility
 (
.
( )
AddCursorRect
) 6
(
6 7
hitRect
7 >
,
> ?
MouseCursor
@ K
.
K L
	MoveArrow
L U
)
U V
;
V W
if
ÚÚ 
(
ÚÚ 
k
ÚÚ 
>
ÚÚ 
$num
ÚÚ  !
||
ÚÚ" $
state
ÚÚ% *
.
ÚÚ* +
loopInBounds
ÚÚ+ 7
)
ÚÚ7 8
EditorGUIUtility
ÛÛ ,
.
ÛÛ, -
AddCursorRect
ÛÛ- :
(
ÛÛ: ;
inTangentHitRect
ÛÛ; K
,
ÛÛK L
MouseCursor
ÛÛM X
.
ÛÛX Y
RotateArrow
ÛÛY d
)
ÛÛd e
;
ÛÛe f
if
ıı 
(
ıı 
k
ıı 
<
ıı 
length
ıı  &
-
ıı' (
$num
ıı) *
||
ıı+ -
state
ıı. 3
.
ıı3 4
loopInBounds
ıı4 @
)
ıı@ A
EditorGUIUtility
ˆˆ ,
.
ˆˆ, -
AddCursorRect
ˆˆ- :
(
ˆˆ: ;
outTangentHitrect
ˆˆ; L
,
ˆˆL M
MouseCursor
ˆˆN Y
.
ˆˆY Z
RotateArrow
ˆˆZ e
)
ˆˆe f
;
ˆˆf g
}
˜˜ 
}
¯¯ 
}
˘˘ 
Handles
˚˚ 
.
˚˚ 
color
˚˚ 
=
˚˚ 
Color
˚˚ !
.
˚˚! "
white
˚˚" '
;
˚˚' (
	SaveCurve
¸¸ 
(
¸¸ 
curve
¸¸ 
,
¸¸ 
	animCurve
¸¸ &
)
¸¸& '
;
¸¸' (
}
˝˝ 	
void
ˇˇ 
OnGeneralUI
ˇˇ 
(
ˇˇ 
)
ˇˇ 
{
ÄÄ 	
var
ÅÅ 
e
ÅÅ 
=
ÅÅ 
Event
ÅÅ 
.
ÅÅ 
current
ÅÅ !
;
ÅÅ! "
if
ÑÑ 
(
ÑÑ 
e
ÑÑ 
.
ÑÑ 
type
ÑÑ 
==
ÑÑ 
	EventType
ÑÑ #
.
ÑÑ# $
	MouseDown
ÑÑ$ -
)
ÑÑ- .
{
ÖÖ 
GUI
ÜÜ 
.
ÜÜ 
FocusControl
ÜÜ  
(
ÜÜ  !
null
ÜÜ! %
)
ÜÜ% &
;
ÜÜ& '
m_SelectedCurve
áá 
=
áá  !
null
áá" &
;
áá& '%
m_SelectedKeyframeIndex
àà '
=
àà( )
-
àà* +
$num
àà+ ,
;
àà, -
bool
ââ 
used
ââ 
=
ââ 
false
ââ !
;
ââ! "
var
ãã 
hit
ãã 
=
ãã 
CanvasToCurve
ãã '
(
ãã' (
e
ãã( )
.
ãã) *
mousePosition
ãã* 7
)
ãã7 8
;
ãã8 9
float
åå 
curvePickValue
åå $
=
åå% &
CurveToCanvas
åå' 4
(
åå4 5
hit
åå5 8
)
åå8 9
.
åå9 :
y
åå: ;
;
åå; <
foreach
èè 
(
èè 
var
èè 
curve
èè "
in
èè# %
m_Curves
èè& .
)
èè. /
{
êê 
if
ëë 
(
ëë 
!
ëë 
curve
ëë 
.
ëë 
Value
ëë $
.
ëë$ %
editable
ëë% -
||
ëë. 0
!
ëë1 2
curve
ëë2 7
.
ëë7 8
Value
ëë8 =
.
ëë= >
visible
ëë> E
)
ëëE F
continue
íí  
;
íí  !
var
îî 
prop
îî 
=
îî 
curve
îî $
.
îî$ %
Key
îî% (
;
îî( )
var
ïï 
state
ïï 
=
ïï 
curve
ïï  %
.
ïï% &
Value
ïï& +
;
ïï+ ,
var
ññ 
	animCurve
ññ !
=
ññ" #
prop
ññ$ (
.
ññ( )!
animationCurveValue
ññ) <
;
ññ< =
float
óó 
hitY
óó 
=
óó  
	animCurve
óó! *
.
óó* +
length
óó+ 1
==
óó2 4
$num
óó5 6
?
òò 
state
òò 
.
òò  "
zeroKeyConstantValue
òò  4
:
ôô 
	animCurve
ôô #
.
ôô# $
Evaluate
ôô$ ,
(
ôô, -
hit
ôô- 0
.
ôô0 1
x
ôô1 2
)
ôô2 3
;
ôô3 4
var
õõ 
curvePos
õõ  
=
õõ! "
CurveToCanvas
õõ# 0
(
õõ0 1
new
õõ1 4
Vector3
õõ5 <
(
õõ< =
hit
õõ= @
.
õõ@ A
x
õõA B
,
õõB C
hitY
õõD H
)
õõH I
)
õõI J
;
õõJ K
if
ùù 
(
ùù 
Mathf
ùù 
.
ùù 
Abs
ùù !
(
ùù! "
curvePos
ùù" *
.
ùù* +
y
ùù+ ,
-
ùù- .
curvePickValue
ùù/ =
)
ùù= >
<
ùù? @
settings
ùùA I
.
ùùI J"
curvePickingDistance
ùùJ ^
)
ùù^ _
{
ûû 
m_SelectedCurve
üü '
=
üü( )
prop
üü* .
;
üü. /
if
°° 
(
°° 
e
°° 
.
°° 

clickCount
°° (
==
°°) +
$num
°°, -
&&
°°. 0
e
°°1 2
.
°°2 3
button
°°3 9
==
°°: <
$num
°°= >
)
°°> ?
{
¢¢  
EditCreateKeyframe
§§ .
(
§§. /
	animCurve
§§/ 8
,
§§8 9
hit
§§: =
,
§§= >
true
§§? C
,
§§C D
state
§§E J
.
§§J K"
zeroKeyConstantValue
§§K _
)
§§_ `
;
§§` a
	SaveCurve
•• %
(
••% &
prop
••& *
,
••* +
	animCurve
••, 5
)
••5 6
;
••6 7
}
¶¶ 
else
ßß 
if
ßß 
(
ßß  !
e
ßß! "
.
ßß" #
button
ßß# )
==
ßß* ,
$num
ßß- .
)
ßß. /
{
®® 
var
™™ 
menu
™™  $
=
™™% &
new
™™' *
GenericMenu
™™+ 6
(
™™6 7
)
™™7 8
;
™™8 9
menu
´´  
.
´´  !
AddItem
´´! (
(
´´( )
new
´´) ,

GUIContent
´´- 7
(
´´7 8
$str
´´8 A
)
´´A B
,
´´B C
false
´´D I
,
´´I J
(
´´K L
x
´´L M
)
´´M N
=>
´´O Q
{
¨¨ 
var
≠≠  #
action
≠≠$ *
=
≠≠+ ,
(
≠≠- .

MenuAction
≠≠. 8
)
≠≠8 9
x
≠≠9 :
;
≠≠: ;
var
ÆÆ  #

curveValue
ÆÆ$ .
=
ÆÆ/ 0
action
ÆÆ1 7
.
ÆÆ7 8
curve
ÆÆ8 =
.
ÆÆ= >!
animationCurveValue
ÆÆ> Q
;
ÆÆQ R
action
ØØ  &
.
ØØ& '
curve
ØØ' ,
.
ØØ, -
serializedObject
ØØ- =
.
ØØ= >
Update
ØØ> D
(
ØØD E
)
ØØE F
;
ØØF G 
EditCreateKeyframe
∞∞  2
(
∞∞2 3

curveValue
∞∞3 =
,
∞∞= >
hit
∞∞? B
,
∞∞B C
true
∞∞D H
,
∞∞H I
$num
∞∞J L
)
∞∞L M
;
∞∞M N
	SaveCurve
±±  )
(
±±) *
action
±±* 0
.
±±0 1
curve
±±1 6
,
±±6 7

curveValue
±±8 B
)
±±B C
;
±±C D
action
≤≤  &
.
≤≤& '
curve
≤≤' ,
.
≤≤, -
serializedObject
≤≤- =
.
≤≤= >%
ApplyModifiedProperties
≤≤> U
(
≤≤U V
)
≤≤V W
;
≤≤W X
}
≥≥ 
,
≥≥ 
new
≥≥ "

MenuAction
≥≥# -
(
≥≥- .
prop
≥≥. 2
,
≥≥2 3
hit
≥≥4 7
)
≥≥7 8
)
≥≥8 9
;
≥≥9 :
menu
¥¥  
.
¥¥  !
ShowAsContext
¥¥! .
(
¥¥. /
)
¥¥/ 0
;
¥¥0 1
e
µµ 
.
µµ 
Use
µµ !
(
µµ! "
)
µµ" #
;
µµ# $
used
∂∂  
=
∂∂! "
true
∂∂# '
;
∂∂' (
}
∑∑ 
}
∏∏ 
}
ππ 
if
ªª 
(
ªª 
e
ªª 
.
ªª 

clickCount
ªª  
==
ªª! #
$num
ªª$ %
&&
ªª& (
e
ªª) *
.
ªª* +
button
ªª+ 1
==
ªª2 4
$num
ªª5 6
&&
ªª7 9
m_SelectedCurve
ªª: I
==
ªªJ L
null
ªªM Q
)
ªªQ R
{
ºº 
foreach
ææ 
(
ææ 
var
ææ  
curve
ææ! &
in
ææ' )
m_Curves
ææ* 2
)
ææ2 3
{
øø 
if
¿¿ 
(
¿¿ 
!
¿¿ 
curve
¿¿ "
.
¿¿" #
Value
¿¿# (
.
¿¿( )
editable
¿¿) 1
||
¿¿2 4
!
¿¿5 6
curve
¿¿6 ;
.
¿¿; <
Value
¿¿< A
.
¿¿A B
visible
¿¿B I
)
¿¿I J
continue
¡¡ $
;
¡¡$ %
var
√√ 
prop
√√  
=
√√! "
curve
√√# (
.
√√( )
Key
√√) ,
;
√√, -
var
ƒƒ 
state
ƒƒ !
=
ƒƒ" #
curve
ƒƒ$ )
.
ƒƒ) *
Value
ƒƒ* /
;
ƒƒ/ 0
var
≈≈ 
	animCurve
≈≈ %
=
≈≈& '
prop
≈≈( ,
.
≈≈, -!
animationCurveValue
≈≈- @
;
≈≈@ A 
EditCreateKeyframe
∆∆ *
(
∆∆* +
	animCurve
∆∆+ 4
,
∆∆4 5
hit
∆∆6 9
,
∆∆9 :
e
∆∆; <
.
∆∆< =
alt
∆∆= @
,
∆∆@ A
state
∆∆B G
.
∆∆G H"
zeroKeyConstantValue
∆∆H \
)
∆∆\ ]
;
∆∆] ^
	SaveCurve
«« !
(
««! "
prop
««" &
,
««& '
	animCurve
««( 1
)
««1 2
;
««2 3
}
»» 
}
…… 
else
   
if
   
(
   
!
   
used
   
&&
   !
e
  " #
.
  # $
button
  $ *
==
  + -
$num
  . /
)
  / 0
{
ÀÀ 
var
ÕÕ 
menu
ÕÕ 
=
ÕÕ 
new
ÕÕ "
GenericMenu
ÕÕ# .
(
ÕÕ. /
)
ÕÕ/ 0
;
ÕÕ0 1
menu
ŒŒ 
.
ŒŒ 
AddItem
ŒŒ  
(
ŒŒ  !
new
ŒŒ! $

GUIContent
ŒŒ% /
(
ŒŒ/ 0
$str
ŒŒ0 E
)
ŒŒE F
,
ŒŒF G
false
ŒŒH M
,
ŒŒM N
(
ŒŒO P
)
ŒŒP Q
=>
ŒŒR T
ContextMenuAddKey
ŒŒU f
(
ŒŒf g
hit
ŒŒg j
,
ŒŒj k
false
ŒŒl q
)
ŒŒq r
)
ŒŒr s
;
ŒŒs t
menu
œœ 
.
œœ 
AddItem
œœ  
(
œœ  !
new
œœ! $

GUIContent
œœ% /
(
œœ/ 0
$str
œœ0 C
)
œœC D
,
œœD E
false
œœF K
,
œœK L
(
œœM N
)
œœN O
=>
œœP R
ContextMenuAddKey
œœS d
(
œœd e
hit
œœe h
,
œœh i
true
œœj n
)
œœn o
)
œœo p
;
œœp q
menu
–– 
.
–– 
ShowAsContext
–– &
(
––& '
)
––' (
;
––( )
}
—— 
e
”” 
.
”” 
Use
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
if
◊◊ 
(
◊◊ 
e
◊◊ 
.
◊◊ 
type
◊◊ 
==
◊◊ 
	EventType
◊◊ #
.
◊◊# $
KeyDown
◊◊$ +
&&
◊◊, .
(
◊◊/ 0
e
◊◊0 1
.
◊◊1 2
keyCode
◊◊2 9
==
◊◊: <
KeyCode
◊◊= D
.
◊◊D E
Delete
◊◊E K
||
◊◊L N
e
◊◊O P
.
◊◊P Q
keyCode
◊◊Q X
==
◊◊Y [
KeyCode
◊◊\ c
.
◊◊c d
	Backspace
◊◊d m
)
◊◊m n
)
◊◊n o
{
ÿÿ 
if
ŸŸ 
(
ŸŸ %
m_SelectedKeyframeIndex
ŸŸ +
!=
ŸŸ, .
-
ŸŸ/ 0
$num
ŸŸ0 1
&&
ŸŸ2 4
m_SelectedCurve
ŸŸ5 D
!=
ŸŸE G
null
ŸŸH L
)
ŸŸL M
{
⁄⁄ 
var
€€ 
	animCurve
€€ !
=
€€" #
m_SelectedCurve
€€$ 3
.
€€3 4!
animationCurveValue
€€4 G
;
€€G H
var
‹‹ 
length
‹‹ 
=
‹‹  
	animCurve
‹‹! *
.
‹‹* +
length
‹‹+ 1
;
‹‹1 2
if
ﬁﬁ 
(
ﬁﬁ 
m_Curves
ﬁﬁ  
[
ﬁﬁ  !
m_SelectedCurve
ﬁﬁ! 0
]
ﬁﬁ0 1
.
ﬁﬁ1 2
minPointCount
ﬁﬁ2 ?
<
ﬁﬁ@ A
length
ﬁﬁB H
&&
ﬁﬁI K
length
ﬁﬁL R
>=
ﬁﬁS U
$num
ﬁﬁV W
)
ﬁﬁW X
{
ﬂﬂ  
EditDeleteKeyframe
‡‡ *
(
‡‡* +
	animCurve
‡‡+ 4
,
‡‡4 5%
m_SelectedKeyframeIndex
‡‡6 M
)
‡‡M N
;
‡‡N O%
m_SelectedKeyframeIndex
·· /
=
··0 1
-
··2 3
$num
··3 4
;
··4 5
	SaveCurve
‚‚ !
(
‚‚! "
m_SelectedCurve
‚‚" 1
,
‚‚1 2
	animCurve
‚‚3 <
)
‚‚< =
;
‚‚= >
}
„„ 
e
ÂÂ 
.
ÂÂ 
Use
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 	
void
ÍÍ 
	SaveCurve
ÍÍ 
(
ÍÍ  
SerializedProperty
ÍÍ )
prop
ÍÍ* .
,
ÍÍ. /
AnimationCurve
ÍÍ0 >
curve
ÍÍ? D
)
ÍÍD E
{
ÎÎ 	
prop
ÏÏ 
.
ÏÏ !
animationCurveValue
ÏÏ $
=
ÏÏ% &
curve
ÏÏ' ,
;
ÏÏ, -
}
ÌÌ 	
void
ÔÔ 

Invalidate
ÔÔ 
(
ÔÔ 
)
ÔÔ 
{
 	
m_Dirty
ÒÒ 
=
ÒÒ 
true
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
void
ÙÙ 
SelectKeyframe
ÙÙ 
(
ÙÙ  
SerializedProperty
ÙÙ .
curve
ÙÙ/ 4
,
ÙÙ4 5
int
ÙÙ6 9
keyframeIndex
ÙÙ: G
)
ÙÙG H
{
ıı 	%
m_SelectedKeyframeIndex
ˆˆ #
=
ˆˆ$ %
keyframeIndex
ˆˆ& 3
;
ˆˆ3 4
m_SelectedCurve
˜˜ 
=
˜˜ 
curve
˜˜ #
;
˜˜# $

Invalidate
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
}
˘˘ 	
void
˚˚ 
ContextMenuAddKey
˚˚ 
(
˚˚ 
Vector3
˚˚ &
hit
˚˚' *
,
˚˚* +
bool
˚˚, 0
createOnCurve
˚˚1 >
)
˚˚> ?
{
¸¸ 	
SerializedObject
˝˝ 
serializedObject
˝˝ -
=
˝˝. /
null
˝˝0 4
;
˝˝4 5
foreach
ˇˇ 
(
ˇˇ 
var
ˇˇ 
curve
ˇˇ 
in
ˇˇ !
m_Curves
ˇˇ" *
)
ˇˇ* +
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
curve
ÅÅ 
.
ÅÅ 
Value
ÅÅ  
.
ÅÅ  !
editable
ÅÅ! )
||
ÅÅ* ,
!
ÅÅ- .
curve
ÅÅ. 3
.
ÅÅ3 4
Value
ÅÅ4 9
.
ÅÅ9 :
visible
ÅÅ: A
)
ÅÅA B
continue
ÇÇ 
;
ÇÇ 
var
ÑÑ 
prop
ÑÑ 
=
ÑÑ 
curve
ÑÑ  
.
ÑÑ  !
Key
ÑÑ! $
;
ÑÑ$ %
var
ÖÖ 
state
ÖÖ 
=
ÖÖ 
curve
ÖÖ !
.
ÖÖ! "
Value
ÖÖ" '
;
ÖÖ' (
if
áá 
(
áá 
serializedObject
áá $
==
áá% '
null
áá( ,
)
áá, -
{
àà 
serializedObject
ââ $
=
ââ% &
prop
ââ' +
.
ââ+ ,
serializedObject
ââ, <
;
ââ< =
serializedObject
ää $
.
ää$ %
Update
ää% +
(
ää+ ,
)
ää, -
;
ää- .
}
ãã 
var
çç 
	animCurve
çç 
=
çç 
prop
çç  $
.
çç$ %!
animationCurveValue
çç% 8
;
çç8 9 
EditCreateKeyframe
éé "
(
éé" #
	animCurve
éé# ,
,
éé, -
hit
éé. 1
,
éé1 2
createOnCurve
éé3 @
,
éé@ A
state
ééB G
.
ééG H"
zeroKeyConstantValue
ééH \
)
éé\ ]
;
éé] ^
	SaveCurve
èè 
(
èè 
prop
èè 
,
èè 
	animCurve
èè  )
)
èè) *
;
èè* +
}
êê 
if
íí 
(
íí 
serializedObject
íí  
!=
íí! #
null
íí$ (
)
íí( )
serializedObject
ìì  
.
ìì  !%
ApplyModifiedProperties
ìì! 8
(
ìì8 9
)
ìì9 :
;
ìì: ;

Invalidate
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 	
void
òò  
EditCreateKeyframe
òò 
(
òò  
AnimationCurve
òò  .
curve
òò/ 4
,
òò4 5
Vector3
òò6 =
position
òò> F
,
òòF G
bool
òòH L
createOnCurve
òòM Z
,
òòZ [
float
òò\ a"
zeroKeyConstantValue
òòb v
)
òòv w
{
ôô 	
float
öö 
tangent
öö 
=
öö 
EvaluateTangent
öö +
(
öö+ ,
curve
öö, 1
,
öö1 2
position
öö3 ;
.
öö; <
x
öö< =
)
öö= >
;
öö> ?
if
úú 
(
úú 
createOnCurve
úú 
)
úú 
{
ùù 
position
ûû 
.
ûû 
y
ûû 
=
ûû 
curve
ûû "
.
ûû" #
length
ûû# )
==
ûû* ,
$num
ûû- .
?
üü "
zeroKeyConstantValue
üü *
:
†† 
curve
†† 
.
†† 
Evaluate
†† $
(
††$ %
position
††% -
.
††- .
x
††. /
)
††/ 0
;
††0 1
}
°° 
AddKeyframe
££ 
(
££ 
curve
££ 
,
££ 
new
££ "
Keyframe
££# +
(
££+ ,
position
££, 4
.
££4 5
x
££5 6
,
££6 7
position
££8 @
.
££@ A
y
££A B
,
££B C
tangent
££D K
,
££K L
tangent
££M T
)
££T U
)
££U V
;
££V W
}
§§ 	
void
¶¶  
EditDeleteKeyframe
¶¶ 
(
¶¶  
AnimationCurve
¶¶  .
curve
¶¶/ 4
,
¶¶4 5
int
¶¶6 9
keyframeIndex
¶¶: G
)
¶¶G H
{
ßß 	
RemoveKeyframe
®® 
(
®® 
curve
®®  
,
®®  !
keyframeIndex
®®" /
)
®®/ 0
;
®®0 1
}
©© 	
void
´´ 
AddKeyframe
´´ 
(
´´ 
AnimationCurve
´´ '
curve
´´( -
,
´´- .
Keyframe
´´/ 7
newValue
´´8 @
)
´´@ A
{
¨¨ 	
curve
≠≠ 
.
≠≠ 
AddKey
≠≠ 
(
≠≠ 
newValue
≠≠ !
)
≠≠! "
;
≠≠" #

Invalidate
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 	
void
±± 
RemoveKeyframe
±± 
(
±± 
AnimationCurve
±± *
curve
±±+ 0
,
±±0 1
int
±±2 5
keyframeIndex
±±6 C
)
±±C D
{
≤≤ 	
curve
≥≥ 
.
≥≥ 
	RemoveKey
≥≥ 
(
≥≥ 
keyframeIndex
≥≥ )
)
≥≥) *
;
≥≥* +

Invalidate
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 	
void
∑∑ 
SetKeyframe
∑∑ 
(
∑∑ 
AnimationCurve
∑∑ '
curve
∑∑( -
,
∑∑- .
int
∑∑/ 2
keyframeIndex
∑∑3 @
,
∑∑@ A
Keyframe
∑∑B J
newValue
∑∑K S
)
∑∑S T
{
∏∏ 	
var
ππ 
keys
ππ 
=
ππ 
curve
ππ 
.
ππ 
keys
ππ !
;
ππ! "
if
ªª 
(
ªª 
keyframeIndex
ªª 
>
ªª 
$num
ªª  !
)
ªª! "
newValue
ºº 
.
ºº 
time
ºº 
=
ºº 
Mathf
ºº  %
.
ºº% &
Max
ºº& )
(
ºº) *
keys
ºº* .
[
ºº. /
keyframeIndex
ºº/ <
-
ºº= >
$num
ºº? @
]
ºº@ A
.
ººA B
time
ººB F
+
ººG H
settings
ººI Q
.
ººQ R%
keyTimeClampingDistance
ººR i
,
ººi j
newValue
ººk s
.
ººs t
time
ººt x
)
ººx y
;
ººy z
if
ææ 
(
ææ 
keyframeIndex
ææ 
<
ææ 
keys
ææ  $
.
ææ$ %
Length
ææ% +
-
ææ, -
$num
ææ. /
)
ææ/ 0
newValue
øø 
.
øø 
time
øø 
=
øø 
Mathf
øø  %
.
øø% &
Min
øø& )
(
øø) *
keys
øø* .
[
øø. /
keyframeIndex
øø/ <
+
øø= >
$num
øø? @
]
øø@ A
.
øøA B
time
øøB F
-
øøG H
settings
øøI Q
.
øøQ R%
keyTimeClampingDistance
øøR i
,
øøi j
newValue
øøk s
.
øøs t
time
øøt x
)
øøx y
;
øøy z
curve
¡¡ 
.
¡¡ 
MoveKey
¡¡ 
(
¡¡ 
keyframeIndex
¡¡ '
,
¡¡' (
newValue
¡¡) 1
)
¡¡1 2
;
¡¡2 3

Invalidate
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 	
void
≈≈ 
EditMoveKeyframe
≈≈ 
(
≈≈ 
AnimationCurve
≈≈ ,
curve
≈≈- 2
,
≈≈2 3
Keyframe
≈≈4 <
[
≈≈< =
]
≈≈= >
keys
≈≈? C
,
≈≈C D
int
≈≈E H
keyframeIndex
≈≈I V
)
≈≈V W
{
∆∆ 	
var
«« 
key
«« 
=
«« 
CanvasToCurve
«« #
(
««# $
Event
««$ )
.
««) *
current
««* 1
.
««1 2
mousePosition
««2 ?
)
««? @
;
««@ A
float
»» 
inTgt
»» 
=
»» 
keys
»» 
[
»» 
keyframeIndex
»» ,
]
»», -
.
»»- .
	inTangent
»». 7
;
»»7 8
float
…… 
outTgt
…… 
=
…… 
keys
…… 
[
……  
keyframeIndex
……  -
]
……- .
.
……. /

outTangent
……/ 9
;
……9 :
SetKeyframe
   
(
   
curve
   
,
   
keyframeIndex
   ,
,
  , -
new
  . 1
Keyframe
  2 :
(
  : ;
key
  ; >
.
  > ?
x
  ? @
,
  @ A
key
  B E
.
  E F
y
  F G
,
  G H
inTgt
  I N
,
  N O
outTgt
  P V
)
  V W
)
  W X
;
  X Y
}
ÀÀ 	
void
ÕÕ 
EditMoveTangent
ÕÕ 
(
ÕÕ 
AnimationCurve
ÕÕ +
curve
ÕÕ, 1
,
ÕÕ1 2
Keyframe
ÕÕ3 ;
[
ÕÕ; <
]
ÕÕ< =
keys
ÕÕ> B
,
ÕÕB C
int
ÕÕD G
keyframeIndex
ÕÕH U
,
ÕÕU V
Tangent
ÕÕW ^
targetTangent
ÕÕ_ l
,
ÕÕl m
bool
ÕÕn r
linkTangents
ÕÕs 
)ÕÕ Ä
{
ŒŒ 	
var
œœ 
pos
œœ 
=
œœ 
CanvasToCurve
œœ #
(
œœ# $
Event
œœ$ )
.
œœ) *
current
œœ* 1
.
œœ1 2
mousePosition
œœ2 ?
)
œœ? @
;
œœ@ A
float
—— 
time
—— 
=
—— 
keys
—— 
[
—— 
keyframeIndex
—— +
]
——+ ,
.
——, -
time
——- 1
;
——1 2
float
““ 
value
““ 
=
““ 
keys
““ 
[
““ 
keyframeIndex
““ ,
]
““, -
.
““- .
value
““. 3
;
““3 4
pos
‘‘ 
-=
‘‘ 
new
‘‘ 
Vector3
‘‘ 
(
‘‘ 
time
‘‘ #
,
‘‘# $
value
‘‘% *
)
‘‘* +
;
‘‘+ ,
if
÷÷ 
(
÷÷ 
targetTangent
÷÷ 
==
÷÷  
Tangent
÷÷! (
.
÷÷( )
In
÷÷) +
&&
÷÷, .
pos
÷÷/ 2
.
÷÷2 3
x
÷÷3 4
>
÷÷5 6
$num
÷÷7 9
)
÷÷9 :
pos
◊◊ 
.
◊◊ 
x
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
if
ŸŸ 
(
ŸŸ 
targetTangent
ŸŸ 
==
ŸŸ  
Tangent
ŸŸ! (
.
ŸŸ( )
Out
ŸŸ) ,
&&
ŸŸ- /
pos
ŸŸ0 3
.
ŸŸ3 4
x
ŸŸ4 5
<
ŸŸ6 7
$num
ŸŸ8 :
)
ŸŸ: ;
pos
⁄⁄ 
.
⁄⁄ 
x
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
float
‹‹ 
tangent
‹‹ 
;
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
Mathf
ﬁﬁ 
.
ﬁﬁ 
Approximately
ﬁﬁ #
(
ﬁﬁ# $
pos
ﬁﬁ$ '
.
ﬁﬁ' (
x
ﬁﬁ( )
,
ﬁﬁ) *
$num
ﬁﬁ+ -
)
ﬁﬁ- .
)
ﬁﬁ. /
tangent
ﬂﬂ 
=
ﬂﬂ 
float
ﬂﬂ 
.
ﬂﬂ  
PositiveInfinity
ﬂﬂ  0
;
ﬂﬂ0 1
else
‡‡ 
tangent
·· 
=
·· 
pos
·· 
.
·· 
y
·· 
/
··  !
pos
··" %
.
··% &
x
··& '
;
··' (
float
„„ 
	inTangent
„„ 
=
„„ 
keys
„„ "
[
„„" #
keyframeIndex
„„# 0
]
„„0 1
.
„„1 2
	inTangent
„„2 ;
;
„„; <
float
‰‰ 

outTangent
‰‰ 
=
‰‰ 
keys
‰‰ #
[
‰‰# $
keyframeIndex
‰‰$ 1
]
‰‰1 2
.
‰‰2 3

outTangent
‰‰3 =
;
‰‰= >
if
ÊÊ 
(
ÊÊ 
targetTangent
ÊÊ 
==
ÊÊ  
Tangent
ÊÊ! (
.
ÊÊ( )
In
ÊÊ) +
||
ÊÊ, .
linkTangents
ÊÊ/ ;
)
ÊÊ; <
	inTangent
ÁÁ 
=
ÁÁ 
tangent
ÁÁ #
;
ÁÁ# $
if
ËË 
(
ËË 
targetTangent
ËË 
==
ËË  
Tangent
ËË! (
.
ËË( )
Out
ËË) ,
||
ËË- /
linkTangents
ËË0 <
)
ËË< =

outTangent
ÈÈ 
=
ÈÈ 
tangent
ÈÈ $
;
ÈÈ$ %
SetKeyframe
ÎÎ 
(
ÎÎ 
curve
ÎÎ 
,
ÎÎ 
keyframeIndex
ÎÎ ,
,
ÎÎ, -
new
ÎÎ. 1
Keyframe
ÎÎ2 :
(
ÎÎ: ;
time
ÎÎ; ?
,
ÎÎ? @
value
ÎÎA F
,
ÎÎF G
	inTangent
ÎÎH Q
,
ÎÎQ R

outTangent
ÎÎS ]
)
ÎÎ] ^
)
ÎÎ^ _
;
ÎÎ_ `
}
ÏÏ 	
Vector3
ÓÓ 
CurveToCanvas
ÓÓ 
(
ÓÓ 
Keyframe
ÓÓ &
keyframe
ÓÓ' /
)
ÓÓ/ 0
{
ÔÔ 	
return
 
CurveToCanvas
  
(
  !
new
! $
Vector3
% ,
(
, -
keyframe
- 5
.
5 6
time
6 :
,
: ;
keyframe
< D
.
D E
value
E J
)
J K
)
K L
;
L M
}
ÒÒ 	
Vector3
ÛÛ 
CurveToCanvas
ÛÛ 
(
ÛÛ 
Vector3
ÛÛ %
position
ÛÛ& .
)
ÛÛ. /
{
ÙÙ 	
var
ıı 
bounds
ıı 
=
ıı 
settings
ıı !
.
ıı! "
bounds
ıı" (
;
ıı( )
var
ˆˆ 
output
ˆˆ 
=
ˆˆ 
new
ˆˆ 
Vector3
ˆˆ $
(
ˆˆ$ %
(
ˆˆ% &
position
ˆˆ& .
.
ˆˆ. /
x
ˆˆ/ 0
-
ˆˆ1 2
bounds
ˆˆ3 9
.
ˆˆ9 :
x
ˆˆ: ;
)
ˆˆ; <
/
ˆˆ= >
(
ˆˆ? @
bounds
ˆˆ@ F
.
ˆˆF G
xMax
ˆˆG K
-
ˆˆL M
bounds
ˆˆN T
.
ˆˆT U
x
ˆˆU V
)
ˆˆV W
,
ˆˆW X
(
ˆˆY Z
position
ˆˆZ b
.
ˆˆb c
y
ˆˆc d
-
ˆˆe f
bounds
ˆˆg m
.
ˆˆm n
y
ˆˆn o
)
ˆˆo p
/
ˆˆq r
(
ˆˆs t
bounds
ˆˆt z
.
ˆˆz {
yMax
ˆˆ{ 
-ˆˆÄ Å
boundsˆˆÇ à
.ˆˆà â
yˆˆâ ä
)ˆˆä ã
)ˆˆã å
;ˆˆå ç
output
˜˜ 
.
˜˜ 
x
˜˜ 
=
˜˜ 
output
˜˜ 
.
˜˜ 
x
˜˜ 
*
˜˜  !
(
˜˜" #
m_CurveArea
˜˜# .
.
˜˜. /
xMax
˜˜/ 3
-
˜˜4 5
m_CurveArea
˜˜6 A
.
˜˜A B
xMin
˜˜B F
)
˜˜F G
+
˜˜H I
m_CurveArea
˜˜J U
.
˜˜U V
xMin
˜˜V Z
;
˜˜Z [
output
¯¯ 
.
¯¯ 
y
¯¯ 
=
¯¯ 
(
¯¯ 
$num
¯¯ 
-
¯¯ 
output
¯¯ #
.
¯¯# $
y
¯¯$ %
)
¯¯% &
*
¯¯' (
(
¯¯) *
m_CurveArea
¯¯* 5
.
¯¯5 6
yMax
¯¯6 :
-
¯¯; <
m_CurveArea
¯¯= H
.
¯¯H I
yMin
¯¯I M
)
¯¯M N
+
¯¯O P
m_CurveArea
¯¯Q \
.
¯¯\ ]
yMin
¯¯] a
;
¯¯a b
return
˘˘ 
output
˘˘ 
;
˘˘ 
}
˙˙ 	
Vector3
¸¸ 
CanvasToCurve
¸¸ 
(
¸¸ 
Vector3
¸¸ %
position
¸¸& .
)
¸¸. /
{
˝˝ 	
var
˛˛ 
bounds
˛˛ 
=
˛˛ 
settings
˛˛ !
.
˛˛! "
bounds
˛˛" (
;
˛˛( )
var
ˇˇ 
output
ˇˇ 
=
ˇˇ 
position
ˇˇ !
;
ˇˇ! "
output
ÄÄ 
.
ÄÄ 
x
ÄÄ 
=
ÄÄ 
(
ÄÄ 
output
ÄÄ 
.
ÄÄ 
x
ÄÄ  
-
ÄÄ! "
m_CurveArea
ÄÄ# .
.
ÄÄ. /
xMin
ÄÄ/ 3
)
ÄÄ3 4
/
ÄÄ5 6
(
ÄÄ7 8
m_CurveArea
ÄÄ8 C
.
ÄÄC D
xMax
ÄÄD H
-
ÄÄI J
m_CurveArea
ÄÄK V
.
ÄÄV W
xMin
ÄÄW [
)
ÄÄ[ \
;
ÄÄ\ ]
output
ÅÅ 
.
ÅÅ 
y
ÅÅ 
=
ÅÅ 
(
ÅÅ 
output
ÅÅ 
.
ÅÅ 
y
ÅÅ  
-
ÅÅ! "
m_CurveArea
ÅÅ# .
.
ÅÅ. /
yMin
ÅÅ/ 3
)
ÅÅ3 4
/
ÅÅ5 6
(
ÅÅ7 8
m_CurveArea
ÅÅ8 C
.
ÅÅC D
yMax
ÅÅD H
-
ÅÅI J
m_CurveArea
ÅÅK V
.
ÅÅV W
yMin
ÅÅW [
)
ÅÅ[ \
;
ÅÅ\ ]
output
ÇÇ 
.
ÇÇ 
x
ÇÇ 
=
ÇÇ 
Mathf
ÇÇ 
.
ÇÇ 
Lerp
ÇÇ !
(
ÇÇ! "
bounds
ÇÇ" (
.
ÇÇ( )
x
ÇÇ) *
,
ÇÇ* +
bounds
ÇÇ, 2
.
ÇÇ2 3
xMax
ÇÇ3 7
,
ÇÇ7 8
output
ÇÇ9 ?
.
ÇÇ? @
x
ÇÇ@ A
)
ÇÇA B
;
ÇÇB C
output
ÉÉ 
.
ÉÉ 
y
ÉÉ 
=
ÉÉ 
Mathf
ÉÉ 
.
ÉÉ 
Lerp
ÉÉ !
(
ÉÉ! "
bounds
ÉÉ" (
.
ÉÉ( )
yMax
ÉÉ) -
,
ÉÉ- .
bounds
ÉÉ/ 5
.
ÉÉ5 6
y
ÉÉ6 7
,
ÉÉ7 8
output
ÉÉ9 ?
.
ÉÉ? @
y
ÉÉ@ A
)
ÉÉA B
;
ÉÉB C
return
ÑÑ 
output
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
Vector3
áá "
CurveTangentToCanvas
áá $
(
áá$ %
float
áá% *
tangent
áá+ 2
)
áá2 3
{
àà 	
if
ââ 
(
ââ 
!
ââ 
float
ââ 
.
ââ 

IsInfinity
ââ !
(
ââ! "
tangent
ââ" )
)
ââ) *
)
ââ* +
{
ää 
var
ãã 
bounds
ãã 
=
ãã 
settings
ãã %
.
ãã% &
bounds
ãã& ,
;
ãã, -
float
åå 
ratio
åå 
=
åå 
(
åå 
m_CurveArea
åå *
.
åå* +
width
åå+ 0
/
åå1 2
m_CurveArea
åå3 >
.
åå> ?
height
åå? E
)
ååE F
/
ååG H
(
ååI J
(
ååJ K
bounds
ååK Q
.
ååQ R
xMax
ååR V
-
ååW X
bounds
ååY _
.
åå_ `
x
åå` a
)
ååa b
/
ååc d
(
ååe f
bounds
ååf l
.
åål m
yMax
ååm q
-
åår s
bounds
ååt z
.
ååz {
y
åå{ |
)
åå| }
)
åå} ~
;
åå~ 
return
çç 
new
çç 
Vector3
çç "
(
çç" #
$num
çç# %
,
çç% &
-
çç' (
tangent
çç( /
/
çç0 1
ratio
çç2 7
)
çç7 8
.
çç8 9

normalized
çç9 C
;
ççC D
}
éé 
return
êê 
Vector3
êê 
.
êê 
up
êê 
;
êê 
}
ëë 	
Vector3
ìì 
[
ìì 
]
ìì 
BezierSegment
ìì 
(
ìì  
Keyframe
ìì  (
start
ìì) .
,
ìì. /
Keyframe
ìì0 8
end
ìì9 <
)
ìì< =
{
îî 	
var
ïï 
segment
ïï 
=
ïï 
new
ïï 
Vector3
ïï %
[
ïï% &
$num
ïï& '
]
ïï' (
;
ïï( )
segment
óó 
[
óó 
$num
óó 
]
óó 
=
óó 
CurveToCanvas
óó &
(
óó& '
new
óó' *
Vector3
óó+ 2
(
óó2 3
start
óó3 8
.
óó8 9
time
óó9 =
,
óó= >
start
óó? D
.
óóD E
value
óóE J
)
óóJ K
)
óóK L
;
óóL M
segment
òò 
[
òò 
$num
òò 
]
òò 
=
òò 
CurveToCanvas
òò &
(
òò& '
new
òò' *
Vector3
òò+ 2
(
òò2 3
end
òò3 6
.
òò6 7
time
òò7 ;
,
òò; <
end
òò= @
.
òò@ A
value
òòA F
)
òòF G
)
òòG H
;
òòH I
float
öö 
middle
öö 
=
öö 
start
öö  
.
öö  !
time
öö! %
+
öö& '
(
öö( )
(
öö) *
end
öö* -
.
öö- .
time
öö. 2
-
öö3 4
start
öö5 :
.
öö: ;
time
öö; ?
)
öö? @
*
ööA B
$num
ööC L
)
ööL M
;
ööM N
float
õõ 
middle2
õõ 
=
õõ 
start
õõ !
.
õõ! "
time
õõ" &
+
õõ' (
(
õõ) *
(
õõ* +
end
õõ+ .
.
õõ. /
time
õõ/ 3
-
õõ4 5
start
õõ6 ;
.
õõ; <
time
õõ< @
)
õõ@ A
*
õõB C
$num
õõD M
)
õõM N
;
õõN O
segment
ùù 
[
ùù 
$num
ùù 
]
ùù 
=
ùù 
CurveToCanvas
ùù &
(
ùù& '
new
ùù' *
Vector3
ùù+ 2
(
ùù2 3
middle
ùù3 9
,
ùù9 :
ProjectTangent
ùù; I
(
ùùI J
start
ùùJ O
.
ùùO P
time
ùùP T
,
ùùT U
start
ùùV [
.
ùù[ \
value
ùù\ a
,
ùùa b
start
ùùc h
.
ùùh i

outTangent
ùùi s
,
ùùs t
middle
ùùu {
)
ùù{ |
)
ùù| }
)
ùù} ~
;
ùù~ 
segment
ûû 
[
ûû 
$num
ûû 
]
ûû 
=
ûû 
CurveToCanvas
ûû &
(
ûû& '
new
ûû' *
Vector3
ûû+ 2
(
ûû2 3
middle2
ûû3 :
,
ûû: ;
ProjectTangent
ûû< J
(
ûûJ K
end
ûûK N
.
ûûN O
time
ûûO S
,
ûûS T
end
ûûU X
.
ûûX Y
value
ûûY ^
,
ûû^ _
end
ûû` c
.
ûûc d
	inTangent
ûûd m
,
ûûm n
middle2
ûûo v
)
ûûv w
)
ûûw x
)
ûûx y
;
ûûy z
return
†† 
segment
†† 
;
†† 
}
°° 	
Vector3
££ 
[
££ 
]
££ 
HardSegment
££ 
(
££ 
Keyframe
££ &
start
££' ,
,
££, -
Keyframe
££. 6
end
££7 :
)
££: ;
{
§§ 	
var
•• 
segment
•• 
=
•• 
new
•• 
Vector3
•• %
[
••% &
$num
••& '
]
••' (
;
••( )
segment
ßß 
[
ßß 
$num
ßß 
]
ßß 
=
ßß 
CurveToCanvas
ßß &
(
ßß& '
start
ßß' ,
)
ßß, -
;
ßß- .
segment
®® 
[
®® 
$num
®® 
]
®® 
=
®® 
CurveToCanvas
®® &
(
®®& '
new
®®' *
Vector3
®®+ 2
(
®®2 3
end
®®3 6
.
®®6 7
time
®®7 ;
,
®®; <
start
®®= B
.
®®B C
value
®®C H
)
®®H I
)
®®I J
;
®®J K
segment
©© 
[
©© 
$num
©© 
]
©© 
=
©© 
CurveToCanvas
©© &
(
©©& '
end
©©' *
)
©©* +
;
©©+ ,
return
´´ 
segment
´´ 
;
´´ 
}
¨¨ 	
float
ÆÆ 
ProjectTangent
ÆÆ 
(
ÆÆ 
float
ÆÆ "

inPosition
ÆÆ# -
,
ÆÆ- .
float
ÆÆ/ 4
inValue
ÆÆ5 <
,
ÆÆ< =
float
ÆÆ> C
	inTangent
ÆÆD M
,
ÆÆM N
float
ÆÆO T
projPosition
ÆÆU a
)
ÆÆa b
{
ØØ 	
return
∞∞ 
inValue
∞∞ 
+
∞∞ 
(
∞∞ 
(
∞∞ 
projPosition
∞∞ +
-
∞∞, -

inPosition
∞∞. 8
)
∞∞8 9
*
∞∞: ;
	inTangent
∞∞< E
)
∞∞E F
;
∞∞F G
}
±± 	
float
≥≥ 
EvaluateTangent
≥≥ 
(
≥≥ 
AnimationCurve
≥≥ ,
curve
≥≥- 2
,
≥≥2 3
float
≥≥4 9
time
≥≥: >
)
≥≥> ?
{
¥¥ 	
int
µµ 
prev
µµ 
=
µµ 
-
µµ 
$num
µµ 
,
µµ 
next
µµ 
=
µµ  !
$num
µµ" #
;
µµ# $
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ 
curve
∂∂  %
.
∂∂% &
keys
∂∂& *
.
∂∂* +
Length
∂∂+ 1
;
∂∂1 2
i
∂∂3 4
++
∂∂4 6
)
∂∂6 7
{
∑∑ 
if
∏∏ 
(
∏∏ 
time
∏∏ 
>
∏∏ 
curve
∏∏  
.
∏∏  !
keys
∏∏! %
[
∏∏% &
i
∏∏& '
]
∏∏' (
.
∏∏( )
time
∏∏) -
)
∏∏- .
{
ππ 
prev
∫∫ 
=
∫∫ 
i
∫∫ 
;
∫∫ 
next
ªª 
=
ªª 
i
ªª 
+
ªª 
$num
ªª  
;
ªª  !
}
ºº 
else
ΩΩ 
break
ΩΩ 
;
ΩΩ 
}
ææ 
if
¿¿ 
(
¿¿ 
next
¿¿ 
==
¿¿ 
$num
¿¿ 
)
¿¿ 
return
¡¡ 
$num
¡¡ 
;
¡¡ 
if
√√ 
(
√√ 
prev
√√ 
==
√√ 
curve
√√ 
.
√√ 
keys
√√ "
.
√√" #
Length
√√# )
-
√√* +
$num
√√, -
)
√√- .
return
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
const
∆∆ 
float
∆∆ 
kD
∆∆ 
=
∆∆ 
$num
∆∆ "
;
∆∆" #
float
«« 
tp
«« 
=
«« 
Mathf
«« 
.
«« 
Max
««  
(
««  !
time
««! %
-
««& '
kD
««( *
,
««* +
curve
««, 1
.
««1 2
keys
««2 6
[
««6 7
prev
««7 ;
]
««; <
.
««< =
time
««= A
)
««A B
;
««B C
float
»» 
tn
»» 
=
»» 
Mathf
»» 
.
»» 
Min
»»  
(
»»  !
time
»»! %
+
»»& '
kD
»»( *
,
»»* +
curve
»», 1
.
»»1 2
keys
»»2 6
[
»»6 7
next
»»7 ;
]
»»; <
.
»»< =
time
»»= A
)
»»A B
;
»»B C
float
   
vp
   
=
   
curve
   
.
   
Evaluate
   %
(
  % &
tp
  & (
)
  ( )
;
  ) *
float
ÀÀ 
vn
ÀÀ 
=
ÀÀ 
curve
ÀÀ 
.
ÀÀ 
Evaluate
ÀÀ %
(
ÀÀ% &
tn
ÀÀ& (
)
ÀÀ( )
;
ÀÀ) *
if
ÕÕ 
(
ÕÕ 
Mathf
ÕÕ 
.
ÕÕ 
Approximately
ÕÕ #
(
ÕÕ# $
tn
ÕÕ$ &
,
ÕÕ& '
tp
ÕÕ( *
)
ÕÕ* +
)
ÕÕ+ ,
return
ŒŒ 
float
ŒŒ 
.
ŒŒ 
PositiveInfinity
ŒŒ -
;
ŒŒ- .
return
–– 
(
–– 
vn
–– 
-
–– 
vp
–– 
)
–– 
/
–– 
(
––  
tn
––  "
-
––# $
tp
––% '
)
––' (
;
––( )
}
—— 	
}
““ 
}”” áY
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\IESImporter.cs
	namespace

 	
UnityEditor


 
.

 
	Rendering

 
{ 
[ 
System 
. 
Serializable 
] 
[ 
ScriptedImporter 
( 
$num 
, 
$str 
) 
]  
public 

partial 
class 
IESImporter $
:% &
ScriptedImporter' 7
{ 
public 
	IESEngine 
engine 
=  !
new" %
	IESEngine& /
(/ 0
)0 1
;1 2
public 
IESMetaData 
iesMetaData &
=' (
new) ,
IESMetaData- 8
(8 9
)9 :
;: ;
public!! 
static!! 
event!! 
System!! "
.!!" #
Action!!# )
<!!) *
AssetImportContext!!* <
,!!< =
string!!> D
,!!D E
bool!!F J
,!!J K
string!!L R
,!!R S
float!!T Y
,!!Y Z
Light!![ `
,!!` a
Texture!!b i
>!!i j,
createRenderPipelinePrefabLight	!!k ä
;
!!ä ã
public'' 
override'' 
void'' 
OnImportAsset'' *
(''* +
AssetImportContext''+ =
ctx''> A
)''A B
{(( 	
engine)) 
.)) !
TextureGenerationType)) (
=))) *
TextureImporterType))+ >
.))> ?
Default))? F
;))F G
Texture++ 
cookieTextureCube++ %
=++& '
null++( ,
;++, -
Texture,, 
cookieTexture2D,, #
=,,$ %
null,,& *
;,,* +
string.. 
iesFilePath.. 
=..  
Path..! %
...% &
Combine..& -
(..- .
Path... 2
...2 3
GetDirectoryName..3 C
(..C D
Application..D O
...O P
dataPath..P X
)..X Y
,..Y Z
ctx..[ ^
...^ _
	assetPath.._ h
)..h i
;..i j
string// 
errorMessage// 
=//  !
engine//" (
.//( )
ReadFile//) 1
(//1 2
iesFilePath//2 =
)//= >
;//> ?
if11 
(11 
string11 
.11 
IsNullOrEmpty11 $
(11$ %
errorMessage11% 1
)111 2
)112 3
{22 
iesMetaData33 
.33 
FileFormatVersion33 -
=33. /
engine330 6
.336 7
FileFormatVersion337 H
;33H I
iesMetaData44 
.44 
IESPhotometricType44 .
=44/ 0
engine441 7
.447 8
GetPhotometricType448 J
(44J K
)44K L
;44L M
iesMetaData55 
.55 
Manufacturer55 (
=55) *
engine55+ 1
.551 2
GetKeywordValue552 A
(55A B
$str55B K
)55K L
;55L M
iesMetaData66 
.66 "
LuminaireCatalogNumber66 2
=663 4
engine665 ;
.66; <
GetKeywordValue66< K
(66K L
$str66L T
)66T U
;66U V
iesMetaData77 
.77  
LuminaireDescription77 0
=771 2
engine773 9
.779 :
GetKeywordValue77: I
(77I J
$str77J U
)77U V
;77V W
iesMetaData88 
.88 
LampCatalogNumber88 -
=88. /
engine880 6
.886 7
GetKeywordValue887 F
(88F G
$str88G P
)88P Q
;88Q R
iesMetaData99 
.99 
LampDescription99 +
=99, -
engine99. 4
.994 5
GetKeywordValue995 D
(99D E
$str99E K
)99K L
;99L M
(;; 
iesMetaData;; 
.;; 
IESMaximumIntensity;; 0
,;;0 1
iesMetaData;;2 =
.;;= >#
IESMaximumIntensityUnit;;> U
);;U V
=;;W X
engine;;Y _
.;;_ `
GetMaximumIntensity;;` s
(;;s t
);;t u
;;;u v
string== 
warningMessage== %
;==% &
(?? 
warningMessage?? 
,??  
cookieTextureCube??! 2
)??2 3
=??4 5
engine??6 <
.??< =
GenerateCubeCookie??= O
(??O P
iesMetaData??P [
.??[ \
CookieCompression??\ m
,??m n
(??o p
int??p s
)??s t
iesMetaData??t 
.	?? Ä
iesSize
??Ä á
)
??á à
;
??à â
if@@ 
(@@ 
!@@ 
string@@ 
.@@ 
IsNullOrEmpty@@ )
(@@) *
warningMessage@@* 8
)@@8 9
)@@9 :
{AA 
ctxBB 
.BB 
LogImportWarningBB (
(BB( )
$"BB) +7
+Cannot properly generate IES Cube texture: BB+ V
{BBV W
warningMessageBBW e
}BBe f
"BBf g
)BBg h
;BBh i
}CC 
cookieTextureCubeDD !
.DD! " 
IncrementUpdateCountDD" 6
(DD6 7
)DD7 8
;DD8 9
(FF 
warningMessageFF 
,FF  
cookieTexture2DFF! 0
)FF0 1
=FF2 3
engineFF4 :
.FF: ;
Generate2DCookieFF; K
(FFK L
iesMetaDataFFL W
.FFW X
CookieCompressionFFX i
,FFi j
iesMetaDataFFk v
.FFv w
	SpotAngle	FFw Ä
,
FFÄ Å
(
FFÇ É
int
FFÉ Ü
)
FFÜ á
iesMetaData
FFá í
.
FFí ì
iesSize
FFì ö
,
FFö õ
iesMetaData
FFú ß
.
FFß ®#
ApplyLightAttenuation
FF® Ω
)
FFΩ æ
;
FFæ ø
ifGG 
(GG 
!GG 
stringGG 
.GG 
IsNullOrEmptyGG )
(GG) *
warningMessageGG* 8
)GG8 9
)GG9 :
{HH 
ctxII 
.II 
LogImportWarningII (
(II( )
$"II) +5
)Cannot properly generate IES 2D texture: II+ T
{IIT U
warningMessageIIU c
}IIc d
"IId e
)IIe f
;IIf g
}JJ 
cookieTexture2DKK 
.KK   
IncrementUpdateCountKK  4
(KK4 5
)KK5 6
;KK6 7
}LL 
elseMM 
{NN 
ctxOO 
.OO 
LogImportErrorOO "
(OO" #
$"OO# %"
Cannot read IES file 'OO% ;
{OO; <
iesFilePathOO< G
}OOG H
': OOH K
{OOK L
errorMessageOOL X
}OOX Y
"OOY Z
)OOZ [
;OO[ \
}PP 
stringRR 
iesFileNameRR 
=RR  
PathRR! %
.RR% &'
GetFileNameWithoutExtensionRR& A
(RRA B
ctxRRB E
.RRE F
	assetPathRRF O
)RRO P
;RRP Q
varTT 
	iesObjectTT 
=TT 
ScriptableObjectTT ,
.TT, -
CreateInstanceTT- ;
<TT; <
	IESObjectTT< E
>TTE F
(TTF G
)TTG H
;TTH I
	iesObjectUU 
.UU 
iesMetaDataUU !
=UU" #
iesMetaDataUU$ /
;UU/ 0

GameObjectVV 
lightObjectVV "
=VV# $
newVV% (

GameObjectVV) 3
(VV3 4
iesFileNameVV4 ?
)VV? @
;VV@ A
lightObjectXX 
.XX 
	transformXX !
.XX! "
localEulerAnglesXX" 2
=XX3 4
newXX5 8
Vector3XX9 @
(XX@ A
$numXXA D
,XXD E
$numXXF H
,XXH I
iesMetaDataXXJ U
.XXU V 
LightAimAxisRotationXXV j
)XXj k
;XXk l
LightZZ 
lightZZ 
=ZZ 
lightObjectZZ %
.ZZ% &
AddComponentZZ& 2
<ZZ2 3
LightZZ3 8
>ZZ8 9
(ZZ9 :
)ZZ: ;
;ZZ; <
light[[ 
.[[ 
type[[ 
=[[ 
([[ 
iesMetaData[[ %
.[[% &
PrefabLightType[[& 5
==[[6 8
IESLightType[[9 E
.[[E F
Point[[F K
)[[K L
?[[M N
	LightType[[O X
.[[X Y
Point[[Y ^
:[[_ `
	LightType[[a j
.[[j k
Spot[[k o
;[[o p
light\\ 
.\\ 
	intensity\\ 
=\\ 
$num\\  
;\\  !
light]] 
.]] 
range]] 
=]] 
$num]] 
;]] 
light^^ 
.^^ 
	spotAngle^^ 
=^^ 
iesMetaData^^ )
.^^) *
	SpotAngle^^* 3
;^^3 4
ctx`` 
.`` 
AddObjectToAsset``  
(``  !
$str``! &
,``& '
	iesObject``( 1
)``1 2
;``2 3
ctxaa 
.aa 
SetMainObjectaa 
(aa 
	iesObjectaa '
)aa' (
;aa( )
IESImportercc 
.cc +
createRenderPipelinePrefabLightcc 7
?cc7 8
.cc8 9
Invokecc9 ?
(cc? @
ctxcc@ C
,ccC D
iesFileNameccE P
,ccP Q
iesMetaDataccR ]
.cc] ^"
UseIESMaximumIntensitycc^ t
,cct u
iesMetaData	ccv Å
.
ccÅ Ç%
IESMaximumIntensityUnit
ccÇ ô
,
ccô ö
iesMetaData
ccõ ¶
.
cc¶ ß!
IESMaximumIntensity
ccß ∫
,
cc∫ ª
light
ccº ¡
,
cc¡ ¬
(
cc√ ƒ
iesMetaData
ccƒ œ
.
ccœ –
PrefabLightType
cc– ﬂ
==
cc‡ ‚
IESLightType
cc„ Ô
.
ccÔ 
Point
cc ı
)
ccı ˆ
?
cc˜ ¯
cookieTextureCube
cc˘ ä
:
ccã å
cookieTexture2D
ccç ú
)
ccú ù
;
ccù û
ifee 
(ee 
cookieTextureCubeee !
!=ee" $
nullee% )
)ee) *
{ff 
cookieTextureCubegg !
.gg! "
namegg" &
=gg' (
iesFileNamegg) 4
+gg5 6
$strgg7 B
;ggB C
ctxhh 
.hh 
AddObjectToAssethh $
(hh$ %
cookieTextureCubehh% 6
.hh6 7
namehh7 ;
,hh; <
cookieTextureCubehh= N
)hhN O
;hhO P
}ii 
ifjj 
(jj 
cookieTexture2Djj 
!=jj  "
nulljj# '
)jj' (
{kk 
cookieTexture2Dll 
.ll  
namell  $
=ll% &
iesFileNamell' 2
+ll3 4
$strll5 >
;ll> ?
ctxmm 
.mm 
AddObjectToAssetmm $
(mm$ %
cookieTexture2Dmm% 4
.mm4 5
namemm5 9
,mm9 :
cookieTexture2Dmm; J
)mmJ K
;mmK L
}nn 
}oo 	
}pp 
}qq ◊é
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\DisplayWindow.cs
	namespace		 	
UnityEditor		
 
.		 
	Rendering		 
.		  
LookDev		  '
{

 
public 

	interface 
IViewDisplayer #
{ 
Rect 
GetRect 
(  
ViewCompositionIndex )
index* /
)/ 0
;0 1
void 

SetTexture 
(  
ViewCompositionIndex ,
index- 2
,2 3
Texture4 ;
texture< C
)C D
;D E
void 
Repaint 
( 
) 
; 
event 
Action 
< 
Layout 
, 
	SidePanel &
>& '
OnLayoutChanged( 7
;7 8
event 
Action +
OnRenderDocAcquisitionTriggered 4
;4 5
event!! 
Action!! 
<!! 
IMouseEvent!!  
>!!  !
OnMouseEventInView!!" 4
;!!4 5
event$$ 
Action$$ 
<$$ 

GameObject$$ 
,$$   
ViewCompositionIndex$$! 5
,$$5 6
Vector2$$7 >
>$$> ?"
OnChangingObjectInView$$@ V
;$$V W
event&& 
Action&& 
<&& 
UnityEngine&&  
.&&  !
Object&&! '
,&&' ( 
ViewCompositionIndex&&) =
,&&= >
Vector2&&? F
>&&F G'
OnChangingEnvironmentInView&&H c
;&&c d
event)) 
Action)) 
OnClosed)) 
;)) 
event,, 
Action,, 
OnUpdateRequested,, &
;,,& '
}-- 
partial// 
class// 
DisplayWindow// 
://  !
EditorWindow//" .
,//. /
IViewDisplayer//0 >
{00 
static11 
partial11 
class11 
Style11 "
{22 	
internal33 
const33 
string33 !
k_IconFolder33" .
=33/ 0
$str331 r
;33r s
internal44 
const44 
string44 !
k_uss44" '
=44( )
$str44* v
;44v w
internal55 
const55 
string55 !#
k_uss_personal_overload55" 9
=55: ;
$str	55< ï
;
55ï ñ
internal77 
static77 
readonly77 $

GUIContent77% / 
k_WindowTitleAndIcon770 D
=77E F
EditorGUIUtility77G W
.77W X!
TrTextContentWithIcon77X m
(77m n
$str77n x
,77x y
CoreEditorUtils	77z â
.
77â ä
LoadIcon
77ä í
(
77í ì
k_IconFolder
77ì ü
,
77ü †
$str
77° ™
,
77™ ´
forceLowRes
77¨ ∑
:
77∑ ∏
true
77π Ω
)
77Ω æ
)
77æ ø
;
77ø ¿
internal99 
static99 
readonly99 $
(99% &
	Texture2D99& /
icon990 4
,994 5
string996 <
tooltip99= D
)99D E
k_Layout1Icon99F S
=99T U
(:: 
CoreEditorUtils::  
.::  !
LoadIcon::! )
(::) *
Style::* /
.::/ 0
k_IconFolder::0 <
,::< =
$str::> G
,::G H
forceLowRes::I T
:::T U
true::V Z
)::Z [
,::[ \
$str;; 
);; 
;;; 
internal<< 
static<< 
readonly<< $
(<<% &
	Texture2D<<& /
icon<<0 4
,<<4 5
string<<6 <
tooltip<<= D
)<<D E
k_Layout2Icon<<F S
=<<T U
(== 
CoreEditorUtils==  
.==  !
LoadIcon==! )
(==) *
Style==* /
.==/ 0
k_IconFolder==0 <
,==< =
$str==> G
,==G H
forceLowRes==I T
:==T U
true==V Z
)==Z [
,==[ \
$str>> 
)>> 
;>> 
internal?? 
static?? 
readonly?? $
(??% &
	Texture2D??& /
icon??0 4
,??4 5
string??6 <
tooltip??= D
)??D E 
k_LayoutVerticalIcon??F Z
=??[ \
(@@ 
CoreEditorUtils@@  
.@@  !
LoadIcon@@! )
(@@) *
Style@@* /
.@@/ 0
k_IconFolder@@0 <
,@@< =
$str@@> N
,@@N O
forceLowRes@@P [
:@@[ \
true@@] a
)@@a b
,@@b c
$strAA -
)AA- .
;AA. /
internalBB 
staticBB 
readonlyBB $
(BB% &
	Texture2DBB& /
iconBB0 4
,BB4 5
stringBB6 <
tooltipBB= D
)BBD E"
k_LayoutHorizontalIconBBF \
=BB] ^
(CC 
CoreEditorUtilsCC  
.CC  !
LoadIconCC! )
(CC) *
StyleCC* /
.CC/ 0
k_IconFolderCC0 <
,CC< =
$strCC> P
,CCP Q
forceLowResCCR ]
:CC] ^
trueCC_ c
)CCc d
,CCd e
$strDD /
)DD/ 0
;DD0 1
internalEE 
staticEE 
readonlyEE $
(EE% &
	Texture2DEE& /
iconEE0 4
,EE4 5
stringEE6 <
tooltipEE= D
)EED E
k_LayoutStackIconEEF W
=EEX Y
(FF 
CoreEditorUtilsFF  
.FF  !
LoadIconFF! )
(FF) *
StyleFF* /
.FF/ 0
k_IconFolderFF0 <
,FF< =
$strFF> L
,FFL M
forceLowResFFN Y
:FFY Z
trueFF[ _
)FF_ `
,FF` a
$strGG $
)GG$ %
;GG% &
internalII 
staticII 
readonlyII $
	Texture2DII% .
k_Camera1IconII/ <
=II= >
CoreEditorUtilsII? N
.IIN O
LoadIconIIO W
(IIW X
StyleIIX ]
.II] ^
k_IconFolderII^ j
,IIj k
$strIIl u
,IIu v
forceLowRes	IIw Ç
:
IIÇ É
true
IIÑ à
)
IIà â
;
IIâ ä
internalJJ 
staticJJ 
readonlyJJ $
	Texture2DJJ% .
k_Camera2IconJJ/ <
=JJ= >
CoreEditorUtilsJJ? N
.JJN O
LoadIconJJO W
(JJW X
StyleJJX ]
.JJ] ^
k_IconFolderJJ^ j
,JJj k
$strJJl u
,JJu v
forceLowRes	JJw Ç
:
JJÇ É
true
JJÑ à
)
JJà â
;
JJâ ä
internalKK 
staticKK 
readonlyKK $
	Texture2DKK% .

k_LinkIconKK/ 9
=KK: ;
CoreEditorUtilsKK< K
.KKK L
LoadIconKKL T
(KKT U
StyleKKU Z
.KKZ [
k_IconFolderKK[ g
,KKg h
$strKKi o
,KKo p
forceLowResKKq |
:KK| }
true	KK~ Ç
)
KKÇ É
;
KKÉ Ñ
internalLL 
staticLL 
readonlyLL $
	Texture2DLL% .
k_RightIconLL/ :
=LL; <
CoreEditorUtilsLL= L
.LLL M
LoadIconLLM U
(LLU V
StyleLLV [
.LL[ \
k_IconFolderLL\ h
,LLh i
$strLLj v
,LLv w
forceLowRes	LLx É
:
LLÉ Ñ
true
LLÖ â
)
LLâ ä
;
LLä ã
internalMM 
staticMM 
readonlyMM $
	Texture2DMM% .

k_LeftIconMM/ 9
=MM: ;
CoreEditorUtilsMM< K
.MMK L
LoadIconMML T
(MMT U
StyleMMU Z
.MMZ [
k_IconFolderMM[ g
,MMg h
$strMMi t
,MMt u
forceLowRes	MMv Å
:
MMÅ Ç
true
MMÉ á
)
MMá à
;
MMà â
internalOO 
staticOO 
readonlyOO $
	Texture2DOO% .
k_RenderdocIconOO/ >
=OO? @
CoreEditorUtilsOOA P
.OOP Q
LoadIconOOQ Y
(OOY Z
StyleOOZ _
.OO_ `
k_IconFolderOO` l
,OOl m
$strOOn y
,OOy z
forceLowRes	OO{ Ü
:
OOÜ á
true
OOà å
)
OOå ç
;
OOç é
internalPP 
constPP 
stringPP !
k_RenderDocLabelPP" 2
=PP3 4
$strPP5 ?
;PP? @
internalRR 
constRR 
stringRR !
k_CameraSyncTooltipRR" 5
=RR6 7
$strRR8 c
;RRc d
internalSS 
constSS 
stringSS ! 
k_CameraMenuSync1On2SS" 6
=SS7 8
$strSS9 W
;SSW X
internalTT 
constTT 
stringTT ! 
k_CameraMenuSync2On1TT" 6
=TT7 8
$strTT9 W
;TTW X
internalUU 
constUU 
stringUU !
k_CameraMenuResetUU" 3
=UU4 5
$strUU6 E
;UUE F
internalWW 
constWW 
stringWW !&
k_EnvironmentSidePanelNameWW" <
=WW= >
$strWW? L
;WWL M
internalXX 
constXX 
stringXX ! 
k_DebugSidePanelNameXX" 6
=XX7 8
$strXX9 @
;XX@ A
internalZZ 
constZZ 
stringZZ !
k_DragAndDropObjectZZ" 5
=ZZ6 7
$strZZ8 S
;ZZS T
internal[[ 
const[[ 
string[[ !$
k_DragAndDropEnvironment[[" :
=[[; <
$str[[= m
;[[m n
internal`` 
const`` 
string`` !
k_MainContainerName``" 5
=``6 7
$str``8 G
;``G H
internalaa 
constaa 
stringaa !
k_ViewContainerNameaa" 5
=aa6 7
$straa8 G
;aaG H
internalbb 
constbb 
stringbb !
k_FirstViewNamebb" 1
=bb2 3
$strbb4 ?
;bb? @
internalcc 
constcc 
stringcc !
k_SecondViewNamecc" 2
=cc3 4
$strcc5 A
;ccA B
internaldd 
constdd 
stringdd !
k_ToolbarNamedd" /
=dd0 1
$strdd2 ;
;dd; <
internalee 
constee 
stringee !
k_ToolbarRadioNameee" 4
=ee5 6
$stree7 E
;eeE F
internalff 
constff 
stringff !
k_TabsRadioNameff" 1
=ff2 3
$strff4 ?
;ff? @
internalgg 
constgg 
stringgg !
k_SideToolbarNamegg" 3
=gg4 5
$strgg6 C
;ggC D
internalhh 
consthh 
stringhh !"
k_SharedContainerClasshh" 8
=hh9 :
$strhh; F
;hhF G
internalii 
constii 
stringii !
k_FirstViewClassii" 2
=ii3 4
$strii5 @
;ii@ A
internaljj 
constjj 
stringjj !
k_SecondViewsClassjj" 4
=jj5 6
$strjj7 C
;jjC D
internalkk 
constkk 
stringkk ! 
k_VerticalViewsClasskk" 6
=kk7 8
$strkk9 H
;kkH I
internalll 
constll 
stringll ! 
k_DebugContainerNamell" 6
=ll7 8
$strll9 I
;llI J
internalmm 
constmm 
stringmm !!
k_ShowDebugPanelClassmm" 7
=mm8 9
$strmm: J
;mmJ K
internaloo 
constoo 
stringoo !&
k_EnvironmentContainerNameoo" <
=oo= >
$stroo? U
;ooU V
internalpp 
constpp 
stringpp !'
k_ShowEnvironmentPanelClasspp" =
=pp> ?
$strpp@ V
;ppV W
internalrr 
constrr 
stringrr !
k_CameraMenuNamerr" 2
=rr3 4
$strrr5 A
;rrA B
internalss 
constss 
stringss !
k_CameraButtonNamess" 4
=ss5 6
$strss7 E
;ssE F
internaltt 
consttt 
stringtt !!
k_CameraSeparatorNamett" 7
=tt8 9
$strtt: K
;ttK L
internalvv 
constvv 
stringvv !"
k_RenderDocContentNamevv" 8
=vv9 :
$strvv; N
;vvN O
}ww 	
VisualElementyy 
m_MainContaineryy %
;yy% &
VisualElementzz 
m_ViewContainerzz %
;zz% &
VisualElement{{ 
m_DebugContainer{{ &
;{{& '
Label|| 
m_NoEnvironmentList|| !
;||! "
Label}} 
m_NoObject1}} 
;}} 
Label~~ 
m_NoEnvironment1~~ 
;~~ 
Label 
m_NoObject2 
; 
Label
ÄÄ 
m_NoEnvironment2
ÄÄ 
;
ÄÄ 
Image
ÇÇ 
[
ÇÇ 
]
ÇÇ 
m_Views
ÇÇ 
=
ÇÇ 
new
ÇÇ 
Image
ÇÇ #
[
ÇÇ# $
$num
ÇÇ$ %
]
ÇÇ% &
;
ÇÇ& '
LayoutContext
ÑÑ 
layout
ÑÑ 
=>
ÖÖ 
LookDev
ÖÖ 
.
ÖÖ 
currentContext
ÖÖ %
.
ÖÖ% &
layout
ÖÖ& ,
;
ÖÖ, -
Layout
áá 

viewLayout
áá 
{
àà 	
get
ââ 
=>
ââ 
layout
ââ 
.
ââ 

viewLayout
ââ $
;
ââ$ %
set
ää 
{
ãã 
if
åå 
(
åå 
layout
åå 
.
åå 

viewLayout
åå %
!=
åå& (
value
åå) .
)
åå. /
{
çç %
OnLayoutChangedInternal
éé +
?
éé+ ,
.
éé, -
Invoke
éé- 3
(
éé3 4
value
éé4 9
,
éé9 :
	sidePanel
éé; D
)
ééD E
;
ééE F
ApplyLayout
èè 
(
èè  
value
èè  %
)
èè% &
;
èè& '
}
êê 
}
ëë 
}
íí 	
	SidePanel
îî 
	sidePanel
îî 
{
ïï 	
get
ññ 
=>
ññ 
layout
ññ 
.
ññ 
showedSidePanel
ññ )
;
ññ) *
set
óó 
{
òò 
if
ôô 
(
ôô 
layout
ôô 
.
ôô 
showedSidePanel
ôô *
!=
ôô+ -
value
ôô. 3
)
ôô3 4
{
öö %
OnLayoutChangedInternal
õõ +
?
õõ+ ,
.
õõ, -
Invoke
õõ- 3
(
õõ3 4

viewLayout
õõ4 >
,
õõ> ?
value
õõ@ E
)
õõE F
;
õõF G"
ApplySidePanelChange
úú (
(
úú( )
layout
úú) /
.
úú/ 0
showedSidePanel
úú0 ?
)
úú? @
;
úú@ A
}
ùù 
}
ûû 
}
üü 	
event
°° 
Action
°° 
<
°° 
Layout
°° 
,
°° 
	SidePanel
°° &
>
°°& '%
OnLayoutChangedInternal
°°( ?
;
°°? @
event
¢¢ 
Action
¢¢ 
<
¢¢ 
Layout
¢¢ 
,
¢¢ 
	SidePanel
¢¢ &
>
¢¢& '
IViewDisplayer
¢¢( 6
.
¢¢6 7
OnLayoutChanged
¢¢7 F
{
££ 	
add
§§ 
=>
§§ %
OnLayoutChangedInternal
§§ *
+=
§§+ -
value
§§. 3
;
§§3 4
remove
•• 
=>
•• %
OnLayoutChangedInternal
•• -
-=
••. 0
value
••1 6
;
••6 7
}
¶¶ 	
event
®® 
Action
®® 5
'OnRenderDocAcquisitionTriggeredInternal
®® <
;
®®< =
event
©© 
Action
©© 
IViewDisplayer
©© #
.
©©# $-
OnRenderDocAcquisitionTriggered
©©$ C
{
™™ 	
add
´´ 
=>
´´ 5
'OnRenderDocAcquisitionTriggeredInternal
´´ :
+=
´´; =
value
´´> C
;
´´C D
remove
¨¨ 
=>
¨¨ 5
'OnRenderDocAcquisitionTriggeredInternal
¨¨ =
-=
¨¨> @
value
¨¨A F
;
¨¨F G
}
≠≠ 	
event
ØØ 
Action
ØØ 
<
ØØ 
IMouseEvent
ØØ  
>
ØØ  !,
OnMouseEventInViewPortInternal
ØØ" @
;
ØØ@ A
event
∞∞ 
Action
∞∞ 
<
∞∞ 
IMouseEvent
∞∞  
>
∞∞  !
IViewDisplayer
∞∞" 0
.
∞∞0 1 
OnMouseEventInView
∞∞1 C
{
±± 	
add
≤≤ 
=>
≤≤ ,
OnMouseEventInViewPortInternal
≤≤ 1
+=
≤≤2 4
value
≤≤5 :
;
≤≤: ;
remove
≥≥ 
=>
≥≥ ,
OnMouseEventInViewPortInternal
≥≥ 4
-=
≥≥5 7
value
≥≥8 =
;
≥≥= >
}
¥¥ 	
event
∂∂ 
Action
∂∂ 
<
∂∂ 

GameObject
∂∂ 
,
∂∂  "
ViewCompositionIndex
∂∂! 5
,
∂∂5 6
Vector2
∂∂7 >
>
∂∂> ?,
OnChangingObjectInViewInternal
∂∂@ ^
;
∂∂^ _
event
∑∑ 
Action
∑∑ 
<
∑∑ 

GameObject
∑∑ 
,
∑∑  "
ViewCompositionIndex
∑∑! 5
,
∑∑5 6
Vector2
∑∑7 >
>
∑∑> ?
IViewDisplayer
∑∑@ N
.
∑∑N O$
OnChangingObjectInView
∑∑O e
{
∏∏ 	
add
ππ 
=>
ππ ,
OnChangingObjectInViewInternal
ππ 1
+=
ππ2 4
value
ππ5 :
;
ππ: ;
remove
∫∫ 
=>
∫∫ ,
OnChangingObjectInViewInternal
∫∫ 4
-=
∫∫5 7
value
∫∫8 =
;
∫∫= >
}
ªª 	
event
ƒƒ 
Action
ƒƒ 
<
ƒƒ 
UnityEngine
ƒƒ  
.
ƒƒ  !
Object
ƒƒ! '
,
ƒƒ' ("
ViewCompositionIndex
ƒƒ) =
,
ƒƒ= >
Vector2
ƒƒ? F
>
ƒƒF G1
#OnChangingEnvironmentInViewInternal
ƒƒH k
;
ƒƒk l
event
≈≈ 
Action
≈≈ 
<
≈≈ 
UnityEngine
≈≈  
.
≈≈  !
Object
≈≈! '
,
≈≈' ("
ViewCompositionIndex
≈≈) =
,
≈≈= >
Vector2
≈≈? F
>
≈≈F G
IViewDisplayer
≈≈H V
.
≈≈V W)
OnChangingEnvironmentInView
≈≈W r
{
∆∆ 	
add
«« 
=>
«« 1
#OnChangingEnvironmentInViewInternal
«« 6
+=
««7 9
value
««: ?
;
««? @
remove
»» 
=>
»» 1
#OnChangingEnvironmentInViewInternal
»» 9
-=
»»: <
value
»»= B
;
»»B C
}
…… 	
event
ÀÀ 
Action
ÀÀ 
OnClosedInternal
ÀÀ %
;
ÀÀ% &
event
ÃÃ 
Action
ÃÃ 
IViewDisplayer
ÃÃ #
.
ÃÃ# $
OnClosed
ÃÃ$ ,
{
ÕÕ 	
add
ŒŒ 
=>
ŒŒ 
OnClosedInternal
ŒŒ #
+=
ŒŒ$ &
value
ŒŒ' ,
;
ŒŒ, -
remove
œœ 
=>
œœ 
OnClosedInternal
œœ &
-=
œœ' )
value
œœ* /
;
œœ/ 0
}
–– 	
event
““ 
Action
““ '
OnUpdateRequestedInternal
““ .
;
““. /
event
”” 
Action
”” 
IViewDisplayer
”” #
.
””# $
OnUpdateRequested
””$ 5
{
‘‘ 	
add
’’ 
=>
’’ '
OnUpdateRequestedInternal
’’ ,
+=
’’- /
value
’’0 5
;
’’5 6
remove
÷÷ 
=>
÷÷ '
OnUpdateRequestedInternal
÷÷ /
-=
÷÷0 2
value
÷÷3 8
;
÷÷8 9
}
◊◊ 	

StyleSheet
ŸŸ 

styleSheet
ŸŸ 
=
ŸŸ 
null
ŸŸ  $
;
ŸŸ$ %

StyleSheet
⁄⁄ 
styleSheetLight
⁄⁄ "
=
⁄⁄# $
null
⁄⁄% )
;
⁄⁄) *
void
‹‹ 
ReloadStyleSheets
‹‹ 
(
‹‹ 
)
‹‹  
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 

styleSheet
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ !
||
ﬁﬁ" $

styleSheet
ﬁﬁ% /
.
ﬁﬁ/ 0
Equals
ﬁﬁ0 6
(
ﬁﬁ6 7
null
ﬁﬁ7 ;
)
ﬁﬁ; <
)
ﬁﬁ< =
{
ﬂﬂ 

styleSheet
‡‡ 
=
‡‡ 
AssetDatabase
‡‡ *
.
‡‡* +
LoadAssetAtPath
‡‡+ :
<
‡‡: ;

StyleSheet
‡‡; E
>
‡‡E F
(
‡‡F G
Style
‡‡G L
.
‡‡L M
k_uss
‡‡M R
)
‡‡R S
;
‡‡S T
if
·· 
(
·· 

styleSheet
·· 
==
··  
null
··! %
||
··& (

styleSheet
··) 3
.
··3 4
Equals
··4 :
(
··: ;
null
··; ?
)
··? @
)
··@ A
{
‚‚ 
return
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 
if
ËË 
(
ËË 
!
ËË 
rootVisualElement
ËË !
.
ËË! "
styleSheets
ËË" -
.
ËË- .
Contains
ËË. 6
(
ËË6 7

styleSheet
ËË7 A
)
ËËA B
)
ËËB C
rootVisualElement
ÈÈ !
.
ÈÈ! "
styleSheets
ÈÈ" -
.
ÈÈ- .
Add
ÈÈ. 1
(
ÈÈ1 2

styleSheet
ÈÈ2 <
)
ÈÈ< =
;
ÈÈ= >
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
EditorGUIUtility
ÏÏ  
.
ÏÏ  !
	isProSkin
ÏÏ! *
)
ÏÏ* +
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
styleSheetLight
ÓÓ "
==
ÓÓ# %
null
ÓÓ& *
||
ÓÓ+ -
styleSheetLight
ÓÓ. =
.
ÓÓ= >
Equals
ÓÓ> D
(
ÓÓD E
null
ÓÓE I
)
ÓÓI J
)
ÓÓJ K
{
ÔÔ 
styleSheetLight
 #
=
$ %
AssetDatabase
& 3
.
3 4
LoadAssetAtPath
4 C
<
C D

StyleSheet
D N
>
N O
(
O P
Style
P U
.
U V%
k_uss_personal_overload
V m
)
m n
;
n o
if
ÒÒ 
(
ÒÒ 
styleSheetLight
ÒÒ &
==
ÒÒ' )
null
ÒÒ* .
||
ÒÒ/ 1
styleSheetLight
ÒÒ2 A
.
ÒÒA B
Equals
ÒÒB H
(
ÒÒH I
null
ÒÒI M
)
ÒÒM N
)
ÒÒN O
{
ÚÚ 
return
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 
if
¯¯ 
(
¯¯ 
!
¯¯ 
rootVisualElement
¯¯ %
.
¯¯% &
styleSheets
¯¯& 1
.
¯¯1 2
Contains
¯¯2 :
(
¯¯: ;
styleSheetLight
¯¯; J
)
¯¯J K
)
¯¯K L
rootVisualElement
˘˘ %
.
˘˘% &
styleSheets
˘˘& 1
.
˘˘1 2
Add
˘˘2 5
(
˘˘5 6
styleSheetLight
˘˘6 E
)
˘˘E F
;
˘˘F G
}
˙˙ 
}
˚˚ 	
void
˝˝ 
	CreateGUI
˝˝ 
(
˝˝ 
)
˝˝ 
{
˛˛ 	
ReloadStyleSheets
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ  
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
LookDev
ÑÑ 
.
ÑÑ 
open
ÑÑ 
)
ÑÑ 
LookDev
ÖÖ 
.
ÖÖ 

Initialize
ÖÖ "
(
ÖÖ" #
this
ÖÖ# '
)
ÖÖ' (
;
ÖÖ( )
titleContent
áá 
=
áá 
Style
áá  
.
áá  !"
k_WindowTitleAndIcon
áá! 5
;
áá5 6
this
ää 
.
ää 
minSize
ää 
=
ää 
new
ää 
Vector2
ää &
(
ää& '
$num
ää' *
,
ää* +
$num
ää, /
)
ää/ 0
;
ää0 1
CreateToolbar
åå 
(
åå 
)
åå 
;
åå 
m_MainContainer
éé 
=
éé 
new
éé !
VisualElement
éé" /
(
éé/ 0
)
éé0 1
{
éé2 3
name
éé4 8
=
éé9 :
Style
éé; @
.
éé@ A!
k_MainContainerName
ééA T
}
ééU V
;
ééV W
m_MainContainer
èè 
.
èè 
AddToClassList
èè *
(
èè* +
Style
èè+ 0
.
èè0 1$
k_SharedContainerClass
èè1 G
)
èèG H
;
èèH I
rootVisualElement
êê 
.
êê 
Add
êê !
(
êê! "
m_MainContainer
êê" 1
)
êê1 2
;
êê2 3
CreateViews
íí 
(
íí 
)
íí 
;
íí 
CreateEnvironment
ìì 
(
ìì 
)
ìì 
;
ìì  
CreateDebug
îî 
(
îî 
)
îî 
;
îî 
CreateDropAreas
ïï 
(
ïï 
)
ïï 
;
ïï 
ApplyLayout
óó 
(
óó 

viewLayout
óó "
)
óó" #
;
óó# $"
ApplySidePanelChange
òò  
(
òò  !
layout
òò! '
.
òò' (
showedSidePanel
òò( 7
)
òò7 8
;
òò8 9
}
ôô 	
void
õõ 
OnEnable
õõ 
(
õõ 
)
õõ 
{
úú 	
Undo
ùù 
.
ùù 
undoRedoPerformed
ùù "
+=
ùù# %(
FullRefreshEnvironmentList
ùù& @
;
ùù@ A
}
ûû 	
void
†† 
	OnDisable
†† 
(
†† 
)
†† 
{
°° 	
Undo
¢¢ 
.
¢¢ 
undoRedoPerformed
¢¢ "
-=
¢¢# %(
FullRefreshEnvironmentList
¢¢& @
;
¢¢@ A
OnClosedInternal
££ 
?
££ 
.
££ 
Invoke
££ $
(
££$ %
)
££% &
;
££& '
}
§§ 	
void
¶¶ 
CreateToolbar
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 	
var
©© 
layoutRadio
©© 
=
©© 
new
©© !
ToolbarRadio
©©" .
(
©©. /
)
©©/ 0
{
©©1 2
name
©©3 7
=
©©8 9
Style
©©: ?
.
©©? @ 
k_ToolbarRadioName
©©@ R
}
©©S T
;
©©T U
layoutRadio
™™ 
.
™™ 
	AddRadios
™™ !
(
™™! "
new
™™" %
[
™™% &
]
™™& '
{
™™( )
Style
´´ 
.
´´ 
k_Layout1Icon
´´ #
,
´´# $
Style
¨¨ 
.
¨¨ 
k_Layout2Icon
¨¨ #
,
¨¨# $
Style
≠≠ 
.
≠≠ "
k_LayoutVerticalIcon
≠≠ *
,
≠≠* +
Style
ÆÆ 
.
ÆÆ $
k_LayoutHorizontalIcon
ÆÆ ,
,
ÆÆ, -
Style
ØØ 
.
ØØ 
k_LayoutStackIcon
ØØ '
,
ØØ' (
}
∞∞ 
)
∞∞ 
;
∞∞ 
layoutRadio
±± 
.
±± 
RegisterCallback
±± (
(
±±( )
(
±±) *
ChangeEvent
±±* 5
<
±±5 6
int
±±6 9
>
±±9 :
evt
±±; >
)
±±> ?
=>
≤≤ 

viewLayout
≤≤ 
=
≤≤ 
(
≤≤  !
Layout
≤≤! '
)
≤≤' (
evt
≤≤( +
.
≤≤+ ,
newValue
≤≤, 4
)
≤≤4 5
;
≤≤5 6
layoutRadio
≥≥ 
.
≥≥ #
SetValueWithoutNotify
≥≥ -
(
≥≥- .
(
≥≥. /
int
≥≥/ 2
)
≥≥2 3

viewLayout
≥≥3 =
)
≥≥= >
;
≥≥> ?
var
µµ 

cameraMenu
µµ 
=
µµ 
new
µµ  
ToolbarMenu
µµ! ,
(
µµ, -
)
µµ- .
{
µµ/ 0
name
µµ1 5
=
µµ6 7
Style
µµ8 =
.
µµ= >
k_CameraMenuName
µµ> N
}
µµO P
;
µµP Q

cameraMenu
∂∂ 
.
∂∂ 
variant
∂∂ 
=
∂∂  
ToolbarMenu
∂∂! ,
.
∂∂, -
Variant
∂∂- 4
.
∂∂4 5
Popup
∂∂5 :
;
∂∂: ;
var
∑∑ 
cameraToggle
∑∑ 
=
∑∑ 
new
∑∑ "
ToolbarToggle
∑∑# 0
(
∑∑0 1
)
∑∑1 2
{
∑∑3 4
name
∑∑5 9
=
∑∑: ;
Style
∑∑< A
.
∑∑A B 
k_CameraButtonName
∑∑B T
}
∑∑U V
;
∑∑V W
cameraToggle
∏∏ 
.
∏∏ 
value
∏∏ 
=
∏∏  
LookDev
∏∏! (
.
∏∏( )
currentContext
∏∏) 7
.
∏∏7 8
cameraSynced
∏∏8 D
;
∏∏D E
cameraToggle
ππ 
.
ππ 
tooltip
ππ  
=
ππ! "
Style
ππ# (
.
ππ( )!
k_CameraSyncTooltip
ππ) <
;
ππ< =
cameraToggle
ΩΩ 
.
ΩΩ 
RegisterCallback
ΩΩ )
<
ΩΩ) *
MouseUpEvent
ΩΩ* 6
>
ΩΩ6 7
(
ΩΩ7 8
evt
ΩΩ8 ;
=>
ΩΩ< >
{
ææ 
LookDev
øø 
.
øø 
currentContext
øø &
.
øø& '
cameraSynced
øø' 3
^=
øø4 6
true
øø7 ;
;
øø; <
cameraToggle
¿¿ 
.
¿¿ #
SetValueWithoutNotify
¿¿ 2
(
¿¿2 3
LookDev
¿¿3 :
.
¿¿: ;
currentContext
¿¿; I
.
¿¿I J
cameraSynced
¿¿J V
)
¿¿V W
;
¿¿W X
}
¡¡ 
)
¡¡ 
;
¡¡ 
var
√√ 
cameraSeparator
√√ 
=
√√  !
new
√√" %
ToolbarToggle
√√& 3
(
√√3 4
)
√√4 5
{
√√6 7
name
√√8 <
=
√√= >
Style
√√? D
.
√√D E#
k_CameraSeparatorName
√√E Z
}
√√[ \
;
√√\ ]
cameraToggle
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
new
ƒƒ  
Image
ƒƒ! &
(
ƒƒ& '
)
ƒƒ' (
{
ƒƒ) *
image
ƒƒ+ 0
=
ƒƒ1 2
Style
ƒƒ3 8
.
ƒƒ8 9
k_Camera1Icon
ƒƒ9 F
}
ƒƒG H
)
ƒƒH I
;
ƒƒI J
cameraToggle
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
new
≈≈  
Image
≈≈! &
(
≈≈& '
)
≈≈' (
{
≈≈) *
image
≈≈+ 0
=
≈≈1 2
Style
≈≈3 8
.
≈≈8 9

k_LinkIcon
≈≈9 C
}
≈≈D E
)
≈≈E F
;
≈≈F G
cameraToggle
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
new
∆∆  
Image
∆∆! &
(
∆∆& '
)
∆∆' (
{
∆∆) *
image
∆∆+ 0
=
∆∆1 2
Style
∆∆3 8
.
∆∆8 9
k_Camera2Icon
∆∆9 F
}
∆∆G H
)
∆∆H I
;
∆∆I J

cameraMenu
«« 
.
«« 
Add
«« 
(
«« 
cameraSeparator
«« *
)
««* +
;
««+ ,

cameraMenu
»» 
.
»» 
Add
»» 
(
»» 
cameraToggle
»» '
)
»»' (
;
»»( )

cameraMenu
…… 
.
…… 
menu
…… 
.
…… 
AppendAction
…… (
(
……( )
Style
……) .
.
……. /"
k_CameraMenuSync1On2
……/ C
,
……C D
(
    
DropdownMenuAction
   #
a
  $ %
)
  % &
=>
  ' )
LookDev
  * 1
.
  1 2
currentContext
  2 @
.
  @ A%
SynchronizeCameraStates
  A X
(
  X Y
	ViewIndex
  Y b
.
  b c
Second
  c i
)
  i j
,
  j k 
DropdownMenuAction
ÀÀ "
.
ÀÀ" #
AlwaysEnabled
ÀÀ# 0
)
ÀÀ0 1
;
ÀÀ1 2

cameraMenu
ÃÃ 
.
ÃÃ 
menu
ÃÃ 
.
ÃÃ 
AppendAction
ÃÃ (
(
ÃÃ( )
Style
ÃÃ) .
.
ÃÃ. /"
k_CameraMenuSync2On1
ÃÃ/ C
,
ÃÃC D
(
ÕÕ  
DropdownMenuAction
ÕÕ #
a
ÕÕ$ %
)
ÕÕ% &
=>
ÕÕ' )
LookDev
ÕÕ* 1
.
ÕÕ1 2
currentContext
ÕÕ2 @
.
ÕÕ@ A%
SynchronizeCameraStates
ÕÕA X
(
ÕÕX Y
	ViewIndex
ÕÕY b
.
ÕÕb c
First
ÕÕc h
)
ÕÕh i
,
ÕÕi j 
DropdownMenuAction
ŒŒ "
.
ŒŒ" #
AlwaysEnabled
ŒŒ# 0
)
ŒŒ0 1
;
ŒŒ1 2

cameraMenu
œœ 
.
œœ 
menu
œœ 
.
œœ 
AppendAction
œœ (
(
œœ( )
Style
œœ) .
.
œœ. /
k_CameraMenuReset
œœ/ @
,
œœ@ A
(
––  
DropdownMenuAction
–– #
a
––$ %
)
––% &
=>
––' )
{
—— 
LookDev
““ 
.
““ 
currentContext
““ *
.
““* +
GetViewContent
““+ 9
(
““9 :
	ViewIndex
““: C
.
““C D
First
““D I
)
““I J
.
““J K
ResetCameraState
““K [
(
““[ \
)
““\ ]
;
““] ^
LookDev
”” 
.
”” 
currentContext
”” *
.
””* +
GetViewContent
””+ 9
(
””9 :
	ViewIndex
””: C
.
””C D
Second
””D J
)
””J K
.
””K L
ResetCameraState
””L \
(
””\ ]
)
””] ^
;
””^ _
}
‘‘ 
,
‘‘  
DropdownMenuAction
’’ "
.
’’" #
AlwaysEnabled
’’# 0
)
’’0 1
;
’’1 2
var
ÿÿ 
	sideRadio
ÿÿ 
=
ÿÿ 
new
ÿÿ 
ToolbarRadio
ÿÿ  ,
(
ÿÿ, -
canDeselectAll
ÿÿ- ;
:
ÿÿ; <
true
ÿÿ= A
)
ÿÿA B
{
ŸŸ 
name
⁄⁄ 
=
⁄⁄ 
Style
⁄⁄ 
.
⁄⁄ 
k_TabsRadioName
⁄⁄ ,
}
€€ 
;
€€ 
	sideRadio
‹‹ 
.
‹‹ 
	AddRadios
‹‹ 
(
‹‹  
new
‹‹  #
[
‹‹# $
]
‹‹$ %
{
‹‹& '
Style
›› 
.
›› (
k_EnvironmentSidePanelName
›› 0
,
››0 1
Style
ﬁﬁ 
.
ﬁﬁ "
k_DebugSidePanelName
ﬁﬁ *
,
ﬁﬁ* +
}
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
	sideRadio
‡‡ 
.
‡‡ #
SetValueWithoutNotify
‡‡ +
(
‡‡+ ,
(
‡‡, -
int
‡‡- 0
)
‡‡0 1
	sidePanel
‡‡1 :
)
‡‡: ;
;
‡‡; <
	sideRadio
·· 
.
·· 
RegisterCallback
·· &
(
··& '
(
··' (
ChangeEvent
··( 3
<
··3 4
int
··4 7
>
··7 8
evt
··9 <
)
··< =
=>
‚‚ 
	sidePanel
‚‚ 
=
‚‚ 
(
‚‚  
	SidePanel
‚‚  )
)
‚‚) *
evt
‚‚* -
.
‚‚- .
newValue
‚‚. 6
)
‚‚6 7
;
‚‚7 8
var
ÂÂ 
toolbar
ÂÂ 
=
ÂÂ 
new
ÂÂ 

UIElements
ÂÂ (
.
ÂÂ( )
Toolbar
ÂÂ) 0
(
ÂÂ0 1
)
ÂÂ1 2
{
ÂÂ3 4
name
ÂÂ5 9
=
ÂÂ: ;
Style
ÂÂ< A
.
ÂÂA B
k_ToolbarName
ÂÂB O
}
ÂÂP Q
;
ÂÂQ R
toolbar
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ 
layoutRadio
ÊÊ #
)
ÊÊ# $
;
ÊÊ$ %
toolbar
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ 
new
ÁÁ 
ToolbarSpacer
ÁÁ )
(
ÁÁ) *
)
ÁÁ* +
)
ÁÁ+ ,
;
ÁÁ, -
toolbar
ËË 
.
ËË 
Add
ËË 
(
ËË 

cameraMenu
ËË "
)
ËË" #
;
ËË# $
toolbar
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
new
ÍÍ 
ToolbarSpacer
ÍÍ )
(
ÍÍ) *
)
ÍÍ* +
{
ÍÍ, -
flex
ÍÍ. 2
=
ÍÍ3 4
true
ÍÍ5 9
}
ÍÍ: ;
)
ÍÍ; <
;
ÍÍ< =
if
ÎÎ 
(
ÎÎ !
UnityEditorInternal
ÎÎ #
.
ÎÎ# $
	RenderDoc
ÎÎ$ -
.
ÎÎ- .
IsInstalled
ÎÎ. 9
(
ÎÎ9 :
)
ÎÎ: ;
&&
ÎÎ< >!
UnityEditorInternal
ÎÎ? R
.
ÎÎR S
	RenderDoc
ÎÎS \
.
ÎÎ\ ]
IsLoaded
ÎÎ] e
(
ÎÎe f
)
ÎÎf g
)
ÎÎg h
{
ÏÏ 
var
ÌÌ 
renderDocButton
ÌÌ #
=
ÌÌ$ %
new
ÌÌ& )
ToolbarButton
ÌÌ* 7
(
ÌÌ7 8
(
ÌÌ8 9
)
ÌÌ9 :
=>
ÌÌ; =5
'OnRenderDocAcquisitionTriggeredInternal
ÌÌ> e
?
ÌÌe f
.
ÌÌf g
Invoke
ÌÌg m
(
ÌÌm n
)
ÌÌn o
)
ÌÌo p
{
ÓÓ 
name
ÔÔ 
=
ÔÔ 
Style
ÔÔ  
.
ÔÔ  !$
k_RenderDocContentName
ÔÔ! 7
}
 
;
 
renderDocButton
ÒÒ 
.
ÒÒ  
Add
ÒÒ  #
(
ÒÒ# $
new
ÒÒ$ '
Image
ÒÒ( -
(
ÒÒ- .
)
ÒÒ. /
{
ÒÒ0 1
image
ÒÒ2 7
=
ÒÒ8 9
Style
ÒÒ: ?
.
ÒÒ? @
k_RenderdocIcon
ÒÒ@ O
}
ÒÒP Q
)
ÒÒQ R
;
ÒÒR S
renderDocButton
ÚÚ 
.
ÚÚ  
Add
ÚÚ  #
(
ÚÚ# $
new
ÚÚ$ '
Label
ÚÚ( -
(
ÚÚ- .
)
ÚÚ. /
{
ÚÚ0 1
text
ÚÚ2 6
=
ÚÚ7 8
Style
ÚÚ9 >
.
ÚÚ> ?
k_RenderDocLabel
ÚÚ? O
}
ÚÚP Q
)
ÚÚQ R
;
ÚÚR S
toolbar
ÛÛ 
.
ÛÛ 
Add
ÛÛ 
(
ÛÛ 
renderDocButton
ÛÛ +
)
ÛÛ+ ,
;
ÛÛ, -
toolbar
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
new
ÙÙ 
ToolbarSpacer
ÙÙ  -
(
ÙÙ- .
)
ÙÙ. /
)
ÙÙ/ 0
;
ÙÙ0 1
}
ıı 
toolbar
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
	sideRadio
ˆˆ !
)
ˆˆ! "
;
ˆˆ" #
rootVisualElement
˜˜ 
.
˜˜ 
Add
˜˜ !
(
˜˜! "
toolbar
˜˜" )
)
˜˜) *
;
˜˜* +
}
¯¯ 	
void
˙˙ 
CreateViews
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 	
if
¸¸ 
(
¸¸ 
m_MainContainer
¸¸ 
==
¸¸  "
null
¸¸# '
||
¸¸( *
m_MainContainer
¸¸+ :
.
¸¸: ;
Equals
¸¸; A
(
¸¸A B
null
¸¸B F
)
¸¸F G
)
¸¸G H
throw
˝˝ 
new
˝˝ 
System
˝˝  
.
˝˝  !#
MemberAccessException
˝˝! 6
(
˝˝6 7
$str
˝˝7 o
)
˝˝o p
;
˝˝p q
m_ViewContainer
ˇˇ 
=
ˇˇ 
new
ˇˇ !
VisualElement
ˇˇ" /
(
ˇˇ/ 0
)
ˇˇ0 1
{
ˇˇ2 3
name
ˇˇ4 8
=
ˇˇ9 :
Style
ˇˇ; @
.
ˇˇ@ A!
k_ViewContainerName
ˇˇA T
}
ˇˇU V
;
ˇˇV W
m_ViewContainer
ÄÄ 
.
ÄÄ 
AddToClassList
ÄÄ *
(
ÄÄ* +
LookDev
ÄÄ+ 2
.
ÄÄ2 3
currentContext
ÄÄ3 A
.
ÄÄA B
layout
ÄÄB H
.
ÄÄH I
isMultiView
ÄÄI T
?
ÄÄU V
Style
ÄÄW \
.
ÄÄ\ ] 
k_SecondViewsClass
ÄÄ] o
:
ÄÄp q
Style
ÄÄr w
.
ÄÄw x
k_FirstViewClassÄÄx à
)ÄÄà â
;ÄÄâ ä
m_ViewContainer
ÅÅ 
.
ÅÅ 
AddToClassList
ÅÅ *
(
ÅÅ* +
Style
ÅÅ+ 0
.
ÅÅ0 1$
k_SharedContainerClass
ÅÅ1 G
)
ÅÅG H
;
ÅÅH I
m_MainContainer
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ  
m_ViewContainer
ÇÇ  /
)
ÇÇ/ 0
;
ÇÇ0 1
m_ViewContainer
ÉÉ 
.
ÉÉ 
RegisterCallback
ÉÉ ,
<
ÉÉ, -
MouseDownEvent
ÉÉ- ;
>
ÉÉ; <
(
ÉÉ< =
evt
ÉÉ= @
=>
ÉÉA C,
OnMouseEventInViewPortInternal
ÉÉD b
?
ÉÉb c
.
ÉÉc d
Invoke
ÉÉd j
(
ÉÉj k
evt
ÉÉk n
)
ÉÉn o
)
ÉÉo p
;
ÉÉp q
m_ViewContainer
ÑÑ 
.
ÑÑ 
RegisterCallback
ÑÑ ,
<
ÑÑ, -
MouseUpEvent
ÑÑ- 9
>
ÑÑ9 :
(
ÑÑ: ;
evt
ÑÑ; >
=>
ÑÑ? A,
OnMouseEventInViewPortInternal
ÑÑB `
?
ÑÑ` a
.
ÑÑa b
Invoke
ÑÑb h
(
ÑÑh i
evt
ÑÑi l
)
ÑÑl m
)
ÑÑm n
;
ÑÑn o
m_ViewContainer
ÖÖ 
.
ÖÖ 
RegisterCallback
ÖÖ ,
<
ÖÖ, -
MouseMoveEvent
ÖÖ- ;
>
ÖÖ; <
(
ÖÖ< =
evt
ÖÖ= @
=>
ÖÖA C,
OnMouseEventInViewPortInternal
ÖÖD b
?
ÖÖb c
.
ÖÖc d
Invoke
ÖÖd j
(
ÖÖj k
evt
ÖÖk n
)
ÖÖn o
)
ÖÖo p
;
ÖÖp q
m_Views
áá 
[
áá 
(
áá 
int
áá 
)
áá 
	ViewIndex
áá "
.
áá" #
First
áá# (
]
áá( )
=
áá* +
new
áá, /
Image
áá0 5
(
áá5 6
)
áá6 7
{
áá8 9
name
áá: >
=
áá? @
Style
ááA F
.
ááF G
k_FirstViewName
ááG V
,
ááV W
image
ááX ]
=
áá^ _
	Texture2D
áá` i
.
áái j
blackTexture
ááj v
}
ááw x
;
ááx y
m_ViewContainer
àà 
.
àà 
Add
àà 
(
àà  
m_Views
àà  '
[
àà' (
(
àà( )
int
àà) ,
)
àà, -
	ViewIndex
àà- 6
.
àà6 7
First
àà7 <
]
àà< =
)
àà= >
;
àà> ?
m_Views
ââ 
[
ââ 
(
ââ 
int
ââ 
)
ââ 
	ViewIndex
ââ "
.
ââ" #
Second
ââ# )
]
ââ) *
=
ââ+ ,
new
ââ- 0
Image
ââ1 6
(
ââ6 7
)
ââ7 8
{
ââ9 :
name
ââ; ?
=
ââ@ A
Style
ââB G
.
ââG H
k_SecondViewName
ââH X
,
ââX Y
image
ââZ _
=
ââ` a
	Texture2D
ââb k
.
ââk l
blackTexture
ââl x
}
âây z
;
ââz {
m_ViewContainer
ää 
.
ää 
Add
ää 
(
ää  
m_Views
ää  '
[
ää' (
(
ää( )
int
ää) ,
)
ää, -
	ViewIndex
ää- 6
.
ää6 7
Second
ää7 =
]
ää= >
)
ää> ?
;
ää? @
var
åå )
firstOrCompositeManipulator
åå +
=
åå, -
new
åå. 1(
SwitchableCameraController
åå2 L
(
ååL M
LookDev
çç 
.
çç 
currentContext
çç &
.
çç& '
GetViewContent
çç' 5
(
çç5 6
	ViewIndex
çç6 ?
.
çç? @
First
çç@ E
)
ççE F
.
ççF G
camera
ççG M
,
ççM N
LookDev
éé 
.
éé 
currentContext
éé &
.
éé& '
GetViewContent
éé' 5
(
éé5 6
	ViewIndex
éé6 ?
.
éé? @
Second
éé@ F
)
ééF G
.
ééG H
camera
ééH N
,
ééN O
this
èè 
,
èè 
index
êê 
=>
êê 
{
ëë 
LookDev
íí 
.
íí 
currentContext
íí *
.
íí* +
SetFocusedCamera
íí+ ;
(
íí; <
index
íí< A
)
ííA B
;
ííB C
var
ìì 
environment
ìì #
=
ìì$ %
LookDev
ìì& -
.
ìì- .
currentContext
ìì. <
.
ìì< =
GetViewContent
ìì= K
(
ììK L
index
ììL Q
)
ììQ R
.
ììR S
environment
ììS ^
;
ìì^ _
if
îî 
(
îî 
	sidePanel
îî !
==
îî" $
	SidePanel
îî% .
.
îî. /
Environment
îî/ :
&&
îî; =
environment
îî> I
!=
îîJ L
null
îîM Q
&&
îîR T
LookDev
îîU \
.
îî\ ]
currentContext
îî] k
.
îîk l 
environmentLibrary
îîl ~
!=îî Å
nullîîÇ Ü
)îîÜ á
m_EnvironmentList
ïï )
.
ïï) *
selectedIndex
ïï* 7
=
ïï8 9
LookDev
ïï: A
.
ïïA B
currentContext
ïïB P
.
ïïP Q 
environmentLibrary
ïïQ c
.
ïïc d
IndexOf
ïïd k
(
ïïk l
environment
ïïl w
)
ïïw x
;
ïïx y
}
ññ 
)
ññ 
;
ññ 
var
óó 
secondManipulator
óó !
=
óó" #
new
óó$ '
CameraController
óó( 8
(
óó8 9
LookDev
òò 
.
òò 
currentContext
òò &
.
òò& '
GetViewContent
òò' 5
(
òò5 6
	ViewIndex
òò6 ?
.
òò? @
Second
òò@ F
)
òòF G
.
òòG H
camera
òòH N
,
òòN O
this
ôô 
,
ôô 
(
öö 
)
öö 
=>
öö 
{
õõ 
LookDev
úú 
.
úú 
currentContext
úú *
.
úú* +
SetFocusedCamera
úú+ ;
(
úú; <
	ViewIndex
úú< E
.
úúE F
Second
úúF L
)
úúL M
;
úúM N
var
ùù 
environment
ùù #
=
ùù$ %
LookDev
ùù& -
.
ùù- .
currentContext
ùù. <
.
ùù< =
GetViewContent
ùù= K
(
ùùK L
	ViewIndex
ùùL U
.
ùùU V
Second
ùùV \
)
ùù\ ]
.
ùù] ^
environment
ùù^ i
;
ùùi j
if
ûû 
(
ûû 
	sidePanel
ûû !
==
ûû" $
	SidePanel
ûû% .
.
ûû. /
Environment
ûû/ :
&&
ûû; =
environment
ûû> I
!=
ûûJ L
null
ûûM Q
&&
ûûR T
LookDev
ûûU \
.
ûû\ ]
currentContext
ûû] k
.
ûûk l 
environmentLibrary
ûûl ~
!=ûû Å
nullûûÇ Ü
)ûûÜ á
m_EnvironmentList
üü )
.
üü) *
selectedIndex
üü* 7
=
üü8 9
LookDev
üü: A
.
üüA B
currentContext
üüB P
.
üüP Q 
environmentLibrary
üüQ c
.
üüc d
IndexOf
üüd k
(
üük l
environment
üül w
)
üüw x
;
üüx y
}
†† 
)
†† 
;
†† 
var
°° 
gizmoManipulator
°°  
=
°°! "
new
°°# &'
ComparisonGizmoController
°°' @
(
°°@ A
LookDev
°°A H
.
°°H I
currentContext
°°I W
.
°°W X
layout
°°X ^
.
°°^ _

gizmoState
°°_ i
,
°°i j*
firstOrCompositeManipulator°°k Ü
)°°Ü á
;°°á à
m_Views
¢¢ 
[
¢¢ 
(
¢¢ 
int
¢¢ 
)
¢¢ 
	ViewIndex
¢¢ "
.
¢¢" #
First
¢¢# (
]
¢¢( )
.
¢¢) *
AddManipulator
¢¢* 8
(
¢¢8 9
gizmoManipulator
¢¢9 I
)
¢¢I J
;
¢¢J K
m_Views
££ 
[
££ 
(
££ 
int
££ 
)
££ 
	ViewIndex
££ "
.
££" #
First
££# (
]
££( )
.
££) *
AddManipulator
££* 8
(
££8 9)
firstOrCompositeManipulator
££9 T
)
££T U
;
££U V
m_Views
§§ 
[
§§ 
(
§§ 
int
§§ 
)
§§ 
	ViewIndex
§§ "
.
§§" #
Second
§§# )
]
§§) *
.
§§* +
AddManipulator
§§+ 9
(
§§9 :
secondManipulator
§§: K
)
§§K L
;
§§L M
m_NoObject1
¶¶ 
=
¶¶ 
new
¶¶ 
Label
¶¶ #
(
¶¶# $
Style
¶¶$ )
.
¶¶) *!
k_DragAndDropObject
¶¶* =
)
¶¶= >
;
¶¶> ?
m_NoObject1
ßß 
.
ßß 
style
ßß 
.
ßß 
flexGrow
ßß &
=
ßß' (
$num
ßß) *
;
ßß* +
m_NoObject1
®® 
.
®® 
style
®® 
.
®® 
unityTextAlign
®® ,
=
®®- .

TextAnchor
®®/ 9
.
®®9 :
MiddleCenter
®®: F
;
®®F G
m_NoObject2
©© 
=
©© 
new
©© 
Label
©© #
(
©©# $
Style
©©$ )
.
©©) *!
k_DragAndDropObject
©©* =
)
©©= >
;
©©> ?
m_NoObject2
™™ 
.
™™ 
style
™™ 
.
™™ 
flexGrow
™™ &
=
™™' (
$num
™™) *
;
™™* +
m_NoObject2
´´ 
.
´´ 
style
´´ 
.
´´ 
unityTextAlign
´´ ,
=
´´- .

TextAnchor
´´/ 9
.
´´9 :
MiddleCenter
´´: F
;
´´F G
m_NoEnvironment1
¨¨ 
=
¨¨ 
new
¨¨ "
Label
¨¨# (
(
¨¨( )
Style
¨¨) .
.
¨¨. /&
k_DragAndDropEnvironment
¨¨/ G
)
¨¨G H
;
¨¨H I
m_NoEnvironment1
≠≠ 
.
≠≠ 
style
≠≠ "
.
≠≠" #
flexGrow
≠≠# +
=
≠≠, -
$num
≠≠. /
;
≠≠/ 0
m_NoEnvironment1
ÆÆ 
.
ÆÆ 
style
ÆÆ "
.
ÆÆ" #
unityTextAlign
ÆÆ# 1
=
ÆÆ2 3

TextAnchor
ÆÆ4 >
.
ÆÆ> ?
MiddleCenter
ÆÆ? K
;
ÆÆK L
m_NoEnvironment1
ØØ 
.
ØØ 
style
ØØ "
.
ØØ" #

whiteSpace
ØØ# -
=
ØØ. /

WhiteSpace
ØØ0 :
.
ØØ: ;
Normal
ØØ; A
;
ØØA B
m_NoEnvironment2
∞∞ 
=
∞∞ 
new
∞∞ "
Label
∞∞# (
(
∞∞( )
Style
∞∞) .
.
∞∞. /&
k_DragAndDropEnvironment
∞∞/ G
)
∞∞G H
;
∞∞H I
m_NoEnvironment2
±± 
.
±± 
style
±± "
.
±±" #
flexGrow
±±# +
=
±±, -
$num
±±. /
;
±±/ 0
m_NoEnvironment2
≤≤ 
.
≤≤ 
style
≤≤ "
.
≤≤" #
unityTextAlign
≤≤# 1
=
≤≤2 3

TextAnchor
≤≤4 >
.
≤≤> ?
MiddleCenter
≤≤? K
;
≤≤K L
m_NoEnvironment2
≥≥ 
.
≥≥ 
style
≥≥ "
.
≥≥" #

whiteSpace
≥≥# -
=
≥≥. /

WhiteSpace
≥≥0 :
.
≥≥: ;
Normal
≥≥; A
;
≥≥A B
m_Views
¥¥ 
[
¥¥ 
(
¥¥ 
int
¥¥ 
)
¥¥ 
	ViewIndex
¥¥ "
.
¥¥" #
First
¥¥# (
]
¥¥( )
.
¥¥) *
Add
¥¥* -
(
¥¥- .
m_NoObject1
¥¥. 9
)
¥¥9 :
;
¥¥: ;
m_Views
µµ 
[
µµ 
(
µµ 
int
µµ 
)
µµ 
	ViewIndex
µµ "
.
µµ" #
First
µµ# (
]
µµ( )
.
µµ) *
Add
µµ* -
(
µµ- .
m_NoEnvironment1
µµ. >
)
µµ> ?
;
µµ? @
m_Views
∂∂ 
[
∂∂ 
(
∂∂ 
int
∂∂ 
)
∂∂ 
	ViewIndex
∂∂ "
.
∂∂" #
Second
∂∂# )
]
∂∂) *
.
∂∂* +
Add
∂∂+ .
(
∂∂. /
m_NoObject2
∂∂/ :
)
∂∂: ;
;
∂∂; <
m_Views
∑∑ 
[
∑∑ 
(
∑∑ 
int
∑∑ 
)
∑∑ 
	ViewIndex
∑∑ "
.
∑∑" #
Second
∑∑# )
]
∑∑) *
.
∑∑* +
Add
∑∑+ .
(
∑∑. /
m_NoEnvironment2
∑∑/ ?
)
∑∑? @
;
∑∑@ A
}
∏∏ 	
void
∫∫ 
CreateDropAreas
∫∫ 
(
∫∫ 
)
∫∫ 
{
ªª 	
new
ΩΩ 
DropArea
ΩΩ 
(
ΩΩ 
new
ΩΩ 
[
ΩΩ 
]
ΩΩ 
{
ΩΩ  
typeof
ΩΩ! '
(
ΩΩ' (

GameObject
ΩΩ( 2
)
ΩΩ2 3
}
ΩΩ4 5
,
ΩΩ5 6
m_Views
ΩΩ7 >
[
ΩΩ> ?
(
ΩΩ? @
int
ΩΩ@ C
)
ΩΩC D
	ViewIndex
ΩΩD M
.
ΩΩM N
First
ΩΩN S
]
ΩΩS T
,
ΩΩT U
(
ΩΩV W
obj
ΩΩW Z
,
ΩΩZ [
localPos
ΩΩ\ d
)
ΩΩd e
=>
ΩΩf h
{
ææ 
if
øø 
(
øø 

viewLayout
øø 
==
øø !
Layout
øø" (
.
øø( )
CustomSplit
øø) 4
)
øø4 5,
OnChangingObjectInViewInternal
¿¿ 2
?
¿¿2 3
.
¿¿3 4
Invoke
¿¿4 :
(
¿¿: ;
obj
¿¿; >
as
¿¿? A

GameObject
¿¿B L
,
¿¿L M"
ViewCompositionIndex
¿¿N b
.
¿¿b c
	Composite
¿¿c l
,
¿¿l m
localPos
¿¿n v
)
¿¿v w
;
¿¿w x
else
¡¡ ,
OnChangingObjectInViewInternal
¬¬ 2
?
¬¬2 3
.
¬¬3 4
Invoke
¬¬4 :
(
¬¬: ;
obj
¬¬; >
as
¬¬? A

GameObject
¬¬B L
,
¬¬L M"
ViewCompositionIndex
¬¬N b
.
¬¬b c
First
¬¬c h
,
¬¬h i
localPos
¬¬j r
)
¬¬r s
;
¬¬s t
m_NoObject1
√√ 
.
√√ 
style
√√ !
.
√√! "

visibility
√√" ,
=
√√- .
obj
√√/ 2
==
√√3 5
null
√√6 :
||
√√; =
obj
√√> A
.
√√A B
Equals
√√B H
(
√√H I
null
√√I M
)
√√M N
?
√√O P

Visibility
√√Q [
.
√√[ \
Visible
√√\ c
:
√√d e

Visibility
√√f p
.
√√p q
Hidden
√√q w
;
√√w x
}
ƒƒ 
)
ƒƒ 
;
ƒƒ 
new
≈≈ 
DropArea
≈≈ 
(
≈≈ 
new
≈≈ 
[
≈≈ 
]
≈≈ 
{
≈≈  
typeof
≈≈! '
(
≈≈' (

GameObject
≈≈( 2
)
≈≈2 3
}
≈≈4 5
,
≈≈5 6
m_Views
≈≈7 >
[
≈≈> ?
(
≈≈? @
int
≈≈@ C
)
≈≈C D
	ViewIndex
≈≈D M
.
≈≈M N
Second
≈≈N T
]
≈≈T U
,
≈≈U V
(
≈≈W X
obj
≈≈X [
,
≈≈[ \
localPos
≈≈] e
)
≈≈e f
=>
≈≈g i
{
∆∆ ,
OnChangingObjectInViewInternal
«« .
?
««. /
.
««/ 0
Invoke
««0 6
(
««6 7
obj
««7 :
as
««; =

GameObject
««> H
,
««H I"
ViewCompositionIndex
««J ^
.
««^ _
Second
««_ e
,
««e f
localPos
««g o
)
««o p
;
««p q
m_NoObject2
»» 
.
»» 
style
»» !
.
»»! "

visibility
»»" ,
=
»»- .
obj
»»/ 2
==
»»3 5
null
»»6 :
||
»»; =
obj
»»> A
.
»»A B
Equals
»»B H
(
»»H I
null
»»I M
)
»»M N
?
»»O P

Visibility
»»Q [
.
»»[ \
Visible
»»\ c
:
»»d e

Visibility
»»f p
.
»»p q
Hidden
»»q w
;
»»w x
}
…… 
)
…… 
;
…… 
new
◊◊ 
DropArea
◊◊ 
(
◊◊ 
new
◊◊ 
[
◊◊ 
]
◊◊ 
{
◊◊  
typeof
◊◊! '
(
◊◊' (
Environment
◊◊( 3
)
◊◊3 4
,
◊◊4 5
typeof
◊◊6 <
(
◊◊< =
Cubemap
◊◊= D
)
◊◊D E
}
◊◊F G
,
◊◊G H
m_Views
◊◊I P
[
◊◊P Q
(
◊◊Q R
int
◊◊R U
)
◊◊U V
	ViewIndex
◊◊V _
.
◊◊_ `
First
◊◊` e
]
◊◊e f
,
◊◊f g
(
◊◊h i
obj
◊◊i l
,
◊◊l m
localPos
◊◊n v
)
◊◊v w
=>
◊◊x z
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 

viewLayout
ŸŸ 
==
ŸŸ !
Layout
ŸŸ" (
.
ŸŸ( )
CustomSplit
ŸŸ) 4
)
ŸŸ4 51
#OnChangingEnvironmentInViewInternal
⁄⁄ 7
?
⁄⁄7 8
.
⁄⁄8 9
Invoke
⁄⁄9 ?
(
⁄⁄? @
obj
⁄⁄@ C
,
⁄⁄C D"
ViewCompositionIndex
⁄⁄E Y
.
⁄⁄Y Z
	Composite
⁄⁄Z c
,
⁄⁄c d
localPos
⁄⁄e m
)
⁄⁄m n
;
⁄⁄n o
else
€€ 1
#OnChangingEnvironmentInViewInternal
‹‹ 7
?
‹‹7 8
.
‹‹8 9
Invoke
‹‹9 ?
(
‹‹? @
obj
‹‹@ C
,
‹‹C D"
ViewCompositionIndex
‹‹E Y
.
‹‹Y Z
First
‹‹Z _
,
‹‹_ `
localPos
‹‹a i
)
‹‹i j
;
‹‹j k
m_NoEnvironment1
››  
.
››  !
style
››! &
.
››& '

visibility
››' 1
=
››2 3
obj
››4 7
==
››8 :
null
››; ?
||
››@ B
obj
››C F
.
››F G
Equals
››G M
(
››M N
null
››N R
)
››R S
?
››T U

Visibility
››V `
.
››` a
Visible
››a h
:
››i j

Visibility
››k u
.
››u v
Hidden
››v |
;
››| }
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
new
ﬂﬂ 
DropArea
ﬂﬂ 
(
ﬂﬂ 
new
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ 
{
ﬂﬂ  
typeof
ﬂﬂ! '
(
ﬂﬂ' (
Environment
ﬂﬂ( 3
)
ﬂﬂ3 4
,
ﬂﬂ4 5
typeof
ﬂﬂ6 <
(
ﬂﬂ< =
Cubemap
ﬂﬂ= D
)
ﬂﬂD E
}
ﬂﬂF G
,
ﬂﬂG H
m_Views
ﬂﬂI P
[
ﬂﬂP Q
(
ﬂﬂQ R
int
ﬂﬂR U
)
ﬂﬂU V
	ViewIndex
ﬂﬂV _
.
ﬂﬂ_ `
Second
ﬂﬂ` f
]
ﬂﬂf g
,
ﬂﬂg h
(
ﬂﬂi j
obj
ﬂﬂj m
,
ﬂﬂm n
localPos
ﬂﬂo w
)
ﬂﬂw x
=>
ﬂﬂy {
{
‡‡ 1
#OnChangingEnvironmentInViewInternal
·· 3
?
··3 4
.
··4 5
Invoke
··5 ;
(
··; <
obj
··< ?
,
··? @"
ViewCompositionIndex
··A U
.
··U V
Second
··V \
,
··\ ]
localPos
··^ f
)
··f g
;
··g h
m_NoEnvironment2
‚‚  
.
‚‚  !
style
‚‚! &
.
‚‚& '

visibility
‚‚' 1
=
‚‚2 3
obj
‚‚4 7
==
‚‚8 :
null
‚‚; ?
||
‚‚@ B
obj
‚‚C F
.
‚‚F G
Equals
‚‚G M
(
‚‚M N
null
‚‚N R
)
‚‚R S
?
‚‚T U

Visibility
‚‚V `
.
‚‚` a
Visible
‚‚a h
:
‚‚i j

Visibility
‚‚k u
.
‚‚u v
Hidden
‚‚v |
;
‚‚| }
}
„„ 
)
„„ 
;
„„ 
new
ÎÎ 
DropArea
ÎÎ 
(
ÎÎ 
new
ÎÎ 
[
ÎÎ 
]
ÎÎ 
{
ÎÎ  
typeof
ÎÎ! '
(
ÎÎ' ( 
EnvironmentLibrary
ÎÎ( :
)
ÎÎ: ;
}
ÎÎ< =
,
ÎÎ= >$
m_EnvironmentContainer
ÎÎ? U
,
ÎÎU V
(
ÎÎW X
obj
ÎÎX [
,
ÎÎ[ \
localPos
ÎÎ] e
)
ÎÎe f
=>
ÎÎg i
{
ÏÏ 2
$OnChangingEnvironmentLibraryInternal
ÌÌ 4
?
ÌÌ4 5
.
ÌÌ5 6
Invoke
ÌÌ6 <
(
ÌÌ< =
obj
ÌÌ= @
as
ÌÌA C 
EnvironmentLibrary
ÌÌD V
)
ÌÌV W
;
ÌÌW X#
RefreshLibraryDisplay
ÓÓ %
(
ÓÓ% &
)
ÓÓ& '
;
ÓÓ' (
}
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
 	
Rect
ÚÚ 
IViewDisplayer
ÚÚ 
.
ÚÚ 
GetRect
ÚÚ #
(
ÚÚ# $"
ViewCompositionIndex
ÚÚ$ 8
index
ÚÚ9 >
)
ÚÚ> ?
{
ÛÛ 	
switch
ÙÙ 
(
ÙÙ 
index
ÙÙ 
)
ÙÙ 
{
ıı 
case
ˆˆ "
ViewCompositionIndex
ˆˆ )
.
ˆˆ) *
First
ˆˆ* /
:
ˆˆ/ 0
case
˜˜ "
ViewCompositionIndex
˜˜ )
.
˜˜) *
	Composite
˜˜* 3
:
˜˜3 4
return
¯¯ 
m_Views
¯¯ "
[
¯¯" #
(
¯¯# $
int
¯¯$ '
)
¯¯' (
	ViewIndex
¯¯( 1
.
¯¯1 2
First
¯¯2 7
]
¯¯7 8
.
¯¯8 9
contentRect
¯¯9 D
;
¯¯D E
case
˘˘ "
ViewCompositionIndex
˘˘ )
.
˘˘) *
Second
˘˘* 0
:
˘˘0 1
return
˙˙ 
m_Views
˙˙ "
[
˙˙" #
(
˙˙# $
int
˙˙$ '
)
˙˙' (
	ViewIndex
˙˙( 1
.
˙˙1 2
Second
˙˙2 8
]
˙˙8 9
.
˙˙9 :
contentRect
˙˙: E
;
˙˙E F
default
˚˚ 
:
˚˚ 
throw
¸¸ 
new
¸¸ 
ArgumentException
¸¸ /
(
¸¸/ 0
$str
¸¸0 P
+
¸¸Q R
index
¸¸S X
)
¸¸X Y
;
¸¸Y Z
}
˝˝ 
}
˛˛ 	
Vector2
ÄÄ !
m_LastFirstViewSize
ÄÄ #
=
ÄÄ$ %
new
ÄÄ& )
Vector2
ÄÄ* 1
(
ÄÄ1 2
)
ÄÄ2 3
;
ÄÄ3 4
Vector2
ÅÅ "
m_LastSecondViewSize
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
Vector2
ÅÅ+ 2
(
ÅÅ2 3
)
ÅÅ3 4
;
ÅÅ4 5
void
ÇÇ 
IViewDisplayer
ÇÇ 
.
ÇÇ 

SetTexture
ÇÇ &
(
ÇÇ& '"
ViewCompositionIndex
ÇÇ' ;
index
ÇÇ< A
,
ÇÇA B
Texture
ÇÇC J
texture
ÇÇK R
)
ÇÇR S
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
texture
ÑÑ 
==
ÑÑ 
null
ÑÑ 
)
ÑÑ  
return
ÖÖ 
;
ÖÖ 
bool
áá 
updated
áá 
=
áá 
false
áá  
;
áá  !
switch
àà 
(
àà 
index
àà 
)
àà 
{
ââ 
case
ää "
ViewCompositionIndex
ää )
.
ää) *
First
ää* /
:
ää/ 0
case
ãã "
ViewCompositionIndex
ãã )
.
ãã) *
	Composite
ãã* 3
:
ãã3 4
if
åå 
(
åå 
updated
åå 
|=
åå  "
m_Views
åå# *
[
åå* +
(
åå+ ,
int
åå, /
)
åå/ 0
	ViewIndex
åå0 9
.
åå9 :
First
åå: ?
]
åå? @
.
åå@ A
image
ååA F
!=
ååG I
texture
ååJ Q
)
ååQ R
m_Views
çç 
[
çç  
(
çç  !
int
çç! $
)
çç$ %
	ViewIndex
çç% .
.
çç. /
First
çç/ 4
]
çç4 5
.
çç5 6
image
çç6 ;
=
çç< =
texture
çç> E
;
ççE F
else
éé 
if
éé 
(
éé 
updated
éé $
|=
éé% '
(
éé( )!
m_LastFirstViewSize
éé) <
.
éé< =
x
éé= >
!=
éé? A
texture
ééB I
.
ééI J
width
ééJ O
||
èè& (!
m_LastFirstViewSize
èè) <
.
èè< =
y
èè= >
!=
èè? A
texture
èèB I
.
èèI J
height
èèJ P
)
èèP Q
)
èèQ R
{
êê 
m_Views
ëë 
[
ëë  
(
ëë  !
int
ëë! $
)
ëë$ %
	ViewIndex
ëë% .
.
ëë. /
First
ëë/ 4
]
ëë4 5
.
ëë5 6
image
ëë6 ;
=
ëë< =
null
ëë> B
;
ëëB C
m_Views
íí 
[
íí  
(
íí  !
int
íí! $
)
íí$ %
	ViewIndex
íí% .
.
íí. /
First
íí/ 4
]
íí4 5
.
íí5 6
image
íí6 ;
=
íí< =
texture
íí> E
;
ííE F
}
ìì 
if
îî 
(
îî 
updated
îî 
)
îî  
{
ïï !
m_LastFirstViewSize
ññ +
.
ññ+ ,
x
ññ, -
=
ññ. /
texture
ññ0 7
?
ññ7 8
.
ññ8 9
width
ññ9 >
??
ññ? A
$num
ññB C
;
ññC D!
m_LastFirstViewSize
óó +
.
óó+ ,
y
óó, -
=
óó. /
texture
óó0 7
?
óó7 8
.
óó8 9
height
óó9 ?
??
óó@ B
$num
óóC D
;
óóD E
}
òò 
break
ôô 
;
ôô 
case
öö "
ViewCompositionIndex
öö )
.
öö) *
Second
öö* 0
:
öö0 1
if
õõ 
(
õõ 
m_Views
õõ 
[
õõ  
(
õõ  !
int
õõ! $
)
õõ$ %
	ViewIndex
õõ% .
.
õõ. /
Second
õõ/ 5
]
õõ5 6
.
õõ6 7
image
õõ7 <
!=
õõ= ?
texture
õõ@ G
)
õõG H
m_Views
úú 
[
úú  
(
úú  !
int
úú! $
)
úú$ %
	ViewIndex
úú% .
.
úú. /
Second
úú/ 5
]
úú5 6
.
úú6 7
image
úú7 <
=
úú= >
texture
úú? F
;
úúF G
else
ùù 
if
ùù 
(
ùù 
updated
ùù $
|=
ùù% '
(
ùù( )"
m_LastSecondViewSize
ùù) =
.
ùù= >
x
ùù> ?
!=
ùù@ B
texture
ùùC J
.
ùùJ K
width
ùùK P
||
ûû& ("
m_LastSecondViewSize
ûû) =
.
ûû= >
y
ûû> ?
!=
ûû@ B
texture
ûûC J
.
ûûJ K
height
ûûK Q
)
ûûQ R
)
ûûR S
{
üü 
m_Views
†† 
[
††  
(
††  !
int
††! $
)
††$ %
	ViewIndex
††% .
.
††. /
Second
††/ 5
]
††5 6
.
††6 7
image
††7 <
=
††= >
null
††? C
;
††C D
m_Views
°° 
[
°°  
(
°°  !
int
°°! $
)
°°$ %
	ViewIndex
°°% .
.
°°. /
Second
°°/ 5
]
°°5 6
.
°°6 7
image
°°7 <
=
°°= >
texture
°°? F
;
°°F G
}
¢¢ 
if
££ 
(
££ 
updated
££ 
)
££  
{
§§ "
m_LastSecondViewSize
•• ,
.
••, -
x
••- .
=
••/ 0
texture
••1 8
?
••8 9
.
••9 :
width
••: ?
??
••@ B
$num
••C D
;
••D E"
m_LastSecondViewSize
¶¶ ,
.
¶¶, -
y
¶¶- .
=
¶¶/ 0
texture
¶¶1 8
?
¶¶8 9
.
¶¶9 :
height
¶¶: @
??
¶¶A C
$num
¶¶D E
;
¶¶E F
}
ßß 
break
®® 
;
®® 
default
©© 
:
©© 
throw
™™ 
new
™™ 
ArgumentException
™™ /
(
™™/ 0
$str
™™0 P
+
™™Q R
index
™™S X
)
™™X Y
;
™™Y Z
}
´´ 
}
¨¨ 	
void
ÆÆ 
IViewDisplayer
ÆÆ 
.
ÆÆ 
Repaint
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
=>
ÆÆ& (
Repaint
ÆÆ) 0
(
ÆÆ0 1
)
ÆÆ1 2
;
ÆÆ2 3
void
∞∞ 
ApplyLayout
∞∞ 
(
∞∞ 
Layout
∞∞ 
value
∞∞  %
)
∞∞% &
{
±± 	
m_NoObject1
≤≤ 
.
≤≤ 
style
≤≤ 
.
≤≤ 

visibility
≤≤ (
=
≤≤) *
LookDev
≤≤+ 2
.
≤≤2 3
currentContext
≤≤3 A
.
≤≤A B
GetViewContent
≤≤B P
(
≤≤P Q
	ViewIndex
≤≤Q Z
.
≤≤Z [
First
≤≤[ `
)
≤≤` a
.
≤≤a b
hasViewedObject
≤≤b q
?
≤≤r s

Visibility
≤≤t ~
.
≤≤~ 
Hidden≤≤ Ö
:≤≤Ü á

Visibility≤≤à í
.≤≤í ì
Visible≤≤ì ö
;≤≤ö õ
m_NoObject2
≥≥ 
.
≥≥ 
style
≥≥ 
.
≥≥ 

visibility
≥≥ (
=
≥≥) *
LookDev
≥≥+ 2
.
≥≥2 3
currentContext
≥≥3 A
.
≥≥A B
GetViewContent
≥≥B P
(
≥≥P Q
	ViewIndex
≥≥Q Z
.
≥≥Z [
Second
≥≥[ a
)
≥≥a b
.
≥≥b c
hasViewedObject
≥≥c r
?
≥≥s t

Visibility
≥≥u 
.≥≥ Ä
Hidden≥≥Ä Ü
:≥≥á à

Visibility≥≥â ì
.≥≥ì î
Visible≥≥î õ
;≥≥õ ú
m_NoEnvironment1
¥¥ 
.
¥¥ 
style
¥¥ "
.
¥¥" #

visibility
¥¥# -
=
¥¥. /
LookDev
¥¥0 7
.
¥¥7 8
currentContext
¥¥8 F
.
¥¥F G
GetViewContent
¥¥G U
(
¥¥U V
	ViewIndex
¥¥V _
.
¥¥_ `
First
¥¥` e
)
¥¥e f
.
¥¥f g
hasEnvironment
¥¥g u
?
¥¥v w

Visibility¥¥x Ç
.¥¥Ç É
Hidden¥¥É â
:¥¥ä ã

Visibility¥¥å ñ
.¥¥ñ ó
Visible¥¥ó û
;¥¥û ü
m_NoEnvironment2
µµ 
.
µµ 
style
µµ "
.
µµ" #

visibility
µµ# -
=
µµ. /
LookDev
µµ0 7
.
µµ7 8
currentContext
µµ8 F
.
µµF G
GetViewContent
µµG U
(
µµU V
	ViewIndex
µµV _
.
µµ_ `
Second
µµ` f
)
µµf g
.
µµg h
hasEnvironment
µµh v
?
µµw x

Visibilityµµy É
.µµÉ Ñ
HiddenµµÑ ä
:µµã å

Visibilityµµç ó
.µµó ò
Visibleµµò ü
;µµü †
switch
∑∑ 
(
∑∑ 
value
∑∑ 
)
∑∑ 
{
∏∏ 
case
ππ 
Layout
ππ 
.
ππ 
HorizontalSplit
ππ +
:
ππ+ ,
case
∫∫ 
Layout
∫∫ 
.
∫∫ 
VerticalSplit
∫∫ )
:
∫∫) *
if
ªª 
(
ªª 
!
ªª 
m_ViewContainer
ªª (
.
ªª( )
ClassListContains
ªª) :
(
ªª: ;
Style
ªª; @
.
ªª@ A
k_FirstViewClass
ªªA Q
)
ªªQ R
)
ªªR S
m_ViewContainer
ºº '
.
ºº' (
AddToClassList
ºº( 6
(
ºº6 7
Style
ºº7 <
.
ºº< =
k_FirstViewClass
ºº= M
)
ººM N
;
ººN O
if
ΩΩ 
(
ΩΩ 
!
ΩΩ 
m_ViewContainer
ΩΩ (
.
ΩΩ( )
ClassListContains
ΩΩ) :
(
ΩΩ: ;
Style
ΩΩ; @
.
ΩΩ@ A 
k_SecondViewsClass
ΩΩA S
)
ΩΩS T
)
ΩΩT U
m_ViewContainer
ææ '
.
ææ' (
AddToClassList
ææ( 6
(
ææ6 7
Style
ææ7 <
.
ææ< = 
k_SecondViewsClass
ææ= O
)
ææO P
;
ææP Q
if
øø 
(
øø 
value
øø 
==
øø  
Layout
øø! '
.
øø' (
VerticalSplit
øø( 5
)
øø5 6
{
¿¿ 
m_ViewContainer
¡¡ '
.
¡¡' (
AddToClassList
¡¡( 6
(
¡¡6 7
Style
¡¡7 <
.
¡¡< ="
k_VerticalViewsClass
¡¡= Q
)
¡¡Q R
;
¡¡R S
if
¬¬ 
(
¬¬ 
!
¬¬ 
m_ViewContainer
¬¬ ,
.
¬¬, -
ClassListContains
¬¬- >
(
¬¬> ?
Style
¬¬? D
.
¬¬D E"
k_VerticalViewsClass
¬¬E Y
)
¬¬Y Z
)
¬¬Z [
m_ViewContainer
√√ +
.
√√+ ,
AddToClassList
√√, :
(
√√: ;
Style
√√; @
.
√√@ A
k_FirstViewClass
√√A Q
)
√√Q R
;
√√R S
}
ƒƒ 
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈  
$num
≈≈! "
;
≈≈" #
i
≈≈$ %
<
≈≈& '
$num
≈≈( )
;
≈≈) *
++
≈≈+ -
i
≈≈- .
)
≈≈. /
m_Views
∆∆ 
[
∆∆  
i
∆∆  !
]
∆∆! "
.
∆∆" #
style
∆∆# (
.
∆∆( )
display
∆∆) 0
=
∆∆1 2
DisplayStyle
∆∆3 ?
.
∆∆? @
Flex
∆∆@ D
;
∆∆D E
break
«« 
;
«« 
case
»» 
Layout
»» 
.
»» 
FullFirstView
»» )
:
»») *
case
…… 
Layout
…… 
.
…… 
CustomSplit
…… '
:
……' (
if
   
(
   
!
   
m_ViewContainer
   (
.
  ( )
ClassListContains
  ) :
(
  : ;
Style
  ; @
.
  @ A
k_FirstViewClass
  A Q
)
  Q R
)
  R S
m_ViewContainer
ÀÀ '
.
ÀÀ' (
AddToClassList
ÀÀ( 6
(
ÀÀ6 7
Style
ÀÀ7 <
.
ÀÀ< =
k_FirstViewClass
ÀÀ= M
)
ÀÀM N
;
ÀÀN O
if
ÃÃ 
(
ÃÃ 
m_ViewContainer
ÃÃ '
.
ÃÃ' (
ClassListContains
ÃÃ( 9
(
ÃÃ9 :
Style
ÃÃ: ?
.
ÃÃ? @ 
k_SecondViewsClass
ÃÃ@ R
)
ÃÃR S
)
ÃÃS T
m_ViewContainer
ÕÕ '
.
ÕÕ' (!
RemoveFromClassList
ÕÕ( ;
(
ÕÕ; <
Style
ÕÕ< A
.
ÕÕA B 
k_SecondViewsClass
ÕÕB T
)
ÕÕT U
;
ÕÕU V
m_Views
ŒŒ 
[
ŒŒ 
$num
ŒŒ 
]
ŒŒ 
.
ŒŒ 
style
ŒŒ $
.
ŒŒ$ %
display
ŒŒ% ,
=
ŒŒ- .
DisplayStyle
ŒŒ/ ;
.
ŒŒ; <
Flex
ŒŒ< @
;
ŒŒ@ A
m_Views
œœ 
[
œœ 
$num
œœ 
]
œœ 
.
œœ 
style
œœ $
.
œœ$ %
display
œœ% ,
=
œœ- .
DisplayStyle
œœ/ ;
.
œœ; <
None
œœ< @
;
œœ@ A
break
–– 
;
–– 
case
—— 
Layout
—— 
.
—— 
FullSecondView
—— *
:
——* +
if
““ 
(
““ 
m_ViewContainer
““ '
.
““' (
ClassListContains
““( 9
(
““9 :
Style
““: ?
.
““? @
k_FirstViewClass
““@ P
)
““P Q
)
““Q R
m_ViewContainer
”” '
.
””' (!
RemoveFromClassList
””( ;
(
””; <
Style
””< A
.
””A B
k_FirstViewClass
””B R
)
””R S
;
””S T
if
‘‘ 
(
‘‘ 
!
‘‘ 
m_ViewContainer
‘‘ (
.
‘‘( )
ClassListContains
‘‘) :
(
‘‘: ;
Style
‘‘; @
.
‘‘@ A 
k_SecondViewsClass
‘‘A S
)
‘‘S T
)
‘‘T U
m_ViewContainer
’’ '
.
’’' (
AddToClassList
’’( 6
(
’’6 7
Style
’’7 <
.
’’< = 
k_SecondViewsClass
’’= O
)
’’O P
;
’’P Q
m_Views
÷÷ 
[
÷÷ 
$num
÷÷ 
]
÷÷ 
.
÷÷ 
style
÷÷ $
.
÷÷$ %
display
÷÷% ,
=
÷÷- .
DisplayStyle
÷÷/ ;
.
÷÷; <
None
÷÷< @
;
÷÷@ A
m_Views
◊◊ 
[
◊◊ 
$num
◊◊ 
]
◊◊ 
.
◊◊ 
style
◊◊ $
.
◊◊$ %
display
◊◊% ,
=
◊◊- .
DisplayStyle
◊◊/ ;
.
◊◊; <
Flex
◊◊< @
;
◊◊@ A
break
ÿÿ 
;
ÿÿ 
default
ŸŸ 
:
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
ArgumentException
⁄⁄ /
(
⁄⁄/ 0
$str
⁄⁄0 @
)
⁄⁄@ A
;
⁄⁄A B
}
€€ 
if
ﬁﬁ 
(
ﬁﬁ 
value
ﬁﬁ 
==
ﬁﬁ 
Layout
ﬁﬁ 
.
ﬁﬁ  
VerticalSplit
ﬁﬁ  -
)
ﬁﬁ- .
m_ViewContainer
ﬂﬂ 
.
ﬂﬂ  
AddToClassList
ﬂﬂ  .
(
ﬂﬂ. /
Style
ﬂﬂ/ 4
.
ﬂﬂ4 5"
k_VerticalViewsClass
ﬂﬂ5 I
)
ﬂﬂI J
;
ﬂﬂJ K
else
‡‡ 
if
‡‡ 
(
‡‡ 
m_ViewContainer
‡‡ $
.
‡‡$ %
ClassListContains
‡‡% 6
(
‡‡6 7
Style
‡‡7 <
.
‡‡< ="
k_VerticalViewsClass
‡‡= Q
)
‡‡Q R
)
‡‡R S
m_ViewContainer
·· 
.
··  !
RemoveFromClassList
··  3
(
··3 4
Style
··4 9
.
··9 :"
k_VerticalViewsClass
··: N
)
··N O
;
··O P
}
‚‚ 	
void
‰‰ "
ApplySidePanelChange
‰‰ !
(
‰‰! "
	SidePanel
‰‰" +
	sidePanel
‰‰, 5
)
‰‰5 6
{
ÂÂ 	
IStyle
ÊÊ 1
#GetEnvironmentContenairDraggerStyle
ÊÊ 6
(
ÊÊ6 7
)
ÊÊ7 8
=>
ÁÁ $
m_EnvironmentContainer
ÁÁ )
.
ÁÁ) *
Q
ÁÁ* +
(
ÁÁ+ ,
	className
ÁÁ, 5
:
ÁÁ5 6
$str
ÁÁ7 T
)
ÁÁT U
.
ÁÁU V
Q
ÁÁV W
(
ÁÁW X
$str
ÁÁX g
)
ÁÁg h
.
ÁÁh i
style
ÁÁi n
;
ÁÁn o
if
ÈÈ 
(
ÈÈ 
	sidePanel
ÈÈ 
==
ÈÈ 
	SidePanel
ÈÈ &
.
ÈÈ& '
Environment
ÈÈ' 2
)
ÈÈ2 3
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
!
ÎÎ 
m_MainContainer
ÎÎ $
.
ÎÎ$ %
ClassListContains
ÎÎ% 6
(
ÎÎ6 7
Style
ÎÎ7 <
.
ÎÎ< =)
k_ShowEnvironmentPanelClass
ÎÎ= X
)
ÎÎX Y
)
ÎÎY Z
m_MainContainer
ÏÏ #
.
ÏÏ# $
AddToClassList
ÏÏ$ 2
(
ÏÏ2 3
Style
ÏÏ3 8
.
ÏÏ8 9)
k_ShowEnvironmentPanelClass
ÏÏ9 T
)
ÏÏT U
;
ÏÏU V
if
ÓÓ 
(
ÓÓ 
m_EnvironmentList
ÓÓ %
.
ÓÓ% &
selectedIndex
ÓÓ& 3
!=
ÓÓ4 6
-
ÓÓ7 8
$num
ÓÓ8 9
)
ÓÓ9 :$
m_EnvironmentContainer
ÔÔ *
.
ÔÔ* +
Q
ÔÔ+ ,
<
ÔÔ, - 
EnvironmentElement
ÔÔ- ?
>
ÔÔ? @
(
ÔÔ@ A
)
ÔÔA B
.
ÔÔB C
style
ÔÔC H
.
ÔÔH I

visibility
ÔÔI S
=
ÔÔT U

Visibility
ÔÔV `
.
ÔÔ` a
Visible
ÔÔa h
;
ÔÔh i1
#GetEnvironmentContenairDraggerStyle
 3
(
3 4
)
4 5
.
5 6
display
6 =
=
> ?
DisplayStyle
@ L
.
L M
Flex
M Q
;
Q R$
m_EnvironmentContainer
ÒÒ &
.
ÒÒ& '
style
ÒÒ' ,
.
ÒÒ, -
display
ÒÒ- 4
=
ÒÒ5 6
DisplayStyle
ÒÒ7 C
.
ÒÒC D
Flex
ÒÒD H
;
ÒÒH I
}
ÚÚ 
else
ÛÛ 
{
ÙÙ 
if
ıı 
(
ıı 
m_MainContainer
ıı #
.
ıı# $
ClassListContains
ıı$ 5
(
ıı5 6
Style
ıı6 ;
.
ıı; <)
k_ShowEnvironmentPanelClass
ıı< W
)
ııW X
)
ııX Y
m_MainContainer
ˆˆ #
.
ˆˆ# $!
RemoveFromClassList
ˆˆ$ 7
(
ˆˆ7 8
Style
ˆˆ8 =
.
ˆˆ= >)
k_ShowEnvironmentPanelClass
ˆˆ> Y
)
ˆˆY Z
;
ˆˆZ [$
m_EnvironmentContainer
¯¯ &
.
¯¯& '
Q
¯¯' (
<
¯¯( ) 
EnvironmentElement
¯¯) ;
>
¯¯; <
(
¯¯< =
)
¯¯= >
.
¯¯> ?
style
¯¯? D
.
¯¯D E

visibility
¯¯E O
=
¯¯P Q

Visibility
¯¯R \
.
¯¯\ ]
Hidden
¯¯] c
;
¯¯c d1
#GetEnvironmentContenairDraggerStyle
˘˘ 3
(
˘˘3 4
)
˘˘4 5
.
˘˘5 6
display
˘˘6 =
=
˘˘> ?
DisplayStyle
˘˘@ L
.
˘˘L M
None
˘˘M Q
;
˘˘Q R$
m_EnvironmentContainer
˙˙ &
.
˙˙& '
style
˙˙' ,
.
˙˙, -
display
˙˙- 4
=
˙˙5 6
DisplayStyle
˙˙7 C
.
˙˙C D
None
˙˙D H
;
˙˙H I
}
˚˚ 
if
˝˝ 
(
˝˝ 
	sidePanel
˝˝ 
==
˝˝ 
	SidePanel
˝˝ &
.
˝˝& '
Debug
˝˝' ,
)
˝˝, -
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
!
ˇˇ 
m_MainContainer
ˇˇ $
.
ˇˇ$ %
ClassListContains
ˇˇ% 6
(
ˇˇ6 7
Style
ˇˇ7 <
.
ˇˇ< =#
k_ShowDebugPanelClass
ˇˇ= R
)
ˇˇR S
)
ˇˇS T
m_MainContainer
ÄÄ #
.
ÄÄ# $
AddToClassList
ÄÄ$ 2
(
ÄÄ2 3
Style
ÄÄ3 8
.
ÄÄ8 9#
k_ShowDebugPanelClass
ÄÄ9 N
)
ÄÄN O
;
ÄÄO P,
UpdateSideDebugPanelProperties
ÅÅ .
(
ÅÅ. /
)
ÅÅ/ 0
;
ÅÅ0 1
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
m_MainContainer
ÖÖ #
.
ÖÖ# $
ClassListContains
ÖÖ$ 5
(
ÖÖ5 6
Style
ÖÖ6 ;
.
ÖÖ; <#
k_ShowDebugPanelClass
ÖÖ< Q
)
ÖÖQ R
)
ÖÖR S
m_MainContainer
ÜÜ #
.
ÜÜ# $!
RemoveFromClassList
ÜÜ$ 7
(
ÜÜ7 8
Style
ÜÜ8 =
.
ÜÜ= >#
k_ShowDebugPanelClass
ÜÜ> S
)
ÜÜS T
;
ÜÜT U
}
áá 
}
àà 	
void
ää 
Update
ää 
(
ää 
)
ää 
{
ãã 	
if
åå 
(
åå 
LookDev
åå 
.
åå 
waitingConfigure
åå (
)
åå( )
return
çç 
;
çç 
if
ëë 
(
ëë 
!
ëë 
LookDev
ëë 
.
ëë 
	supported
ëë "
)
ëë" #
{
íí 
if
îî 
(
îî #
RenderPipelineManager
îî )
.
îî) *
currentPipeline
îî* 9
!=
îî: <
null
îî= A
)
îîA B
Debug
ïï 
.
ïï 
LogError
ïï "
(
ïï" #
$str
ïï# b
+
ïïc d#
RenderPipelineManager
ïïe z
.
ïïz {
currentPipelineïï{ ä
.ïïä ã
ToStringïïã ì
(ïïì î
)ïïî ï
)ïïï ñ
;ïïñ ó
else
ññ 
if
ññ 
(
ññ 
GraphicsSettings
ññ )
.
ññ) *#
currentRenderPipeline
ññ* ?
!=
ññ@ B
null
ññC G
)
ññG H
Debug
óó 
.
óó 
LogError
óó "
(
óó" #
$str
óó# [
)
óó[ \
;
óó\ ]
else
òò 
Debug
ôô 
.
ôô 
LogError
ôô "
(
ôô" #
$str
ôô# O
)
ôôO P
;
ôôP Q
LookDev
öö 
.
öö 
Close
öö 
(
öö 
)
öö 
;
öö  
}
õõ 
}
úú 	
void
ûû 
OnGUI
ûû 
(
ûû 
)
ûû 
{
üü 	
if
†† 
(
†† 
EditorApplication
††  
.
††  !

isUpdating
††! +
)
††+ ,
return
°° 
;
°° 
ReloadStyleSheets
§§ 
(
§§ 
)
§§ 
;
§§  '
OnUpdateRequestedInternal
¶¶ %
?
¶¶% &
.
¶¶& '
Invoke
¶¶' -
(
¶¶- .
)
¶¶. /
;
¶¶/ 0
}
ßß 	
}
®® 
}©© ö
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeProfileEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
CustomEditor 
( 
typeof 
( 
VolumeProfile &
)& '
)' (
]( )
sealed 

class 
VolumeProfileEditor $
:% &
Editor' -
{ %
VolumeComponentListEditor !
m_ComponentList" 1
;1 2
void

 
OnEnable

 
(

 
)

 
{ 	
m_ComponentList 
= 
new !%
VolumeComponentListEditor" ;
(; <
this< @
)@ A
;A B
m_ComponentList 
. 
Init  
(  !
target! '
as( *
VolumeProfile+ 8
,8 9
serializedObject: J
)J K
;K L
} 	
void 
	OnDisable 
( 
) 
{ 	
if 
( 
m_ComponentList 
!=  "
null# '
)' (
m_ComponentList 
.  
Clear  %
(% &
)& '
;' (
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
serializedObject 
. 
Update #
(# $
)$ %
;% &
m_ComponentList 
. 
OnGUI !
(! "
)" #
;# $
serializedObject 
. #
ApplyModifiedProperties 4
(4 5
)5 6
;6 7
} 	
} 
} ¿¯
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\Environment.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
public 

class 
Environment 
: 
ScriptableObject /
{ 
[ 	
SerializeField	 
] 
string 
m_CubemapGUID 
; 
Cubemap 
	m_Cubemap 
; 
internal 
bool 
isCubemapOnly #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
=: ;
false< A
;A B
public 
float 
rotation 
= 
$num  $
;$ %
public 
float 
exposure 
= 
$num  "
;" #
[ 	
SerializeField	 
] 
float 

m_Latitude 
= 
$num  
;  !
[   	
SerializeField  	 
]   
float!! 
m_Longitude!! 
=!! 
$num!! "
;!!" #
public&& 
Color&& 
shadowColor&&  
=&&! "
new&&# &
Color&&' ,
(&&, -
$num&&- 1
,&&1 2
$num&&3 7
,&&7 8
$num&&9 =
)&&= >
;&&> ?
public++ 
Cubemap++ 
cubemap++ 
{,, 	
get-- 
{.. 
if// 
(// 
	m_Cubemap// 
==//  
null//! %
||//& (
	m_Cubemap//) 2
.//2 3
Equals//3 9
(//9 :
null//: >
)//> ?
)//? @
LoadCubemap00 
(00  
)00  !
;00! "
return11 
	m_Cubemap11  
;11  !
}22 
set33 
{44 
	m_Cubemap55 
=55 
value55 !
;55! "
m_CubemapGUID66 
=66 
AssetDatabase66  -
.66- .
AssetPathToGUID66. =
(66= >
AssetDatabase66> K
.66K L
GetAssetPath66L X
(66X Y
	m_Cubemap66Y b
)66b c
)66c d
;66d e
}77 
}88 	
public== 
float== 
sunLatitude==  
{>> 	
get?? 
=>?? 

m_Latitude?? 
;?? 
set@@ 
=>@@ 

m_Latitude@@ 
=@@ 
ClampLatitude@@  -
(@@- .
value@@. 3
)@@3 4
;@@4 5
}AA 	
publicFF 
floatFF 
sunLongitudeFF !
{GG 	
getHH 
=>HH 
m_LongitudeHH 
;HH 
setII 
=>II 
m_LongitudeII 
=II  
ClampLongitudeII! /
(II/ 0
valueII0 5
)II5 6
;II6 7
}JJ 	
internalLL 
staticLL 
floatLL 
ClampLatitudeLL +
(LL+ ,
floatLL, 1
valueLL2 7
)LL7 8
=>LL9 ;
MathfLL< A
.LLA B
ClampLLB G
(LLG H
valueLLH M
,LLM N
-LLO P
$numLLP R
,LLR S
$numLLT V
)LLV W
;LLW X
internalNN 
staticNN 
floatNN 
ClampLongitudeNN ,
(NN, -
floatNN- 2
valueNN3 8
)NN8 9
{OO 	
valuePP 
=PP 
valuePP 
%PP 
$numPP  
;PP  !
ifQQ 
(QQ 
valueQQ 
<QQ 
$numQQ 
)QQ 
valueRR 
+=RR 
$numRR 
;RR 
returnSS 
valueSS 
;SS 
}TT 	
internalVV 
voidVV 
UpdateSunPositionVV '
(VV' (
LightVV( -
sunVV. 1
)VV1 2
=>WW 
sunWW 
.WW 
	transformWW 
.WW 
rotationWW %
=WW& '

QuaternionWW( 2
.WW2 3
EulerWW3 8
(WW8 9
sunLatitudeWW9 D
,WWD E
rotationWWF N
+WWO P
sunLongitudeWWQ ]
,WW] ^
$numWW_ a
)WWa b
;WWb c
public\\ 
void\\  
ResetToBrightestSpot\\ (
(\\( )
)\\) *
=>]] 
EnvironmentElement]] !
.]]! " 
ResetToBrightestSpot]]" 6
(]]6 7
this]]7 ;
)]]; <
;]]< =
void__ 
LoadCubemap__ 
(__ 
)__ 
{`` 	
	m_Cubemapaa 
=aa 
nullaa 
;aa 
GUIDcc 

storedGUIDcc 
;cc 
GUIDdd 
.dd 
TryParsedd 
(dd 
m_CubemapGUIDdd '
,dd' (
outdd) ,

storedGUIDdd- 7
)dd7 8
;dd8 9
ifee 
(ee 
!ee 

storedGUIDee 
.ee 
Emptyee !
(ee! "
)ee" #
)ee# $
{ff 
stringgg 
pathgg 
=gg 
AssetDatabasegg +
.gg+ ,
GUIDToAssetPathgg, ;
(gg; <
m_CubemapGUIDgg< I
)ggI J
;ggJ K
	m_Cubemaphh 
=hh 
AssetDatabasehh )
.hh) *
LoadAssetAtPathhh* 9
<hh9 :
Cubemaphh: A
>hhA B
(hhB C
pathhhC G
)hhG H
;hhH I
}ii 
}jj 	
internalll 
voidll 
CopyToll 
(ll 
Environmentll (
otherll) .
)ll. /
{mm 	
othernn 
.nn 
cubemapnn 
=nn 
cubemapnn #
;nn# $
otheroo 
.oo 
exposureoo 
=oo 
exposureoo %
;oo% &
otherpp 
.pp 
rotationpp 
=pp 
rotationpp %
;pp% &
otherqq 
.qq 
sunLatitudeqq 
=qq 
sunLatitudeqq  +
;qq+ ,
otherrr 
.rr 
sunLongituderr 
=rr  
sunLongituderr! -
;rr- .
otherss 
.ss 
shadowColorss 
=ss 
shadowColorss  +
;ss+ ,
othertt 
.tt 
namett 
=tt 
namett 
+tt 
$strtt  )
;tt) *
}uu 	
public{{ 
UnityEngine{{ 
.{{ 
	Rendering{{ $
.{{$ %
LookDev{{% ,
.{{, -
Sky{{- 0
sky{{1 4
=>|| 
new|| 
UnityEngine|| 
.|| 
	Rendering|| (
.||( )
LookDev||) 0
.||0 1
Sky||1 4
(||4 5
)||5 6
{}} 
cubemap~~ 
=~~ 
cubemap~~ !
,~~! "
longitudeOffset 
=  !
rotation" *
,* +
exposure
ÄÄ 
=
ÄÄ 
exposure
ÄÄ #
}
ÅÅ 
;
ÅÅ 
internal
ÉÉ 
static
ÉÉ 
Environment
ÉÉ #/
!GetTemporaryEnvironmentForCubemap
ÉÉ$ E
(
ÉÉE F
Cubemap
ÉÉF M
cubemap
ÉÉN U
)
ÉÉU V
{
ÑÑ 	
Environment
ÖÖ 
result
ÖÖ 
=
ÖÖ  
ScriptableObject
ÖÖ! 1
.
ÖÖ1 2
CreateInstance
ÖÖ2 @
<
ÖÖ@ A
Environment
ÖÖA L
>
ÖÖL M
(
ÖÖM N
)
ÖÖN O
;
ÖÖO P
result
ÜÜ 
.
ÜÜ 
cubemap
ÜÜ 
=
ÜÜ 
cubemap
ÜÜ $
;
ÜÜ$ %
result
áá 
.
áá 
isCubemapOnly
áá  
=
áá! "
true
áá# '
;
áá' (
return
àà 
result
àà 
;
àà 
}
ââ 	
internal
ãã 
bool
ãã $
HasCubemapAssetChanged
ãã ,
(
ãã, -
Cubemap
ãã- 4
cubemap
ãã5 <
)
ãã< =
{
åå 	
if
çç 
(
çç 
cubemap
çç 
==
çç 
null
çç 
)
çç  
return
éé 
!
éé 
String
éé 
.
éé 
IsNullOrEmpty
éé ,
(
éé, -
m_CubemapGUID
éé- :
)
éé: ;
;
éé; <
return
êê 
m_CubemapGUID
êê  
!=
êê! #
AssetDatabase
êê$ 1
.
êê1 2
AssetPathToGUID
êê2 A
(
êêA B
AssetDatabase
êêB O
.
êêO P
GetAssetPath
êêP \
(
êê\ ]
cubemap
êê] d
)
êêd e
)
êêe f
;
êêf g
}
ëë 	
}
íí 
[
îî 
CustomEditor
îî 
(
îî 
typeof
îî 
(
îî 
Environment
îî $
)
îî$ %
)
îî% &
]
îî& '
class
ïï 	
EnvironmentEditor
ïï
 
:
ïï 
Editor
ïï $
{
ññ 
public
òò 
sealed
òò 
override
òò 
VisualElement
òò , 
CreateInspectorGUI
òò- ?
(
òò? @
)
òò@ A
=>
òòB D
null
òòE I
;
òòI J
public
õõ 
sealed
õõ 
override
õõ 
void
õõ #
OnInspectorGUI
õõ$ 2
(
õõ2 3
)
õõ3 4
{
õõ5 6
}
õõ7 8
override
ûû 
public
ûû 
	Texture2D
ûû !!
RenderStaticPreview
ûû" 5
(
ûû5 6
string
ûû6 <
	assetPath
ûû= F
,
ûûF G
UnityEngine
ûûH S
.
ûûS T
Object
ûûT Z
[
ûûZ [
]
ûû[ \
	subAssets
ûû] f
,
ûûf g
int
ûûh k
width
ûûl q
,
ûûq r
int
ûûs v
height
ûûw }
)
ûû} ~
=>
üü  
EnvironmentElement
üü !
.
üü! "(
GetLatLongThumbnailTexture
üü" <
(
üü< =
target
üü= C
as
üüD F
Environment
üüG R
,
üüR S
width
üüT Y
)
üüY Z
;
üüZ [
}
†† 
	interface
¢¢ 
	IBendable
¢¢ 
<
¢¢ 
T
¢¢ 
>
¢¢ 
{
££ 
void
§§ 
Bind
§§ 
(
§§ 
T
§§ 
data
§§ 
)
§§ 
;
§§ 
}
•• 
class
ßß 	 
EnvironmentElement
ßß
 
:
ßß 
VisualElement
ßß ,
,
ßß, -
	IBendable
ßß. 7
<
ßß7 8
Environment
ßß8 C
>
ßßC D
{
®® 
internal
©© 
const
©© 
int
©© !
k_SkyThumbnailWidth
©© .
=
©©/ 0
$num
©©1 4
;
©©4 5
internal
™™ 
const
™™ 
int
™™ "
k_SkyThumbnailHeight
™™ /
=
™™0 1
$num
™™2 5
;
™™5 6
static
´´ 
Material
´´ %
s_cubeToLatlongMaterial
´´ /
;
´´/ 0
static
¨¨ 
Material
¨¨ #
cubeToLatlongMaterial
¨¨ -
{
≠≠ 	
get
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ %
s_cubeToLatlongMaterial
∞∞ +
==
∞∞, .
null
∞∞/ 3
||
∞∞4 6%
s_cubeToLatlongMaterial
∞∞7 N
.
∞∞N O
Equals
∞∞O U
(
∞∞U V
null
∞∞V Z
)
∞∞Z [
)
∞∞[ \
{
±± %
s_cubeToLatlongMaterial
≤≤ +
=
≤≤, -
new
≤≤. 1
Material
≤≤2 :
(
≤≤: ;
Shader
≤≤; A
.
≤≤A B
Find
≤≤B F
(
≤≤F G
$str
≤≤G e
)
≤≤e f
)
≤≤f g
;
≤≤g h
}
≥≥ 
return
¥¥ %
s_cubeToLatlongMaterial
¥¥ .
;
¥¥. /
}
µµ 
}
∂∂ 	
VisualElement
∏∏ 
environmentParams
∏∏ '
;
∏∏' (
Environment
ππ 
environment
ππ 
;
ππ  
Image
ªª 
latlong
ªª 
;
ªª 
ObjectField
ºº 
skyCubemapField
ºº #
;
ºº# $

FloatField
ΩΩ 
skyRotationOffset
ΩΩ $
;
ΩΩ$ %

FloatField
ææ 
skyExposureField
ææ #
;
ææ# $
Vector2Field
øø 
sunPosition
øø  
;
øø  !

ColorField
¿¿ 
shadowColor
¿¿ 
;
¿¿ 
	TextField
¡¡ 
environmentName
¡¡ !
;
¡¡! "
Action
√√ 
OnChangeCallback
√√ 
;
√√  
public
≈≈ 
Environment
≈≈ 
target
≈≈ !
=>
≈≈" $
environment
≈≈% 0
;
≈≈0 1
public
««  
EnvironmentElement
«« !
(
««! "
)
««" #
=>
««$ &
Create
««' -
(
««- .
withPreview
««. 9
:
««9 :
true
««; ?
)
««? @
;
««@ A
public
»»  
EnvironmentElement
»» !
(
»»! "
bool
»»" &
withPreview
»»' 2
,
»»2 3
Action
»»4 :
OnChangeCallback
»»; K
=
»»L M
null
»»N R
)
»»R S
{
…… 	
this
   
.
   
OnChangeCallback
   !
=
  " #
OnChangeCallback
  $ 4
;
  4 5
Create
ÀÀ 
(
ÀÀ 
withPreview
ÀÀ 
)
ÀÀ 
;
ÀÀ  
}
ÃÃ 	
public
ŒŒ  
EnvironmentElement
ŒŒ !
(
ŒŒ! "
Environment
ŒŒ" -
environment
ŒŒ. 9
)
ŒŒ9 :
{
œœ 	
Create
–– 
(
–– 
withPreview
–– 
:
–– 
true
––  $
)
––$ %
;
––% &
Bind
—— 
(
—— 
environment
—— 
)
—— 
;
—— 
}
““ 	
void
‘‘ 
Create
‘‘ 
(
‘‘ 
bool
‘‘ 
withPreview
‘‘ $
)
‘‘$ %
{
’’ 	
if
÷÷ 
(
÷÷ 
withPreview
÷÷ 
)
÷÷ 
{
◊◊ 
latlong
ÿÿ 
=
ÿÿ 
new
ÿÿ 
Image
ÿÿ #
(
ÿÿ# $
)
ÿÿ$ %
;
ÿÿ% &
latlong
ŸŸ 
.
ŸŸ 
style
ŸŸ 
.
ŸŸ 
width
ŸŸ #
=
ŸŸ$ %!
k_SkyThumbnailWidth
ŸŸ& 9
;
ŸŸ9 :
latlong
⁄⁄ 
.
⁄⁄ 
style
⁄⁄ 
.
⁄⁄ 
height
⁄⁄ $
=
⁄⁄% &"
k_SkyThumbnailHeight
⁄⁄' ;
;
⁄⁄; <
Add
€€ 
(
€€ 
latlong
€€ 
)
€€ 
;
€€ 
}
‹‹ 
environmentParams
ﬁﬁ 
=
ﬁﬁ !
GetDefaultInspector
ﬁﬁ  3
(
ﬁﬁ3 4
)
ﬁﬁ4 5
;
ﬁﬁ5 6
Add
ﬂﬂ 
(
ﬂﬂ 
environmentParams
ﬂﬂ !
)
ﬂﬂ! "
;
ﬂﬂ" #
}
‡‡ 	
public
‚‚ 
void
‚‚ 
Bind
‚‚ 
(
‚‚ 
Environment
‚‚ $
environment
‚‚% 0
)
‚‚0 1
{
„„ 	
this
‰‰ 
.
‰‰ 
environment
‰‰ 
=
‰‰ 
environment
‰‰ *
;
‰‰* +
if
ÂÂ 
(
ÂÂ 
environment
ÂÂ 
==
ÂÂ 
null
ÂÂ #
||
ÂÂ$ &
environment
ÂÂ' 2
.
ÂÂ2 3
Equals
ÂÂ3 9
(
ÂÂ9 :
null
ÂÂ: >
)
ÂÂ> ?
)
ÂÂ? @
return
ÊÊ 
;
ÊÊ 
if
ËË 
(
ËË 
latlong
ËË 
!=
ËË 
null
ËË 
&&
ËË  "
!
ËË# $
latlong
ËË$ +
.
ËË+ ,
Equals
ËË, 2
(
ËË2 3
null
ËË3 7
)
ËË7 8
)
ËË8 9
latlong
ÈÈ 
.
ÈÈ 
image
ÈÈ 
=
ÈÈ (
GetLatLongThumbnailTexture
ÈÈ  :
(
ÈÈ: ;
)
ÈÈ; <
;
ÈÈ< =
skyCubemapField
ÍÍ 
.
ÍÍ #
SetValueWithoutNotify
ÍÍ 1
(
ÍÍ1 2
environment
ÍÍ2 =
.
ÍÍ= >
cubemap
ÍÍ> E
)
ÍÍE F
;
ÍÍF G
skyRotationOffset
ÎÎ 
.
ÎÎ #
SetValueWithoutNotify
ÎÎ 3
(
ÎÎ3 4
environment
ÎÎ4 ?
.
ÎÎ? @
rotation
ÎÎ@ H
)
ÎÎH I
;
ÎÎI J
skyExposureField
ÏÏ 
.
ÏÏ #
SetValueWithoutNotify
ÏÏ 2
(
ÏÏ2 3
environment
ÏÏ3 >
.
ÏÏ> ?
exposure
ÏÏ? G
)
ÏÏG H
;
ÏÏH I
sunPosition
ÌÌ 
.
ÌÌ #
SetValueWithoutNotify
ÌÌ -
(
ÌÌ- .
new
ÌÌ. 1
Vector2
ÌÌ2 9
(
ÌÌ9 :
environment
ÌÌ: E
.
ÌÌE F
sunLongitude
ÌÌF R
,
ÌÌR S
environment
ÌÌT _
.
ÌÌ_ `
sunLatitude
ÌÌ` k
)
ÌÌk l
)
ÌÌl m
;
ÌÌm n
shadowColor
ÓÓ 
.
ÓÓ #
SetValueWithoutNotify
ÓÓ -
(
ÓÓ- .
environment
ÓÓ. 9
.
ÓÓ9 :
shadowColor
ÓÓ: E
)
ÓÓE F
;
ÓÓF G
environmentName
ÔÔ 
.
ÔÔ #
SetValueWithoutNotify
ÔÔ 1
(
ÔÔ1 2
environment
ÔÔ2 =
.
ÔÔ= >
name
ÔÔ> B
)
ÔÔB C
;
ÔÔC D
}
 	
public
ÚÚ 
void
ÚÚ 
Bind
ÚÚ 
(
ÚÚ 
Environment
ÚÚ $
environment
ÚÚ% 0
,
ÚÚ0 1
Image
ÚÚ2 7
deportedLatlong
ÚÚ8 G
)
ÚÚG H
{
ÛÛ 	
latlong
ÙÙ 
=
ÙÙ 
deportedLatlong
ÙÙ %
;
ÙÙ% &
Bind
ıı 
(
ıı 
environment
ıı 
)
ıı 
;
ıı 
}
ˆˆ 	
static
¯¯ 
public
¯¯ 
Vector2
¯¯ 
PositionToLatLong
¯¯ /
(
¯¯/ 0
Vector2
¯¯0 7
position
¯¯8 @
)
¯¯@ A
{
˘˘ 	
Vector2
˙˙ 
result
˙˙ 
=
˙˙ 
new
˙˙  
Vector2
˙˙! (
(
˙˙( )
)
˙˙) *
;
˙˙* +
result
˚˚ 
.
˚˚ 
x
˚˚ 
=
˚˚ 
position
˚˚ 
.
˚˚  
y
˚˚  !
*
˚˚" #
Mathf
˚˚$ )
.
˚˚) *
PI
˚˚* ,
*
˚˚- .
$num
˚˚/ 3
*
˚˚4 5
Mathf
˚˚6 ;
.
˚˚; <
Rad2Deg
˚˚< C
;
˚˚C D
result
¸¸ 
.
¸¸ 
y
¸¸ 
=
¸¸ 
(
¸¸ 
position
¸¸  
.
¸¸  !
x
¸¸! "
*
¸¸# $
$num
¸¸% )
+
¸¸* +
$num
¸¸, 0
)
¸¸0 1
*
¸¸2 3
$num
¸¸4 6
*
¸¸7 8
Mathf
¸¸9 >
.
¸¸> ?
PI
¸¸? A
*
¸¸B C
Mathf
¸¸D I
.
¸¸I J
Rad2Deg
¸¸J Q
;
¸¸Q R
if
˛˛ 
(
˛˛ 
result
˛˛ 
.
˛˛ 
x
˛˛ 
<
˛˛ 
-
˛˛ 
$num
˛˛ !
)
˛˛! "
result
˛˛# )
.
˛˛) *
x
˛˛* +
=
˛˛, -
-
˛˛. /
$num
˛˛/ 2
;
˛˛2 3
if
ˇˇ 
(
ˇˇ 
result
ˇˇ 
.
ˇˇ 
x
ˇˇ 
>
ˇˇ 
$num
ˇˇ  
)
ˇˇ  !
result
ˇˇ" (
.
ˇˇ( )
x
ˇˇ) *
=
ˇˇ+ ,
$num
ˇˇ- 0
;
ˇˇ0 1
return
ÅÅ 
result
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
static
ÑÑ 
void
ÑÑ "
ResetToBrightestSpot
ÑÑ /
(
ÑÑ/ 0
Environment
ÑÑ0 ;
environment
ÑÑ< G
)
ÑÑG H
{
ÖÖ 	#
cubeToLatlongMaterial
ÜÜ !
.
ÜÜ! "

SetTexture
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 7
,
ÜÜ7 8
environment
ÜÜ9 D
.
ÜÜD E
cubemap
ÜÜE L
)
ÜÜL M
;
ÜÜM N#
cubeToLatlongMaterial
áá !
.
áá! "
	SetVector
áá" +
(
áá+ ,
$str
áá, ;
,
áá; <
new
áá= @
Vector4
ááA H
(
ááH I
$num
ááI N
,
ááN O
-
ááP Q
$num
ááQ X
,
ááX Y
$num
ááZ [
,
áá[ \
$num
áá] a
)
ááa b
)
ááb c
;
áác d#
cubeToLatlongMaterial
àà !
.
àà! "
	SetVector
àà" +
(
àà+ ,
$str
àà, B
,
ààB C
new
ààD G
Vector4
ààH O
(
ààO P
Mathf
ààP U
.
ààU V
Deg2Rad
ààV ]
*
àà^ _
environment
àà` k
.
ààk l
rotation
ààl t
,
ààt u
$num
ààv z
,
ààz {
$numàà| Ä
,ààÄ Å
$numààÇ Ü
)ààÜ á
)ààá à
;ààà â#
cubeToLatlongMaterial
ââ !
.
ââ! "
SetPass
ââ" )
(
ââ) *
$num
ââ* +
)
ââ+ ,
;
ââ, -
int
ãã 
width
ãã 
=
ãã !
k_SkyThumbnailWidth
ãã +
;
ãã+ ,
int
åå 
height
åå 
=
åå 
width
åå 
>>
åå !
$num
åå" #
;
åå# $
RenderTexture
éé 
temporaryRT
éé %
=
éé& '
new
éé( +
RenderTexture
éé, 9
(
éé9 :
width
éé: ?
,
éé? @
height
ééA G
,
ééG H
$num
ééI J
,
ééJ K!
RenderTextureFormat
ééL _
.
éé_ `
ARGB32
éé` f
,
ééf g$
RenderTextureReadWrite
ééh ~
.
éé~ 
sRGBéé É
)ééÉ Ñ
;ééÑ Ö
	Texture2D
èè #
brightestPointTexture
èè +
=
èè, -
new
èè. 1
	Texture2D
èè2 ;
(
èè; <
width
èè< A
,
èèA B
height
èèC I
,
èèI J
TextureFormat
èèK X
.
èèX Y
RGBAHalf
èèY a
,
èèa b
false
èèc h
)
èèh i
;
èèi j
Graphics
íí 
.
íí 
Blit
íí 
(
íí 
environment
íí %
.
íí% &
cubemap
íí& -
,
íí- .
temporaryRT
íí/ :
,
íí: ;#
cubeToLatlongMaterial
íí< Q
)
ííQ R
;
ííR S#
brightestPointTexture
ìì !
.
ìì! "

ReadPixels
ìì" ,
(
ìì, -
new
ìì- 0
Rect
ìì1 5
(
ìì5 6
$num
ìì6 7
,
ìì7 8
$num
ìì9 :
,
ìì: ;
width
ìì< A
,
ììA B
height
ììC I
)
ììI J
,
ììJ K
$num
ììL M
,
ììM N
$num
ììO P
,
ììP Q
false
ììR W
)
ììW X
;
ììX Y#
brightestPointTexture
îî !
.
îî! "
Apply
îî" '
(
îî' (
)
îî( )
;
îî) *
Color
òò 
[
òò 
]
òò 
color
òò 
=
òò #
brightestPointTexture
òò 1
.
òò1 2
	GetPixels
òò2 ;
(
òò; <
)
òò< =
;
òò= >
RenderTexture
ôô 
.
ôô 
active
ôô  
=
ôô! "
null
ôô# '
;
ôô' (
temporaryRT
öö 
.
öö 
Release
öö 
(
öö  
)
öö  !
;
öö! "
float
úú 
maxLuminance
úú 
=
úú  
$num
úú! %
;
úú% &
int
ùù 
maxIndex
ùù 
=
ùù 
$num
ùù 
;
ùù 
for
ûû 
(
ûû 
int
ûû 
index
ûû 
=
ûû 
height
ûû #
*
ûû$ %
width
ûû& +
-
ûû, -
$num
ûû. /
;
ûû/ 0
index
ûû1 6
>=
ûû7 9
$num
ûû: ;
;
ûû; <
--
ûû= ?
index
ûû? D
)
ûûD E
{
üü 
Color
†† 
pixel
†† 
=
†† 
color
†† #
[
††# $
index
††$ )
]
††) *
;
††* +
float
°° 
	luminance
°° 
=
°°  !
pixel
°°" '
.
°°' (
r
°°( )
*
°°* +
$num
°°, 6
+
°°7 8
pixel
°°9 >
.
°°> ?
g
°°? @
*
°°A B
$num
°°C M
+
°°N O
pixel
°°P U
.
°°U V
b
°°V W
*
°°X Y
$num
°°Z d
;
°°d e
if
¢¢ 
(
¢¢ 
maxLuminance
¢¢  
<
¢¢! "
	luminance
¢¢# ,
)
¢¢, -
{
££ 
maxLuminance
§§  
=
§§! "
	luminance
§§# ,
;
§§, -
maxIndex
•• 
=
•• 
index
•• $
;
••$ %
}
¶¶ 
}
ßß 
Vector2
®® 
sunPosition
®® 
=
®®  !
PositionToLatLong
®®" 3
(
®®3 4
new
®®4 7
Vector2
®®8 ?
(
®®? @
(
®®@ A
(
®®A B
maxIndex
®®B J
%
®®K L
width
®®M R
)
®®R S
/
®®T U
(
®®V W
float
®®W \
)
®®\ ]
(
®®] ^
width
®®^ c
-
®®d e
$num
®®f g
)
®®g h
)
®®h i
*
®®j k
$num
®®l n
-
®®o p
$num
®®q s
,
®®s t
(
®®u v
(
®®v w
maxIndex
®®w 
/®®Ä Å
width®®Ç á
)®®á à
/®®â ä
(®®ã å
float®®å ë
)®®ë í
(®®í ì
height®®ì ô
-®®ö õ
$num®®ú ù
)®®ù û
)®®û ü
*®®† °
$num®®¢ §
-®®• ¶
$num®®ß ©
)®®© ™
)®®™ ´
;®®´ ¨
environment
©© 
.
©© 
sunLatitude
©© #
=
©©$ %
sunPosition
©©& 1
.
©©1 2
x
©©2 3
;
©©3 4
environment
™™ 
.
™™ 
sunLongitude
™™ $
=
™™% &
sunPosition
™™' 2
.
™™2 3
y
™™3 4
-
™™5 6
environment
™™7 B
.
™™B C
rotation
™™C K
;
™™K L
}
´´ 	
public
≠≠ 
	Texture2D
≠≠ (
GetLatLongThumbnailTexture
≠≠ 3
(
≠≠3 4
)
≠≠4 5
=>
ÆÆ (
GetLatLongThumbnailTexture
ÆÆ )
(
ÆÆ) *
environment
ÆÆ* 5
,
ÆÆ5 6!
k_SkyThumbnailWidth
ÆÆ7 J
)
ÆÆJ K
;
ÆÆK L
public
∞∞ 
static
∞∞ 
	Texture2D
∞∞ (
GetLatLongThumbnailTexture
∞∞  :
(
∞∞: ;
Environment
∞∞; F
environment
∞∞G R
,
∞∞R S
int
∞∞T W
width
∞∞X ]
)
∞∞] ^
{
±± 	
int
≤≤ 
height
≤≤ 
=
≤≤ 
width
≤≤ 
>>
≤≤ !
$num
≤≤" #
;
≤≤# $
RenderTexture
≥≥ 
	oldActive
≥≥ #
=
≥≥$ %
RenderTexture
≥≥& 3
.
≥≥3 4
active
≥≥4 :
;
≥≥: ;
RenderTexture
¥¥ 
temporaryRT
¥¥ %
=
¥¥& '
new
¥¥( +
RenderTexture
¥¥, 9
(
¥¥9 :
width
¥¥: ?
,
¥¥? @
height
¥¥A G
,
¥¥G H
$num
¥¥I J
,
¥¥J K!
RenderTextureFormat
¥¥L _
.
¥¥_ `
ARGB32
¥¥` f
,
¥¥f g$
RenderTextureReadWrite
¥¥h ~
.
¥¥~ 
sRGB¥¥ É
)¥¥É Ñ
;¥¥Ñ Ö
RenderTexture
µµ 
.
µµ 
active
µµ  
=
µµ! "
temporaryRT
µµ# .
;
µµ. /#
cubeToLatlongMaterial
∂∂ !
.
∂∂! "

SetTexture
∂∂" ,
(
∂∂, -
$str
∂∂- 7
,
∂∂7 8
environment
∂∂9 D
.
∂∂D E
cubemap
∂∂E L
)
∂∂L M
;
∂∂M N#
cubeToLatlongMaterial
∑∑ !
.
∑∑! "
	SetVector
∑∑" +
(
∑∑+ ,
$str
∑∑, ;
,
∑∑; <
new
∏∏ 
Vector4
∏∏ 
(
∏∏ 
height
ππ 
,
ππ 
-
∫∫ 
$num
∫∫ 
,
∫∫ 
$num
ªª 
,
ªª 
$num
ºº 
)
ºº 
)
ºº 
;
ºº #
cubeToLatlongMaterial
ΩΩ !
.
ΩΩ! "
	SetVector
ΩΩ" +
(
ΩΩ+ ,
$str
ΩΩ, B
,
ΩΩB C
new
ææ 
Vector4
ææ 
(
ææ 
Mathf
øø 
.
øø 
Deg2Rad
øø !
*
øø" #
environment
øø$ /
.
øø/ 0
rotation
øø0 8
,
øø8 9
$num
¿¿ 
,
¿¿ 
$num
¡¡ 
,
¡¡ 
$num
¬¬ 
)
¬¬ 
)
¬¬ 
;
¬¬ #
cubeToLatlongMaterial
√√ !
.
√√! "
SetPass
√√" )
(
√√) *
$num
√√* +
)
√√+ ,
;
√√, -
GL
ƒƒ 
.
ƒƒ 
LoadPixelMatrix
ƒƒ 
(
ƒƒ 
$num
ƒƒ  
,
ƒƒ  !
width
ƒƒ" '
,
ƒƒ' (
height
ƒƒ) /
,
ƒƒ/ 0
$num
ƒƒ1 2
)
ƒƒ2 3
;
ƒƒ3 4
GL
≈≈ 
.
≈≈ 
Clear
≈≈ 
(
≈≈ 
true
≈≈ 
,
≈≈ 
true
≈≈ 
,
≈≈  
Color
≈≈! &
.
≈≈& '
black
≈≈' ,
)
≈≈, -
;
≈≈- .
Rect
∆∆ 
skyRect
∆∆ 
=
∆∆ 
new
∆∆ 
Rect
∆∆ #
(
∆∆# $
$num
∆∆$ %
,
∆∆% &
$num
∆∆' (
,
∆∆( )
width
∆∆* /
,
∆∆/ 0
height
∆∆1 7
)
∆∆7 8
;
∆∆8 9
Renderer
«« 
.
««  
DrawFullScreenQuad
«« '
(
««' (
skyRect
««( /
)
««/ 0
;
««0 1
	Texture2D
…… 
result
…… 
=
…… 
new
…… "
	Texture2D
……# ,
(
……, -
width
……- 2
,
……2 3
height
……4 :
,
……: ;
TextureFormat
……< I
.
……I J
ARGB32
……J P
,
……P Q
false
……R W
)
……W X
;
……X Y
result
   
.
   

ReadPixels
   
(
   
new
   !
Rect
  " &
(
  & '
$num
  ' (
,
  ( )
$num
  * +
,
  + ,
width
  - 2
,
  2 3
height
  4 :
)
  : ;
,
  ; <
$num
  = >
,
  > ?
$num
  @ A
,
  A B
false
  C H
)
  H I
;
  I J
result
ÀÀ 
.
ÀÀ 
Apply
ÀÀ 
(
ÀÀ 
false
ÀÀ 
)
ÀÀ 
;
ÀÀ  
RenderTexture
ÃÃ 
.
ÃÃ 
active
ÃÃ  
=
ÃÃ! "
	oldActive
ÃÃ# ,
;
ÃÃ, -
UnityEngine
ÕÕ 
.
ÕÕ 
Object
ÕÕ 
.
ÕÕ 
DestroyImmediate
ÕÕ /
(
ÕÕ/ 0
temporaryRT
ÕÕ0 ;
)
ÕÕ; <
;
ÕÕ< =
return
ŒŒ 
result
ŒŒ 
;
ŒŒ 
}
œœ 	
public
—— 
VisualElement
—— !
GetDefaultInspector
—— 0
(
——0 1
)
——1 2
{
““ 	
VisualElement
”” 
	inspector
”” #
=
””$ %
new
””& )
VisualElement
””* 7
(
””7 8
)
””8 9
{
””: ;
name
””< @
=
””A B
$str
””C N
}
””O P
;
””P Q
VisualElement
’’ 
header
’’  
=
’’! "
new
’’# &
VisualElement
’’' 4
(
’’4 5
)
’’5 6
{
’’7 8
name
’’9 =
=
’’> ?
$str
’’@ R
}
’’S T
;
’’T U
header
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
new
÷÷ 
Image
÷÷  
(
÷÷  !
)
÷÷! "
{
◊◊ 
image
ÿÿ 
=
ÿÿ 
CoreEditorUtils
ÿÿ '
.
ÿÿ' (
LoadIcon
ÿÿ( 0
(
ÿÿ0 1
$str
ÿÿ1 r
,
ÿÿr s
$strÿÿt Å
,ÿÿÅ Ç
forceLowResÿÿÉ é
:ÿÿé è
trueÿÿê î
)ÿÿî ï
}
ŸŸ 
)
ŸŸ 
;
ŸŸ 
environmentName
⁄⁄ 
=
⁄⁄ 
new
⁄⁄ !
	TextField
⁄⁄" +
(
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
environmentName
€€ 
.
€€ 
	isDelayed
€€ %
=
€€& '
true
€€( ,
;
€€, -
environmentName
‹‹ 
.
‹‹ *
RegisterValueChangedCallback
‹‹ 8
(
‹‹8 9
evt
‹‹9 <
=>
‹‹= ?
{
›› 
string
ﬁﬁ 
path
ﬁﬁ 
=
ﬁﬁ 
AssetDatabase
ﬁﬁ +
.
ﬁﬁ+ ,
GetAssetPath
ﬁﬁ, 8
(
ﬁﬁ8 9
environment
ﬁﬁ9 D
)
ﬁﬁD E
;
ﬁﬁE F
environment
ﬂﬂ 
.
ﬂﬂ 
name
ﬂﬂ  
=
ﬂﬂ! "
evt
ﬂﬂ# &
.
ﬂﬂ& '
newValue
ﬂﬂ' /
;
ﬂﬂ/ 0
AssetDatabase
‡‡ 
.
‡‡ 
	SetLabels
‡‡ '
(
‡‡' (
environment
‡‡( 3
,
‡‡3 4
new
‡‡5 8
string
‡‡9 ?
[
‡‡? @
]
‡‡@ A
{
‡‡B C
evt
‡‡D G
.
‡‡G H
newValue
‡‡H P
}
‡‡Q R
)
‡‡R S
;
‡‡S T
EditorUtility
·· 
.
·· 
SetDirty
·· &
(
··& '
environment
··' 2
)
··2 3
;
··3 4
AssetDatabase
‚‚ 
.
‚‚ 
ImportAsset
‚‚ )
(
‚‚) *
path
‚‚* .
)
‚‚. /
;
‚‚/ 0
environmentName
„„ 
.
„„  
name
„„  $
=
„„% &
environment
„„' 2
.
„„2 3
name
„„3 7
;
„„7 8
}
‰‰ 
)
‰‰ 
;
‰‰ 
header
ÂÂ 
.
ÂÂ 
Add
ÂÂ 
(
ÂÂ 
environmentName
ÂÂ &
)
ÂÂ& '
;
ÂÂ' (
	inspector
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ 
header
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
Foldout
ËË 
foldout
ËË 
=
ËË 
new
ËË !
Foldout
ËË" )
(
ËË) *
)
ËË* +
{
ÈÈ 
text
ÍÍ 
=
ÍÍ 
$str
ÍÍ -
}
ÎÎ 
;
ÎÎ 
skyCubemapField
ÏÏ 
=
ÏÏ 
new
ÏÏ !
ObjectField
ÏÏ" -
(
ÏÏ- .
$str
ÏÏ. <
)
ÏÏ< =
{
ÌÌ 
tooltip
ÓÓ 
=
ÓÓ 
$str
ÓÓ C
}
ÔÔ 
;
ÔÔ 
skyCubemapField
 
.
 
allowSceneObjects
 -
=
. /
false
0 5
;
5 6
skyCubemapField
ÒÒ 
.
ÒÒ 

objectType
ÒÒ &
=
ÒÒ' (
typeof
ÒÒ) /
(
ÒÒ/ 0
Cubemap
ÒÒ0 7
)
ÒÒ7 8
;
ÒÒ8 9
skyCubemapField
ÚÚ 
.
ÚÚ *
RegisterValueChangedCallback
ÚÚ 8
(
ÚÚ8 9
evt
ÚÚ9 <
=>
ÚÚ= ?
{
ÛÛ 
var
ÙÙ 
tmp
ÙÙ 
=
ÙÙ 
environment
ÙÙ %
.
ÙÙ% &
cubemap
ÙÙ& -
;
ÙÙ- .
RegisterChange
ıı 
(
ıı 
ref
ıı "
tmp
ıı# &
,
ıı& '
evt
ıı( +
.
ıı+ ,
newValue
ıı, 4
as
ıı5 7
Cubemap
ıı8 ?
,
ıı? @
updatePreview
ııA N
:
ııN O
true
ııP T
,
ııT U
customResync
ııV b
:
ııb c
(
ııd e
)
ııe f
=>
ııg i
environment
ııj u
.
ııu v
cubemap
ııv }
=
ıı~ 
tmpııÄ É
)ııÉ Ñ
;ııÑ Ö
}
ˆˆ 
)
ˆˆ 
;
ˆˆ 
foldout
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
skyCubemapField
˜˜ '
)
˜˜' (
;
˜˜( )
skyRotationOffset
˘˘ 
=
˘˘ 
new
˘˘  #

FloatField
˘˘$ .
(
˘˘. /
$str
˘˘/ 9
)
˘˘9 :
{
˙˙ 
tooltip
˚˚ 
=
˚˚ 
$str
˚˚ H
}
¸¸ 
;
¸¸ 
skyRotationOffset
˝˝ 
.
˝˝ *
RegisterValueChangedCallback
˝˝ :
(
˝˝: ;
evt
˝˝; >
=>
˛˛ 
RegisterChange
˛˛ !
(
˛˛! "
ref
˛˛" %
environment
˛˛& 1
.
˛˛1 2
rotation
˛˛2 :
,
˛˛: ;
Environment
˛˛< G
.
˛˛G H
ClampLongitude
˛˛H V
(
˛˛V W
evt
˛˛W Z
.
˛˛Z [
newValue
˛˛[ c
)
˛˛c d
,
˛˛d e
skyRotationOffset
˛˛f w
,
˛˛w x
updatePreview˛˛y Ü
:˛˛Ü á
true˛˛à å
)˛˛å ç
)˛˛ç é
;˛˛é è
foldout
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
skyRotationOffset
ˇˇ )
)
ˇˇ) *
;
ˇˇ* +
skyExposureField
ÅÅ 
=
ÅÅ 
new
ÅÅ "

FloatField
ÅÅ# -
(
ÅÅ- .
$str
ÅÅ. 8
)
ÅÅ8 9
{
ÇÇ 
tooltip
ÉÉ 
=
ÉÉ 
$str
ÉÉ @
}
ÑÑ 
;
ÑÑ 
skyExposureField
ÖÖ 
.
ÖÖ *
RegisterValueChangedCallback
ÖÖ 9
(
ÖÖ9 :
evt
ÖÖ: =
=>
ÜÜ 
RegisterChange
ÜÜ !
(
ÜÜ! "
ref
ÜÜ" %
environment
ÜÜ& 1
.
ÜÜ1 2
exposure
ÜÜ2 :
,
ÜÜ: ;
evt
ÜÜ< ?
.
ÜÜ? @
newValue
ÜÜ@ H
)
ÜÜH I
)
ÜÜI J
;
ÜÜJ K
foldout
áá 
.
áá 
Add
áá 
(
áá 
skyExposureField
áá (
)
áá( )
;
áá) *
var
àà 
style
àà 
=
àà 
foldout
àà 
.
àà  
Q
àà  !
<
àà! "
Toggle
àà" (
>
àà( )
(
àà) *
)
àà* +
.
àà+ ,
style
àà, 1
;
àà1 2
style
ââ 
.
ââ 

marginLeft
ââ 
=
ââ 
$num
ââ  
;
ââ  !
style
ää 
.
ää %
unityFontStyleAndWeight
ää )
=
ää* +
	FontStyle
ää, 5
.
ää5 6
Bold
ää6 :
;
ää: ;
	inspector
ãã 
.
ãã 
Add
ãã 
(
ãã 
foldout
ãã !
)
ãã! "
;
ãã" #
sunPosition
çç 
=
çç 
new
çç 
Vector2Field
çç *
(
çç* +
$str
çç+ 9
)
çç9 :
{
éé 
tooltip
èè 
=
èè 
$strèè Å
}
êê 
;
êê 
sunPosition
ëë 
.
ëë 
Q
ëë 
(
ëë 
$str
ëë )
)
ëë) *
.
ëë* +
Q
ëë+ ,
<
ëë, -

FloatField
ëë- 7
>
ëë7 8
(
ëë8 9
)
ëë9 :
.
ëë: ;
formatString
ëë; G
=
ëëH I
$str
ëëJ N
;
ëëN O
sunPosition
íí 
.
íí 
Q
íí 
(
íí 
$str
íí )
)
íí) *
.
íí* +
Q
íí+ ,
<
íí, -

FloatField
íí- 7
>
íí7 8
(
íí8 9
)
íí9 :
.
íí: ;
formatString
íí; G
=
ííH I
$str
ííJ N
;
ííN O
sunPosition
ìì 
.
ìì *
RegisterValueChangedCallback
ìì 4
(
ìì4 5
evt
ìì5 8
=>
ìì9 ;
{
îî 
var
ïï 
tmpContainer
ïï  
=
ïï! "
new
ïï# &
Vector2
ïï' .
(
ïï. /
environment
ññ 
.
ññ  
sunLongitude
ññ  ,
,
ññ, -
environment
óó 
.
óó  
sunLatitude
óó  +
)
óó+ ,
;
óó, -
var
òò 
tmpNewValue
òò 
=
òò  !
new
òò" %
Vector2
òò& -
(
òò- .
Environment
ôô 
.
ôô  
ClampLongitude
ôô  .
(
ôô. /
evt
ôô/ 2
.
ôô2 3
newValue
ôô3 ;
.
ôô; <
x
ôô< =
)
ôô= >
,
ôô> ?
Environment
öö 
.
öö  
ClampLatitude
öö  -
(
öö- .
evt
öö. 1
.
öö1 2
newValue
öö2 :
.
öö: ;
y
öö; <
)
öö< =
)
öö= >
;
öö> ?
RegisterChange
õõ 
(
õõ 
ref
õõ "
tmpContainer
õõ# /
,
õõ/ 0
tmpNewValue
õõ1 <
,
õõ< =
sunPosition
õõ> I
,
õõI J
customResync
õõK W
:
õõW X
(
õõY Z
)
õõZ [
=>
õõ\ ^
{
úú 
environment
ùù 
.
ùù  
sunLongitude
ùù  ,
=
ùù- .
tmpContainer
ùù/ ;
.
ùù; <
x
ùù< =
;
ùù= >
environment
ûû 
.
ûû  
sunLatitude
ûû  +
=
ûû, -
tmpContainer
ûû. :
.
ûû: ;
y
ûû; <
;
ûû< =
}
üü 
)
üü 
;
üü 
}
†† 
)
†† 
;
†† 
foldout
°° 
.
°° 
Add
°° 
(
°° 
sunPosition
°° #
)
°°# $
;
°°$ %
Button
££ 
sunToBrightess
££ !
=
££" #
new
££$ '
Button
££( .
(
££. /
(
££/ 0
)
££0 1
=>
££2 4
{
§§ "
ResetToBrightestSpot
•• $
(
••$ %
environment
••% 0
)
••0 1
;
••1 2
sunPosition
¶¶ 
.
¶¶ #
SetValueWithoutNotify
¶¶ 1
(
¶¶1 2
new
¶¶2 5
Vector2
¶¶6 =
(
¶¶= >
Environment
ßß 
.
ßß  
ClampLongitude
ßß  .
(
ßß. /
environment
ßß/ :
.
ßß: ;
sunLongitude
ßß; G
)
ßßG H
,
ßßH I
Environment
®® 
.
®®  
ClampLatitude
®®  -
(
®®- .
environment
®®. 9
.
®®9 :
sunLatitude
®®: E
)
®®E F
)
®®F G
)
®®G H
;
®®H I
}
©© 
)
©© 
{
™™ 
name
´´ 
=
´´ 
$str
´´ -
}
¨¨ 
;
¨¨ 
sunToBrightess
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
new
≠≠ "
Image
≠≠# (
(
≠≠( )
)
≠≠) *
{
ÆÆ 
image
ØØ 
=
ØØ 
CoreEditorUtils
ØØ '
.
ØØ' (
LoadIcon
ØØ( 0
(
ØØ0 1
$str
ØØ1 r
,
ØØr s
$strØØt Å
,ØØÅ Ç
forceLowResØØÉ é
:ØØé è
trueØØê î
)ØØî ï
}
∞∞ 
)
∞∞ 
;
∞∞ 
sunToBrightess
±± 
.
±± 
AddToClassList
±± )
(
±±) *
$str
±±* C
)
±±C D
;
±±D E
var
≤≤ 
vector2Input
≤≤ 
=
≤≤ 
sunPosition
≤≤ *
.
≤≤* +
Q
≤≤+ ,
(
≤≤, -
	className
≤≤- 6
:
≤≤6 7
$str
≤≤8 T
)
≤≤T U
;
≤≤U V
vector2Input
≥≥ 
.
≥≥ 
Remove
≥≥ 
(
≥≥  
sunPosition
≥≥  +
.
≥≥+ ,
Q
≥≥, -
(
≥≥- .
	className
≥≥. 7
:
≥≥7 8
$str
≥≥9 ^
)
≥≥^ _
)
≥≥_ `
;
≥≥` a
vector2Input
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
sunToBrightess
¥¥ +
)
¥¥+ ,
;
¥¥, -
shadowColor
∂∂ 
=
∂∂ 
new
∂∂ 

ColorField
∂∂ (
(
∂∂( )
$str
∂∂) 6
)
∂∂6 7
{
∑∑ 
tooltip
∏∏ 
=
∏∏ 
$str
∏∏ T
}
ππ 
;
ππ 
shadowColor
∫∫ 
.
∫∫ *
RegisterValueChangedCallback
∫∫ 4
(
∫∫4 5
evt
∫∫5 8
=>
ªª 
RegisterChange
ªª !
(
ªª! "
ref
ªª" %
environment
ªª& 1
.
ªª1 2
shadowColor
ªª2 =
,
ªª= >
evt
ªª? B
.
ªªB C
newValue
ªªC K
)
ªªK L
)
ªªL M
;
ªªM N
foldout
ºº 
.
ºº 
Add
ºº 
(
ºº 
shadowColor
ºº #
)
ºº# $
;
ºº$ %
style
ææ 
=
ææ 
foldout
ææ 
.
ææ 
Q
ææ 
<
ææ 
Toggle
ææ $
>
ææ$ %
(
ææ% &
)
ææ& '
.
ææ' (
style
ææ( -
;
ææ- .
style
øø 
.
øø 

marginLeft
øø 
=
øø 
$num
øø  
;
øø  !
style
¿¿ 
.
¿¿ %
unityFontStyleAndWeight
¿¿ )
=
¿¿* +
	FontStyle
¿¿, 5
.
¿¿5 6
Bold
¿¿6 :
;
¿¿: ;
	inspector
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
foldout
¡¡ !
)
¡¡! "
;
¡¡" #
return
√√ 
	inspector
√√ 
;
√√ 
}
ƒƒ 	
void
∆∆ 
RegisterChange
∆∆ 
<
∆∆ 

TValueType
∆∆ &
>
∆∆& '
(
∆∆' (
ref
∆∆( +

TValueType
∆∆, 6
reflectedVariable
∆∆7 H
,
∆∆H I

TValueType
∆∆J T
newValue
∆∆U ]
,
∆∆] ^
	BaseField
∆∆_ h
<
∆∆h i

TValueType
∆∆i s
>
∆∆s t
resyncField∆∆u Ä
=∆∆Å Ç
null∆∆É á
,∆∆á à
bool∆∆â ç
updatePreview∆∆é õ
=∆∆ú ù
false∆∆û £
,∆∆£ §
Action∆∆• ´
customResync∆∆¨ ∏
=∆∆π ∫
null∆∆ª ø
)∆∆ø ¿
{
«« 	
if
»» 
(
»» 
environment
»» 
==
»» 
null
»» #
||
»»$ &
environment
»»' 2
.
»»2 3
Equals
»»3 9
(
»»9 :
null
»»: >
)
»»> ?
)
»»? @
return
…… 
;
…… 
reflectedVariable
   
=
   
newValue
    (
;
  ( )
resyncField
ÀÀ 
?
ÀÀ 
.
ÀÀ #
SetValueWithoutNotify
ÀÀ .
(
ÀÀ. /
newValue
ÀÀ/ 7
)
ÀÀ7 8
;
ÀÀ8 9
customResync
ÃÃ 
?
ÃÃ 
.
ÃÃ 
Invoke
ÃÃ  
(
ÃÃ  !
)
ÃÃ! "
;
ÃÃ" #
if
ÕÕ 
(
ÕÕ 
updatePreview
ÕÕ 
&&
ÕÕ  
latlong
ÕÕ! (
!=
ÕÕ) +
null
ÕÕ, 0
&&
ÕÕ1 3
!
ÕÕ4 5
latlong
ÕÕ5 <
.
ÕÕ< =
Equals
ÕÕ= C
(
ÕÕC D
null
ÕÕD H
)
ÕÕH I
)
ÕÕI J
latlong
ŒŒ 
.
ŒŒ 
image
ŒŒ 
=
ŒŒ (
GetLatLongThumbnailTexture
ŒŒ  :
(
ŒŒ: ;
environment
ŒŒ; F
,
ŒŒF G!
k_SkyThumbnailWidth
ŒŒH [
)
ŒŒ[ \
;
ŒŒ\ ]
EditorUtility
œœ 
.
œœ 
SetDirty
œœ "
(
œœ" #
environment
œœ# .
)
œœ. /
;
œœ/ 0
OnChangeCallback
–– 
?
–– 
.
–– 
Invoke
–– $
(
––$ %
)
––% &
;
––& '
}
—— 	
}
““ 
}”” ıÃ
®D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\ComparisonGizmoController.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
class 	%
ComparisonGizmoController
 #
:$ %
Manipulator& 1
{		 
const

 
float

 
k_DragPadding

 !
=

" #
$num

$ )
;

) *
const 
float 
k_ReferenceScale $
=% &
$num' ,
;, - 
ComparisonGizmoState 
m_State $
;$ %&
SwitchableCameraController "

m_Switcher# -
;- .
enum 
Selected 
{ 	
None 
, 
NodeFirstView 
, 
NodeSecondView 
, 
PlaneSeparator 
, 
Fader 
} 	
Selected 

m_Selected 
; 
Vector2 .
"m_SavedRelativePositionOnMouseDown 2
;2 3
bool 
m_IsDragging 
; 
bool 

isDragging 
{ 	
get 
=> 
m_IsDragging 
;  
set   
{!! 
if## 
(## 
value## 
^## 
m_IsDragging## (
)##( )
{$$ 
if%% 
(%% 
value%% 
)%% 
{&& 
target'' 
.'' 
RegisterCallback'' /
<''/ 0
MouseMoveEvent''0 >
>''> ?
(''? @
OnMouseDrag''@ K
)''K L
;''L M
target(( 
.(( 
CaptureMouse(( +
(((+ ,
)((, -
;((- .
})) 
else** 
{++ 
target,, 
.,, 
ReleaseMouse,, +
(,,+ ,
),,, -
;,,- .
target-- 
.-- 
UnregisterCallback-- 1
<--1 2
MouseMoveEvent--2 @
>--@ A
(--A B
OnMouseDrag--B M
)--M N
;--N O
}.. 
m_IsDragging//  
=//! "
value//# (
;//( )
}00 
}11 
}22 	
public44 %
ComparisonGizmoController44 (
(44( ) 
ComparisonGizmoState44) =
state44> C
,44C D&
SwitchableCameraController44E _
switcher44` h
)44h i
{55 	
m_State66 
=66 
state66 
;66 

m_Switcher77 
=77 
switcher77 !
;77! "
}88 	
	protected:: 
override:: 
void:: %
RegisterCallbacksOnTarget::  9
(::9 :
)::: ;
{;; 	
target<< 
.<< 
RegisterCallback<< #
<<<# $
MouseDownEvent<<$ 2
><<2 3
(<<3 4
OnMouseDown<<4 ?
)<<? @
;<<@ A
target== 
.== 
RegisterCallback== #
<==# $
MouseUpEvent==$ 0
>==0 1
(==1 2
	OnMouseUp==2 ;
)==; <
;==< =
target>> 
.>> 
RegisterCallback>> #
<>># $

WheelEvent>>$ .
>>>. /
(>>/ 0
OnScrollWheel>>0 =
)>>= >
;>>> ?
}?? 	
	protectedAA 
overrideAA 
voidAA )
UnregisterCallbacksFromTargetAA  =
(AA= >
)AA> ?
{BB 	
targetCC 
.CC 
UnregisterCallbackCC %
<CC% &
MouseDownEventCC& 4
>CC4 5
(CC5 6
OnMouseDownCC6 A
)CCA B
;CCB C
targetDD 
.DD 
UnregisterCallbackDD %
<DD% &
MouseUpEventDD& 2
>DD2 3
(DD3 4
	OnMouseUpDD4 =
)DD= >
;DD> ?
targetEE 
.EE 
UnregisterCallbackEE %
<EE% &

WheelEventEE& 0
>EE0 1
(EE1 2
OnScrollWheelEE2 ?
)EE? @
;EE@ A
}FF 	
voidHH 
OnScrollWheelHH 
(HH 

WheelEventHH %
evtHH& )
)HH) *
{II 	
ifJJ 
(JJ 
LookDevJJ 
.JJ 
currentContextJJ &
.JJ& '
layoutJJ' -
.JJ- .

viewLayoutJJ. 8
!=JJ9 ;
LayoutJJ< B
.JJB C
CustomSplitJJC N
)JJN O
returnKK 
;KK 
ifLL 
(LL "
GetViewFromCompositionLL &
(LL& '
evtLL' *
.LL* +
localMousePositionLL+ =
)LL= >
==LL? A
	ViewIndexLLB K
.LLK L
SecondLLL R
)LLR S

m_SwitcherMM 
.MM %
SwitchUntilNextWheelEventMM 4
(MM4 5
)MM5 6
;MM6 7
}OO 	
voidQQ 
OnMouseDownQQ 
(QQ 
MouseDownEventQQ '
evtQQ( +
)QQ+ ,
{RR 	
ifSS 
(SS 
LookDevSS 
.SS 
currentContextSS &
.SS& '
layoutSS' -
.SS- .

viewLayoutSS. 8
!=SS9 ;
LayoutSS< B
.SSB C
CustomSplitSSC N
)SSN O
returnTT 
;TT 
RectVV 
displayRectVV 
=VV 
targetVV %
.VV% &
contentRectVV& 1
;VV1 2
SelectGizmoZoneWW 
(WW $
GetNormalizedCoordinatesWW 4
(WW4 5
evtWW5 8
.WW8 9
localMousePositionWW9 K
,WWK L
displayRectWWM X
)WWX Y
)WWY Z
;WWZ [
ifXX 
(XX 

m_SelectedXX 
!=XX 
SelectedXX &
.XX& '
NoneXX' +
)XX+ ,
{YY .
"m_SavedRelativePositionOnMouseDownZZ 2
=ZZ3 4$
GetNormalizedCoordinatesZZ5 M
(ZZM N
evtZZN Q
.ZZQ R
localMousePositionZZR d
,ZZd e
displayRectZZf q
)ZZq r
-ZZs t
m_StateZZu |
.ZZ| }
center	ZZ} É
;
ZZÉ Ñ

isDragging[[ 
=[[ 
true[[ !
;[[! "
evt]] 
.]] $
StopImmediatePropagation]] ,
(]], -
)]]- .
;]]. /
}^^ 
else__ 
{`` 
ifbb 
(bb "
GetViewFromCompositionbb *
(bb* +
evtbb+ .
.bb. /
localMousePositionbb/ A
)bbA B
==bbC E
	ViewIndexbbF O
.bbO P
SecondbbP V
)bbV W

m_Switchercc 
.cc $
SwitchUntilNextEndOfDragcc 7
(cc7 8
)cc8 9
;cc9 :
}dd 
}ee 	
voidgg 
	OnMouseUpgg 
(gg 
MouseUpEventgg #
evtgg$ '
)gg' (
{hh 	
ifii 
(ii 
LookDevii 
.ii 
currentContextii &
.ii& '
layoutii' -
.ii- .

viewLayoutii. 8
!=ii9 ;
Layoutii< B
.iiB C
CustomSplitiiC N
||jj 

m_Selectedjj 
==jj  
Selectedjj! )
.jj) *
Nonejj* .
)jj. /
returnkk 
;kk 
ifnn 
(nn 

m_Selectednn 
==nn 
Selectednn &
.nn& '
Fadernn' ,
&&nn- /
Mathfnn0 5
.nn5 6
Absnn6 9
(nn9 :
m_Statenn: A
.nnA B
blendFactornnB M
)nnM N
<nnO P 
ComparisonGizmoStatennQ e
.nne f 
circleRadiusSelectednnf z
/nn{ |
(nn} ~
m_State	nn~ Ö
.
nnÖ Ü
length
nnÜ å
-
nnç é"
ComparisonGizmoState
nnè £
.
nn£ §
circleRadius
nn§ ∞
)
nn∞ ±
)
nn± ≤
m_Stateoo 
.oo 
blendFactoroo #
=oo$ %
$numoo& (
;oo( )

m_Selectedqq 
=qq 
Selectedqq !
.qq! "
Noneqq" &
;qq& '

isDraggingrr 
=rr 
falserr 
;rr 
evttt 
.tt $
StopImmediatePropagationtt (
(tt( )
)tt) *
;tt* +
LookDevvv 
.vv 

SaveConfigvv 
(vv 
)vv  
;vv  !
}ww 	
voidyy 
OnMouseDragyy 
(yy 
MouseMoveEventyy '
evtyy( +
)yy+ ,
{zz 	
if{{ 
({{ 

m_Selected{{ 
=={{ 
Selected{{ &
.{{& '
None{{' +
){{+ ,
return|| 
;|| 
switch~~ 
(~~ 

m_Selected~~ 
)~~ 
{ 
case
ÄÄ 
Selected
ÄÄ 
.
ÄÄ 
PlaneSeparator
ÄÄ ,
:
ÄÄ, -"
OnDragPlaneSeparator
ÄÄ0 D
(
ÄÄD E
evt
ÄÄE H
)
ÄÄH I
;
ÄÄI J
break
ÄÄP U
;
ÄÄU V
case
ÅÅ 
Selected
ÅÅ 
.
ÅÅ 
NodeFirstView
ÅÅ +
:
ÅÅ+ ,
case
ÇÇ 
Selected
ÇÇ 
.
ÇÇ 
NodeSecondView
ÇÇ ,
:
ÇÇ, -&
OnDragPlaneNodeExtremity
ÇÇ0 H
(
ÇÇH I
evt
ÇÇI L
)
ÇÇL M
;
ÇÇM N
break
ÇÇP U
;
ÇÇU V
case
ÉÉ 
Selected
ÉÉ 
.
ÉÉ 
Fader
ÉÉ #
:
ÉÉ# $
OnDragFader
ÉÉ0 ;
(
ÉÉ; <
evt
ÉÉ< ?
)
ÉÉ? @
;
ÉÉ@ A
break
ÉÉP U
;
ÉÉU V
default
ÑÑ 
:
ÑÑ 
throw
ÑÑ !
new
ÑÑ" %
ArgumentException
ÑÑ& 7
(
ÑÑ7 8
$str
ÑÑ8 R
)
ÑÑR S
;
ÑÑS T
}
ÖÖ 
}
ÜÜ 	
void
àà "
OnDragPlaneSeparator
àà !
(
àà! "
MouseMoveEvent
àà" 0
evt
àà1 4
)
àà4 5
{
ââ 	
Vector2
ãã 
newPosition
ãã 
=
ãã  !&
GetNormalizedCoordinates
ãã" :
(
ãã: ;
evt
ãã; >
.
ãã> ? 
localMousePosition
ãã? Q
,
ããQ R
target
ããS Y
.
ããY Z
contentRect
ããZ e
)
ããe f
-
ããg h1
"m_SavedRelativePositionOnMouseDownããi ã
;ããã å
m_State
ìì 
.
ìì 
Update
ìì 
(
ìì 
newPosition
ìì &
,
ìì& '
m_State
ìì( /
.
ìì/ 0
length
ìì0 6
,
ìì6 7
m_State
ìì8 ?
.
ìì? @
angle
ìì@ E
)
ììE F
;
ììF G
evt
ïï 
.
ïï &
StopImmediatePropagation
ïï (
(
ïï( )
)
ïï) *
;
ïï* +
}
ññ 	
void
òò &
OnDragPlaneNodeExtremity
òò %
(
òò% &
MouseMoveEvent
òò& 4
evt
òò5 8
)
òò8 9
{
ôô 	
Vector2
öö 
normalizedCoord
öö #
=
öö$ %&
GetNormalizedCoordinates
öö& >
(
öö> ?
evt
öö? B
.
ööB C 
localMousePosition
ööC U
,
ööU V
target
ööW ]
.
öö] ^
contentRect
öö^ i
)
ööi j
;
ööj k
Vector2
õõ 
	basePoint
õõ 
,
õõ 
newPoint
õõ '
;
õõ' (
float
úú 
angleSnapping
úú 
=
úú  !
Mathf
úú" '
.
úú' (
Deg2Rad
úú( /
*
úú0 1
$num
úú2 7
*
úú8 9
$num
úú: >
;
úú> ?
newPoint
ûû 
=
ûû 
normalizedCoord
ûû &
;
ûû& '
	basePoint
üü 
=
üü 

m_Selected
üü "
==
üü# %
Selected
üü& .
.
üü. /
NodeFirstView
üü/ <
?
üü= >
m_State
üü? F
.
üüF G
point2
üüG M
:
üüN O
m_State
üüP W
.
üüW X
point1
üüX ^
;
üü^ _
if
¢¢ 
(
¢¢ 
(
¢¢ 
evt
¢¢ 
.
¢¢ 
	modifiers
¢¢ 
&
¢¢  
EventModifiers
¢¢! /
.
¢¢/ 0
Shift
¢¢0 5
)
¢¢5 6
!=
¢¢7 9
$num
¢¢: ;
)
¢¢; <
{
££ 
Vector3
§§ 
verticalPlane
§§ %
=
§§& '
new
§§( +
Vector3
§§, 3
(
§§3 4
-
§§4 5
$num
§§5 9
,
§§9 :
$num
§§; ?
,
§§? @
	basePoint
§§A J
.
§§J K
x
§§K L
)
§§L M
;
§§M N
float
•• 
side
•• 
=
•• 
Vector3
•• $
.
••$ %
Dot
••% (
(
••( )
new
••) ,
Vector3
••- 4
(
••4 5
normalizedCoord
••5 D
.
••D E
x
••E F
,
••F G
normalizedCoord
••H W
.
••W X
y
••X Y
,
••Y Z
$num
••[ _
)
••_ `
,
••` a
verticalPlane
••b o
)
••o p
;
••p q
float
ßß 
angle
ßß 
=
ßß 
Mathf
ßß #
.
ßß# $
Deg2Rad
ßß$ +
*
ßß, -
Vector2
ßß. 5
.
ßß5 6
Angle
ßß6 ;
(
ßß; <
new
ßß< ?
Vector2
ßß@ G
(
ßßG H
$num
ßßH L
,
ßßL M
$num
ßßN R
)
ßßR S
,
ßßS T
normalizedCoord
ßßU d
-
ßße f
	basePoint
ßßg p
)
ßßp q
;
ßßq r
if
®® 
(
®® 
side
®® 
>
®® 
$num
®® 
)
®®  
angle
©© 
=
©© 
$num
©©  
*
©©! "
Mathf
©©# (
.
©©( )
PI
©©) +
-
©©, -
angle
©©. 3
;
©©3 4
angle
™™ 
=
™™ 
(
™™ 
int
™™ 
)
™™ 
(
™™ 
angle
™™ #
/
™™$ %
angleSnapping
™™& 3
)
™™3 4
*
™™5 6
angleSnapping
™™7 D
;
™™D E
Vector2
´´ 
dir
´´ 
=
´´ 
normalizedCoord
´´ -
-
´´. /
	basePoint
´´0 9
;
´´9 :
float
¨¨ 
length
¨¨ 
=
¨¨ 
dir
¨¨ "
.
¨¨" #
	magnitude
¨¨# ,
;
¨¨, -
newPoint
≠≠ 
=
≠≠ 
	basePoint
≠≠ $
+
≠≠% &
new
≠≠' *
Vector2
≠≠+ 2
(
≠≠2 3
Mathf
≠≠3 8
.
≠≠8 9
Sin
≠≠9 <
(
≠≠< =
angle
≠≠= B
)
≠≠B C
,
≠≠C D
Mathf
≠≠E J
.
≠≠J K
Cos
≠≠K N
(
≠≠N O
angle
≠≠O T
)
≠≠T U
)
≠≠U V
*
≠≠W X
length
≠≠Y _
;
≠≠_ `
}
ÆÆ 
if
∞∞ 
(
∞∞ 

m_Selected
∞∞ 
==
∞∞ 
Selected
∞∞ &
.
∞∞& '
NodeFirstView
∞∞' 4
)
∞∞4 5
m_State
±± 
.
±± 
Update
±± 
(
±± 
newPoint
±± '
,
±±' (
	basePoint
±±) 2
)
±±2 3
;
±±3 4
else
≤≤ 
m_State
≥≥ 
.
≥≥ 
Update
≥≥ 
(
≥≥ 
	basePoint
≥≥ (
,
≥≥( )
newPoint
≥≥* 2
)
≥≥2 3
;
≥≥3 4
evt
µµ 
.
µµ &
StopImmediatePropagation
µµ (
(
µµ( )
)
µµ) *
;
µµ* +
}
∂∂ 	
void
∏∏ 
OnDragFader
∏∏ 
(
∏∏ 
MouseMoveEvent
∏∏ '
evt
∏∏( +
)
∏∏+ ,
{
ππ 	
Vector2
∫∫ 
mousePosition
∫∫ !
=
∫∫" #&
GetNormalizedCoordinates
∫∫$ <
(
∫∫< =
evt
∫∫= @
.
∫∫@ A 
localMousePosition
∫∫A S
,
∫∫S T
target
∫∫U [
.
∫∫[ \
contentRect
∫∫\ g
)
∫∫g h
;
∫∫h i
float
ªª "
distanceToOrthoPlane
ªª &
=
ªª' (
-
ªª) *
Vector3
ªª* 1
.
ªª1 2
Dot
ªª2 5
(
ªª5 6
new
ªª6 9
Vector3
ªª: A
(
ªªA B
mousePosition
ªªB O
.
ªªO P
x
ªªP Q
,
ªªQ R
mousePosition
ªªS `
.
ªª` a
y
ªªa b
,
ªªb c
$num
ªªd h
)
ªªh i
,
ªªi j
m_State
ªªk r
.
ªªr s

planeOrtho
ªªs }
)
ªª} ~
/ªª Ä
m_StateªªÅ à
.ªªà â+
blendFactorMaxGizmoDistanceªªâ §
;ªª§ •
m_State
ºº 
.
ºº 
blendFactor
ºº 
=
ºº  !
Mathf
ºº" '
.
ºº' (
Clamp
ºº( -
(
ºº- ."
distanceToOrthoPlane
ºº. B
,
ººB C
-
ººD E
$num
ººE I
,
ººI J
$num
ººK O
)
ººO P
;
ººP Q
evt
ææ 
.
ææ &
StopImmediatePropagation
ææ (
(
ææ( )
)
ææ) *
;
ææ* +
}
øø 	
void
¡¡ 
SelectGizmoZone
¡¡ 
(
¡¡ 
Vector2
¡¡ $%
normalizedMousePosition
¡¡% <
)
¡¡< =
{
¬¬ 	
Vector3
ƒƒ '
normalizedMousePositionZ1
ƒƒ -
=
ƒƒ. /
new
ƒƒ0 3
Vector3
ƒƒ4 ;
(
ƒƒ; <%
normalizedMousePosition
ƒƒ< S
.
ƒƒS T
x
ƒƒT U
,
ƒƒU V%
normalizedMousePosition
ƒƒW n
.
ƒƒn o
y
ƒƒo p
,
ƒƒp q
$num
ƒƒr v
)
ƒƒv w
;
ƒƒw x
float
≈≈ 
distanceToPlane
≈≈ !
=
≈≈" #
Vector3
≈≈$ +
.
≈≈+ ,
Dot
≈≈, /
(
≈≈/ 0'
normalizedMousePositionZ1
≈≈0 I
,
≈≈I J
m_State
≈≈K R
.
≈≈R S
plane
≈≈S X
)
≈≈X Y
;
≈≈Y Z
float
∆∆  
absDistanceToPlane
∆∆ $
=
∆∆% &
Mathf
∆∆' ,
.
∆∆, -
Abs
∆∆- 0
(
∆∆0 1
distanceToPlane
∆∆1 @
)
∆∆@ A
;
∆∆A B
float
««  
distanceFromCenter
«« $
=
««% &
Vector2
««' .
.
««. /
Distance
««/ 7
(
««7 8%
normalizedMousePosition
««8 O
,
««O P
m_State
««Q X
.
««X Y
center
««Y _
)
««_ `
;
««` a
float
»» 
distanceToOrtho
»» !
=
»»" #
Vector3
»»$ +
.
»»+ ,
Dot
»», /
(
»»/ 0'
normalizedMousePositionZ1
»»0 I
,
»»I J
m_State
»»K R
.
»»R S

planeOrtho
»»S ]
)
»»] ^
;
»»^ _
float
…… 
side
…… 
=
…… 
(
…… 
distanceToOrtho
…… )
>
……* +
$num
……, 0
)
……0 1
?
……2 3
$num
……4 8
:
……9 :
-
……; <
$num
……< @
;
……@ A
Vector2
   
orthoPlaneNormal
   $
=
  % &
new
  ' *
Vector2
  + 2
(
  2 3
m_State
  3 :
.
  : ;

planeOrtho
  ; E
.
  E F
x
  F G
,
  G H
m_State
  I P
.
  P Q

planeOrtho
  Q [
.
  [ \
y
  \ ]
)
  ] ^
;
  ^ _
Selected
ÃÃ 
selected
ÃÃ 
=
ÃÃ 
Selected
ÃÃ  (
.
ÃÃ( )
None
ÃÃ) -
;
ÃÃ- .
if
ÕÕ 
(
ÕÕ  
absDistanceToPlane
ÕÕ "
<
ÕÕ# $"
ComparisonGizmoState
ÕÕ% 9
.
ÕÕ9 :"
circleRadiusSelected
ÕÕ: N
&&
ÕÕO Q
(
ÕÕR S 
distanceFromCenter
ÕÕS e
<
ÕÕf g
(
ÕÕh i
m_State
ÕÕi p
.
ÕÕp q
length
ÕÕq w
+
ÕÕx y#
ComparisonGizmoStateÕÕz é
.ÕÕé è$
circleRadiusSelectedÕÕè £
)ÕÕ£ §
)ÕÕ§ •
)ÕÕ• ¶
{
ŒŒ 
if
œœ 
(
œœ  
absDistanceToPlane
œœ &
<
œœ' ("
ComparisonGizmoState
œœ) =
.
œœ= >
thicknessSelected
œœ> O
)
œœO P
selected
–– 
=
–– 
Selected
–– '
.
––' (
PlaneSeparator
––( 6
;
––6 7
Vector2
““ 
circleCenter
““ $
=
““% &
m_State
““' .
.
““. /
center
““/ 5
+
““6 7
side
““8 <
*
““= >
orthoPlaneNormal
““? O
*
““P Q
m_State
““R Y
.
““Y Z
length
““Z `
;
““` a
float
”” 
d
”” 
=
”” 
Vector2
”” !
.
””! "
Distance
””" *
(
””* +%
normalizedMousePosition
””+ B
,
””B C
circleCenter
””D P
)
””P Q
;
””Q R
if
‘‘ 
(
‘‘ 
d
‘‘ 
<=
‘‘ "
ComparisonGizmoState
‘‘ -
.
‘‘- ."
circleRadiusSelected
‘‘. B
)
‘‘B C
selected
’’ 
=
’’ 
side
’’ #
>
’’$ %
$num
’’& *
?
’’+ ,
Selected
’’- 5
.
’’5 6
NodeFirstView
’’6 C
:
’’D E
Selected
’’F N
.
’’N O
NodeSecondView
’’O ]
;
’’] ^
float
◊◊ ,
maxBlendCircleDistanceToCenter
◊◊ 4
=
◊◊5 6
m_State
◊◊7 >
.
◊◊> ?)
blendFactorMaxGizmoDistance
◊◊? Z
;
◊◊Z [
float
ÿÿ )
blendCircleDistanceToCenter
ÿÿ 1
=
ÿÿ2 3
m_State
ÿÿ4 ;
.
ÿÿ; <
blendFactor
ÿÿ< G
*
ÿÿH I,
maxBlendCircleDistanceToCenter
ÿÿJ h
;
ÿÿh i
Vector2
ŸŸ 
blendCircleCenter
ŸŸ )
=
ŸŸ* +
m_State
ŸŸ, 3
.
ŸŸ3 4
center
ŸŸ4 :
-
ŸŸ; <
orthoPlaneNormal
ŸŸ= M
*
ŸŸN O)
blendCircleDistanceToCenter
ŸŸP k
;
ŸŸk l
float
⁄⁄ (
blendCircleSelectionRadius
⁄⁄ 0
=
⁄⁄1 2
Mathf
⁄⁄3 8
.
⁄⁄8 9
Lerp
⁄⁄9 =
(
⁄⁄= >"
ComparisonGizmoState
⁄⁄> R
.
⁄⁄R S%
blendFactorCircleRadius
⁄⁄S j
,
⁄⁄j k#
ComparisonGizmoState⁄⁄l Ä
.⁄⁄Ä Å/
blendFactorCircleRadiusSelected⁄⁄Å †
,⁄⁄† °
Mathf⁄⁄¢ ß
.⁄⁄ß ®
Clamp⁄⁄® ≠
(⁄⁄≠ Æ
(⁄⁄Æ Ø.
maxBlendCircleDistanceToCenter⁄⁄Ø Õ
-⁄⁄Œ œ
Mathf⁄⁄– ’
.⁄⁄’ ÷
Abs⁄⁄÷ Ÿ
(⁄⁄Ÿ ⁄+
blendCircleDistanceToCenter⁄⁄⁄ ı
)⁄⁄ı ˆ
)⁄⁄ˆ ˜
/⁄⁄¯ ˘
(⁄⁄˙ ˚$
ComparisonGizmoState⁄⁄˚ è
.⁄⁄è ê/
blendFactorCircleRadiusSelected⁄⁄ê Ø
-⁄⁄∞ ±$
ComparisonGizmoState⁄⁄≤ ∆
.⁄⁄∆ «'
blendFactorCircleRadius⁄⁄« ﬁ
)⁄⁄ﬁ ﬂ
,⁄⁄ﬂ ‡
$num⁄⁄· Â
,⁄⁄Â Ê
$num⁄⁄Á Î
)⁄⁄Î Ï
)⁄⁄Ï Ì
;⁄⁄Ì Ó
if
€€ 
(
€€ 
(
€€ %
normalizedMousePosition
€€ ,
-
€€- .
blendCircleCenter
€€/ @
)
€€@ A
.
€€A B
	magnitude
€€B K
<
€€L M(
blendCircleSelectionRadius
€€N h
)
€€h i
selected
‹‹ 
=
‹‹ 
Selected
‹‹ '
.
‹‹' (
Fader
‹‹( -
;
‹‹- .
}
›› 

m_Selected
ﬂﬂ 
=
ﬂﬂ 
selected
ﬂﬂ !
;
ﬂﬂ! "
}
‡‡ 	
internal
„„ 
static
„„ 
Vector2
„„ &
GetNormalizedCoordinates
„„  8
(
„„8 9
Vector2
„„9 @ 
localMousePosition
„„A S
,
„„S T
Rect
„„U Y
rect
„„Z ^
)
„„^ _
=>
‰‰ 
new
‰‰ 
Vector2
‰‰ 
(
‰‰ 
(
ÂÂ 
$num
ÂÂ 
*
ÂÂ  
localMousePosition
ÂÂ (
.
ÂÂ( )
x
ÂÂ) *
-
ÂÂ+ ,
rect
ÂÂ- 1
.
ÂÂ1 2
width
ÂÂ2 7
)
ÂÂ7 8
/
ÂÂ9 :
k_ReferenceScale
ÂÂ; K
,
ÂÂK L
(
ÊÊ 
-
ÊÊ 
$num
ÊÊ 
*
ÊÊ  
localMousePosition
ÊÊ )
.
ÊÊ) *
y
ÊÊ* +
+
ÊÊ, -
rect
ÊÊ. 2
.
ÊÊ2 3
height
ÊÊ3 9
)
ÊÊ9 :
/
ÊÊ; <
k_ReferenceScale
ÊÊ= M
)
ÊÊM N
;
ÊÊN O
	ViewIndex
ËË $
GetViewFromComposition
ËË (
(
ËË( )
Vector2
ËË) 0
localCoordinate
ËË1 @
)
ËË@ A
{
ÈÈ 	
Vector2
ÍÍ '
normalizedLocalCoordinate
ÍÍ -
=
ÍÍ. /&
GetNormalizedCoordinates
ÍÍ0 H
(
ÍÍH I
localCoordinate
ÍÍI X
,
ÍÍX Y
target
ÍÍZ `
.
ÍÍ` a
contentRect
ÍÍa l
)
ÍÍl m
;
ÍÍm n
return
ÎÎ 
Vector3
ÎÎ 
.
ÎÎ 
Dot
ÎÎ 
(
ÎÎ 
new
ÎÎ "
Vector3
ÎÎ# *
(
ÎÎ* +'
normalizedLocalCoordinate
ÎÎ+ D
.
ÎÎD E
x
ÎÎE F
,
ÎÎF G'
normalizedLocalCoordinate
ÎÎH a
.
ÎÎa b
y
ÎÎb c
,
ÎÎc d
$num
ÎÎe f
)
ÎÎf g
,
ÎÎg h
m_State
ÎÎi p
.
ÎÎp q
plane
ÎÎq v
)
ÎÎv w
>=
ÎÎx z
$num
ÎÎ{ |
?
ÏÏ 
	ViewIndex
ÏÏ 
.
ÏÏ 
First
ÏÏ !
:
ÌÌ 
	ViewIndex
ÌÌ 
.
ÌÌ 
Second
ÌÌ "
;
ÌÌ" #
}
ÓÓ 	
}
ÔÔ 
} ìˆ
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\IESEngine.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
System 
. 
Serializable 
] 
public 

class 
	IESEngine 
{ 
const 
float 
k_HalfPi 
= 
$num #
*$ %
Mathf& +
.+ ,
PI, .
;. /
const 
float 
k_TwoPi 
= 
$num "
*# $
Mathf% *
.* +
PI+ -
;- .
internal 
	IESReader 
m_iesReader &
=' (
new) ,
	IESReader- 6
(6 7
)7 8
;8 9
internal 
string 
FileFormatVersion )
{* +
get, /
=>0 2
m_iesReader3 >
.> ?
FileFormatVersion? P
;P Q
}R S
internal 
TextureImporterType $#
m_TextureGenerationType% <
== >
TextureImporterType? R
.R S
CookieS Y
;Y Z
public## 
TextureImporterType## "!
TextureGenerationType### 8
{$$ 	
set%% 
{%% #
m_TextureGenerationType%% )
=%%* +
value%%, 1
;%%1 2
}%%3 4
}&& 	
public-- 
string-- 
ReadFile-- 
(-- 
string-- %
iesFilePath--& 1
)--1 2
{.. 	
if// 
(// 
!// 
File// 
.// 
Exists// 
(// 
iesFilePath// (
)//( )
)//) *
{00 
return11 
$str11 1
;111 2
}22 
string44 
errorMessage44 
;44  
try66 
{77 
errorMessage88 
=88 
m_iesReader88 *
.88* +
ReadFile88+ 3
(883 4
iesFilePath884 ?
)88? @
;88@ A
}99 
catch:: 
(:: 
IOException:: 
ioEx:: #
)::# $
{;; 
return<< 
ioEx<< 
.<< 
Message<< #
;<<# $
}== 
return?? 
errorMessage?? 
;??  
}@@ 	
publicGG 
stringGG 
GetKeywordValueGG %
(GG% &
stringGG& ,
keywordGG- 4
)GG4 5
{HH 	
returnII 
m_iesReaderII 
.II 
GetKeywordValueII .
(II. /
keywordII/ 6
)II6 7
;II7 8
}JJ 	
publicPP 
stringPP 
GetPhotometricTypePP (
(PP( )
)PP) *
{QQ 	
switchRR 
(RR 
m_iesReaderRR 
.RR  
PhotometricTypeRR  /
)RR/ 0
{SS 
caseTT 
$numTT 
:TT 
returnUU 
$strUU #
;UU# $
caseVV 
$numVV 
:VV 
returnWW 
$strWW #
;WW# $
defaultXX 
:XX 
returnYY 
$strYY #
;YY# $
}ZZ 
}[[ 	
publicaa 
(aa 
floataa 
,aa 
stringaa 
)aa 
GetMaximumIntensityaa 2
(aa2 3
)aa3 4
{bb 	
ifcc 
(cc 
m_iesReadercc 
.cc 
TotalLumenscc '
==cc( *
-cc+ ,
$numcc, .
)cc. /
{dd 
returnee 
(ee 
m_iesReaderee #
.ee# $
MaxCandelasee$ /
,ee/ 0
$stree1 ;
)ee; <
;ee< =
}ff 
elsegg 
{hh 
returnii 
(ii 
m_iesReaderii #
.ii# $
TotalLumensii$ /
,ii/ 0
$strii1 9
)ii9 :
;ii: ;
}jj 
}kk 	
publicss 
(ss 
stringss 
,ss 
Texturess 
)ss  
GenerateCubeCookiess! 3
(ss3 4&
TextureImporterCompressionss4 N
compressionssO Z
,ssZ [
intss\ _
textureSizess` k
)ssk l
{tt 	
intuu 
widthuu 
=uu 
$numuu 
*uu 
textureSizeuu '
;uu' (
intvv 
heightvv 
=vv 
$numvv 
*vv 
textureSizevv (
;vv( )
NativeArrayxx 
<xx 
Color32xx 
>xx  
colorBufferxx! ,
;xx, -
switchzz 
(zz 
m_iesReaderzz 
.zz  
PhotometricTypezz  /
)zz/ 0
{{{ 
case|| 
$num|| 
:|| 
colorBuffer}} 
=}}  !(
BuildTypeACylindricalTexture}}" >
(}}> ?
width}}? D
,}}D E
height}}F L
)}}L M
;}}M N
break~~ 
;~~ 
case 
$num 
: 
colorBuffer
ÄÄ 
=
ÄÄ  !*
BuildTypeBCylindricalTexture
ÄÄ" >
(
ÄÄ> ?
width
ÄÄ? D
,
ÄÄD E
height
ÄÄF L
)
ÄÄL M
;
ÄÄM N
break
ÅÅ 
;
ÅÅ 
default
ÇÇ 
:
ÇÇ 
colorBuffer
ÉÉ 
=
ÉÉ  !*
BuildTypeCCylindricalTexture
ÉÉ" >
(
ÉÉ> ?
width
ÉÉ? D
,
ÉÉD E
height
ÉÉF L
)
ÉÉL M
;
ÉÉM N
break
ÑÑ 
;
ÑÑ 
}
ÖÖ 
return
áá 
GenerateTexture
áá "
(
áá" #%
m_TextureGenerationType
áá# :
,
áá: ;"
TextureImporterShape
áá< P
.
ááP Q
TextureCube
ááQ \
,
áá\ ]
compression
áá^ i
,
áái j
width
áák p
,
ááp q
height
áár x
,
ááx y
colorBufferááz Ö
)ááÖ Ü
;ááÜ á
}
àà 	
public
îî 
(
îî 
string
îî 
,
îî 
Texture
îî 
)
îî  
Generate2DCookie
îî! 1
(
îî1 2(
TextureImporterCompression
îî2 L
compression
îîM X
,
îîX Y
float
îîZ _
	coneAngle
îî` i
,
îîi j
int
îîk n
textureSize
îîo z
,
îîz {
boolîî| Ä%
applyLightAttenuationîîÅ ñ
)îîñ ó
{
ïï 	
NativeArray
ññ 
<
ññ 
Color32
ññ 
>
ññ  
colorBuffer
ññ! ,
;
ññ, -
switch
òò 
(
òò 
m_iesReader
òò 
.
òò  
PhotometricType
òò  /
)
òò/ 0
{
ôô 
case
öö 
$num
öö 
:
öö 
colorBuffer
õõ 
=
õõ  !'
BuildTypeAGnomonicTexture
õõ" ;
(
õõ; <
	coneAngle
õõ< E
,
õõE F
textureSize
õõG R
,
õõR S#
applyLightAttenuation
õõT i
)
õõi j
;
õõj k
break
úú 
;
úú 
case
ùù 
$num
ùù 
:
ùù 
colorBuffer
ûû 
=
ûû  !'
BuildTypeBGnomonicTexture
ûû" ;
(
ûû; <
	coneAngle
ûû< E
,
ûûE F
textureSize
ûûG R
,
ûûR S#
applyLightAttenuation
ûûT i
)
ûûi j
;
ûûj k
break
üü 
;
üü 
default
†† 
:
†† 
colorBuffer
°° 
=
°°  !'
BuildTypeCGnomonicTexture
°°" ;
(
°°; <
	coneAngle
°°< E
,
°°E F
textureSize
°°G R
,
°°R S#
applyLightAttenuation
°°T i
)
°°i j
;
°°j k
break
¢¢ 
;
¢¢ 
}
££ 
return
•• 
GenerateTexture
•• "
(
••" #%
m_TextureGenerationType
••# :
,
••: ;"
TextureImporterShape
••< P
.
••P Q
	Texture2D
••Q Z
,
••Z [
compression
••\ g
,
••g h
textureSize
••i t
,
••t u
textureSize••v Å
,••Å Ç
colorBuffer••É é
)••é è
;••è ê
}
¶¶ 	
private
®® 
(
®® 
string
®® 
,
®® 
Texture
®®  
)
®®  !(
GenerateCylindricalTexture
®®" <
(
®®< =(
TextureImporterCompression
®®= W
compression
®®X c
,
®®c d
int
®®e h
textureSize
®®i t
)
®®t u
{
©© 	
int
™™ 
width
™™ 
=
™™ 
$num
™™ 
*
™™ 
textureSize
™™ '
;
™™' (
int
´´ 
height
´´ 
=
´´ 
textureSize
´´ $
;
´´$ %
NativeArray
≠≠ 
<
≠≠ 
Color32
≠≠ 
>
≠≠  
colorBuffer
≠≠! ,
;
≠≠, -
switch
ØØ 
(
ØØ 
m_iesReader
ØØ 
.
ØØ  
PhotometricType
ØØ  /
)
ØØ/ 0
{
∞∞ 
case
±± 
$num
±± 
:
±± 
colorBuffer
≤≤ 
=
≤≤  !*
BuildTypeACylindricalTexture
≤≤" >
(
≤≤> ?
width
≤≤? D
,
≤≤D E
height
≤≤F L
)
≤≤L M
;
≤≤M N
break
≥≥ 
;
≥≥ 
case
¥¥ 
$num
¥¥ 
:
¥¥ 
colorBuffer
µµ 
=
µµ  !*
BuildTypeBCylindricalTexture
µµ" >
(
µµ> ?
width
µµ? D
,
µµD E
height
µµF L
)
µµL M
;
µµM N
break
∂∂ 
;
∂∂ 
default
∑∑ 
:
∑∑ 
colorBuffer
∏∏ 
=
∏∏  !*
BuildTypeCCylindricalTexture
∏∏" >
(
∏∏> ?
width
∏∏? D
,
∏∏D E
height
∏∏F L
)
∏∏L M
;
∏∏M N
break
ππ 
;
ππ 
}
∫∫ 
return
ºº 
GenerateTexture
ºº "
(
ºº" #!
TextureImporterType
ºº# 6
.
ºº6 7
Default
ºº7 >
,
ºº> ?"
TextureImporterShape
ºº@ T
.
ººT U
	Texture2D
ººU ^
,
ºº^ _
compression
ºº` k
,
ººk l
width
ººm r
,
ººr s
height
ººt z
,
ººz {
colorBufferºº| á
)ººá à
;ººà â
}
ΩΩ 	
(
øø 	
string
øø	 
,
øø 
Texture
øø 
)
øø 
GenerateTexture
øø )
(
øø) *!
TextureImporterType
øø* =
type
øø> B
,
øøB C"
TextureImporterShape
øøD X
shape
øøY ^
,
øø^ _(
TextureImporterCompression
øø` z
compressionøø{ Ü
,øøÜ á
intøøà ã
widthøøå ë
,øøë í
intøøì ñ
heightøøó ù
,øøù û
NativeArrayøøü ™
<øø™ ´
Color32øø´ ≤
>øø≤ ≥
colorBufferøø¥ ø
)øøø ¿
{
¿¿ 	
var
ƒƒ 
settings
ƒƒ 
=
ƒƒ 
new
ƒƒ '
TextureGenerationSettings
ƒƒ 8
(
ƒƒ8 9
type
ƒƒ9 =
)
ƒƒ= >
;
ƒƒ> ?&
SourceTextureInformation
∆∆ $
textureInfo
∆∆% 0
=
∆∆1 2
settings
∆∆3 ;
.
∆∆; <&
sourceTextureInformation
∆∆< T
;
∆∆T U
textureInfo
«« 
.
«« 
containsAlpha
«« %
=
««& '
true
««( ,
;
««, -
textureInfo
»» 
.
»» 
height
»» 
=
»»  
height
»»! '
;
»»' (
textureInfo
…… 
.
…… 
width
…… 
=
…… 
width
……  %
;
……% &%
TextureImporterSettings
ÀÀ #%
textureImporterSettings
ÀÀ$ ;
=
ÀÀ< =
settings
ÀÀ> F
.
ÀÀF G%
textureImporterSettings
ÀÀG ^
;
ÀÀ^ _%
textureImporterSettings
ÃÃ #
.
ÃÃ# $
alphaSource
ÃÃ$ /
=
ÃÃ0 1(
TextureImporterAlphaSource
ÃÃ2 L
.
ÃÃL M
	FromInput
ÃÃM V
;
ÃÃV W%
textureImporterSettings
ÕÕ #
.
ÕÕ# $
aniso
ÕÕ$ )
=
ÕÕ* +
$num
ÕÕ, -
;
ÕÕ- .%
textureImporterSettings
ŒŒ #
.
ŒŒ# $
borderMipmap
ŒŒ$ 0
=
ŒŒ1 2
(
ŒŒ3 4%
textureImporterSettings
ŒŒ4 K
.
ŒŒK L
textureType
ŒŒL W
==
ŒŒX Z!
TextureImporterType
ŒŒ[ n
.
ŒŒn o
Cookie
ŒŒo u
)
ŒŒu v
;
ŒŒv w%
textureImporterSettings
œœ #
.
œœ# $

filterMode
œœ$ .
=
œœ/ 0

FilterMode
œœ1 ;
.
œœ; <
Bilinear
œœ< D
;
œœD E%
textureImporterSettings
–– #
.
––# $
generateCubemap
––$ 3
=
––4 5,
TextureImporterGenerateCubemap
––6 T
.
––T U
Cylindrical
––U `
;
––` a%
textureImporterSettings
—— #
.
——# $
mipmapEnabled
——$ 1
=
——2 3
false
——4 9
;
——9 :%
textureImporterSettings
““ #
.
““# $
	npotScale
““$ -
=
““. /&
TextureImporterNPOTScale
““0 H
.
““H I
None
““I M
;
““M N%
textureImporterSettings
”” #
.
””# $
readable
””$ ,
=
””- .
true
””/ 3
;
””3 4%
textureImporterSettings
‘‘ #
.
‘‘# $
sRGBTexture
‘‘$ /
=
‘‘0 1
false
‘‘2 7
;
‘‘7 8%
textureImporterSettings
’’ #
.
’’# $
textureShape
’’$ 0
=
’’1 2
shape
’’3 8
;
’’8 9%
textureImporterSettings
÷÷ #
.
÷÷# $
wrapMode
÷÷$ ,
=
÷÷- .%
textureImporterSettings
÷÷/ F
.
÷÷F G
	wrapModeU
÷÷G P
=
÷÷Q R%
textureImporterSettings
÷÷S j
.
÷÷j k
	wrapModeV
÷÷k t
=
÷÷u v&
textureImporterSettings÷÷w é
.÷÷é è
	wrapModeW÷÷è ò
=÷÷ô ö
TextureWrapMode÷÷õ ™
.÷÷™ ´
Clamp÷÷´ ∞
;÷÷∞ ±-
TextureImporterPlatformSettings
ÿÿ +
platformSettings
ÿÿ, <
=
ÿÿ= >
settings
ÿÿ? G
.
ÿÿG H
platformSettings
ÿÿH X
;
ÿÿX Y
platformSettings
ŸŸ 
.
ŸŸ 
maxTextureSize
ŸŸ +
=
ŸŸ, -
$num
ŸŸ. 2
;
ŸŸ2 3
platformSettings
⁄⁄ 
.
⁄⁄ 
resizeAlgorithm
⁄⁄ ,
=
⁄⁄- .$
TextureResizeAlgorithm
⁄⁄/ E
.
⁄⁄E F
Bilinear
⁄⁄F N
;
⁄⁄N O
platformSettings
€€ 
.
€€  
textureCompression
€€ /
=
€€0 1
compression
€€2 =
;
€€= >%
TextureGenerationOutput
›› #
output
››$ *
=
››+ ,
TextureGenerator
››- =
.
››= >
GenerateTexture
››> M
(
››M N
settings
››N V
,
››V W
colorBuffer
››X c
)
››c d
;
››d e
if
ﬂﬂ 
(
ﬂﬂ 
output
ﬂﬂ 
.
ﬂﬂ 
importWarnings
ﬂﬂ %
.
ﬂﬂ% &
Length
ﬂﬂ& ,
>
ﬂﬂ- .
$num
ﬂﬂ/ 0
)
ﬂﬂ0 1
{
‡‡ 
Debug
·· 
.
·· 

LogWarning
··  
(
··  !
$str
··! J
+
··K L
string
··M S
.
··S T
Join
··T X
(
··X Y
$str
··Y ]
,
··] ^
output
··_ e
.
··e f
importWarnings
··f t
)
··t u
)
··u v
;
··v w
}
‚‚ 
return
‰‰ 
(
‰‰ 
output
‰‰ 
.
‰‰ %
importInspectorWarnings
‰‰ 2
,
‰‰2 3
output
‰‰4 :
.
‰‰: ;
texture
‰‰; B
)
‰‰B C
;
‰‰C D
}
ÂÂ 	
NativeArray
ÁÁ 
<
ÁÁ 
Color32
ÁÁ 
>
ÁÁ *
BuildTypeACylindricalTexture
ÁÁ 9
(
ÁÁ9 :
int
ÁÁ: =
width
ÁÁ> C
,
ÁÁC D
int
ÁÁE H
height
ÁÁI O
)
ÁÁO P
{
ËË 	
float
ÈÈ 
stepU
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
/
ÈÈ  
(
ÈÈ! "
width
ÈÈ" '
-
ÈÈ( )
$num
ÈÈ* +
)
ÈÈ+ ,
;
ÈÈ, -
float
ÍÍ 
stepV
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
/
ÍÍ  
(
ÍÍ! "
height
ÍÍ" (
-
ÍÍ) *
$num
ÍÍ+ ,
)
ÍÍ, -
;
ÍÍ- .
var
ÏÏ 
textureBuffer
ÏÏ 
=
ÏÏ 
new
ÏÏ  #
NativeArray
ÏÏ$ /
<
ÏÏ/ 0
Color32
ÏÏ0 7
>
ÏÏ7 8
(
ÏÏ8 9
width
ÏÏ9 >
*
ÏÏ? @
height
ÏÏA G
,
ÏÏG H
	Allocator
ÏÏI R
.
ÏÏR S
Temp
ÏÏS W
,
ÏÏW X 
NativeArrayOptions
ÏÏY k
.
ÏÏk l!
UninitializedMemory
ÏÏl 
)ÏÏ Ä
;ÏÏÄ Å
for
ÓÓ 
(
ÓÓ 
int
ÓÓ 
y
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
y
ÓÓ 
<
ÓÓ 
height
ÓÓ  &
;
ÓÓ& '
y
ÓÓ( )
++
ÓÓ) +
)
ÓÓ+ ,
{
ÔÔ 
var
 
slice
 
=
 
new
 
NativeSlice
  +
<
+ ,
Color32
, 3
>
3 4
(
4 5
textureBuffer
5 B
,
B C
y
D E
*
F G
width
H M
,
M N
width
O T
)
T U
;
U V
float
ÚÚ 
latitude
ÚÚ 
=
ÚÚ  
y
ÚÚ! "
*
ÚÚ# $
stepV
ÚÚ% *
-
ÚÚ+ ,
$num
ÚÚ- 0
;
ÚÚ0 1
float
ÙÙ #
verticalAnglePosition
ÙÙ +
=
ÙÙ, -
m_iesReader
ÙÙ. 9
.
ÙÙ9 :*
ComputeVerticalAnglePosition
ÙÙ: V
(
ÙÙV W
latitude
ÙÙW _
)
ÙÙ_ `
;
ÙÙ` a
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
x
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
x
ˆˆ  !
<
ˆˆ" #
width
ˆˆ$ )
;
ˆˆ) *
x
ˆˆ+ ,
++
ˆˆ, .
)
ˆˆ. /
{
˜˜ 
float
¯¯ 
	longitude
¯¯ #
=
¯¯$ %
x
¯¯& '
*
¯¯( )
stepU
¯¯* /
-
¯¯0 1
$num
¯¯2 6
;
¯¯6 7
float
˙˙ %
horizontalAnglePosition
˙˙ 1
=
˙˙2 3
m_iesReader
˙˙4 ?
.
˙˙? @4
&ComputeTypeAorBHorizontalAnglePosition
˙˙@ f
(
˙˙f g
	longitude
˙˙g p
)
˙˙p q
;
˙˙q r
byte
¸¸ 
value
¸¸ 
=
¸¸  
(
¸¸! "
byte
¸¸" &
)
¸¸& '
(
¸¸' (
(
¸¸( )
m_iesReader
¸¸) 4
.
¸¸4 5!
InterpolateBilinear
¸¸5 H
(
¸¸H I%
horizontalAnglePosition
¸¸I `
,
¸¸` a#
verticalAnglePosition
¸¸b w
)
¸¸w x
/
¸¸y z
m_iesReader¸¸{ Ü
.¸¸Ü á
MaxCandelas¸¸á í
)¸¸í ì
*¸¸î ï
$num¸¸ñ ô
)¸¸ô ö
;¸¸ö õ
slice
˝˝ 
[
˝˝ 
x
˝˝ 
]
˝˝ 
=
˝˝ 
new
˝˝ "
Color32
˝˝# *
(
˝˝* +
value
˝˝+ 0
,
˝˝0 1
value
˝˝2 7
,
˝˝7 8
value
˝˝9 >
,
˝˝> ?
value
˝˝@ E
)
˝˝E F
;
˝˝F G
}
˛˛ 
}
ˇˇ 
return
ÅÅ 
textureBuffer
ÅÅ  
;
ÅÅ  !
}
ÇÇ 	
NativeArray
ÑÑ 
<
ÑÑ 
Color32
ÑÑ 
>
ÑÑ *
BuildTypeBCylindricalTexture
ÑÑ 9
(
ÑÑ9 :
int
ÑÑ: =
width
ÑÑ> C
,
ÑÑC D
int
ÑÑE H
height
ÑÑI O
)
ÑÑO P
{
ÖÖ 	
float
ÜÜ 
stepU
ÜÜ 
=
ÜÜ 
k_TwoPi
ÜÜ !
/
ÜÜ" #
(
ÜÜ$ %
width
ÜÜ% *
-
ÜÜ+ ,
$num
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0
float
áá 
stepV
áá 
=
áá 
Mathf
áá 
.
áá  
PI
áá  "
/
áá# $
(
áá% &
height
áá& ,
-
áá- .
$num
áá/ 0
)
áá0 1
;
áá1 2
var
ââ 
textureBuffer
ââ 
=
ââ 
new
ââ  #
NativeArray
ââ$ /
<
ââ/ 0
Color32
ââ0 7
>
ââ7 8
(
ââ8 9
width
ââ9 >
*
ââ? @
height
ââA G
,
ââG H
	Allocator
ââI R
.
ââR S
Temp
ââS W
,
ââW X 
NativeArrayOptions
ââY k
.
ââk l!
UninitializedMemory
ââl 
)ââ Ä
;ââÄ Å
for
ãã 
(
ãã 
int
ãã 
y
ãã 
=
ãã 
$num
ãã 
;
ãã 
y
ãã 
<
ãã 
height
ãã  &
;
ãã& '
y
ãã( )
++
ãã) +
)
ãã+ ,
{
åå 
var
çç 
slice
çç 
=
çç 
new
çç 
NativeSlice
çç  +
<
çç+ ,
Color32
çç, 3
>
çç3 4
(
çç4 5
textureBuffer
çç5 B
,
ççB C
y
ççD E
*
ççF G
width
ççH M
,
ççM N
width
ççO T
)
ççT U
;
ççU V
float
èè 
v
èè 
=
èè 
y
èè 
*
èè 
stepV
èè #
-
èè$ %
k_HalfPi
èè& .
;
èè. /
float
ëë 
sinV
ëë 
=
ëë 
Mathf
ëë "
.
ëë" #
Sin
ëë# &
(
ëë& '
v
ëë' (
)
ëë( )
;
ëë) *
float
íí 
cosV
íí 
=
íí 
Mathf
íí "
.
íí" #
Cos
íí# &
(
íí& '
v
íí' (
)
íí( )
;
íí) *
for
îî 
(
îî 
int
îî 
x
îî 
=
îî 
$num
îî 
;
îî 
x
îî  !
<
îî" #
width
îî$ )
;
îî) *
x
îî+ ,
++
îî, .
)
îî. /
{
ïï 
float
ññ 
u
ññ 
=
ññ 
Mathf
ññ #
.
ññ# $
PI
ññ$ &
-
ññ' (
x
ññ) *
*
ññ+ ,
stepU
ññ- 2
;
ññ2 3
float
òò 
sinU
òò 
=
òò  
Mathf
òò! &
.
òò& '
Sin
òò' *
(
òò* +
u
òò+ ,
)
òò, -
;
òò- .
float
ôô 
cosU
ôô 
=
ôô  
Mathf
ôô! &
.
ôô& '
Cos
ôô' *
(
ôô* +
u
ôô+ ,
)
ôô, -
;
ôô- .
float
úú 
	longitude
úú #
=
úú$ %
Mathf
úú& +
.
úú+ ,
Atan2
úú, 1
(
úú1 2
sinV
úú2 6
,
úú6 7
cosU
úú8 <
*
úú= >
cosV
úú? C
)
úúC D
*
úúE F
Mathf
úúG L
.
úúL M
Rad2Deg
úúM T
;
úúT U
float
ùù 
latitude
ùù "
=
ùù# $
Mathf
ùù% *
.
ùù* +
Asin
ùù+ /
(
ùù/ 0
-
ùù0 1
sinU
ùù1 5
*
ùù6 7
cosV
ùù8 <
)
ùù< =
*
ùù> ?
Mathf
ùù@ E
.
ùùE F
Rad2Deg
ùùF M
;
ùùM N
float
üü %
horizontalAnglePosition
üü 1
=
üü2 3
m_iesReader
üü4 ?
.
üü? @4
&ComputeTypeAorBHorizontalAnglePosition
üü@ f
(
üüf g
	longitude
üüg p
)
üüp q
;
üüq r
float
†† #
verticalAnglePosition
†† /
=
††0 1
m_iesReader
††2 =
.
††= >*
ComputeVerticalAnglePosition
††> Z
(
††Z [
latitude
††[ c
)
††c d
;
††d e
byte
¢¢ 
value
¢¢ 
=
¢¢  
(
¢¢! "
byte
¢¢" &
)
¢¢& '
(
¢¢' (
(
¢¢( )
m_iesReader
¢¢) 4
.
¢¢4 5!
InterpolateBilinear
¢¢5 H
(
¢¢H I%
horizontalAnglePosition
¢¢I `
,
¢¢` a#
verticalAnglePosition
¢¢b w
)
¢¢w x
/
¢¢y z
m_iesReader¢¢{ Ü
.¢¢Ü á
MaxCandelas¢¢á í
)¢¢í ì
*¢¢î ï
$num¢¢ñ ô
)¢¢ô ö
;¢¢ö õ
slice
££ 
[
££ 
x
££ 
]
££ 
=
££ 
new
££ "
Color32
££# *
(
££* +
value
££+ 0
,
££0 1
value
££2 7
,
££7 8
value
££9 >
,
££> ?
value
££@ E
)
££E F
;
££F G
}
§§ 
}
•• 
return
ßß 
textureBuffer
ßß  
;
ßß  !
}
®® 	
NativeArray
™™ 
<
™™ 
Color32
™™ 
>
™™ *
BuildTypeCCylindricalTexture
™™ 9
(
™™9 :
int
™™: =
width
™™> C
,
™™C D
int
™™E H
height
™™I O
)
™™O P
{
´´ 	
float
¨¨ 
stepU
¨¨ 
=
¨¨ 
k_TwoPi
¨¨ !
/
¨¨" #
(
¨¨$ %
width
¨¨% *
-
¨¨+ ,
$num
¨¨- .
)
¨¨. /
;
¨¨/ 0
float
≠≠ 
stepV
≠≠ 
=
≠≠ 
Mathf
≠≠ 
.
≠≠  
PI
≠≠  "
/
≠≠# $
(
≠≠% &
height
≠≠& ,
-
≠≠- .
$num
≠≠/ 0
)
≠≠0 1
;
≠≠1 2
var
ØØ 
textureBuffer
ØØ 
=
ØØ 
new
ØØ  #
NativeArray
ØØ$ /
<
ØØ/ 0
Color32
ØØ0 7
>
ØØ7 8
(
ØØ8 9
width
ØØ9 >
*
ØØ? @
height
ØØA G
,
ØØG H
	Allocator
ØØI R
.
ØØR S
Temp
ØØS W
,
ØØW X 
NativeArrayOptions
ØØY k
.
ØØk l!
UninitializedMemory
ØØl 
)ØØ Ä
;ØØÄ Å
for
±± 
(
±± 
int
±± 
y
±± 
=
±± 
$num
±± 
;
±± 
y
±± 
<
±± 
height
±±  &
;
±±& '
y
±±( )
++
±±) +
)
±±+ ,
{
≤≤ 
var
≥≥ 
slice
≥≥ 
=
≥≥ 
new
≥≥ 
NativeSlice
≥≥  +
<
≥≥+ ,
Color32
≥≥, 3
>
≥≥3 4
(
≥≥4 5
textureBuffer
≥≥5 B
,
≥≥B C
y
≥≥D E
*
≥≥F G
width
≥≥H M
,
≥≥M N
width
≥≥O T
)
≥≥T U
;
≥≥U V
float
µµ 
v
µµ 
=
µµ 
y
µµ 
*
µµ 
stepV
µµ #
-
µµ$ %
k_HalfPi
µµ& .
;
µµ. /
float
∑∑ 
sinV
∑∑ 
=
∑∑ 
Mathf
∑∑ "
.
∑∑" #
Sin
∑∑# &
(
∑∑& '
v
∑∑' (
)
∑∑( )
;
∑∑) *
float
∏∏ 
cosV
∏∏ 
=
∏∏ 
Mathf
∏∏ "
.
∏∏" #
Cos
∏∏# &
(
∏∏& '
v
∏∏' (
)
∏∏( )
;
∏∏) *
for
∫∫ 
(
∫∫ 
int
∫∫ 
x
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
x
∫∫  !
<
∫∫" #
width
∫∫$ )
;
∫∫) *
x
∫∫+ ,
++
∫∫, .
)
∫∫. /
{
ªª 
float
ºº 
u
ºº 
=
ºº 
Mathf
ºº #
.
ºº# $
PI
ºº$ &
-
ºº' (
x
ºº) *
*
ºº+ ,
stepU
ºº- 2
;
ºº2 3
float
ææ 
sinU
ææ 
=
ææ  
Mathf
ææ! &
.
ææ& '
Sin
ææ' *
(
ææ* +
u
ææ+ ,
)
ææ, -
;
ææ- .
float
øø 
cosU
øø 
=
øø  
Mathf
øø! &
.
øø& '
Cos
øø' *
(
øø* +
u
øø+ ,
)
øø, -
;
øø- .
float
¬¬ 
	longitude
¬¬ #
=
¬¬$ %
(
¬¬& '
(
¬¬' (
Mathf
¬¬( -
.
¬¬- .
Atan2
¬¬. 3
(
¬¬3 4
sinU
¬¬4 8
*
¬¬9 :
cosV
¬¬; ?
,
¬¬? @
sinV
¬¬A E
)
¬¬E F
+
¬¬G H
k_TwoPi
¬¬I P
)
¬¬P Q
%
¬¬R S
k_TwoPi
¬¬T [
)
¬¬[ \
*
¬¬] ^
Mathf
¬¬_ d
.
¬¬d e
Rad2Deg
¬¬e l
;
¬¬l m
float
√√ 
latitude
√√ "
=
√√# $
(
√√% &
Mathf
√√& +
.
√√+ ,
Asin
√√, 0
(
√√0 1
-
√√1 2
cosU
√√2 6
*
√√7 8
cosV
√√9 =
)
√√= >
+
√√? @
k_HalfPi
√√A I
)
√√I J
*
√√K L
Mathf
√√M R
.
√√R S
Rad2Deg
√√S Z
;
√√Z [
float
≈≈ %
horizontalAnglePosition
≈≈ 1
=
≈≈2 3
m_iesReader
≈≈4 ?
.
≈≈? @1
#ComputeTypeCHorizontalAnglePosition
≈≈@ c
(
≈≈c d
	longitude
≈≈d m
)
≈≈m n
;
≈≈n o
float
∆∆ #
verticalAnglePosition
∆∆ /
=
∆∆0 1
m_iesReader
∆∆2 =
.
∆∆= >*
ComputeVerticalAnglePosition
∆∆> Z
(
∆∆Z [
latitude
∆∆[ c
)
∆∆c d
;
∆∆d e
byte
»» 
value
»» 
=
»»  
(
»»! "
byte
»»" &
)
»»& '
(
»»' (
(
»»( )
m_iesReader
»») 4
.
»»4 5!
InterpolateBilinear
»»5 H
(
»»H I%
horizontalAnglePosition
»»I `
,
»»` a#
verticalAnglePosition
»»b w
)
»»w x
/
»»y z
m_iesReader»»{ Ü
.»»Ü á
MaxCandelas»»á í
)»»í ì
*»»î ï
$num»»ñ ô
)»»ô ö
;»»ö õ
slice
…… 
[
…… 
x
…… 
]
…… 
=
…… 
new
…… "
Color32
……# *
(
……* +
value
……+ 0
,
……0 1
value
……2 7
,
……7 8
value
……9 >
,
……> ?
value
……@ E
)
……E F
;
……F G
}
   
}
ÀÀ 
return
ÕÕ 
textureBuffer
ÕÕ  
;
ÕÕ  !
}
ŒŒ 	
NativeArray
–– 
<
–– 
Color32
–– 
>
–– '
BuildTypeAGnomonicTexture
–– 6
(
––6 7
float
––7 <
	coneAngle
––= F
,
––F G
int
––H K
size
––L P
,
––P Q
bool
––R V#
applyLightAttenuation
––W l
)
––l m
{
—— 	
float
““ 
limitUV
““ 
=
““ 
Mathf
““ !
.
““! "
Tan
““" %
(
““% &
$num
““& *
*
““+ ,
	coneAngle
““- 6
*
““7 8
Mathf
““9 >
.
““> ?
Deg2Rad
““? F
)
““F G
;
““G H
float
”” 
stepUV
”” 
=
”” 
(
”” 
$num
”” 
*
”” 
limitUV
””  '
)
””' (
/
””) *
(
””+ ,
size
””, 0
-
””1 2
$num
””3 4
)
””4 5
;
””5 6
var
’’ 
textureBuffer
’’ 
=
’’ 
new
’’  #
NativeArray
’’$ /
<
’’/ 0
Color32
’’0 7
>
’’7 8
(
’’8 9
size
’’9 =
*
’’> ?
size
’’@ D
,
’’D E
	Allocator
’’F O
.
’’O P
Temp
’’P T
,
’’T U 
NativeArrayOptions
’’V h
.
’’h i
ClearMemory
’’i t
)
’’t u
;
’’u v
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
y
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
y
ÿÿ 
<
ÿÿ 
size
ÿÿ  $
-
ÿÿ% &
$num
ÿÿ' (
;
ÿÿ( )
y
ÿÿ* +
++
ÿÿ+ -
)
ÿÿ- .
{
ŸŸ 
var
⁄⁄ 
slice
⁄⁄ 
=
⁄⁄ 
new
⁄⁄ 
NativeSlice
⁄⁄  +
<
⁄⁄+ ,
Color32
⁄⁄, 3
>
⁄⁄3 4
(
⁄⁄4 5
textureBuffer
⁄⁄5 B
,
⁄⁄B C
y
⁄⁄D E
*
⁄⁄F G
size
⁄⁄H L
,
⁄⁄L M
size
⁄⁄N R
)
⁄⁄R S
;
⁄⁄S T
float
‹‹ 
v
‹‹ 
=
‹‹ 
(
‹‹ 
y
‹‹ 
-
‹‹ 
$num
‹‹  
)
‹‹  !
*
‹‹" #
stepUV
‹‹$ *
-
‹‹+ ,
limitUV
‹‹- 4
;
‹‹4 5
for
ﬁﬁ 
(
ﬁﬁ 
int
ﬁﬁ 
x
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
x
ﬁﬁ  !
<
ﬁﬁ" #
size
ﬁﬁ$ (
-
ﬁﬁ) *
$num
ﬁﬁ+ ,
;
ﬁﬁ, -
x
ﬁﬁ. /
++
ﬁﬁ/ 1
)
ﬁﬁ1 2
{
ﬂﬂ 
float
‡‡ 
u
‡‡ 
=
‡‡ 
(
‡‡ 
x
‡‡  
-
‡‡! "
$num
‡‡# $
)
‡‡$ %
*
‡‡& '
stepUV
‡‡( .
-
‡‡/ 0
limitUV
‡‡1 8
;
‡‡8 9
float
‚‚ 
rayLengthSquared
‚‚ *
=
‚‚+ ,
u
‚‚- .
*
‚‚/ 0
u
‚‚1 2
+
‚‚3 4
v
‚‚5 6
*
‚‚7 8
v
‚‚9 :
+
‚‚; <
$num
‚‚= >
;
‚‚> ?
float
‰‰ 
	longitude
‰‰ #
=
‰‰$ %
Mathf
‰‰& +
.
‰‰+ ,
Atan
‰‰, 0
(
‰‰0 1
u
‰‰1 2
)
‰‰2 3
*
‰‰4 5
Mathf
‰‰6 ;
.
‰‰; <
Rad2Deg
‰‰< C
;
‰‰C D
float
ÂÂ 
latitude
ÂÂ "
=
ÂÂ# $
Mathf
ÂÂ% *
.
ÂÂ* +
Asin
ÂÂ+ /
(
ÂÂ/ 0
v
ÂÂ0 1
/
ÂÂ2 3
Mathf
ÂÂ4 9
.
ÂÂ9 :
Sqrt
ÂÂ: >
(
ÂÂ> ?
rayLengthSquared
ÂÂ? O
)
ÂÂO P
)
ÂÂP Q
*
ÂÂR S
Mathf
ÂÂT Y
.
ÂÂY Z
Rad2Deg
ÂÂZ a
;
ÂÂa b
float
ÁÁ %
horizontalAnglePosition
ÁÁ 1
=
ÁÁ2 3
m_iesReader
ÁÁ4 ?
.
ÁÁ? @1
#ComputeTypeCHorizontalAnglePosition
ÁÁ@ c
(
ÁÁc d
	longitude
ÁÁd m
)
ÁÁm n
;
ÁÁn o
float
ËË #
verticalAnglePosition
ËË /
=
ËË0 1
m_iesReader
ËË2 =
.
ËË= >*
ComputeVerticalAnglePosition
ËË> Z
(
ËËZ [
latitude
ËË[ c
)
ËËc d
;
ËËd e
float
ÎÎ 
lightAttenuation
ÎÎ *
=
ÎÎ+ ,#
applyLightAttenuation
ÎÎ- B
?
ÎÎC D
rayLengthSquared
ÎÎE U
:
ÎÎV W
$num
ÎÎX Z
;
ÎÎZ [
byte
ÌÌ 
value
ÌÌ 
=
ÌÌ  
(
ÌÌ! "
byte
ÌÌ" &
)
ÌÌ& '
(
ÌÌ' (
(
ÌÌ( )
m_iesReader
ÌÌ) 4
.
ÌÌ4 5!
InterpolateBilinear
ÌÌ5 H
(
ÌÌH I%
horizontalAnglePosition
ÌÌI `
,
ÌÌ` a#
verticalAnglePosition
ÌÌb w
)
ÌÌw x
/
ÌÌy z
(
ÌÌ{ |
m_iesReaderÌÌ| á
.ÌÌá à
MaxCandelasÌÌà ì
*ÌÌî ï 
lightAttenuationÌÌñ ¶
)ÌÌ¶ ß
)ÌÌß ®
*ÌÌ© ™
$numÌÌ´ Æ
)ÌÌÆ Ø
;ÌÌØ ∞
slice
ÓÓ 
[
ÓÓ 
x
ÓÓ 
]
ÓÓ 
=
ÓÓ 
new
ÓÓ "
Color32
ÓÓ# *
(
ÓÓ* +
value
ÓÓ+ 0
,
ÓÓ0 1
value
ÓÓ2 7
,
ÓÓ7 8
value
ÓÓ9 >
,
ÓÓ> ?
value
ÓÓ@ E
)
ÓÓE F
;
ÓÓF G
}
ÔÔ 
}
 
return
ÚÚ 
textureBuffer
ÚÚ  
;
ÚÚ  !
}
ÛÛ 	
NativeArray
ıı 
<
ıı 
Color32
ıı 
>
ıı '
BuildTypeBGnomonicTexture
ıı 6
(
ıı6 7
float
ıı7 <
	coneAngle
ıı= F
,
ııF G
int
ııH K
size
ııL P
,
ııP Q
bool
ııR V#
applyLightAttenuation
ııW l
)
ııl m
{
ˆˆ 	
float
˜˜ 
limitUV
˜˜ 
=
˜˜ 
Mathf
˜˜ !
.
˜˜! "
Tan
˜˜" %
(
˜˜% &
$num
˜˜& *
*
˜˜+ ,
	coneAngle
˜˜- 6
*
˜˜7 8
Mathf
˜˜9 >
.
˜˜> ?
Deg2Rad
˜˜? F
)
˜˜F G
;
˜˜G H
float
¯¯ 
stepUV
¯¯ 
=
¯¯ 
(
¯¯ 
$num
¯¯ 
*
¯¯ 
limitUV
¯¯  '
)
¯¯' (
/
¯¯) *
(
¯¯+ ,
size
¯¯, 0
-
¯¯1 2
$num
¯¯3 4
)
¯¯4 5
;
¯¯5 6
var
˙˙ 
textureBuffer
˙˙ 
=
˙˙ 
new
˙˙  #
NativeArray
˙˙$ /
<
˙˙/ 0
Color32
˙˙0 7
>
˙˙7 8
(
˙˙8 9
size
˙˙9 =
*
˙˙> ?
size
˙˙@ D
,
˙˙D E
	Allocator
˙˙F O
.
˙˙O P
Temp
˙˙P T
,
˙˙T U 
NativeArrayOptions
˙˙V h
.
˙˙h i
ClearMemory
˙˙i t
)
˙˙t u
;
˙˙u v
for
˝˝ 
(
˝˝ 
int
˝˝ 
y
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
y
˝˝ 
<
˝˝ 
size
˝˝  $
-
˝˝% &
$num
˝˝' (
;
˝˝( )
y
˝˝* +
++
˝˝+ -
)
˝˝- .
{
˛˛ 
var
ˇˇ 
slice
ˇˇ 
=
ˇˇ 
new
ˇˇ 
NativeSlice
ˇˇ  +
<
ˇˇ+ ,
Color32
ˇˇ, 3
>
ˇˇ3 4
(
ˇˇ4 5
textureBuffer
ˇˇ5 B
,
ˇˇB C
y
ˇˇD E
*
ˇˇF G
size
ˇˇH L
,
ˇˇL M
size
ˇˇN R
)
ˇˇR S
;
ˇˇS T
float
ÅÅ 
v
ÅÅ 
=
ÅÅ 
(
ÅÅ 
y
ÅÅ 
-
ÅÅ 
$num
ÅÅ  
)
ÅÅ  !
*
ÅÅ" #
stepUV
ÅÅ$ *
-
ÅÅ+ ,
limitUV
ÅÅ- 4
;
ÅÅ4 5
for
ÉÉ 
(
ÉÉ 
int
ÉÉ 
x
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
x
ÉÉ  !
<
ÉÉ" #
size
ÉÉ$ (
-
ÉÉ) *
$num
ÉÉ+ ,
;
ÉÉ, -
x
ÉÉ. /
++
ÉÉ/ 1
)
ÉÉ1 2
{
ÑÑ 
float
ÖÖ 
u
ÖÖ 
=
ÖÖ 
(
ÖÖ 
x
ÖÖ  
-
ÖÖ! "
$num
ÖÖ# $
)
ÖÖ$ %
*
ÖÖ& '
stepUV
ÖÖ( .
-
ÖÖ/ 0
limitUV
ÖÖ1 8
;
ÖÖ8 9
float
áá 
rayLengthSquared
áá *
=
áá+ ,
u
áá- .
*
áá/ 0
u
áá1 2
+
áá3 4
v
áá5 6
*
áá7 8
v
áá9 :
+
áá; <
$num
áá= >
;
áá> ?
float
ää 
	longitude
ää #
=
ää$ %
Mathf
ää& +
.
ää+ ,
Atan
ää, 0
(
ää0 1
v
ää1 2
)
ää2 3
*
ää4 5
Mathf
ää6 ;
.
ää; <
Rad2Deg
ää< C
;
ääC D
float
ãã 
latitude
ãã "
=
ãã# $
Mathf
ãã% *
.
ãã* +
Asin
ãã+ /
(
ãã/ 0
u
ãã0 1
/
ãã2 3
Mathf
ãã4 9
.
ãã9 :
Sqrt
ãã: >
(
ãã> ?
rayLengthSquared
ãã? O
)
ããO P
)
ããP Q
*
ããR S
Mathf
ããT Y
.
ããY Z
Rad2Deg
ããZ a
;
ããa b
float
çç %
horizontalAnglePosition
çç 1
=
çç2 3
m_iesReader
çç4 ?
.
çç? @1
#ComputeTypeCHorizontalAnglePosition
çç@ c
(
ççc d
	longitude
ççd m
)
ççm n
;
ççn o
float
éé #
verticalAnglePosition
éé /
=
éé0 1
m_iesReader
éé2 =
.
éé= >*
ComputeVerticalAnglePosition
éé> Z
(
ééZ [
latitude
éé[ c
)
ééc d
;
ééd e
float
ëë 
lightAttenuation
ëë *
=
ëë+ ,#
applyLightAttenuation
ëë- B
?
ëëC D
rayLengthSquared
ëëE U
:
ëëV W
$num
ëëX Z
;
ëëZ [
byte
ìì 
value
ìì 
=
ìì  
(
ìì! "
byte
ìì" &
)
ìì& '
(
ìì' (
(
ìì( )
m_iesReader
ìì) 4
.
ìì4 5!
InterpolateBilinear
ìì5 H
(
ììH I%
horizontalAnglePosition
ììI `
,
ìì` a#
verticalAnglePosition
ììb w
)
ììw x
/
ììy z
(
ìì{ |
m_iesReaderìì| á
.ììá à
MaxCandelasììà ì
*ììî ï 
lightAttenuationììñ ¶
)ìì¶ ß
)ììß ®
*ìì© ™
$numìì´ Æ
)ììÆ Ø
;ììØ ∞
slice
îî 
[
îî 
x
îî 
]
îî 
=
îî 
new
îî "
Color32
îî# *
(
îî* +
value
îî+ 0
,
îî0 1
value
îî2 7
,
îî7 8
value
îî9 >
,
îî> ?
value
îî@ E
)
îîE F
;
îîF G
}
ïï 
}
ññ 
return
òò 
textureBuffer
òò  
;
òò  !
}
ôô 	
NativeArray
õõ 
<
õõ 
Color32
õõ 
>
õõ '
BuildTypeCGnomonicTexture
õõ 6
(
õõ6 7
float
õõ7 <
	coneAngle
õõ= F
,
õõF G
int
õõH K
size
õõL P
,
õõP Q
bool
õõR V#
applyLightAttenuation
õõW l
)
õõl m
{
úú 	
float
ùù 
limitUV
ùù 
=
ùù 
Mathf
ùù !
.
ùù! "
Tan
ùù" %
(
ùù% &
$num
ùù& *
*
ùù+ ,
	coneAngle
ùù- 6
*
ùù7 8
Mathf
ùù9 >
.
ùù> ?
Deg2Rad
ùù? F
)
ùùF G
;
ùùG H
float
ûû 
stepUV
ûû 
=
ûû 
(
ûû 
$num
ûû 
*
ûû 
limitUV
ûû  '
)
ûû' (
/
ûû) *
(
ûû+ ,
size
ûû, 0
-
ûû1 2
$num
ûû3 4
)
ûû4 5
;
ûû5 6
var
†† 
textureBuffer
†† 
=
†† 
new
††  #
NativeArray
††$ /
<
††/ 0
Color32
††0 7
>
††7 8
(
††8 9
size
††9 =
*
††> ?
size
††@ D
,
††D E
	Allocator
††F O
.
††O P
Temp
††P T
,
††T U 
NativeArrayOptions
††V h
.
††h i
ClearMemory
††i t
)
††t u
;
††u v
for
££ 
(
££ 
int
££ 
y
££ 
=
££ 
$num
££ 
;
££ 
y
££ 
<
££ 
size
££  $
-
££% &
$num
££' (
;
££( )
y
££* +
++
££+ -
)
££- .
{
§§ 
var
•• 
slice
•• 
=
•• 
new
•• 
NativeSlice
••  +
<
••+ ,
Color32
••, 3
>
••3 4
(
••4 5
textureBuffer
••5 B
,
••B C
y
••D E
*
••F G
size
••H L
,
••L M
size
••N R
)
••R S
;
••S T
float
ßß 
v
ßß 
=
ßß 
(
ßß 
y
ßß 
-
ßß 
$num
ßß  
)
ßß  !
*
ßß" #
stepUV
ßß$ *
-
ßß+ ,
limitUV
ßß- 4
;
ßß4 5
for
©© 
(
©© 
int
©© 
x
©© 
=
©© 
$num
©© 
;
©© 
x
©©  !
<
©©" #
size
©©$ (
-
©©) *
$num
©©+ ,
;
©©, -
x
©©. /
++
©©/ 1
)
©©1 2
{
™™ 
float
´´ 
u
´´ 
=
´´ 
(
´´ 
x
´´  
-
´´! "
$num
´´# $
)
´´$ %
*
´´& '
stepUV
´´( .
-
´´/ 0
limitUV
´´1 8
;
´´8 9
float
≠≠ 
uvLength
≠≠ "
=
≠≠# $
Mathf
≠≠% *
.
≠≠* +
Sqrt
≠≠+ /
(
≠≠/ 0
u
≠≠0 1
*
≠≠2 3
u
≠≠4 5
+
≠≠6 7
v
≠≠8 9
*
≠≠: ;
v
≠≠< =
)
≠≠= >
;
≠≠> ?
float
ØØ 
	longitude
ØØ #
=
ØØ$ %
(
ØØ& '
(
ØØ' (
Mathf
ØØ( -
.
ØØ- .
Atan2
ØØ. 3
(
ØØ3 4
v
ØØ4 5
,
ØØ5 6
u
ØØ7 8
)
ØØ8 9
-
ØØ: ;
k_HalfPi
ØØ< D
+
ØØE F
k_TwoPi
ØØG N
)
ØØN O
%
ØØP Q
k_TwoPi
ØØR Y
)
ØØY Z
*
ØØ[ \
Mathf
ØØ] b
.
ØØb c
Rad2Deg
ØØc j
;
ØØj k
float
∞∞ 
latitude
∞∞ "
=
∞∞# $
Mathf
∞∞% *
.
∞∞* +
Atan
∞∞+ /
(
∞∞/ 0
uvLength
∞∞0 8
)
∞∞8 9
*
∞∞: ;
Mathf
∞∞< A
.
∞∞A B
Rad2Deg
∞∞B I
;
∞∞I J
float
≤≤ %
horizontalAnglePosition
≤≤ 1
=
≤≤2 3
m_iesReader
≤≤4 ?
.
≤≤? @1
#ComputeTypeCHorizontalAnglePosition
≤≤@ c
(
≤≤c d
	longitude
≤≤d m
)
≤≤m n
;
≤≤n o
float
≥≥ #
verticalAnglePosition
≥≥ /
=
≥≥0 1
m_iesReader
≥≥2 =
.
≥≥= >*
ComputeVerticalAnglePosition
≥≥> Z
(
≥≥Z [
latitude
≥≥[ c
)
≥≥c d
;
≥≥d e
float
∂∂ 
lightAttenuation
∂∂ *
=
∂∂+ ,#
applyLightAttenuation
∂∂- B
?
∂∂C D
(
∂∂E F
uvLength
∂∂F N
*
∂∂O P
uvLength
∂∂Q Y
+
∂∂Z [
$num
∂∂\ ]
)
∂∂] ^
:
∂∂_ `
$num
∂∂a c
;
∂∂c d
byte
∏∏ 
value
∏∏ 
=
∏∏  
(
∏∏! "
byte
∏∏" &
)
∏∏& '
(
∏∏' (
(
∏∏( )
m_iesReader
∏∏) 4
.
∏∏4 5!
InterpolateBilinear
∏∏5 H
(
∏∏H I%
horizontalAnglePosition
∏∏I `
,
∏∏` a#
verticalAnglePosition
∏∏b w
)
∏∏w x
/
∏∏y z
(
∏∏{ |
m_iesReader∏∏| á
.∏∏á à
MaxCandelas∏∏à ì
*∏∏î ï 
lightAttenuation∏∏ñ ¶
)∏∏¶ ß
)∏∏ß ®
*∏∏© ™
$num∏∏´ Æ
)∏∏Æ Ø
;∏∏Ø ∞
slice
ππ 
[
ππ 
x
ππ 
]
ππ 
=
ππ 
new
ππ "
Color32
ππ# *
(
ππ* +
value
ππ+ 0
,
ππ0 1
value
ππ2 7
,
ππ7 8
value
ππ9 >
,
ππ> ?
value
ππ@ E
)
ππE F
;
ππF G
}
∫∫ 
}
ªª 
return
ΩΩ 
textureBuffer
ΩΩ  
;
ΩΩ  !
}
ææ 	
}
øø 
}¿¿ ¢¥
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Utilities\SerializedBitArray.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public		 

static		 
class		 '
SerializedBitArrayUtilities		 3
{

 
public 
static 
SerializedBitArray8 ) 
ToSerializeBitArray8* >
(> ?
this? C
SerializedPropertyD V
serializedPropertyW i
)i j
{ 	
if 
( 
!  
IsBitArrayOfCapacity %
(% &
serializedProperty& 8
,8 9
$num: <
)< =
)= >
throw 
new 
	Exception #
(# $
$str$ S
)S T
;T U
return 
new 
SerializedBitArray8 *
(* +
serializedProperty+ =
)= >
;> ?
} 	
public 
static 
bool $
TryGetSerializeBitArray8 3
(3 4
this4 8
SerializedProperty9 K
serializedPropertyL ^
,^ _
out` c
SerializedBitArray8d w
serializedBitArray	x ä
)
ä ã
{ 	
serializedBitArray 
=  
null! %
;% &
if 
( 
!  
IsBitArrayOfCapacity %
(% &
serializedProperty& 8
,8 9
$num: <
)< =
)= >
return 
false 
; 
serializedBitArray 
=  
new! $
SerializedBitArray8% 8
(8 9
serializedProperty9 K
)K L
;L M
return 
true 
; 
}   	
public%% 
static%%  
SerializedBitArray16%% *!
ToSerializeBitArray16%%+ @
(%%@ A
this%%A E
SerializedProperty%%F X
serializedProperty%%Y k
)%%k l
{&& 	
if'' 
('' 
!''  
IsBitArrayOfCapacity'' %
(''% &
serializedProperty''& 8
,''8 9
$num'': =
)''= >
)''> ?
throw(( 
new(( 
	Exception(( #
(((# $
$str(($ S
)((S T
;((T U
return)) 
new))  
SerializedBitArray16)) +
())+ ,
serializedProperty)), >
)))> ?
;))? @
}** 	
public00 
static00 
bool00 %
TryGetSerializeBitArray1600 4
(004 5
this005 9
SerializedProperty00: L
serializedProperty00M _
,00_ `
out00a d 
SerializedBitArray1600e y
serializedBitArray	00z å
)
00å ç
{11 	
serializedBitArray22 
=22  
null22! %
;22% &
if33 
(33 
!33  
IsBitArrayOfCapacity33 %
(33% &
serializedProperty33& 8
,338 9
$num33: =
)33= >
)33> ?
return44 
false44 
;44 
serializedBitArray55 
=55  
new55! $ 
SerializedBitArray1655% 9
(559 :
serializedProperty55: L
)55L M
;55M N
return66 
true66 
;66 
}77 	
public<< 
static<<  
SerializedBitArray32<< *!
ToSerializeBitArray32<<+ @
(<<@ A
this<<A E
SerializedProperty<<F X
serializedProperty<<Y k
)<<k l
{== 	
if>> 
(>> 
!>>  
IsBitArrayOfCapacity>> %
(>>% &
serializedProperty>>& 8
,>>8 9
$num>>: =
)>>= >
)>>> ?
throw?? 
new?? 
	Exception?? #
(??# $
$str??$ S
)??S T
;??T U
return@@ 
new@@  
SerializedBitArray32@@ +
(@@+ ,
serializedProperty@@, >
)@@> ?
;@@? @
}AA 	
publicGG 
staticGG 
boolGG %
TryGetSerializeBitArray32GG 4
(GG4 5
thisGG5 9
SerializedPropertyGG: L
serializedPropertyGGM _
,GG_ `
outGGa d 
SerializedBitArray32GGe y
serializedBitArray	GGz å
)
GGå ç
{HH 	
serializedBitArrayII 
=II  
nullII! %
;II% &
ifJJ 
(JJ 
!JJ  
IsBitArrayOfCapacityJJ %
(JJ% &
serializedPropertyJJ& 8
,JJ8 9
$numJJ: =
)JJ= >
)JJ> ?
returnKK 
falseKK 
;KK 
serializedBitArrayLL 
=LL  
newLL! $ 
SerializedBitArray32LL% 9
(LL9 :
serializedPropertyLL: L
)LLL M
;LLM N
returnMM 
trueMM 
;MM 
}NN 	
publicSS 
staticSS  
SerializedBitArray64SS *!
ToSerializeBitArray64SS+ @
(SS@ A
thisSSA E
SerializedPropertySSF X
serializedPropertySSY k
)SSk l
{TT 	
ifUU 
(UU 
!UU  
IsBitArrayOfCapacityUU %
(UU% &
serializedPropertyUU& 8
,UU8 9
$numUU: =
)UU= >
)UU> ?
throwVV 
newVV 
	ExceptionVV #
(VV# $
$strVV$ S
)VVS T
;VVT U
returnWW 
newWW  
SerializedBitArray64WW +
(WW+ ,
serializedPropertyWW, >
)WW> ?
;WW? @
}XX 	
public^^ 
static^^ 
bool^^ %
TryGetSerializeBitArray64^^ 4
(^^4 5
this^^5 9
SerializedProperty^^: L
serializedProperty^^M _
,^^_ `
out^^a d 
SerializedBitArray64^^e y
serializedBitArray	^^z å
)
^^å ç
{__ 	
serializedBitArray`` 
=``  
null``! %
;``% &
ifaa 
(aa 
!aa  
IsBitArrayOfCapacityaa %
(aa% &
serializedPropertyaa& 8
,aa8 9
$numaa: =
)aa= >
)aa> ?
returnbb 
falsebb 
;bb 
serializedBitArraycc 
=cc  
newcc! $ 
SerializedBitArray64cc% 9
(cc9 :
serializedPropertycc: L
)ccL M
;ccM N
returndd 
truedd 
;dd 
}ee 	
publicjj 
staticjj !
SerializedBitArray128jj +"
ToSerializeBitArray128jj, B
(jjB C
thisjjC G
SerializedPropertyjjH Z
serializedPropertyjj[ m
)jjm n
{kk 	
ifll 
(ll 
!ll  
IsBitArrayOfCapacityll %
(ll% &
serializedPropertyll& 8
,ll8 9
$numll: >
)ll> ?
)ll? @
throwmm 
newmm 
	Exceptionmm #
(mm# $
$strmm$ S
)mmS T
;mmT U
returnnn 
newnn !
SerializedBitArray128nn ,
(nn, -
serializedPropertynn- ?
)nn? @
;nn@ A
}oo 	
publicuu 
staticuu 
booluu &
TryGetSerializeBitArray128uu 5
(uu5 6
thisuu6 :
SerializedPropertyuu; M
serializedPropertyuuN `
,uu` a
outuub e!
SerializedBitArray128uuf {
serializedBitArray	uu| é
)
uué è
{vv 	
serializedBitArrayww 
=ww  
nullww! %
;ww% &
ifxx 
(xx 
!xx  
IsBitArrayOfCapacityxx %
(xx% &
serializedPropertyxx& 8
,xx8 9
$numxx: >
)xx> ?
)xx? @
returnyy 
falseyy 
;yy 
serializedBitArrayzz 
=zz  
newzz! $!
SerializedBitArray128zz% :
(zz: ;
serializedPropertyzz; M
)zzM N
;zzN O
return{{ 
true{{ 
;{{ 
}|| 	
public
ÅÅ 
static
ÅÅ #
SerializedBitArray256
ÅÅ +$
ToSerializeBitArray256
ÅÅ, B
(
ÅÅB C
this
ÅÅC G 
SerializedProperty
ÅÅH Z 
serializedProperty
ÅÅ[ m
)
ÅÅm n
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
!
ÉÉ "
IsBitArrayOfCapacity
ÉÉ %
(
ÉÉ% & 
serializedProperty
ÉÉ& 8
,
ÉÉ8 9
$num
ÉÉ: >
)
ÉÉ> ?
)
ÉÉ? @
throw
ÑÑ 
new
ÑÑ 
	Exception
ÑÑ #
(
ÑÑ# $
$str
ÑÑ$ S
)
ÑÑS T
;
ÑÑT U
return
ÖÖ 
new
ÖÖ #
SerializedBitArray256
ÖÖ ,
(
ÖÖ, - 
serializedProperty
ÖÖ- ?
)
ÖÖ? @
;
ÖÖ@ A
}
ÜÜ 	
public
åå 
static
åå 
bool
åå (
TryGetSerializeBitArray256
åå 5
(
åå5 6
this
åå6 : 
SerializedProperty
åå; M 
serializedProperty
ååN `
,
åå` a
out
ååb e#
SerializedBitArray256
ååf {!
serializedBitArrayåå| é
)ååé è
{
çç 	 
serializedBitArray
éé 
=
éé  
null
éé! %
;
éé% &
if
èè 
(
èè 
!
èè "
IsBitArrayOfCapacity
èè %
(
èè% & 
serializedProperty
èè& 8
,
èè8 9
$num
èè: >
)
èè> ?
)
èè? @
return
êê 
false
êê 
;
êê  
serializedBitArray
ëë 
=
ëë  
new
ëë! $#
SerializedBitArray256
ëë% :
(
ëë: ; 
serializedProperty
ëë; M
)
ëëM N
;
ëëN O
return
íí 
true
íí 
;
íí 
}
ìì 	
static
ïï 
bool
ïï "
IsBitArrayOfCapacity
ïï (
(
ïï( ) 
SerializedProperty
ïï) ; 
serializedProperty
ïï< N
,
ïïN O
uint
ïïP T
capacity
ïïU ]
)
ïï] ^
{
ññ 	
const
óó 
string
óó 
baseTypeName
óó %
=
óó& '
$str
óó( 2
;
óó2 3
string
òò 
type
òò 
=
òò  
serializedProperty
òò ,
.
òò, -
type
òò- 1
;
òò1 2
uint
ôô  
serializedCapacity
ôô #
;
ôô# $
return
öö 
type
öö 
.
öö 

StartsWith
öö "
(
öö" #
baseTypeName
öö# /
)
öö/ 0
&&
õõ 
uint
õõ 
.
õõ 
TryParse
õõ  
(
õõ  !
type
õõ! %
.
õõ% &
	Substring
õõ& /
(
õõ/ 0
baseTypeName
õõ0 <
.
õõ< =
Length
õõ= C
)
õõC D
,
õõD E
out
õõF I 
serializedCapacity
õõJ \
)
õõ\ ]
&&
úú 
capacity
úú 
==
úú  
serializedCapacity
úú 1
;
úú1 2
}
ùù 	
}
ûû 
public
°° 

	interface
°° !
ISerializedBitArray
°° (
{
¢¢ 
uint
§§ 
capacity
§§ 
{
§§ 
get
§§ 
;
§§ 
}
§§ 
bool
®® 
GetBitAt
®® 
(
®® 
uint
®® 
bitIndex
®® #
)
®®# $
;
®®$ %
void
¨¨ 
SetBitAt
¨¨ 
(
¨¨ 
uint
¨¨ 
bitIndex
¨¨ #
,
¨¨# $
bool
¨¨% )
value
¨¨* /
)
¨¨/ 0
;
¨¨0 1
bool
∞∞ *
HasBitMultipleDifferentValue
∞∞ )
(
∞∞) *
uint
∞∞* .
bitIndex
∞∞/ 7
)
∞∞7 8
;
∞∞8 9
}
±± 
public
¥¥ 

abstract
¥¥ 
class
¥¥  
SerializedBitArray
¥¥ ,
:
¥¥- .!
ISerializedBitArray
¥¥/ B
{
µµ 
	protected
∏∏ 
static
∏∏ 
Action
∏∏ 
<
∏∏   
SerializedProperty
∏∏  2
,
∏∏2 3
int
∏∏4 7
,
∏∏7 8
bool
∏∏9 =
>
∏∏= >1
#SetBitAtIndexForAllTargetsImmediate
∏∏? b
;
∏∏b c
	protected
∫∫ 
static
∫∫ 
Func
∫∫ 
<
∫∫  
SerializedProperty
∫∫ 0
,
∫∫0 1
int
∫∫2 5
>
∫∫5 6/
!HasMultipleDifferentValuesBitwise
∫∫7 X
;
∫∫X Y
static
ªª  
SerializedBitArray
ªª !
(
ªª! "
)
ªª" #
{
ºº 	
var
ΩΩ 
type
ΩΩ 
=
ΩΩ 
typeof
ΩΩ 
(
ΩΩ  
SerializedProperty
ΩΩ 0
)
ΩΩ0 1
;
ΩΩ1 2
var
ææ ;
-setBitAtIndexForAllTargetsImmediateMethodInfo
ææ =
=
ææ> ?
type
ææ@ D
.
ææD E
	GetMethod
ææE N
(
ææN O
$str
ææO t
,
ææt u
BindingFlagsææv Ç
.ææÇ É
InstanceææÉ ã
|ææå ç
BindingFlagsææé ö
.ææö õ
	NonPublicææõ §
)ææ§ •
;ææ• ¶
var
øø ;
-hasMultipleDifferentValuesBitwisePropertyInfo
øø =
=
øø> ?
type
øø@ D
.
øøD E
GetProperty
øøE P
(
øøP Q
$str
øøQ t
,
øøt u
BindingFlagsøøv Ç
.øøÇ É
InstanceøøÉ ã
|øøå ç
BindingFlagsøøé ö
.øøö õ
	NonPublicøøõ §
)øø§ •
;øø• ¶
var
¿¿ )
serializedPropertyParameter
¿¿ +
=
¿¿, -

Expression
¿¿. 8
.
¿¿8 9
	Parameter
¿¿9 B
(
¿¿B C
typeof
¿¿C I
(
¿¿I J 
SerializedProperty
¿¿J \
)
¿¿\ ]
,
¿¿] ^
$str
¿¿_ i
)
¿¿i j
;
¿¿j k
var
¡¡ 
indexParameter
¡¡ 
=
¡¡  

Expression
¡¡! +
.
¡¡+ ,
	Parameter
¡¡, 5
(
¡¡5 6
typeof
¡¡6 <
(
¡¡< =
int
¡¡= @
)
¡¡@ A
,
¡¡A B
$str
¡¡C J
)
¡¡J K
;
¡¡K L
var
¬¬ 
valueParameter
¬¬ 
=
¬¬  

Expression
¬¬! +
.
¬¬+ ,
	Parameter
¬¬, 5
(
¬¬5 6
typeof
¬¬6 <
(
¬¬< =
bool
¬¬= A
)
¬¬A B
,
¬¬B C
$str
¬¬D K
)
¬¬K L
;
¬¬L M
var
√√ 7
)hasMultipleDifferentValuesBitwiseProperty
√√ 9
=
√√: ;

Expression
√√< F
.
√√F G
Property
√√G O
(
√√O P)
serializedPropertyParameter
√√P k
,
√√k l<
-hasMultipleDifferentValuesBitwisePropertyInfo√√m ö
)√√ö õ
;√√õ ú
var
ƒƒ 5
'setBitAtIndexForAllTargetsImmediateCall
ƒƒ 7
=
ƒƒ8 9

Expression
ƒƒ: D
.
ƒƒD E
Call
ƒƒE I
(
ƒƒI J)
serializedPropertyParameter
ƒƒJ e
,
ƒƒe f<
-setBitAtIndexForAllTargetsImmediateMethodInfoƒƒg î
,ƒƒî ï
indexParameterƒƒñ §
,ƒƒ§ •
valueParameterƒƒ¶ ¥
)ƒƒ¥ µ
;ƒƒµ ∂
var
≈≈ 7
)setBitAtIndexForAllTargetsImmediateLambda
≈≈ 9
=
≈≈: ;

Expression
≈≈< F
.
≈≈F G
Lambda
≈≈G M
<
≈≈M N
Action
≈≈N T
<
≈≈T U 
SerializedProperty
≈≈U g
,
≈≈g h
int
≈≈i l
,
≈≈l m
bool
≈≈n r
>
≈≈r s
>
≈≈s t
(
≈≈t u6
'setBitAtIndexForAllTargetsImmediateCall≈≈u ú
,≈≈ú ù+
serializedPropertyParameter≈≈û π
,≈≈π ∫
indexParameter≈≈ª …
,≈≈…  
valueParameter≈≈À Ÿ
)≈≈Ÿ ⁄
;≈≈⁄ €
var
∆∆ 5
'hasMultipleDifferentValuesBitwiseLambda
∆∆ 7
=
∆∆8 9

Expression
∆∆: D
.
∆∆D E
Lambda
∆∆E K
<
∆∆K L
Func
∆∆L P
<
∆∆P Q 
SerializedProperty
∆∆Q c
,
∆∆c d
int
∆∆e h
>
∆∆h i
>
∆∆i j
(
∆∆j k8
)hasMultipleDifferentValuesBitwiseProperty∆∆k î
,∆∆î ï+
serializedPropertyParameter∆∆ñ ±
)∆∆± ≤
;∆∆≤ ≥1
#SetBitAtIndexForAllTargetsImmediate
«« /
=
««0 17
)setBitAtIndexForAllTargetsImmediateLambda
««2 [
.
««[ \
Compile
««\ c
(
««c d
)
««d e
;
««e f/
!HasMultipleDifferentValuesBitwise
»» -
=
»». /5
'hasMultipleDifferentValuesBitwiseLambda
»»0 W
.
»»W X
Compile
»»X _
(
»»_ `
)
»»` a
;
»»a b
}
…… 	
	protected
ÃÃ  
SerializedProperty
ÃÃ $"
m_SerializedProperty
ÃÃ% 9
;
ÃÃ9 : 
SerializedProperty
ÕÕ 
[
ÕÕ 
]
ÕÕ $
m_SerializedProperties
ÕÕ 3
;
ÕÕ3 4
public
–– 
uint
–– 
capacity
–– 
{
–– 
get
–– "
;
––" #
}
––$ %
internal
““  
SerializedBitArray
““ #
(
““# $ 
SerializedProperty
““$ 6 
serializedProperty
““7 I
,
““I J
uint
““K O
capacity
““P X
)
““X Y
{
”” 	
this
‘‘ 
.
‘‘ 
capacity
‘‘ 
=
‘‘ 
capacity
‘‘ $
;
‘‘$ %"
m_SerializedProperty
’’  
=
’’! " 
serializedProperty
’’# 5
;
’’5 6
}
÷÷ 	
	protected
⁄⁄  
SerializedProperty
⁄⁄ $
[
⁄⁄$ %
]
⁄⁄% &1
#GetOrInitializeSerializedProperties
⁄⁄' J
(
⁄⁄J K
)
⁄⁄K L
{
€€ 	
if
‹‹ 
(
‹‹ $
m_SerializedProperties
‹‹ &
==
‹‹' )
null
‹‹* .
)
‹‹. /
{
›› 
UnityEngine
ﬁﬁ 
.
ﬁﬁ 
Object
ﬁﬁ "
[
ﬁﬁ" #
]
ﬁﬁ# $
targets
ﬁﬁ% ,
=
ﬁﬁ- ."
m_SerializedProperty
ﬁﬁ/ C
.
ﬁﬁC D
serializedObject
ﬁﬁD T
.
ﬁﬁT U
targetObjects
ﬁﬁU b
;
ﬁﬁb c
int
ﬂﬂ 
size
ﬂﬂ 
=
ﬂﬂ 
targets
ﬂﬂ "
.
ﬂﬂ" #
Length
ﬂﬂ# )
;
ﬂﬂ) *
if
‡‡ 
(
‡‡ 
size
‡‡ 
==
‡‡ 
$num
‡‡ 
)
‡‡ $
m_SerializedProperties
·· *
=
··+ ,
new
··- 0
[
··0 1
]
··1 2
{
··3 4"
m_SerializedProperty
··5 I
}
··J K
;
··K L
else
‚‚ 
{
„„ 
string
‰‰ 
propertyPath
‰‰ '
=
‰‰( )"
m_SerializedProperty
‰‰* >
.
‰‰> ?
propertyPath
‰‰? K
;
‰‰K L$
m_SerializedProperties
ÂÂ *
=
ÂÂ+ ,
new
ÂÂ- 0 
SerializedProperty
ÂÂ1 C
[
ÂÂC D
size
ÂÂD H
]
ÂÂH I
;
ÂÂI J
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ  
$num
ÊÊ! "
;
ÊÊ" #
i
ÊÊ$ %
<
ÊÊ& '
size
ÊÊ( ,
;
ÊÊ, -
++
ÊÊ. 0
i
ÊÊ0 1
)
ÊÊ1 2
{
ÁÁ $
m_SerializedProperties
ËË .
[
ËË. /
i
ËË/ 0
]
ËË0 1
=
ËË2 3
new
ËË4 7
SerializedObject
ËË8 H
(
ËËH I
targets
ËËI P
[
ËËP Q
i
ËËQ R
]
ËËR S
)
ËËS T
.
ËËT U
FindProperty
ËËU a
(
ËËa b
propertyPath
ËËb n
)
ËËn o
;
ËËo p
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
return
ÏÏ $
m_SerializedProperties
ÏÏ )
;
ÏÏ) *
}
ÌÌ 	
public
ÚÚ 
bool
ÚÚ *
HasBitMultipleDifferentValue
ÚÚ 0
(
ÚÚ0 1
uint
ÚÚ1 5
bitIndex
ÚÚ6 >
)
ÚÚ> ?
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
bitIndex
ÙÙ 
>=
ÙÙ 
capacity
ÙÙ $
)
ÙÙ$ %
throw
ıı 
new
ıı &
IndexOutOfRangeException
ıı 2
(
ıı2 3
$str
ıı3 S
+
ııT U
capacity
ııV ^
)
ıı^ _
;
ıı_ `
return
ˆˆ 3
%HasBitMultipleDifferentValue_Internal
ˆˆ 8
(
ˆˆ8 9
bitIndex
ˆˆ9 A
)
ˆˆA B
;
ˆˆB C
}
˜˜ 	
abstract
¸¸ 
	protected
¸¸ 
bool
¸¸ 3
%HasBitMultipleDifferentValue_Internal
¸¸  E
(
¸¸E F
uint
¸¸F J
bitIndex
¸¸K S
)
¸¸S T
;
¸¸T U
unsafe
ÖÖ 
	protected
ÖÖ 
bool
ÖÖ 4
&HasBitMultipleDifferentValue_For64Bits
ÖÖ D
(
ÖÖD E
string
ÖÖE K
propertyPath
ÖÖL X
,
ÖÖX Y 
SerializedProperty
ÖÖZ l 
serializedProperty
ÖÖm 
,ÖÖ Ä
uintÖÖÅ Ö
bitIndexÖÖÜ é
)ÖÖé è
{
ÜÜ 	
if
áá 
(
áá 
!
áá  
serializedProperty
áá #
.
áá# $(
hasMultipleDifferentValues
áá$ >
)
áá> ?
return
àà 
false
àà 
;
àà 
var
ää "
serializedProperties
ää $
=
ää% &1
#GetOrInitializeSerializedProperties
ää' J
(
ääJ K
)
ääK L
;
ääL M
int
ãã 
length
ãã 
=
ãã "
serializedProperties
ãã -
.
ãã- .
Length
ãã. 4
;
ãã4 5
ulong
åå 
mask
åå 
=
åå 
$num
åå 
<<
åå 
(
åå  !
int
åå! $
)
åå$ %
bitIndex
åå% -
;
åå- .
bool
çç 
value
çç 
=
çç 
(
çç 
(
çç 
ulong
çç  
)
çç  !$
m_SerializedProperties
çç! 7
[
çç7 8
$num
çç8 9
]
çç9 :
.
çç: ;"
FindPropertyRelative
çç; O
(
ççO P
propertyPath
ççP \
)
çç\ ]
.
çç] ^
	longValue
çç^ g
&
ççh i
mask
ççj n
)
ççn o
!=
ççp r
$num
ççs v
;
ççv w
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé 
<
éé 
length
éé  &
;
éé& '
++
éé( *
i
éé* +
)
éé+ ,
{
èè 
if
êê 
(
êê 
(
êê 
(
êê 
(
êê 
ulong
êê 
)
êê $
m_SerializedProperties
êê 3
[
êê3 4
i
êê4 5
]
êê5 6
.
êê6 7"
FindPropertyRelative
êê7 K
(
êêK L
propertyPath
êêL X
)
êêX Y
.
êêY Z
	longValue
êêZ c
&
êêd e
mask
êêf j
)
êêj k
!=
êêl n
$num
êêo r
)
êêr s
^
êêt u
value
êêv {
)
êê{ |
return
ëë 
true
ëë 
;
ëë  
}
íí 
return
ìì 
false
ìì 
;
ìì 
}
îî 	
public
ôô 
bool
ôô 
GetBitAt
ôô 
(
ôô 
uint
ôô !
bitIndex
ôô" *
)
ôô* +
{
öö 	
if
õõ 
(
õõ 
bitIndex
õõ 
>=
õõ 
capacity
õõ $
)
õõ$ %
throw
úú 
new
úú &
IndexOutOfRangeException
úú 2
(
úú2 3
$str
úú3 S
+
úúT U
capacity
úúV ^
)
úú^ _
;
úú_ `
return
ùù 
GetBitAt_Internal
ùù $
(
ùù$ %
bitIndex
ùù% -
)
ùù- .
;
ùù. /
}
ûû 	
abstract
££ 
	protected
££ 
bool
££ 
GetBitAt_Internal
££  1
(
££1 2
uint
££2 6
bitIndex
££7 ?
)
££? @
;
££@ A
public
®® 
void
®® 
SetBitAt
®® 
(
®® 
uint
®® !
bitIndex
®®" *
,
®®* +
bool
®®, 0
value
®®1 6
)
®®6 7
{
©© 	
if
™™ 
(
™™ 
bitIndex
™™ 
>=
™™ 
capacity
™™ $
)
™™$ %
throw
´´ 
new
´´ &
IndexOutOfRangeException
´´ 2
(
´´2 3
$str
´´3 S
+
´´T U
capacity
´´V ^
)
´´^ _
;
´´_ `
SetBitAt_Internal
¨¨ 
(
¨¨ 
bitIndex
¨¨ &
,
¨¨& '
value
¨¨( -
)
¨¨- .
;
¨¨. /
}
≠≠ 	
abstract
≤≤ 
	protected
≤≤ 
void
≤≤ 
SetBitAt_Internal
≤≤  1
(
≤≤1 2
uint
≤≤2 6
bitIndex
≤≤7 ?
,
≤≤? @
bool
≤≤A E
value
≤≤F K
)
≤≤K L
;
≤≤L M
	protected
µµ 
void
µµ !
ResyncSerialization
µµ *
(
µµ* +
)
µµ+ ,
{
∂∂ 	
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
property
∑∑ !
in
∑∑" $$
m_SerializedProperties
∑∑% ;
)
∑∑; <
property
∏∏ 
.
∏∏ 
serializedObject
∏∏ )
.
∏∏) *%
ApplyModifiedProperties
∏∏* A
(
∏∏A B
)
∏∏B C
;
∏∏C D
Update
ππ 
(
ππ 
)
ππ 
;
ππ 
}
∫∫ 	
public
ΩΩ 
void
ΩΩ 
Update
ΩΩ 
(
ΩΩ 
)
ΩΩ 
{
ææ 	
foreach
øø 
(
øø 
var
øø 
property
øø !
in
øø" $$
m_SerializedProperties
øø% ;
)
øø; <
property
¿¿ 
.
¿¿ 
serializedObject
¿¿ )
.
¿¿) *
Update
¿¿* 0
(
¿¿0 1
)
¿¿1 2
;
¿¿2 3"
m_SerializedProperty
¡¡  
.
¡¡  !
serializedObject
¡¡! 1
.
¡¡1 2
Update
¡¡2 8
(
¡¡8 9
)
¡¡9 :
;
¡¡: ;
}
¬¬ 	
}
√√ 
public
∆∆ 

sealed
∆∆ 
class
∆∆ !
SerializedBitArray8
∆∆ +
:
∆∆, - 
SerializedBitArray
∆∆. @
{
««  
SerializedProperty
»» 
m_Data
»» !
;
»»! "
public
ÃÃ !
SerializedBitArray8
ÃÃ "
(
ÃÃ" # 
SerializedProperty
ÃÃ# 5 
serializedProperty
ÃÃ6 H
)
ÃÃH I
:
ÃÃJ K
base
ÃÃL P
(
ÃÃP Q 
serializedProperty
ÃÃQ c
,
ÃÃc d
$num
ÃÃe g
)
ÃÃg h
=>
ÕÕ 
m_Data
ÕÕ 
=
ÕÕ "
m_SerializedProperty
ÕÕ ,
.
ÕÕ, -"
FindPropertyRelative
ÕÕ- A
(
ÕÕA B
$str
ÕÕB H
)
ÕÕH I
;
ÕÕI J
	protected
““ 
override
““ 
bool
““ 3
%HasBitMultipleDifferentValue_Internal
““  E
(
““E F
uint
““F J
bitIndex
““K S
)
““S T
=>
”” 
(
”” /
!HasMultipleDifferentValuesBitwise
”” 1
(
””1 2
m_Data
””2 8
)
””8 9
&
””: ;
(
””< =
$num
””= >
<<
””? A
(
””B C
int
””C F
)
””F G
bitIndex
””G O
)
””O P
)
””P Q
!=
””R T
$num
””U V
;
””V W
	protected
ÿÿ 
override
ÿÿ 
bool
ÿÿ 
GetBitAt_Internal
ÿÿ  1
(
ÿÿ1 2
uint
ÿÿ2 6
bitIndex
ÿÿ7 ?
)
ÿÿ? @
=>
ŸŸ 
BitArrayUtilities
ŸŸ  
.
ŸŸ  !
Get8
ŸŸ! %
(
ŸŸ% &
bitIndex
ŸŸ& .
,
ŸŸ. /
(
ŸŸ0 1
byte
ŸŸ1 5
)
ŸŸ5 6
m_Data
ŸŸ6 <
.
ŸŸ< =
intValue
ŸŸ= E
)
ŸŸE F
;
ŸŸF G
	protected
ﬁﬁ 
override
ﬁﬁ 
void
ﬁﬁ 
SetBitAt_Internal
ﬁﬁ  1
(
ﬁﬁ1 2
uint
ﬁﬁ2 6
bitIndex
ﬁﬁ7 ?
,
ﬁﬁ? @
bool
ﬁﬁA E
value
ﬁﬁF K
)
ﬁﬁK L
{
ﬂﬂ 	
foreach
‡‡ 
(
‡‡ 
var
‡‡ 
property
‡‡ !
in
‡‡" $1
#GetOrInitializeSerializedProperties
‡‡% H
(
‡‡H I
)
‡‡I J
)
‡‡J K
{
·· 
byte
‚‚ 
versionedData
‚‚ "
=
‚‚# $
(
‚‚% &
byte
‚‚& *
)
‚‚* +
property
‚‚+ 3
.
‚‚3 4"
FindPropertyRelative
‚‚4 H
(
‚‚H I
$str
‚‚I O
)
‚‚O P
.
‚‚P Q
intValue
‚‚Q Y
;
‚‚Y Z
BitArrayUtilities
„„ !
.
„„! "
Set8
„„" &
(
„„& '
bitIndex
„„' /
,
„„/ 0
ref
„„1 4
versionedData
„„5 B
,
„„B C
value
„„D I
)
„„I J
;
„„J K
property
‰‰ 
.
‰‰ "
FindPropertyRelative
‰‰ -
(
‰‰- .
$str
‰‰. 4
)
‰‰4 5
.
‰‰5 6
intValue
‰‰6 >
=
‰‰? @
versionedData
‰‰A N
;
‰‰N O
}
ÂÂ !
ResyncSerialization
ÊÊ 
(
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
}
ÁÁ 	
}
ËË 
public
ÎÎ 

sealed
ÎÎ 
class
ÎÎ "
SerializedBitArray16
ÎÎ ,
:
ÎÎ- . 
SerializedBitArray
ÎÎ/ A
{
ÏÏ  
SerializedProperty
ÌÌ 
m_Data
ÌÌ !
;
ÌÌ! "
public
ÒÒ "
SerializedBitArray16
ÒÒ #
(
ÒÒ# $ 
SerializedProperty
ÒÒ$ 6 
serializedProperty
ÒÒ7 I
)
ÒÒI J
:
ÒÒK L
base
ÒÒM Q
(
ÒÒQ R 
serializedProperty
ÒÒR d
,
ÒÒd e
$num
ÒÒf i
)
ÒÒi j
=>
ÚÚ 
m_Data
ÚÚ 
=
ÚÚ "
m_SerializedProperty
ÚÚ ,
.
ÚÚ, -"
FindPropertyRelative
ÚÚ- A
(
ÚÚA B
$str
ÚÚB H
)
ÚÚH I
;
ÚÚI J
	protected
˜˜ 
override
˜˜ 
bool
˜˜ 3
%HasBitMultipleDifferentValue_Internal
˜˜  E
(
˜˜E F
uint
˜˜F J
bitIndex
˜˜K S
)
˜˜S T
=>
¯¯ 
(
¯¯ /
!HasMultipleDifferentValuesBitwise
¯¯ 1
(
¯¯1 2
m_Data
¯¯2 8
)
¯¯8 9
&
¯¯: ;
(
¯¯< =
$num
¯¯= >
<<
¯¯? A
(
¯¯B C
int
¯¯C F
)
¯¯F G
bitIndex
¯¯G O
)
¯¯O P
)
¯¯P Q
!=
¯¯R T
$num
¯¯U V
;
¯¯V W
	protected
˝˝ 
override
˝˝ 
bool
˝˝ 
GetBitAt_Internal
˝˝  1
(
˝˝1 2
uint
˝˝2 6
bitIndex
˝˝7 ?
)
˝˝? @
=>
˛˛ 
BitArrayUtilities
˛˛  
.
˛˛  !
Get16
˛˛! &
(
˛˛& '
bitIndex
˛˛' /
,
˛˛/ 0
(
˛˛1 2
ushort
˛˛2 8
)
˛˛8 9
m_Data
˛˛9 ?
.
˛˛? @
intValue
˛˛@ H
)
˛˛H I
;
˛˛I J
	protected
ÉÉ 
override
ÉÉ 
void
ÉÉ 
SetBitAt_Internal
ÉÉ  1
(
ÉÉ1 2
uint
ÉÉ2 6
bitIndex
ÉÉ7 ?
,
ÉÉ? @
bool
ÉÉA E
value
ÉÉF K
)
ÉÉK L
{
ÑÑ 	
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
property
ÖÖ !
in
ÖÖ" $1
#GetOrInitializeSerializedProperties
ÖÖ% H
(
ÖÖH I
)
ÖÖI J
)
ÖÖJ K
{
ÜÜ 
ushort
áá 
versionedData
áá $
=
áá% &
(
áá' (
ushort
áá( .
)
áá. /
property
áá/ 7
.
áá7 8"
FindPropertyRelative
áá8 L
(
ááL M
$str
ááM S
)
ááS T
.
ááT U
intValue
ááU ]
;
áá] ^
BitArrayUtilities
àà !
.
àà! "
Set16
àà" '
(
àà' (
bitIndex
àà( 0
,
àà0 1
ref
àà2 5
versionedData
àà6 C
,
ààC D
value
ààE J
)
ààJ K
;
ààK L
property
ââ 
.
ââ "
FindPropertyRelative
ââ -
(
ââ- .
$str
ââ. 4
)
ââ4 5
.
ââ5 6
intValue
ââ6 >
=
ââ? @
versionedData
ââA N
;
ââN O
}
ää !
ResyncSerialization
ãã 
(
ãã  
)
ãã  !
;
ãã! "
}
åå 	
}
çç 
public
êê 

sealed
êê 
class
êê "
SerializedBitArray32
êê ,
:
êê- . 
SerializedBitArray
êê/ A
{
ëë  
SerializedProperty
íí 
m_Data
íí !
;
íí! "
public
ññ "
SerializedBitArray32
ññ #
(
ññ# $ 
SerializedProperty
ññ$ 6 
serializedProperty
ññ7 I
)
ññI J
:
ññK L
base
ññM Q
(
ññQ R 
serializedProperty
ññR d
,
ññd e
$num
ññf i
)
ññi j
=>
óó 
m_Data
óó 
=
óó "
m_SerializedProperty
óó ,
.
óó, -"
FindPropertyRelative
óó- A
(
óóA B
$str
óóB H
)
óóH I
;
óóI J
	protected
úú 
override
úú 
bool
úú 3
%HasBitMultipleDifferentValue_Internal
úú  E
(
úúE F
uint
úúF J
bitIndex
úúK S
)
úúS T
=>
ùù 
(
ùù /
!HasMultipleDifferentValuesBitwise
ùù 1
(
ùù1 2
m_Data
ùù2 8
)
ùù8 9
&
ùù: ;
(
ùù< =
$num
ùù= >
<<
ùù? A
(
ùùB C
int
ùùC F
)
ùùF G
bitIndex
ùùG O
)
ùùO P
)
ùùP Q
!=
ùùR T
$num
ùùU V
;
ùùV W
	protected
¢¢ 
override
¢¢ 
bool
¢¢ 
GetBitAt_Internal
¢¢  1
(
¢¢1 2
uint
¢¢2 6
bitIndex
¢¢7 ?
)
¢¢? @
=>
££ 
BitArrayUtilities
££  
.
££  !
Get32
££! &
(
££& '
bitIndex
££' /
,
££/ 0
(
££1 2
uint
££2 6
)
££6 7
m_Data
££7 =
.
££= >
intValue
££> F
)
££F G
;
££G H
	protected
®® 
override
®® 
void
®® 
SetBitAt_Internal
®®  1
(
®®1 2
uint
®®2 6
bitIndex
®®7 ?
,
®®? @
bool
®®A E
value
®®F K
)
®®K L
{
©© 	
foreach
™™ 
(
™™ 
var
™™ 
property
™™ !
in
™™" $1
#GetOrInitializeSerializedProperties
™™% H
(
™™H I
)
™™I J
)
™™J K
{
´´ 
int
¨¨ 
versionedData
¨¨ !
=
¨¨" #
property
¨¨$ ,
.
¨¨, -"
FindPropertyRelative
¨¨- A
(
¨¨A B
$str
¨¨B H
)
¨¨H I
.
¨¨I J
intValue
¨¨J R
;
¨¨R S
uint
≠≠ 
trueData
≠≠ 
;
≠≠ 
unsafe
ÆÆ 
{
ØØ 
trueData
∞∞ 
=
∞∞ 
*
∞∞  
(
∞∞  !
uint
∞∞! %
*
∞∞% &
)
∞∞& '
(
∞∞' (
&
∞∞( )
versionedData
∞∞) 6
)
∞∞6 7
;
∞∞7 8
}
±± 
BitArrayUtilities
≤≤ !
.
≤≤! "
Set32
≤≤" '
(
≤≤' (
bitIndex
≤≤( 0
,
≤≤0 1
ref
≤≤2 5
trueData
≤≤6 >
,
≤≤> ?
value
≤≤@ E
)
≤≤E F
;
≤≤F G
unsafe
≥≥ 
{
¥¥ 
versionedData
µµ !
=
µµ" #
*
µµ$ %
(
µµ% &
int
µµ& )
*
µµ) *
)
µµ* +
(
µµ+ ,
&
µµ, -
trueData
µµ- 5
)
µµ5 6
;
µµ6 7
}
∂∂ 
property
∑∑ 
.
∑∑ "
FindPropertyRelative
∑∑ -
(
∑∑- .
$str
∑∑. 4
)
∑∑4 5
.
∑∑5 6
intValue
∑∑6 >
=
∑∑? @
versionedData
∑∑A N
;
∑∑N O
}
∏∏ !
ResyncSerialization
ππ 
(
ππ  
)
ππ  !
;
ππ! "
}
∫∫ 	
}
ªª 
public
ææ 

sealed
ææ 
class
ææ "
SerializedBitArray64
ææ ,
:
ææ- . 
SerializedBitArray
ææ/ A
{
øø  
SerializedProperty
¿¿ 
m_Data
¿¿ !
;
¿¿! "
public
ƒƒ "
SerializedBitArray64
ƒƒ #
(
ƒƒ# $ 
SerializedProperty
ƒƒ$ 6 
serializedProperty
ƒƒ7 I
)
ƒƒI J
:
ƒƒK L
base
ƒƒM Q
(
ƒƒQ R 
serializedProperty
ƒƒR d
,
ƒƒd e
$num
ƒƒf i
)
ƒƒi j
=>
≈≈ 
m_Data
≈≈ 
=
≈≈ "
m_SerializedProperty
≈≈ ,
.
≈≈, -"
FindPropertyRelative
≈≈- A
(
≈≈A B
$str
≈≈B H
)
≈≈H I
;
≈≈I J
	protected
   
override
   
bool
   3
%HasBitMultipleDifferentValue_Internal
    E
(
  E F
uint
  F J
bitIndex
  K S
)
  S T
=>
ÀÀ 4
&HasBitMultipleDifferentValue_For64Bits
ÀÀ 5
(
ÀÀ5 6
$str
ÀÀ6 <
,
ÀÀ< =
m_Data
ÀÀ> D
,
ÀÀD E
bitIndex
ÀÀF N
)
ÀÀN O
;
ÀÀO P
	protected
–– 
override
–– 
bool
–– 
GetBitAt_Internal
––  1
(
––1 2
uint
––2 6
bitIndex
––7 ?
)
––? @
=>
—— 
BitArrayUtilities
——  
.
——  !
Get64
——! &
(
——& '
bitIndex
——' /
,
——/ 0
(
——1 2
ulong
——2 7
)
——7 8
m_Data
——8 >
.
——> ?
	longValue
——? H
)
——H I
;
——I J
	protected
÷÷ 
override
÷÷ 
void
÷÷ 
SetBitAt_Internal
÷÷  1
(
÷÷1 2
uint
÷÷2 6
bitIndex
÷÷7 ?
,
÷÷? @
bool
÷÷A E
value
÷÷F K
)
÷÷K L
{
◊◊ 	
foreach
ÿÿ 
(
ÿÿ 
var
ÿÿ 
property
ÿÿ !
in
ÿÿ" $1
#GetOrInitializeSerializedProperties
ÿÿ% H
(
ÿÿH I
)
ÿÿI J
)
ÿÿJ K
{
ŸŸ 
long
⁄⁄ 
versionedData
⁄⁄ "
=
⁄⁄# $
property
⁄⁄% -
.
⁄⁄- ."
FindPropertyRelative
⁄⁄. B
(
⁄⁄B C
$str
⁄⁄C I
)
⁄⁄I J
.
⁄⁄J K
	longValue
⁄⁄K T
;
⁄⁄T U
ulong
€€ 
trueData
€€ 
;
€€ 
unsafe
‹‹ 
{
›› 
trueData
ﬁﬁ 
=
ﬁﬁ 
*
ﬁﬁ  
(
ﬁﬁ  !
ulong
ﬁﬁ! &
*
ﬁﬁ& '
)
ﬁﬁ' (
(
ﬁﬁ( )
&
ﬁﬁ) *
versionedData
ﬁﬁ* 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9
}
ﬂﬂ 
BitArrayUtilities
‡‡ !
.
‡‡! "
Set64
‡‡" '
(
‡‡' (
bitIndex
‡‡( 0
,
‡‡0 1
ref
‡‡2 5
trueData
‡‡6 >
,
‡‡> ?
value
‡‡@ E
)
‡‡E F
;
‡‡F G
unsafe
·· 
{
‚‚ 
versionedData
„„ !
=
„„" #
*
„„$ %
(
„„% &
long
„„& *
*
„„* +
)
„„+ ,
(
„„, -
&
„„- .
trueData
„„. 6
)
„„6 7
;
„„7 8
}
‰‰ 
property
ÂÂ 
.
ÂÂ "
FindPropertyRelative
ÂÂ -
(
ÂÂ- .
$str
ÂÂ. 4
)
ÂÂ4 5
.
ÂÂ5 6
	longValue
ÂÂ6 ?
=
ÂÂ@ A
versionedData
ÂÂB O
;
ÂÂO P
}
ÊÊ !
ResyncSerialization
ÁÁ 
(
ÁÁ  
)
ÁÁ  !
;
ÁÁ! "
}
ËË 	
}
ÈÈ 
public
ÏÏ 

sealed
ÏÏ 
class
ÏÏ #
SerializedBitArray128
ÏÏ -
:
ÏÏ. / 
SerializedBitArray
ÏÏ0 B
{
ÌÌ  
SerializedProperty
ÓÓ 
m_Data1
ÓÓ "
;
ÓÓ" # 
SerializedProperty
ÔÔ 
m_Data2
ÔÔ "
;
ÔÔ" #
public
ÛÛ #
SerializedBitArray128
ÛÛ $
(
ÛÛ$ % 
SerializedProperty
ÛÛ% 7 
serializedProperty
ÛÛ8 J
)
ÛÛJ K
:
ÛÛL M
base
ÛÛN R
(
ÛÛR S 
serializedProperty
ÛÛS e
,
ÛÛe f
$num
ÛÛg k
)
ÛÛk l
{
ÙÙ 	
m_Data1
ıı 
=
ıı "
m_SerializedProperty
ıı *
.
ıı* +"
FindPropertyRelative
ıı+ ?
(
ıı? @
$str
ıı@ G
)
ııG H
;
ııH I
m_Data2
ˆˆ 
=
ˆˆ "
m_SerializedProperty
ˆˆ *
.
ˆˆ* +"
FindPropertyRelative
ˆˆ+ ?
(
ˆˆ? @
$str
ˆˆ@ G
)
ˆˆG H
;
ˆˆH I
}
˜˜ 	
	protected
¸¸ 
override
¸¸ 
bool
¸¸ 3
%HasBitMultipleDifferentValue_Internal
¸¸  E
(
¸¸E F
uint
¸¸F J
bitIndex
¸¸K S
)
¸¸S T
=>
˝˝ 
bitIndex
˝˝ 
<
˝˝ 
$num
˝˝ 
?
˛˛ 4
&HasBitMultipleDifferentValue_For64Bits
˛˛ 8
(
˛˛8 9
$str
˛˛9 @
,
˛˛@ A
m_Data1
˛˛B I
,
˛˛I J
bitIndex
˛˛K S
)
˛˛S T
:
ˇˇ 4
&HasBitMultipleDifferentValue_For64Bits
ˇˇ 8
(
ˇˇ8 9
$str
ˇˇ9 @
,
ˇˇ@ A
m_Data2
ˇˇB I
,
ˇˇI J
bitIndex
ˇˇK S
-
ˇˇT U
$num
ˇˇV Y
)
ˇˇY Z
;
ˇˇZ [
	protected
ÖÖ 
override
ÖÖ 
bool
ÖÖ 
GetBitAt_Internal
ÖÖ  1
(
ÖÖ1 2
uint
ÖÖ2 6
bitIndex
ÖÖ7 ?
)
ÖÖ? @
=>
ÜÜ 
BitArrayUtilities
ÜÜ  
.
ÜÜ  !
Get128
ÜÜ! '
(
ÜÜ' (
bitIndex
áá 
,
áá 
(
àà 
ulong
àà 
)
àà "
m_SerializedProperty
àà +
.
àà+ ,"
FindPropertyRelative
àà, @
(
àà@ A
$str
ààA H
)
ààH I
.
ààI J
	longValue
ààJ S
,
ààS T
(
ââ 
ulong
ââ 
)
ââ "
m_SerializedProperty
ââ +
.
ââ+ ,"
FindPropertyRelative
ââ, @
(
ââ@ A
$str
ââA H
)
ââH I
.
ââI J
	longValue
ââJ S
)
ââS T
;
ââT U
	protected
éé 
override
éé 
void
éé 
SetBitAt_Internal
éé  1
(
éé1 2
uint
éé2 6
bitIndex
éé7 ?
,
éé? @
bool
ééA E
value
ééF K
)
ééK L
{
èè 	
foreach
êê 
(
êê 
var
êê 
property
êê !
in
êê" $1
#GetOrInitializeSerializedProperties
êê% H
(
êêH I
)
êêI J
)
êêJ K
{
ëë 
long
íí 
versionedData1
íí #
=
íí$ %
property
íí& .
.
íí. /"
FindPropertyRelative
íí/ C
(
ííC D
$str
ííD K
)
ííK L
.
ííL M
	longValue
ííM V
;
ííV W
long
ìì 
versionedData2
ìì #
=
ìì$ %
property
ìì& .
.
ìì. /"
FindPropertyRelative
ìì/ C
(
ììC D
$str
ììD K
)
ììK L
.
ììL M
	longValue
ììM V
;
ììV W
ulong
îî 
	trueData1
îî 
;
îî  
ulong
ïï 
	trueData2
ïï 
;
ïï  
unsafe
ññ 
{
óó 
	trueData1
òò 
=
òò 
*
òò  !
(
òò! "
ulong
òò" '
*
òò' (
)
òò( )
(
òò) *
&
òò* +
versionedData1
òò+ 9
)
òò9 :
;
òò: ;
	trueData2
ôô 
=
ôô 
*
ôô  !
(
ôô! "
ulong
ôô" '
*
ôô' (
)
ôô( )
(
ôô) *
&
ôô* +
versionedData2
ôô+ 9
)
ôô9 :
;
ôô: ;
}
öö 
BitArrayUtilities
õõ !
.
õõ! "
Set128
õõ" (
(
õõ( )
bitIndex
õõ) 1
,
õõ1 2
ref
õõ3 6
	trueData1
õõ7 @
,
õõ@ A
ref
õõB E
	trueData2
õõF O
,
õõO P
value
õõQ V
)
õõV W
;
õõW X
unsafe
úú 
{
ùù 
versionedData1
ûû "
=
ûû# $
*
ûû% &
(
ûû& '
long
ûû' +
*
ûû+ ,
)
ûû, -
(
ûû- .
&
ûû. /
	trueData1
ûû/ 8
)
ûû8 9
;
ûû9 :
versionedData2
üü "
=
üü# $
*
üü% &
(
üü& '
long
üü' +
*
üü+ ,
)
üü, -
(
üü- .
&
üü. /
	trueData2
üü/ 8
)
üü8 9
;
üü9 :
}
†† 
property
°° 
.
°° "
FindPropertyRelative
°° -
(
°°- .
$str
°°. 5
)
°°5 6
.
°°6 7
	longValue
°°7 @
=
°°A B
versionedData1
°°C Q
;
°°Q R
property
¢¢ 
.
¢¢ "
FindPropertyRelative
¢¢ -
(
¢¢- .
$str
¢¢. 5
)
¢¢5 6
.
¢¢6 7
	longValue
¢¢7 @
=
¢¢A B
versionedData2
¢¢C Q
;
¢¢Q R
}
££ !
ResyncSerialization
§§ 
(
§§  
)
§§  !
;
§§! "
}
•• 	
}
¶¶ 
public
©© 

sealed
©© 
class
©© #
SerializedBitArray256
©© -
:
©©. / 
SerializedBitArray
©©0 B
{
™™  
SerializedProperty
´´ 
m_Data1
´´ "
;
´´" # 
SerializedProperty
¨¨ 
m_Data2
¨¨ "
;
¨¨" # 
SerializedProperty
≠≠ 
m_Data3
≠≠ "
;
≠≠" # 
SerializedProperty
ÆÆ 
m_Data4
ÆÆ "
;
ÆÆ" #
public
≤≤ #
SerializedBitArray256
≤≤ $
(
≤≤$ % 
SerializedProperty
≤≤% 7 
serializedProperty
≤≤8 J
)
≤≤J K
:
≤≤L M
base
≤≤N R
(
≤≤R S 
serializedProperty
≤≤S e
,
≤≤e f
$num
≤≤g k
)
≤≤k l
{
≥≥ 	
m_Data1
¥¥ 
=
¥¥ "
m_SerializedProperty
¥¥ *
.
¥¥* +"
FindPropertyRelative
¥¥+ ?
(
¥¥? @
$str
¥¥@ G
)
¥¥G H
;
¥¥H I
m_Data2
µµ 
=
µµ "
m_SerializedProperty
µµ *
.
µµ* +"
FindPropertyRelative
µµ+ ?
(
µµ? @
$str
µµ@ G
)
µµG H
;
µµH I
m_Data3
∂∂ 
=
∂∂ "
m_SerializedProperty
∂∂ *
.
∂∂* +"
FindPropertyRelative
∂∂+ ?
(
∂∂? @
$str
∂∂@ G
)
∂∂G H
;
∂∂H I
m_Data4
∑∑ 
=
∑∑ "
m_SerializedProperty
∑∑ *
.
∑∑* +"
FindPropertyRelative
∑∑+ ?
(
∑∑? @
$str
∑∑@ G
)
∑∑G H
;
∑∑H I
}
∏∏ 	
	protected
ΩΩ 
override
ΩΩ 
bool
ΩΩ 3
%HasBitMultipleDifferentValue_Internal
ΩΩ  E
(
ΩΩE F
uint
ΩΩF J
bitIndex
ΩΩK S
)
ΩΩS T
=>
ææ 
bitIndex
ææ 
<
ææ 
$num
ææ 
?
øø 
bitIndex
øø 
<
øø 
$num
øø  
?
¿¿ 4
&HasBitMultipleDifferentValue_For64Bits
¿¿ <
(
¿¿< =
$str
¿¿= D
,
¿¿D E
m_Data1
¿¿F M
,
¿¿M N
bitIndex
¿¿O W
)
¿¿W X
:
¡¡ 4
&HasBitMultipleDifferentValue_For64Bits
¡¡ <
(
¡¡< =
$str
¡¡= D
,
¡¡D E
m_Data2
¡¡F M
,
¡¡M N
bitIndex
¡¡O W
-
¡¡X Y
$num
¡¡Z ]
)
¡¡] ^
:
¬¬ 
bitIndex
¬¬ 
<
¬¬ 
$num
¬¬ !
?
√√ 4
&HasBitMultipleDifferentValue_For64Bits
√√ <
(
√√< =
$str
√√= D
,
√√D E
m_Data3
√√F M
,
√√M N
bitIndex
√√O W
-
√√X Y
$num
√√Z ^
)
√√^ _
:
ƒƒ 4
&HasBitMultipleDifferentValue_For64Bits
ƒƒ <
(
ƒƒ< =
$str
ƒƒ= D
,
ƒƒD E
m_Data4
ƒƒF M
,
ƒƒM N
bitIndex
ƒƒO W
-
ƒƒX Y
$num
ƒƒZ ^
)
ƒƒ^ _
;
ƒƒ_ `
	protected
…… 
override
…… 
bool
…… 
GetBitAt_Internal
……  1
(
……1 2
uint
……2 6
bitIndex
……7 ?
)
……? @
=>
   
BitArrayUtilities
    
.
    !
Get256
  ! '
(
  ' (
bitIndex
ÀÀ 
,
ÀÀ 
(
ÃÃ 
ulong
ÃÃ 
)
ÃÃ "
m_SerializedProperty
ÃÃ +
.
ÃÃ+ ,"
FindPropertyRelative
ÃÃ, @
(
ÃÃ@ A
$str
ÃÃA H
)
ÃÃH I
.
ÃÃI J
	longValue
ÃÃJ S
,
ÃÃS T
(
ÕÕ 
ulong
ÕÕ 
)
ÕÕ "
m_SerializedProperty
ÕÕ +
.
ÕÕ+ ,"
FindPropertyRelative
ÕÕ, @
(
ÕÕ@ A
$str
ÕÕA H
)
ÕÕH I
.
ÕÕI J
	longValue
ÕÕJ S
,
ÕÕS T
(
ŒŒ 
ulong
ŒŒ 
)
ŒŒ "
m_SerializedProperty
ŒŒ +
.
ŒŒ+ ,"
FindPropertyRelative
ŒŒ, @
(
ŒŒ@ A
$str
ŒŒA H
)
ŒŒH I
.
ŒŒI J
	longValue
ŒŒJ S
,
ŒŒS T
(
œœ 
ulong
œœ 
)
œœ "
m_SerializedProperty
œœ +
.
œœ+ ,"
FindPropertyRelative
œœ, @
(
œœ@ A
$str
œœA H
)
œœH I
.
œœI J
	longValue
œœJ S
)
œœS T
;
œœT U
	protected
‘‘ 
override
‘‘ 
void
‘‘ 
SetBitAt_Internal
‘‘  1
(
‘‘1 2
uint
‘‘2 6
bitIndex
‘‘7 ?
,
‘‘? @
bool
‘‘A E
value
‘‘F K
)
‘‘K L
{
’’ 	
foreach
÷÷ 
(
÷÷ 
var
÷÷ 
property
÷÷ !
in
÷÷" $1
#GetOrInitializeSerializedProperties
÷÷% H
(
÷÷H I
)
÷÷I J
)
÷÷J K
{
◊◊ 
long
ÿÿ 
versionedData1
ÿÿ #
=
ÿÿ$ %
property
ÿÿ& .
.
ÿÿ. /"
FindPropertyRelative
ÿÿ/ C
(
ÿÿC D
$str
ÿÿD K
)
ÿÿK L
.
ÿÿL M
	longValue
ÿÿM V
;
ÿÿV W
long
ŸŸ 
versionedData2
ŸŸ #
=
ŸŸ$ %
property
ŸŸ& .
.
ŸŸ. /"
FindPropertyRelative
ŸŸ/ C
(
ŸŸC D
$str
ŸŸD K
)
ŸŸK L
.
ŸŸL M
	longValue
ŸŸM V
;
ŸŸV W
long
⁄⁄ 
versionedData3
⁄⁄ #
=
⁄⁄$ %
property
⁄⁄& .
.
⁄⁄. /"
FindPropertyRelative
⁄⁄/ C
(
⁄⁄C D
$str
⁄⁄D K
)
⁄⁄K L
.
⁄⁄L M
	longValue
⁄⁄M V
;
⁄⁄V W
long
€€ 
versionedData4
€€ #
=
€€$ %
property
€€& .
.
€€. /"
FindPropertyRelative
€€/ C
(
€€C D
$str
€€D K
)
€€K L
.
€€L M
	longValue
€€M V
;
€€V W
ulong
‹‹ 
	trueData1
‹‹ 
;
‹‹  
ulong
›› 
	trueData2
›› 
;
››  
ulong
ﬁﬁ 
	trueData3
ﬁﬁ 
;
ﬁﬁ  
ulong
ﬂﬂ 
	trueData4
ﬂﬂ 
;
ﬂﬂ  
unsafe
‡‡ 
{
·· 
	trueData1
‚‚ 
=
‚‚ 
*
‚‚  !
(
‚‚! "
ulong
‚‚" '
*
‚‚' (
)
‚‚( )
(
‚‚) *
&
‚‚* +
versionedData1
‚‚+ 9
)
‚‚9 :
;
‚‚: ;
	trueData2
„„ 
=
„„ 
*
„„  !
(
„„! "
ulong
„„" '
*
„„' (
)
„„( )
(
„„) *
&
„„* +
versionedData2
„„+ 9
)
„„9 :
;
„„: ;
	trueData3
‰‰ 
=
‰‰ 
*
‰‰  !
(
‰‰! "
ulong
‰‰" '
*
‰‰' (
)
‰‰( )
(
‰‰) *
&
‰‰* +
versionedData3
‰‰+ 9
)
‰‰9 :
;
‰‰: ;
	trueData4
ÂÂ 
=
ÂÂ 
*
ÂÂ  !
(
ÂÂ! "
ulong
ÂÂ" '
*
ÂÂ' (
)
ÂÂ( )
(
ÂÂ) *
&
ÂÂ* +
versionedData4
ÂÂ+ 9
)
ÂÂ9 :
;
ÂÂ: ;
}
ÊÊ 
BitArrayUtilities
ÁÁ !
.
ÁÁ! "
Set256
ÁÁ" (
(
ÁÁ( )
bitIndex
ÁÁ) 1
,
ÁÁ1 2
ref
ÁÁ3 6
	trueData1
ÁÁ7 @
,
ÁÁ@ A
ref
ÁÁB E
	trueData2
ÁÁF O
,
ÁÁO P
ref
ÁÁQ T
	trueData3
ÁÁU ^
,
ÁÁ^ _
ref
ÁÁ` c
	trueData4
ÁÁd m
,
ÁÁm n
value
ÁÁo t
)
ÁÁt u
;
ÁÁu v
unsafe
ËË 
{
ÈÈ 
versionedData1
ÍÍ "
=
ÍÍ# $
*
ÍÍ% &
(
ÍÍ& '
long
ÍÍ' +
*
ÍÍ+ ,
)
ÍÍ, -
(
ÍÍ- .
&
ÍÍ. /
	trueData1
ÍÍ/ 8
)
ÍÍ8 9
;
ÍÍ9 :
versionedData2
ÎÎ "
=
ÎÎ# $
*
ÎÎ% &
(
ÎÎ& '
long
ÎÎ' +
*
ÎÎ+ ,
)
ÎÎ, -
(
ÎÎ- .
&
ÎÎ. /
	trueData2
ÎÎ/ 8
)
ÎÎ8 9
;
ÎÎ9 :
versionedData3
ÏÏ "
=
ÏÏ# $
*
ÏÏ% &
(
ÏÏ& '
long
ÏÏ' +
*
ÏÏ+ ,
)
ÏÏ, -
(
ÏÏ- .
&
ÏÏ. /
	trueData3
ÏÏ/ 8
)
ÏÏ8 9
;
ÏÏ9 :
versionedData4
ÌÌ "
=
ÌÌ# $
*
ÌÌ% &
(
ÌÌ& '
long
ÌÌ' +
*
ÌÌ+ ,
)
ÌÌ, -
(
ÌÌ- .
&
ÌÌ. /
	trueData4
ÌÌ/ 8
)
ÌÌ8 9
;
ÌÌ9 :
}
ÓÓ 
property
ÔÔ 
.
ÔÔ "
FindPropertyRelative
ÔÔ -
(
ÔÔ- .
$str
ÔÔ. 5
)
ÔÔ5 6
.
ÔÔ6 7
	longValue
ÔÔ7 @
=
ÔÔA B
versionedData1
ÔÔC Q
;
ÔÔQ R
property
 
.
 "
FindPropertyRelative
 -
(
- .
$str
. 5
)
5 6
.
6 7
	longValue
7 @
=
A B
versionedData2
C Q
;
Q R
property
ÒÒ 
.
ÒÒ "
FindPropertyRelative
ÒÒ -
(
ÒÒ- .
$str
ÒÒ. 5
)
ÒÒ5 6
.
ÒÒ6 7
	longValue
ÒÒ7 @
=
ÒÒA B
versionedData3
ÒÒC Q
;
ÒÒQ R
property
ÚÚ 
.
ÚÚ "
FindPropertyRelative
ÚÚ -
(
ÚÚ- .
$str
ÚÚ. 5
)
ÚÚ5 6
.
ÚÚ6 7
	longValue
ÚÚ7 @
=
ÚÚA B
versionedData4
ÚÚC Q
;
ÚÚQ R
}
ÛÛ !
ResyncSerialization
ÙÙ 
(
ÙÙ  
)
ÙÙ  !
;
ÙÙ! "
}
ıı 	
}
ˆˆ 
}˜˜ ì4
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\ContextualMenuDispatcher.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
static		 

class		 $
ContextualMenuDispatcher		 )
{

 
[ 	
MenuItem	 
( 
$str 3
)3 4
]4 5
static 
void !
RemoveCameraComponent )
() *
MenuCommand* 5
command6 =
)= >
{ 	
Camera 
camera 
= 
command #
.# $
context$ +
as, .
Camera/ 5
;5 6
string 
error 
; 
if 
( 
! #
DispatchRemoveComponent (
(( )
camera) /
)/ 0
)0 1
{ 
if 
( 
CanRemoveComponent &
(& '
camera' -
,- .
out/ 2
error3 8
)8 9
)9 :
Undo 
. "
DestroyObjectImmediate /
(/ 0
command0 7
.7 8
context8 ?
)? @
;@ A
else 
EditorUtility !
.! "
DisplayDialog" /
(/ 0
$str0 H
,H I
errorJ O
,O P
$strQ U
)U V
;V W
} 
} 	
static 
bool #
DispatchRemoveComponent +
<+ ,
T, -
>- .
(. /
T/ 0
	component1 :
): ;
where 
T 
: 
	Component 
{ 	
Type 
type 
= '
RenderPipelineEditorUtility 3
.3 4J
>FetchFirstCompatibleTypeUsingScriptableRenderPipelineExtension4 r
<r s0
#IRemoveAdditionalDataContextualMenu	s ñ
<
ñ ó
T
ó ò
>
ò ô
>
ô ö
(
ö õ
)
õ ú
;
ú ù
if 
( 
type 
!= 
null 
) 
{   /
#IRemoveAdditionalDataContextualMenu!! 3
<!!3 4
T!!4 5
>!!5 6
instance!!7 ?
=!!@ A
(!!B C/
#IRemoveAdditionalDataContextualMenu!!C f
<!!f g
T!!g h
>!!h i
)!!i j
	Activator!!j s
.!!s t
CreateInstance	!!t Ç
(
!!Ç É
type
!!É á
)
!!á à
;
!!à â
instance"" 
."" 
RemoveComponent"" (
(""( )
	component"") 2
,""2 3!
ComponentDependencies""4 I
(""I J
	component""J S
)""S T
)""T U
;""U V
return## 
true## 
;## 
}$$ 
return%% 
false%% 
;%% 
}&& 	
static(( 
IEnumerable(( 
<(( 
	Component(( $
>(($ %!
ComponentDependencies((& ;
(((; <
	Component((< E
	component((F O
)((O P
=>)) 
	component)) 
.)) 

gameObject)) #
.** 
GetComponents** 
<** 
	Component** (
>**( )
(**) *
)*** +
.++ 
Where++ 
(++ 
c++ 
=>++ 
c++ 
!=++  
	component++! *
&&,, 
c,, 
.,, 
GetType,,  
(,,  !
),,! "
.-- 
GetCustomAttributes-- ,
(--, -
typeof--- 3
(--3 4
RequireComponent--4 D
)--D E
,--E F
true--G K
)--K L
... 
Count.. 
(.. 
att.. "
=>..# %
att..& )
is..* ,
RequireComponent..- =
rc..> @
&&// 
(//  
rc//  "
.//" #
m_Type0//# *
==//+ -
	component//. 7
.//7 8
GetType//8 ?
(//? @
)//@ A
||00  "
rc00# %
.00% &
m_Type100& -
==00. 0
	component001 :
.00: ;
GetType00; B
(00B C
)00C D
||11  "
rc11# %
.11% &
m_Type211& -
==11. 0
	component111 :
.11: ;
GetType11; B
(11B C
)11C D
)11D E
)11E F
>11G H
$num11I J
)11J K
;11K L
static33 
bool33 
CanRemoveComponent33 &
(33& '
	Component33' 0
	component331 :
,33: ;
out33< ?
string33@ F
error33G L
)33L M
{44 	
var55 
dependencies55 
=55 !
ComponentDependencies55 4
(554 5
	component555 >
)55> ?
;55? @
if66 
(66 
dependencies66 
.66 
Count66 "
(66" #
)66# $
==66% '
$num66( )
)66) *
{77 
error88 
=88 
null88 
;88 
return99 
true99 
;99 
}:: 
	Component<< 
firstDependency<< %
=<<& '
dependencies<<( 4
.<<4 5
First<<5 :
(<<: ;
)<<; <
;<<< =
error== 
=== 
$"== 
Can't remove == #
{==# $
	component==$ -
.==- .
GetType==. 5
(==5 6
)==6 7
.==7 8
Name==8 <
}==< =
	 because === F
{==F G
firstDependency==G V
.==V W
GetType==W ^
(==^ _
)==_ `
.==` a
Name==a e
}==e f
 depends on it.==f u
"==u v
;==v w
return>> 
false>> 
;>> 
}?? 	
}@@ 
publicFF 

	interfaceFF /
#IRemoveAdditionalDataContextualMenuFF 8
<FF8 9
TFF9 :
>FF: ;
whereGG 
TGG 
:GG 
	ComponentGG 
{HH 
voidNN 
RemoveComponentNN 
(NN 
TNN 
	componentNN (
,NN( )
IEnumerableNN* 5
<NN5 6
	ComponentNN6 ?
>NN? @
dependenciesNNA M
)NNM N
;NNN O
}OO 
}PP Ω
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeParameterDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
AttributeUsage 
( 
AttributeTargets $
.$ %
Class% *
,* +
AllowMultiple, 9
=: ;
false< A
)A B
]B C
public 

sealed 
class *
VolumeParameterDrawerAttribute 6
:7 8
	Attribute9 B
{ 
public 
readonly 
Type 
parameterType *
;* +
public *
VolumeParameterDrawerAttribute -
(- .
Type. 2
parameterType3 @
)@ A
{ 	
this 
. 
parameterType 
=  
parameterType! .
;. /
} 	
} 
public?? 

abstract?? 
class?? !
VolumeParameterDrawer?? /
{@@ 
publicKK 
virtualKK 
boolKK 
IsAutoPropertyKK *
(KK* +
)KK+ ,
=>KK- /
trueKK0 4
;KK4 5
publicUU 
abstractUU 
boolUU 
OnGUIUU "
(UU" ##
SerializedDataParameterUU# :
	parameterUU; D
,UUD E

GUIContentUUF P
titleUUQ V
)UUV W
;UUW X
}VV 
}WW Ã”
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\ShaderGenerator\CSharpToHLSL.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
class 	
CSharpToHLSL
 
{ 
public 
static 
bool 
GenerateHLSL '
(' (
System( .
.. /
Type/ 3
type4 8
,8 9
GenerateHLSL: F
	attributeG P
,P Q
outR U
stringV \
shaderSource] i
)i j
{ 	
List 
< 
string 
> 
errors 
;  
return 
GenerateHLSL 
(  
type  $
,$ %
	attribute& /
,/ 0
out1 4
shaderSource5 A
,A B
outC F
errorsG M
)M N
;N O
} 	
public 
static 
bool 
GenerateHLSL '
(' (
System( .
.. /
Type/ 3
type4 8
,8 9
GenerateHLSL: F
	attributeG P
,P Q
outR U
stringV \
shaderSource] i
,i j
outk n
Listo s
<s t
stringt z
>z {
errors	| Ç
)
Ç É
{ 	
ShaderTypeGenerator 
gen  #
=$ %
new& )
ShaderTypeGenerator* =
(= >
type> B
,B C
	attributeD M
)M N
;N O
bool 
success 
= 
gen 
. 
Generate '
(' (
)( )
;) *
if 
( 
success 
) 
{ 
shaderSource 
= 
gen "
." #
Emit# '
(' (
)( )
;) *
} 
else 
{ 
shaderSource   
=   
null   #
;  # $
}!! 
errors## 
=## 
gen## 
.## 
errors## 
;##  
return$$ 
success$$ 
;$$ 
}%% 	
public'' 
static'' 
void'' 
GenerateAll'' &
(''& '
)''' (
{(( 	

s_TypeName)) 
=)) 
new)) 

Dictionary)) '
<))' (
string))( .
,)). /
ShaderTypeGenerator))0 C
>))C D
())D E
)))E F
;))F G
var,, 
assemblyList,, 
=,, 
	AppDomain,, (
.,,( )
CurrentDomain,,) 6
.,,6 7
GetAssemblies,,7 D
(,,D E
),,E F
... 
Where.. 
(.. 
ass.. 
=>.. 
!.. 
(..  
ass..  #
...# $
ManifestModule..$ 2
is..3 5
System..6 <
...< =

Reflection..= G
...G H
Emit..H L
...L M
ModuleBuilder..M Z
)..Z [
)..[ \
.// 
ToList// 
(// 
)// 
;// 
foreach11 
(11 
var11 
type11 
in11  
	TypeCache11! *
.11* +!
GetTypesWithAttribute11+ @
<11@ A
GenerateHLSL11A M
>11M N
(11N O
)11O P
)11P Q
{22 
var33 
attr33 
=33 
type33 
.33  
GetCustomAttributes33  3
(333 4
typeof334 :
(33: ;
GenerateHLSL33; G
)33G H
,33H I
false33J O
)33O P
.33P Q
First33Q V
(33V W
)33W X
as33Y [
GenerateHLSL33\ h
;33h i
ShaderTypeGenerator44 #
gen44$ '
;44' (
if55 
(55 

s_TypeName55 
.55 
TryGetValue55 *
(55* +
type55+ /
.55/ 0
FullName550 8
,558 9
out55: =
gen55> A
)55A B
)55B C
{66 
Debug77 
.77 
LogError77 "
(77" #
$str77# b
+77c d
type77e i
.77i j
FullName77j r
+77s t
$str88 ,
+88- .
gen88/ 2
.882 3
type883 7
.887 8
Assembly888 @
.88@ A
FullName88A I
+88J K
$str88L S
+88T U
type88V Z
.88Z [
Assembly88[ c
.88c d
FullName88d l
+88m n
$str	88o ë
)
88ë í
;
88í ì
}99 

s_TypeName:: 
[:: 
type:: 
.::  
FullName::  (
]::( )
=::* +
new::, /
ShaderTypeGenerator::0 C
(::C D
type::D H
,::H I
attr::J N
)::N O
;::O P
};; 
s_SourceGenerators@@ 
=@@  
new@@! $

Dictionary@@% /
<@@/ 0
string@@0 6
,@@6 7
List@@8 <
<@@< =
ShaderTypeGenerator@@= P
>@@P Q
>@@Q R
(@@R S
)@@S T
;@@T U
varBB 

assetPathsBB 
=BB 
AssetDatabaseBB *
.BB* +
GetAllAssetPathsBB+ ;
(BB; <
)BB< =
.BB= >
WhereBB> C
(BBC D
sBBD E
=>BBF H
sBBI J
.BBJ K
EndsWithBBK S
(BBS T
$strBBT Y
)BBY Z
)BBZ [
.BB[ \
ToListBB\ b
(BBb c
)BBc d
;BBd e
foreachCC 
(CC 
varCC 
	assetPathCC "
inCC# %

assetPathsCC& 0
)CC0 1
{DD 
	LoadTypesEE 
(EE 
	assetPathEE #
)EE# $
;EE$ %
}FF 
foreachII 
(II 
varII 
itII 
inII 
s_SourceGeneratorsII 1
)II1 2
{JJ 
stringKK 
fileNameKK 
=KK  !
itKK" $
.KK$ %
KeyKK% (
+KK) *
$strKK+ 2
;KK2 3
boolLL 
skipFileLL 
=LL 
falseLL  %
;LL% &
foreachMM 
(MM 
varMM 
genMM  
inMM! #
itMM$ &
.MM& '
ValueMM' ,
)MM, -
{NN 
ifOO 
(OO 
!OO 
genOO 
.OO 
GenerateOO %
(OO% &
)OO& '
)OO' (
{PP 
genRR 
.RR 
PrintErrorsRR '
(RR' (
)RR( )
;RR) *
skipFileSS  
=SS! "
trueSS# '
;SS' (
breakTT 
;TT 
}UU 
}VV 
ifXX 
(XX 
!XX 
skipFileXX 
&&XX  
FileXX! %
.XX% &
ExistsXX& ,
(XX, -
fileNameXX- 5
)XX5 6
)XX6 7
{YY 
FileInfoZZ 
infoZZ !
=ZZ" #
nullZZ$ (
;ZZ( )
try[[ 
{\\ 
info]] 
=]] 
new]] "
FileInfo]]# +
(]]+ ,
fileName]], 4
)]]4 5
;]]5 6
}^^ 
catch`` 
(`` '
UnauthorizedAccessException`` 6
)``7 8
{bb 
Debugcc 
.cc 
Logcc !
(cc! "
$strcc" .
+cc/ 0
fileNamecc1 9
+cc: ;
$strcc< V
)ccV W
;ccW X
skipFiledd  
=dd! "
truedd# '
;dd' (
}ee 
catchgg 
(gg 
Systemgg !
.gg! "
Securitygg" *
.gg* +
SecurityExceptiongg+ <
)gg= >
{ii 
Debugjj 
.jj 
Logjj !
(jj! "
$strjj" I
+jjJ K
fileNamejjL T
+jjU V
$strjjW g
)jjg h
;jjh i
skipFilekk  
=kk! "
truekk# '
;kk' (
}ll 
ifnn 
(nn 
infonn 
?nn 
.nn 

IsReadOnlynn (
??nn) +
falsenn, 1
)nn1 2
{oo 
Debugpp 
.pp 
Logpp !
(pp! "
fileNamepp" *
+pp+ ,
$strpp- I
)ppI J
;ppJ K
skipFileqq  
=qq! "
trueqq# '
;qq' (
}rr 
}ss 
ifuu 
(uu 
skipFileuu 
)uu 
continuevv 
;vv 
usingxx 
(xx 
varxx 
writerxx !
=xx" #
Filexx$ (
.xx( )

CreateTextxx) 3
(xx3 4
fileNamexx4 <
)xx< =
)xx= >
{yy 
writerzz 
.zz 
NewLinezz "
=zz# $
Environmentzz% 0
.zz0 1
NewLinezz1 8
;zz8 9
var|| 
guard|| 
=|| 
Path||  $
.||$ %
GetFileName||% 0
(||0 1
fileName||1 9
)||9 :
.||: ;
Replace||; B
(||B C
$str||C F
,||F G
$str||H K
)||K L
.||L M
ToUpper||M T
(||T U
)||U V
;||V W
if}} 
(}} 
!}} 
char}} 
.}} 
IsLetter}} &
(}}& '
guard}}' ,
[}}, -
$num}}- .
]}}. /
)}}/ 0
)}}0 1
guard~~ 
=~~ 
$str~~  #
+~~$ %
guard~~& +
;~~+ ,
writer
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% )
)
ÄÄ) *
;
ÄÄ* +
writer
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ $
(
ÅÅ$ %
$str
ÅÅ% k
)
ÅÅk l
;
ÅÅl m
writer
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ $
(
ÇÇ$ %
$str
ÇÇ% )
)
ÇÇ) *
;
ÇÇ* +
writer
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ $
(
ÉÉ$ %
)
ÉÉ% &
;
ÉÉ& '
writer
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ $
(
ÑÑ$ %
$str
ÑÑ% /
+
ÑÑ0 1
guard
ÑÑ2 7
)
ÑÑ7 8
;
ÑÑ8 9
writer
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ $
(
ÖÖ$ %
$str
ÖÖ% /
+
ÖÖ0 1
guard
ÖÖ2 7
)
ÖÖ7 8
;
ÖÖ8 9
foreach
áá 
(
áá 
var
áá  
gen
áá! $
in
áá% '
it
áá( *
.
áá* +
Value
áá+ 0
)
áá0 1
{
àà 
if
ââ 
(
ââ 
gen
ââ 
.
ââ  

hasStatics
ââ  *
)
ââ* +
{
ää 
writer
ãã "
.
ãã" #
	WriteLine
ãã# ,
(
ãã, -
gen
ãã- 0
.
ãã0 1
EmitDefines
ãã1 <
(
ãã< =
)
ãã= >
.
ãã> ?
Replace
ãã? F
(
ããF G
$str
ããG K
,
ããK L
writer
ããM S
.
ããS T
NewLine
ããT [
)
ãã[ \
)
ãã\ ]
;
ãã] ^
}
åå 
}
çç 
foreach
èè 
(
èè 
var
èè  
gen
èè! $
in
èè% '
it
èè( *
.
èè* +
Value
èè+ 0
)
èè0 1
{
êê 
if
ëë 
(
ëë 
gen
ëë 
.
ëë  
	hasFields
ëë  )
)
ëë) *
{
íí 
writer
ìì "
.
ìì" #
	WriteLine
ìì# ,
(
ìì, -
gen
ìì- 0
.
ìì0 1
EmitTypeDecl
ìì1 =
(
ìì= >
)
ìì> ?
.
ìì? @
Replace
ìì@ G
(
ììG H
$str
ììH L
,
ììL M
writer
ììN T
.
ììT U
NewLine
ììU \
)
ìì\ ]
)
ìì] ^
;
ìì^ _
}
îî 
}
ïï 
foreach
óó 
(
óó 
var
óó  
gen
óó! $
in
óó% '
it
óó( *
.
óó* +
Value
óó+ 0
)
óó0 1
{
òò 
if
ôô 
(
ôô 
gen
ôô 
.
ôô  
	hasFields
ôô  )
&&
ôô* ,
gen
ôô- 0
.
ôô0 1
needAccessors
ôô1 >
&&
ôô? A
!
ôôB C
gen
ôôC F
.
ôôF G
hasPackedInfo
ôôG T
)
ôôT U
{
öö 
writer
õõ "
.
õõ" #
Write
õõ# (
(
õõ( )
gen
õõ) ,
.
õõ, -
EmitAccessors
õõ- :
(
õõ: ;
)
õõ; <
.
õõ< =
Replace
õõ= D
(
õõD E
$str
õõE I
,
õõI J
writer
õõK Q
.
õõQ R
NewLine
õõR Y
)
õõY Z
)
õõZ [
;
õõ[ \
writer
úú "
.
úú" #
Write
úú# (
(
úú( )
gen
úú) ,
.
úú, -
EmitSetters
úú- 8
(
úú8 9
)
úú9 :
.
úú: ;
Replace
úú; B
(
úúB C
$str
úúC G
,
úúG H
writer
úúI O
.
úúO P
NewLine
úúP W
)
úúW X
)
úúX Y
;
úúY Z
const
ùù !
bool
ùù" &
emitInitters
ùù' 3
=
ùù4 5
true
ùù6 :
;
ùù: ;
writer
ûû "
.
ûû" #
Write
ûû# (
(
ûû( )
gen
ûû) ,
.
ûû, -
EmitSetters
ûû- 8
(
ûû8 9
emitInitters
ûû9 E
)
ûûE F
.
ûûF G
Replace
ûûG N
(
ûûN O
$str
ûûO S
,
ûûS T
writer
ûûU [
.
ûû[ \
NewLine
ûû\ c
)
ûûc d
)
ûûd e
;
ûûe f
}
üü 
}
†† 
foreach
¢¢ 
(
¢¢ 
var
¢¢  
gen
¢¢! $
in
¢¢% '
it
¢¢( *
.
¢¢* +
Value
¢¢+ 0
)
¢¢0 1
{
££ 
if
§§ 
(
§§ 
gen
§§ 
.
§§  

hasStatics
§§  *
&&
§§+ -
gen
§§. 1
.
§§1 2
	hasFields
§§2 ;
&&
§§< >
gen
§§? B
.
§§B C
needParamDebug
§§C Q
&&
§§R T
!
§§U V
gen
§§V Y
.
§§Y Z
hasPackedInfo
§§Z g
)
§§g h
{
•• 
writer
¶¶ "
.
¶¶" #
	WriteLine
¶¶# ,
(
¶¶, -
gen
¶¶- 0
.
¶¶0 1
EmitFunctions
¶¶1 >
(
¶¶> ?
)
¶¶? @
.
¶¶@ A
Replace
¶¶A H
(
¶¶H I
$str
¶¶I M
,
¶¶M N
writer
¶¶O U
.
¶¶U V
NewLine
¶¶V ]
)
¶¶] ^
)
¶¶^ _
;
¶¶_ `
}
ßß 
}
®® 
foreach
™™ 
(
™™ 
var
™™  
gen
™™! $
in
™™% '
it
™™( *
.
™™* +
Value
™™+ 0
)
™™0 1
{
´´ 
if
¨¨ 
(
¨¨ 
gen
¨¨ 
.
¨¨ 
hasPackedInfo
¨¨ ,
)
¨¨, -
{
≠≠ 
writer
ÆÆ "
.
ÆÆ" #
	WriteLine
ÆÆ# ,
(
ÆÆ, -
gen
ÆÆ- 0
.
ÆÆ0 1
EmitPackedInfo
ÆÆ1 ?
(
ÆÆ? @
)
ÆÆ@ A
.
ÆÆA B
Replace
ÆÆB I
(
ÆÆI J
$str
ÆÆJ N
,
ÆÆN O
writer
ÆÆP V
.
ÆÆV W
NewLine
ÆÆW ^
)
ÆÆ^ _
)
ÆÆ_ `
;
ÆÆ` a
}
ØØ 
}
∞∞ 
writer
≤≤ 
.
≤≤ 
	WriteLine
≤≤ $
(
≤≤$ %
)
≤≤% &
;
≤≤& '
writer
¥¥ 
.
¥¥ 
	WriteLine
¥¥ $
(
¥¥$ %
$str
¥¥% -
)
¥¥- .
;
¥¥. /
var
∂∂ 

customFile
∂∂ "
=
∂∂# $
it
∂∂% '
.
∂∂' (
Key
∂∂( +
+
∂∂, -
$str
∂∂. <
;
∂∂< =
if
∑∑ 
(
∑∑ 
File
∑∑ 
.
∑∑ 
Exists
∑∑ #
(
∑∑# $

customFile
∑∑$ .
)
∑∑. /
)
∑∑/ 0
writer
∏∏ 
.
∏∏ 
Write
∏∏ $
(
∏∏$ %
$str
∏∏% 7
,
∏∏7 8
Path
∏∏9 =
.
∏∏= >
GetFileName
∏∏> I
(
∏∏I J

customFile
∏∏J T
)
∏∏T U
)
∏∏U V
;
∏∏V W
}
ππ 
}
∫∫ 
}
ªª 	
static
ΩΩ 

Dictionary
ΩΩ 
<
ΩΩ 
string
ΩΩ  
,
ΩΩ  !!
ShaderTypeGenerator
ΩΩ" 5
>
ΩΩ5 6

s_TypeName
ΩΩ7 A
;
ΩΩA B
static
øø 
void
øø 
	LoadTypes
øø 
(
øø 
string
øø $
fileName
øø% -
)
øø- .
{
¿¿ 	
using
¡¡ 
(
¡¡ 
var
¡¡ 
parser
¡¡ 
=
¡¡ 
ParserFactory
¡¡  -
.
¡¡- .
CreateParser
¡¡. :
(
¡¡: ;
fileName
¡¡; C
)
¡¡C D
)
¡¡D E
{
¬¬ 
parser
   
.
   
Lexer
   
.
   ,
EvaluateConditionalCompilation
   ;
=
  < =
true
  > B
;
  B C
try
ÃÃ 
{
ÕÕ 
parser
ŒŒ 
.
ŒŒ 
Parse
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
;
ŒŒ" #
}
œœ 
catch
–– 
{
—— 
Debug
““ 
.
““ 

LogWarning
““ $
(
““$ %
$"
““% '
Unable to parse 
““' 7
{
““7 8
fileName
““8 @
}
““@ AR
C.  Please not that C# 6.0 syntax is not yet supported by this tool.““A Ñ
"““Ñ Ö
)““Ö Ü
;““Ü á
return
”” 
;
”” 
}
‘‘ 
try
÷÷ 
{
◊◊ 
var
ÿÿ 
visitor
ÿÿ 
=
ÿÿ  !
new
ÿÿ" %
NamespaceVisitor
ÿÿ& 6
(
ÿÿ6 7
)
ÿÿ7 8
;
ÿÿ8 9
var
ŸŸ 
data
ŸŸ 
=
ŸŸ 
new
ŸŸ "
VisitorData
ŸŸ# .
{
ŸŸ/ 0
typeName
ŸŸ1 9
=
ŸŸ: ;

s_TypeName
ŸŸ< F
}
ŸŸG H
;
ŸŸH I
parser
⁄⁄ 
.
⁄⁄ 
CompilationUnit
⁄⁄ *
.
⁄⁄* +
AcceptVisitor
⁄⁄+ 8
(
⁄⁄8 9
visitor
⁄⁄9 @
,
⁄⁄@ A
data
⁄⁄B F
)
⁄⁄F G
;
⁄⁄G H
if
‹‹ 
(
‹‹ 
data
‹‹ 
.
‹‹ 

generators
‹‹ '
.
‹‹' (
Count
‹‹( -
>
‹‹. /
$num
‹‹0 1
)
‹‹1 2 
s_SourceGenerators
›› *
[
››* +
fileName
››+ 3
]
››3 4
=
››5 6
data
››7 ;
.
››; <

generators
››< F
;
››F G
}
ﬁﬁ 
catch
ﬂﬂ 
{
‡‡ 
throw
‚‚ 
;
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 	
static
ÁÁ 

Dictionary
ÁÁ 
<
ÁÁ 
string
ÁÁ  
,
ÁÁ  !
List
ÁÁ" &
<
ÁÁ& '!
ShaderTypeGenerator
ÁÁ' :
>
ÁÁ: ;
>
ÁÁ; < 
s_SourceGenerators
ÁÁ= O
;
ÁÁO P
class
ÈÈ 
VisitorData
ÈÈ 
{
ÍÍ 	
public
ÎÎ 
VisitorData
ÎÎ 
(
ÎÎ 
)
ÎÎ  
{
ÏÏ 
currentNamespaces
ÌÌ !
=
ÌÌ" #
new
ÌÌ$ '
Stack
ÌÌ( -
<
ÌÌ- .
string
ÌÌ. 4
>
ÌÌ4 5
(
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
currentClasses
ÓÓ 
=
ÓÓ  
new
ÓÓ! $
Stack
ÓÓ% *
<
ÓÓ* +
string
ÓÓ+ 1
>
ÓÓ1 2
(
ÓÓ2 3
)
ÓÓ3 4
;
ÓÓ4 5

generators
ÔÔ 
=
ÔÔ 
new
ÔÔ  
List
ÔÔ! %
<
ÔÔ% &!
ShaderTypeGenerator
ÔÔ& 9
>
ÔÔ9 :
(
ÔÔ: ;
)
ÔÔ; <
;
ÔÔ< =
}
 
public
ÚÚ 
string
ÚÚ 
GetTypePrefix
ÚÚ '
(
ÚÚ' (
)
ÚÚ( )
{
ÛÛ 
var
ÙÙ 
fullNamespace
ÙÙ !
=
ÙÙ" #
string
ÙÙ$ *
.
ÙÙ* +
Empty
ÙÙ+ 0
;
ÙÙ0 1
var
ˆˆ 
	separator
ˆˆ 
=
ˆˆ 
$str
ˆˆ  "
;
ˆˆ" #
fullNamespace
¯¯ 
=
¯¯ 
currentClasses
¯¯  .
.
¯¯. /
	Aggregate
¯¯/ 8
(
¯¯8 9
fullNamespace
¯¯9 F
,
¯¯F G
(
¯¯H I
current
¯¯I P
,
¯¯P Q
ns
¯¯R T
)
¯¯T U
=>
¯¯V X
ns
¯¯Y [
+
¯¯\ ]
$str
¯¯^ a
+
¯¯b c
current
¯¯d k
)
¯¯k l
;
¯¯l m
foreach
˘˘ 
(
˘˘ 
var
˘˘ 
ns
˘˘ 
in
˘˘  "
currentNamespaces
˘˘# 4
)
˘˘4 5
{
˙˙ 
if
˚˚ 
(
˚˚ 
fullNamespace
˚˚ %
==
˚˚& (
string
˚˚) /
.
˚˚/ 0
Empty
˚˚0 5
)
˚˚5 6
{
¸¸ 
	separator
˝˝ !
=
˝˝" #
$str
˝˝$ '
;
˝˝' (
fullNamespace
˛˛ %
=
˛˛& '
ns
˛˛( *
;
˛˛* +
}
ˇˇ 
else
ÄÄ 
fullNamespace
ÅÅ %
=
ÅÅ& '
ns
ÅÅ( *
+
ÅÅ+ ,
$str
ÅÅ- 0
+
ÅÅ1 2
fullNamespace
ÅÅ3 @
;
ÅÅ@ A
}
ÇÇ 
var
ÑÑ 
name
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
if
ÖÖ 
(
ÖÖ 
fullNamespace
ÖÖ !
!=
ÖÖ" $
string
ÖÖ% +
.
ÖÖ+ ,
Empty
ÖÖ, 1
)
ÖÖ1 2
{
ÜÜ 
name
áá 
=
áá 
fullNamespace
áá (
+
áá) *
	separator
áá+ 4
+
áá5 6
name
áá7 ;
;
áá; <
}
àà 
return
ââ 
name
ââ 
;
ââ 
}
ää 
public
åå 
readonly
åå 
Stack
åå !
<
åå! "
string
åå" (
>
åå( )
currentNamespaces
åå* ;
;
åå; <
public
çç 
readonly
çç 
Stack
çç !
<
çç! "
string
çç" (
>
çç( )
currentClasses
çç* 8
;
çç8 9
public
éé 
readonly
éé 
List
éé  
<
éé  !!
ShaderTypeGenerator
éé! 4
>
éé4 5

generators
éé6 @
;
éé@ A
public
èè 

Dictionary
èè 
<
èè 
string
èè $
,
èè$ %!
ShaderTypeGenerator
èè& 9
>
èè9 :
typeName
èè; C
;
èèC D
}
êê 	
class
íí 
NamespaceVisitor
íí 
:
íí   
AbstractAstVisitor
íí! 3
{
ìì 	
public
îî 
override
îî 
object
îî "'
VisitNamespaceDeclaration
îî# <
(
îî< =
ICSharpCode
îî= H
.
îîH I

NRefactory
îîI S
.
îîS T
Ast
îîT W
.
îîW X"
NamespaceDeclaration
îîX l#
namespaceDeclarationîîm Å
,îîÅ Ç
objectîîÉ â
dataîîä é
)îîé è
{
ïï 
var
ññ 
visitorData
ññ 
=
ññ  !
(
ññ" #
VisitorData
ññ# .
)
ññ. /
data
ññ/ 3
;
ññ3 4
visitorData
óó 
.
óó 
currentNamespaces
óó -
.
óó- .
Push
óó. 2
(
óó2 3"
namespaceDeclaration
óó3 G
.
óóG H
Name
óóH L
)
óóL M
;
óóM N"
namespaceDeclaration
òò $
.
òò$ %
AcceptChildren
òò% 3
(
òò3 4
this
òò4 8
,
òò8 9
visitorData
òò: E
)
òòE F
;
òòF G
visitorData
ôô 
.
ôô 
currentNamespaces
ôô -
.
ôô- .
Pop
ôô. 1
(
ôô1 2
)
ôô2 3
;
ôô3 4
return
õõ 
null
õõ 
;
õõ 
}
úú 
public
ûû 
override
ûû 
object
ûû ""
VisitTypeDeclaration
ûû# 7
(
ûû7 8
TypeDeclaration
ûû8 G
typeDeclaration
ûûH W
,
ûûW X
object
ûûY _
data
ûû` d
)
ûûd e
{
üü 
if
°° 
(
°° 
typeDeclaration
°° #
.
°°# $
Type
°°$ (
==
°°) +
	ClassType
°°, 5
.
°°5 6
Class
°°6 ;
||
°°< >
typeDeclaration
°°? N
.
°°N O
Type
°°O S
==
°°T V
	ClassType
°°W `
.
°°` a
Struct
°°a g
||
°°h j
typeDeclaration
°°k z
.
°°z {
Type
°°{ 
==°°Ä Ç
	ClassType°°É å
.°°å ç
Enum°°ç ë
)°°ë í
{
¢¢ 
var
££ 
visitorData
££ #
=
££$ %
(
££& '
VisitorData
££' 2
)
££2 3
data
££3 7
;
££7 8
var
•• 
name
•• 
=
•• 
visitorData
•• *
.
••* +
GetTypePrefix
••+ 8
(
••8 9
)
••9 :
+
••; <
typeDeclaration
••= L
.
••L M
Name
••M Q
;
••Q R!
ShaderTypeGenerator
ßß '
gen
ßß( +
;
ßß+ ,
if
®® 
(
®® 
visitorData
®® #
.
®®# $
typeName
®®$ ,
.
®®, -
TryGetValue
®®- 8
(
®®8 9
name
®®9 =
,
®®= >
out
®®? B
gen
®®C F
)
®®F G
)
®®G H
{
©© 
visitorData
™™ #
.
™™# $

generators
™™$ .
.
™™. /
Add
™™/ 2
(
™™2 3
gen
™™3 6
)
™™6 7
;
™™7 8
}
´´ 
visitorData
≠≠ 
.
≠≠  
currentClasses
≠≠  .
.
≠≠. /
Push
≠≠/ 3
(
≠≠3 4
typeDeclaration
≠≠4 C
.
≠≠C D
Name
≠≠D H
)
≠≠H I
;
≠≠I J
typeDeclaration
ÆÆ #
.
ÆÆ# $
AcceptChildren
ÆÆ$ 2
(
ÆÆ2 3
this
ÆÆ3 7
,
ÆÆ7 8
visitorData
ÆÆ9 D
)
ÆÆD E
;
ÆÆE F
visitorData
ØØ 
.
ØØ  
currentClasses
ØØ  .
.
ØØ. /
Pop
ØØ/ 2
(
ØØ2 3
)
ØØ3 4
;
ØØ4 5
}
∞∞ 
return
≤≤ 
null
≤≤ 
;
≤≤ 
}
≥≥ 
}
¥¥ 	
}
µµ 
}∂∂ ÿZ
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\ComparisonGizmoState.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
[ 
Serializable 
] 
public		 

class		  
ComparisonGizmoState		 %
{

 
internal 
const 
float 
	thickness &
=' (
$num) 0
;0 1
internal 
const 
float 
thicknessSelected .
=/ 0
$num1 7
;7 8
internal 
const 
float 
circleRadius )
=* +
$num, 2
;2 3
internal 
const 
float  
circleRadiusSelected 1
=2 3
$num4 9
;9 :
internal 
const 
float #
blendFactorCircleRadius 4
=5 6
$num7 <
;< =
internal 
const 
float +
blendFactorCircleRadiusSelected <
== >
$num? D
;D E
public 
Vector2 
point1 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
Vector2 
point2 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
[ 	
field	 
: 
SerializeField 
] 
public 
Vector2 
center 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
=4 5
Vector26 =
.= >
zero> B
;B C
[ 	
field	 
: 
SerializeField 
] 
public 
float 
angle 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
[ 	
field	 
: 
SerializeField 
] 
public 
float 
length 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
=2 3
$num4 8
;8 9
internal 
Vector4 
plane 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
internal   
Vector4   

planeOrtho   #
{  $ %
get  & )
;  ) *
private  + 2
set  3 6
;  6 7
}  8 9
[%% 	
field%%	 
:%% 
SerializeField%% 
]%% 
public&& 
float&& 
blendFactor&&  
{&&! "
get&&# &
;&&& '
set&&( +
;&&+ ,
}&&- .
internal(( 
float(( '
blendFactorMaxGizmoDistance(( 2
=>)) 
length)) 
-)) 
circleRadius)) $
-))% &#
blendFactorCircleRadius))' >
;))> ?
internal++ 
float++ '
blendFactorMinGizmoDistance++ 2
=>,, 
length,, 
-,, 
circleRadius,, $
-,,% &+
blendFactorCircleRadiusSelected,,' F
;,,F G
internal.. 
void.. 
Init.. 
(.. 
).. 
=>// 
Update// 
(// 
center// 
,// 
length// $
,//$ %
angle//& +
)//+ ,
;//, -
private22 
Vector422 

Get2DPlane22 "
(22" #
Vector222# *

firstPoint22+ 5
,225 6
float227 <
angle22= B
)22B C
{33 	
Vector444 
result44 
=44 
new44  
Vector444! (
(44( )
)44) *
;44* +
angle55 
=55 
angle55 
%55 
(55 
$num55 !
*55" #
(55$ %
float55% *
)55* +
Math55+ /
.55/ 0
PI550 2
)552 3
;553 4
Vector266 
secondPoint66 
=66  !
new66" %
Vector266& -
(66- .

firstPoint66. 8
.668 9
x669 :
+66; <
Mathf66= B
.66B C
Sin66C F
(66F G
angle66G L
)66L M
,66M N

firstPoint66O Y
.66Y Z
y66Z [
+66\ ]
Mathf66^ c
.66c d
Cos66d g
(66g h
angle66h m
)66m n
)66n o
;66o p
Vector277 
diff77 
=77 
secondPoint77 &
-77' (

firstPoint77) 3
;773 4
if88 
(88 
Mathf88 
.88 
Abs88 
(88 
diff88 
.88 
x88  
)88  !
<88" #
$num88$ (
)88( )
{99 
result:: 
.:: 
Set:: 
(:: 
-:: 
$num::  
,::  !
$num::" &
,::& '

firstPoint::( 2
.::2 3
x::3 4
,::4 5
$num::6 :
)::: ;
;::; <
float;; 
sign;; 
=;; 
Mathf;; "
.;;" #
Cos;;# &
(;;& '
angle;;' ,
);;, -
>;;. /
$num;;0 4
?;;5 6
$num;;7 ;
:;;< =
-;;> ?
$num;;? C
;;;C D
result<< 
*=<< 
sign<< 
;<< 
}== 
else>> 
{?? 
float@@ 
slope@@ 
=@@ 
diff@@ "
.@@" #
y@@# $
/@@% &
diff@@' +
.@@+ ,
x@@, -
;@@- .
resultAA 
.AA 
SetAA 
(AA 
-AA 
slopeAA !
,AA! "
$numAA# '
,AA' (
-AA) *
(AA* +

firstPointAA+ 5
.AA5 6
yAA6 7
-AA8 9
slopeAA: ?
*AA@ A

firstPointAAB L
.AAL M
xAAM N
)AAN O
,AAO P
$numAAQ U
)AAU V
;AAV W
}BB 
ifDD 
(DD 
angleDD 
>DD 
MathfDD 
.DD 
PIDD  
)DD  !
resultEE 
=EE 
-EE 
resultEE  
;EE  !
floatGG 
lengthGG 
=GG 
MathfGG  
.GG  !
SqrtGG! %
(GG% &
resultGG& ,
.GG, -
xGG- .
*GG/ 0
resultGG1 7
.GG7 8
xGG8 9
+GG: ;
resultGG< B
.GGB C
yGGC D
*GGE F
resultGGG M
.GGM N
yGGN O
)GGO P
;GGP Q
resultHH 
=HH 
resultHH 
/HH 
lengthHH $
;HH$ %
returnII 
resultII 
;II 
}JJ 	
publicQQ 
voidQQ 
UpdateQQ 
(QQ 
Vector2QQ "
point1QQ# )
,QQ) *
Vector2QQ+ 2
point2QQ3 9
)QQ9 :
{RR 	
thisSS 
.SS 
point1SS 
=SS 
point1SS  
;SS  !
thisTT 
.TT 
point2TT 
=TT 
point2TT  
;TT  !
centerUU 
=UU 
(UU 
point1UU 
+UU 
point2UU %
)UU% &
*UU' (
$numUU) -
;UU- .
lengthVV 
=VV 
(VV 
point2VV 
-VV 
point1VV %
)VV% &
.VV& '
	magnitudeVV' 0
*VV1 2
$numVV3 7
;VV7 8
Vector3XX 
verticalPlaneXX !
=XX" #

Get2DPlaneXX$ .
(XX. /
centerXX/ 5
,XX5 6
$numXX7 ;
)XX; <
;XX< =
floatYY 
sideYY 
=YY 
Vector3YY  
.YY  !
DotYY! $
(YY$ %
newYY% (
Vector3YY) 0
(YY0 1
point1YY1 7
.YY7 8
xYY8 9
,YY9 :
point1YY; A
.YYA B
yYYB C
,YYC D
$numYYE I
)YYI J
,YYJ K
verticalPlaneYYL Y
)YYY Z
;YYZ [
angleZZ 
=ZZ 
(ZZ 
MathfZZ 
.ZZ 
Deg2RadZZ "
*ZZ# $
Vector2ZZ% ,
.ZZ, -
AngleZZ- 2
(ZZ2 3
newZZ3 6
Vector2ZZ7 >
(ZZ> ?
$numZZ? C
,ZZC D
$numZZE I
)ZZI J
,ZZJ K
(ZZL M
point1ZZM S
-ZZT U
point2ZZV \
)ZZ\ ]
.ZZ] ^

normalizedZZ^ h
)ZZh i
)ZZi j
;ZZj k
if[[ 
([[ 
side[[ 
>[[ 
$num[[ 
)[[ 
angle\\ 
=\\ 
$num\\ 
*\\ 
Mathf\\ $
.\\$ %
PI\\% '
-\\( )
angle\\* /
;\\/ 0
plane^^ 
=^^ 

Get2DPlane^^ 
(^^ 
center^^ %
,^^% &
angle^^' ,
)^^, -
;^^- .

planeOrtho__ 
=__ 

Get2DPlane__ #
(__# $
center__$ *
,__* +
angle__, 1
+__2 3
$num__4 8
*__9 :
(__; <
float__< A
)__A B
Mathf__B G
.__G H
PI__H J
)__J K
;__K L
}`` 	
publichh 
voidhh 
Updatehh 
(hh 
Vector2hh "
centerhh# )
,hh) *
floathh+ 0
lengthhh1 7
,hh7 8
floathh9 >
anglehh? D
)hhD E
{ii 	
thisjj 
.jj 
centerjj 
=jj 
centerjj  
;jj  !
thiskk 
.kk 
lengthkk 
=kk 
lengthkk  
;kk  !
thisll 
.ll 
anglell 
=ll 
anglell 
;ll 
planenn 
=nn 

Get2DPlanenn 
(nn 
centernn %
,nn% &
anglenn' ,
)nn, -
;nn- .

planeOrthooo 
=oo 

Get2DPlaneoo #
(oo# $
centeroo$ *
,oo* +
angleoo, 1
+oo2 3
$numoo4 8
*oo9 :
(oo; <
floatoo< A
)ooA B
MathfooB G
.ooG H
PIooH J
)ooJ K
;ooK L
Vector2qq 
dirqq 
=qq 
newqq 
Vector2qq %
(qq% &

planeOrthoqq& 0
.qq0 1
xqq1 2
,qq2 3

planeOrthoqq4 >
.qq> ?
yqq? @
)qq@ A
;qqA B
point1rr 
=rr 
centerrr 
+rr 
dirrr !
*rr" #
lengthrr$ *
;rr* +
point2ss 
=ss 
centerss 
-ss 
dirss !
*ss" #
lengthss$ *
;ss* +
}tt 	
}uu 
}vv ¢!
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\CoreEditorStyles.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

static 
class 
CoreEditorStyles (
{ 
public		 
static		 
readonly		 
GUIStyle		 '
smallTickbox		( 4
;		4 5
public 
static 
readonly 
GUIStyle '
smallMixedTickbox( 9
;9 :
public 
static 
readonly 
GUIStyle '
miniLabelButton( 7
;7 8
static 
readonly 
	Texture2D !
paneOptionsIconDark" 5
;5 6
static 
readonly 
	Texture2D ! 
paneOptionsIconLight" 6
;6 7
public 
static 
	Texture2D 
paneOptionsIcon  /
{0 1
get2 5
{6 7
return8 >
EditorGUIUtility? O
.O P
	isProSkinP Y
?Z [
paneOptionsIconDark\ o
:p q!
paneOptionsIconLight	r Ü
;
Ü á
}
à â
}
ä ã
static 
CoreEditorStyles 
(  
)  !
{ 	
smallTickbox 
= 
new 
GUIStyle '
(' (
$str( 8
)8 9
;9 :
smallMixedTickbox 
= 
new  #
GUIStyle$ ,
(, -
$str- B
)B C
;C D
var 
transparentTexture "
=# $
new% (
	Texture2D) 2
(2 3
$num3 4
,4 5
$num6 7
,7 8
TextureFormat9 F
.F G
ARGB32G M
,M N
falseO T
)T U
;U V
transparentTexture 
. 
SetPixel '
(' (
$num( )
,) *
$num+ ,
,, -
Color. 3
.3 4
clear4 9
)9 :
;: ;
transparentTexture 
. 
Apply $
($ %
)% &
;& '
miniLabelButton 
= 
new !
GUIStyle" *
(* +
EditorStyles+ 7
.7 8
	miniLabel8 A
)A B
;B C
miniLabelButton 
. 
normal "
=# $
new% (
GUIStyleState) 6
{   

background!! 
=!! 
transparentTexture!! /
,!!/ 0
scaledBackgrounds"" !
=""" #
null""$ (
,""( )
	textColor## 
=## 
Color## !
.##! "
grey##" &
}$$ 
;$$ 
var%% 
activeState%% 
=%% 
new%% !
GUIStyleState%%" /
{&& 

background'' 
='' 
transparentTexture'' /
,''/ 0
scaledBackgrounds(( !
=((" #
null(($ (
,((( )
	textColor)) 
=)) 
Color)) !
.))! "
white))" '
}** 
;** 
miniLabelButton++ 
.++ 
active++ "
=++# $
activeState++% 0
;++0 1
miniLabelButton,, 
.,, 
onNormal,, $
=,,% &
activeState,,' 2
;,,2 3
miniLabelButton-- 
.-- 
onActive-- $
=--% &
activeState--' 2
;--2 3
paneOptionsIconDark// 
=//  !
(//" #
	Texture2D//# ,
)//, -
EditorGUIUtility//- =
.//= >
Load//> B
(//B C
$str//C s
)//s t
;//t u 
paneOptionsIconLight00  
=00! "
(00# $
	Texture2D00$ -
)00- .
EditorGUIUtility00. >
.00> ?
Load00? C
(00C D
$str00D u
)00u v
;00v w
}11 	
}22 
}33 ÖO
•D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeComponentProvider.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
class 	#
VolumeComponentProvider
 !
:" #
	IProvider$ -
{ 
class "
VolumeComponentElement $
:% &
Element' .
{ 	
public 
Type 
type 
; 
public "
VolumeComponentElement )
() *
int* -
level. 3
,3 4
string5 ;
label< A
,A B
TypeC G
typeH L
)L M
{ 
this 
. 
level 
= 
level "
;" #
this 
. 
type 
= 
type  
;  !
content 
= 
new 

GUIContent (
(( )
label) .
). /
;/ 0
} 
} 	
class 
PathNode 
: 
IComparable $
<$ %
PathNode% -
>- .
{ 	
public 
List 
< 
PathNode  
>  !
nodes" '
=( )
new+ .
List/ 3
<3 4
PathNode4 <
>< =
(= >
)> ?
;? @
public 
string 
name 
; 
public 
Type 
type 
; 
public!! 
int!! 
	CompareTo!!  
(!!  !
PathNode!!! )
other!!* /
)!!/ 0
{"" 
return## 
name## 
.## 
	CompareTo## %
(##% &
other##& +
.##+ ,
name##, 0
)##0 1
;##1 2
}$$ 
}%% 	
public'' 
Vector2'' 
position'' 
{''  !
get''" %
;''% &
set''' *
;''* +
}'', -
VolumeProfile)) 
m_Target)) 
;)) %
VolumeComponentListEditor** !
m_TargetEditor**" 0
;**0 1
public,, #
VolumeComponentProvider,, &
(,,& '
VolumeProfile,,' 4
target,,5 ;
,,,; <%
VolumeComponentListEditor,,= V
targetEditor,,W c
),,c d
{-- 	
m_Target.. 
=.. 
target.. 
;.. 
m_TargetEditor// 
=// 
targetEditor// )
;//) *
}00 	
public22 
void22 
CreateComponentTree22 '
(22' (
List22( ,
<22, -
Element22- 4
>224 5
tree226 :
)22: ;
{33 	
tree44 
.44 
Add44 
(44 
new44 
GroupElement44 %
(44% &
$num44& '
,44' (
$str44) ;
)44; <
)44< =
;44= >
var66 
types66 
=66 
VolumeManager66 %
.66% &
instance66& .
.66. /
baseComponentTypes66/ A
;66A B
var77 
rootNode77 
=77 
new77 
PathNode77 '
(77' (
)77( )
;77) *
foreach99 
(99 
var99 
t99 
in99 
types99 #
)99# $
{:: 
if<< 
(<< 
m_Target<< 
.<< 
Has<<  
(<<  !
t<<! "
)<<" #
)<<# $
continue== 
;== 
string?? 
path?? 
=?? 
string?? $
.??$ %
Empty??% *
;??* +
varBB 
attrsBB 
=BB 
tBB 
.BB 
GetCustomAttributesBB 1
(BB1 2
falseBB2 7
)BB7 8
;BB8 9
boolDD 
skipComponentDD "
=DD# $
falseDD% *
;DD* +
foreachEE 
(EE 
varEE 
attrEE !
inEE" $
attrsEE% *
)EE* +
{FF 
varGG 
attrMenuGG  
=GG! "
attrGG# '
asGG( *
VolumeComponentMenuGG+ >
;GG> ?
ifHH 
(HH 
attrMenuHH  
!=HH! #
nullHH$ (
)HH( )
pathII 
=II 
attrMenuII '
.II' (
menuII( ,
;II, -
varKK 
attrDeprecatedKK &
=KK' (
attrKK) -
asKK. 0%
VolumeComponentDeprecatedKK1 J
;KKJ K
ifLL 
(LL 
attrDeprecatedLL &
!=LL' )
nullLL* .
)LL. /
skipComponentMM %
=MM& '
trueMM( ,
;MM, -
}NN 
ifPP 
(PP 
skipComponentPP !
)PP! "
continueQQ 
;QQ 
ifUU 
(UU 
stringUU 
.UU 
IsNullOrEmptyUU (
(UU( )
pathUU) -
)UU- .
)UU. /
pathVV 
=VV 
ObjectNamesVV &
.VV& '
NicifyVariableNameVV' 9
(VV9 :
tVV: ;
.VV; <
NameVV< @
)VV@ A
;VVA B
AddNodeYY 
(YY 
rootNodeYY  
,YY  !
pathYY" &
,YY& '
tYY( )
)YY) *
;YY* +
}ZZ 
Traverse]] 
(]] 
rootNode]] 
,]] 
$num]]  
,]]  !
tree]]" &
)]]& '
;]]' (
}^^ 	
public`` 
bool`` 
	GoToChild`` 
(`` 
Element`` %
element``& -
,``- .
bool``/ 3
addIfComponent``4 B
)``B C
{aa 	
ifbb 
(bb 
elementbb 
isbb "
VolumeComponentElementbb 1
)bb1 2
{cc 
vardd 
edd 
=dd 
(dd "
VolumeComponentElementdd /
)dd/ 0
elementdd0 7
;dd7 8
m_TargetEditoree 
.ee 
AddComponentee +
(ee+ ,
eee, -
.ee- .
typeee. 2
)ee2 3
;ee3 4
returnff 
trueff 
;ff 
}gg 
returnii 
falseii 
;ii 
}jj 	
voidll 
AddNodell 
(ll 
PathNodell 
rootll "
,ll" #
stringll$ *
pathll+ /
,ll/ 0
Typell1 5
typell6 :
)ll: ;
{mm 	
varnn 
currentnn 
=nn 
rootnn 
;nn 
varoo 
partsoo 
=oo 
pathoo 
.oo 
Splitoo "
(oo" #
newoo# &
[oo& '
]oo' (
{oo) *
$charoo+ .
}oo/ 0
,oo0 1
StringSplitOptionsoo2 D
.ooD E
RemoveEmptyEntriesooE W
)ooW X
;ooX Y
foreachqq 
(qq 
varqq 
partqq 
inqq  
partsqq! &
)qq& '
{rr 
varss 
childss 
=ss 
currentss #
.ss# $
nodesss$ )
.ss) *
Findss* .
(ss. /
xss/ 0
=>ss1 3
xss4 5
.ss5 6
namess6 :
==ss; =
partss> B
)ssB C
;ssC D
ifuu 
(uu 
childuu 
==uu 
nulluu !
)uu! "
{vv 
childww 
=ww 
newww 
PathNodeww  (
{ww) *
nameww+ /
=ww0 1
partww2 6
,ww6 7
typeww8 <
=ww= >
typeww? C
}wwD E
;wwE F
currentxx 
.xx 
nodesxx !
.xx! "
Addxx" %
(xx% &
childxx& +
)xx+ ,
;xx, -
}yy 
current{{ 
={{ 
child{{ 
;{{  
}|| 
}}} 	
void 
Traverse 
( 
PathNode 
node #
,# $
int% (
depth) .
,. /
List0 4
<4 5
Element5 <
>< =
tree> B
)B C
{
ÄÄ 	
node
ÅÅ 
.
ÅÅ 
nodes
ÅÅ 
.
ÅÅ 
Sort
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
n
ÉÉ 
in
ÉÉ 
node
ÉÉ "
.
ÉÉ" #
nodes
ÉÉ# (
)
ÉÉ( )
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
n
ÖÖ 
.
ÖÖ 
nodes
ÖÖ 
.
ÖÖ 
Count
ÖÖ !
>
ÖÖ" #
$num
ÖÖ$ %
)
ÖÖ% &
{
ÜÜ 
tree
áá 
.
áá 
Add
áá 
(
áá 
new
áá  
GroupElement
áá! -
(
áá- .
depth
áá. 3
,
áá3 4
n
áá5 6
.
áá6 7
name
áá7 ;
)
áá; <
)
áá< =
;
áá= >
Traverse
àà 
(
àà 
n
àà 
,
àà 
depth
àà  %
+
àà& '
$num
àà( )
,
àà) *
tree
àà+ /
)
àà/ 0
;
àà0 1
}
ââ 
else
ää 
{
ãã 
tree
åå 
.
åå 
Add
åå 
(
åå 
new
åå  $
VolumeComponentElement
åå! 7
(
åå7 8
depth
åå8 =
,
åå= >
n
åå? @
.
åå@ A
name
ååA E
,
ååE F
n
ååG H
.
ååH I
type
ååI M
)
ååM N
)
ååN O
;
ååO P
}
çç 
}
éé 
}
èè 	
}
êê 
}ëë ïb
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Gizmo\HierarchicalSphere.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
publicAA 

classAA 
HierarchicalSphereAA #
{BB 
constCC 
floatCC 
k_HandleSizeCoefCC $
=CC% &
$numCC' ,
;CC, -
staticEE 
MaterialEE 
k_Material_CacheEE (
;EE( )
staticFF 
MaterialFF 

k_MaterialFF "
=>FF# %
(FF& '
k_Material_CacheFF' 7
==FF8 :
nullFF; ?
||FF@ B
k_Material_CacheFFC S
.FFS T
EqualsFFT Z
(FFZ [
nullFF[ _
)FF_ `
?FFa b
(FFc d
k_Material_CacheFFd t
=FFu v
newFFw z
Material	FF{ É
(
FFÉ Ñ
Shader
FFÑ ä
.
FFä ã
Find
FFã è
(
FFè ê
$str
FFê ∞
)
FF∞ ±
)
FF± ≤
)
FF≤ ≥
:
FF¥ µ
k_Material_Cache
FF∂ ∆
)
FF∆ «
;
FF« »
staticGG 
MeshGG 
k_MeshSphere_CacheGG &
;GG& '
staticHH 
MeshHH 
k_MeshSphereHH  
=>HH! #
k_MeshSphere_CacheHH$ 6
==HH7 9
nullHH: >
||HH? A
k_MeshSphere_CacheHHB T
.HHT U
EqualsHHU [
(HH[ \
nullHH\ `
)HH` a
?HHb c
(HHd e
k_MeshSphere_CacheHHe w
=HHx y
	Resources	HHz É
.
HHÉ Ñ 
GetBuiltinResource
HHÑ ñ
<
HHñ ó
Mesh
HHó õ
>
HHõ ú
(
HHú ù
$str
HHù ≠
)
HH≠ Æ
)
HHÆ Ø
:
HH∞ ± 
k_MeshSphere_Cache
HH≤ ƒ
;
HHƒ ≈
MaterialJJ 

m_MaterialJJ 
;JJ 
readonlyKK 
HierarchicalSphereKK #
m_ParentKK$ ,
;KK, -
ColorLL 
m_HandleColorLL 
;LL 
ColorMM 
m_WireframeColorMM 
;MM 
ColorNN "
m_WireframeColorBehindNN $
;NN$ %
MaterialPP 
materialPP 
=>PP 

m_MaterialPP '
==PP( *
nullPP+ /
||PP0 2

m_MaterialPP3 =
.PP= >
EqualsPP> D
(PPD E
nullPPE I
)PPI J
?QQ 
(QQ 

m_MaterialQQ 
=QQ 
newQQ 
MaterialQQ  (
(QQ( )

k_MaterialQQ) 3
)QQ3 4
)QQ4 5
:RR 

m_MaterialRR 
;RR 
publicUU 
Vector3UU 
centerUU 
{UU 
getUU  #
;UU# $
setUU% (
;UU( )
}UU* +
publicXX 
floatXX 
radiusXX 
{XX 
getXX !
;XX! "
setXX# &
;XX& '
}XX( )
public[[ 
Color[[ 
	baseColor[[ 
{\\ 	
get]] 
{]] 
return]] 
material]] !
.]]! "
color]]" '
;]]' (
}]]) *
set^^ 
{__ 
value`` 
.`` 
a`` 
=`` 
$num`` 
/`` 
$num`` "
;``" #
materialaa 
.aa 
coloraa 
=aa  
valueaa! &
;aa& '
valuebb 
.bb 
abb 
=bb 
$numbb 
;bb 
m_HandleColorcc 
=cc 
valuecc  %
;cc% &
valuedd 
.dd 
add 
=dd 
$numdd 
;dd 
m_WireframeColoree  
=ee! "
valueee# (
;ee( )
valueff 
.ff 
aff 
=ff 
$numff 
;ff "
m_WireframeColorBehindgg &
=gg' (
valuegg) .
;gg. /
}hh 
}ii 	
publicnn 
HierarchicalSpherenn !
(nn! "
Colornn" '
	baseColornn( 1
,nn1 2
HierarchicalSpherenn3 E
parentnnF L
=nnM N
nullnnO S
)nnS T
{oo 	
m_Parentpp 
=pp 
parentpp 
;pp 

m_Materialqq 
=qq 
newqq 
Materialqq %
(qq% &

k_Materialqq& 0
)qq0 1
;qq1 2
thisrr 
.rr 
	baseColorrr 
=rr 
	baseColorrr &
;rr& '
}ss 	
publicww 
voidww 
DrawHullww 
(ww 
boolww !
filledww" (
)ww( )
{xx 	
Coloryy 
wireframeColoryy  
=yy! "
m_HandleColoryy# 0
;yy0 1
wireframeColorzz 
.zz 
azz 
=zz 
$numzz #
;zz# $
using{{ 
({{ 
new{{ 
Handles{{ 
.{{ 
DrawingScope{{ +
({{+ ,
m_WireframeColor{{, <
,{{< =
	Matrix4x4{{> G
.{{G H
TRS{{H K
({{K L
({{L M
Vector3{{M T
){{T U
Handles{{U \
.{{\ ]
matrix{{] c
.{{c d
	GetColumn{{d m
({{m n
$num{{n o
){{o p
+{{q r
center{{s y
,{{y z

Quaternion	{{{ Ö
.
{{Ö Ü
identity
{{Ü é
,
{{é è
Vector3
{{ê ó
.
{{ó ò
one
{{ò õ
)
{{õ ú
)
{{ú ù
)
{{ù û
{|| 
if}} 
(}} 
filled}} 
)}} 
{~~ 
material 
. 
SetPass $
($ %
$num% &
)& '
;' (
	Matrix4x4
ÄÄ 

drawMatrix
ÄÄ (
=
ÄÄ) *
	Matrix4x4
ÄÄ+ 4
.
ÄÄ4 5
TRS
ÄÄ5 8
(
ÄÄ8 9
(
ÄÄ9 :
Vector3
ÄÄ: A
)
ÄÄA B
Handles
ÄÄB I
.
ÄÄI J
matrix
ÄÄJ P
.
ÄÄP Q
	GetColumn
ÄÄQ Z
(
ÄÄZ [
$num
ÄÄ[ \
)
ÄÄ\ ]
,
ÄÄ] ^

Quaternion
ÄÄ_ i
.
ÄÄi j
identity
ÄÄj r
,
ÄÄr s
Vector3
ÄÄt {
.
ÄÄ{ |
one
ÄÄ| 
*ÄÄÄ Å
radiusÄÄÇ à
*ÄÄâ ä
$numÄÄã ç
)ÄÄç é
;ÄÄé è
Graphics
ÅÅ 
.
ÅÅ 
DrawMeshNow
ÅÅ (
(
ÅÅ( )
k_MeshSphere
ÅÅ) 5
,
ÅÅ5 6

drawMatrix
ÅÅ7 A
)
ÅÅA B
;
ÅÅB C
}
ÇÇ 
var
ÑÑ 

drawCenter
ÑÑ 
=
ÑÑ  
Vector3
ÑÑ! (
.
ÑÑ( )
zero
ÑÑ) -
;
ÑÑ- .
var
ÖÖ 
viewPlaneNormal
ÖÖ #
=
ÖÖ$ %
Vector3
ÖÖ& -
.
ÖÖ- .
zero
ÖÖ. 2
;
ÖÖ2 3
var
ÜÜ 
drawnRadius
ÜÜ 
=
ÜÜ  !
radius
ÜÜ" (
;
ÜÜ( )
if
áá 
(
áá 
Camera
áá 
.
áá 
current
áá "
.
áá" #
orthographic
áá# /
)
áá/ 0
viewPlaneNormal
àà #
=
àà$ %
Camera
àà& ,
.
àà, -
current
àà- 4
.
àà4 5
	transform
àà5 >
.
àà> ?
forward
àà? F
;
ààF G
else
ââ 
{
ää 
viewPlaneNormal
ãã #
=
ãã$ %
(
ãã& '
Vector3
ãã' .
)
ãã. /
Handles
ãã/ 6
.
ãã6 7
matrix
ãã7 =
.
ãã= >
	GetColumn
ãã> G
(
ããG H
$num
ããH I
)
ããI J
-
ããK L
Camera
ããM S
.
ããS T
current
ããT [
.
ãã[ \
	transform
ãã\ e
.
ããe f
position
ããf n
;
ããn o
var
åå 
sqrDist
åå 
=
åå  !
viewPlaneNormal
åå" 1
.
åå1 2
sqrMagnitude
åå2 >
;
åå> ?
var
çç 
	sqrRadius
çç !
=
çç" #
radius
çç$ *
*
çç+ ,
radius
çç- 3
;
çç3 4
var
éé 
	sqrOffset
éé !
=
éé" #
	sqrRadius
éé$ -
*
éé. /
	sqrRadius
éé0 9
/
éé: ;
sqrDist
éé< C
;
ééC D
var
èè 
insideAmount
èè $
=
èè% &
	sqrOffset
èè' 0
/
èè1 2
	sqrRadius
èè3 <
;
èè< =
if
íí 
(
íí 
insideAmount
íí $
<
íí% &
$num
íí' (
)
íí( )
{
ìì 
drawnRadius
îî #
=
îî$ %
Mathf
îî& +
.
îî+ ,
Sqrt
îî, 0
(
îî0 1
	sqrRadius
îî1 :
-
îî; <
	sqrOffset
îî= F
)
îîF G
;
îîG H

drawCenter
ïï "
-=
ïï# %
(
ïï& '
	sqrRadius
ïï' 0
/
ïï1 2
sqrDist
ïï3 :
)
ïï: ;
*
ïï< =
viewPlaneNormal
ïï> M
;
ïïM N
}
ññ 
}
óó 
Handles
ôô 
.
ôô 
zTest
ôô 
=
ôô 
UnityEngine
ôô  +
.
ôô+ ,
	Rendering
ôô, 5
.
ôô5 6
CompareFunction
ôô6 E
.
ôôE F
	LessEqual
ôôF O
;
ôôO P
Handles
öö 
.
öö 
DrawWireDisc
öö $
(
öö$ %
Vector3
öö% ,
.
öö, -
zero
öö- 1
,
öö1 2
Vector3
öö3 :
.
öö: ;
up
öö; =
,
öö= >
radius
öö? E
)
ööE F
;
ööF G
Handles
õõ 
.
õõ 
DrawWireDisc
õõ $
(
õõ$ %

drawCenter
õõ% /
,
õõ/ 0
viewPlaneNormal
õõ1 @
,
õõ@ A
drawnRadius
õõB M
)
õõM N
;
õõN O
Handles
ùù 
.
ùù 
color
ùù 
=
ùù $
m_WireframeColorBehind
ùù  6
;
ùù6 7
Handles
ûû 
.
ûû 
zTest
ûû 
=
ûû 
UnityEngine
ûû  +
.
ûû+ ,
	Rendering
ûû, 5
.
ûû5 6
CompareFunction
ûû6 E
.
ûûE F
Greater
ûûF M
;
ûûM N
Handles
üü 
.
üü 
DrawWireDisc
üü $
(
üü$ %
Vector3
üü% ,
.
üü, -
zero
üü- 1
,
üü1 2
Vector3
üü3 :
.
üü: ;
up
üü; =
,
üü= >
radius
üü? E
)
üüE F
;
üüF G
Handles
†† 
.
†† 
DrawWireDisc
†† $
(
††$ %

drawCenter
††% /
,
††/ 0
viewPlaneNormal
††1 @
,
††@ A
drawnRadius
††B M
)
††M N
;
††N O
Handles
°° 
.
°° 
zTest
°° 
=
°° 
UnityEngine
°°  +
.
°°+ ,
	Rendering
°°, 5
.
°°5 6
CompareFunction
°°6 E
.
°°E F
Always
°°F L
;
°°L M
}
¢¢ 
}
££ 	
public
¶¶ 
void
¶¶ 

DrawHandle
¶¶ 
(
¶¶ 
)
¶¶  
{
ßß 	
using
®® 
(
®® 
new
®® 
Handles
®® 
.
®® 
DrawingScope
®® +
(
®®+ ,
m_HandleColor
®®, 9
)
®®9 :
)
®®: ;
{
©© 
radius
™™ 
=
™™ 
Handles
™™  
.
™™  !
RadiusHandle
™™! -
(
™™- .

Quaternion
™™. 8
.
™™8 9
identity
™™9 A
,
™™A B
center
™™C I
,
™™I J
radius
™™K Q
,
™™Q R
handlesOnly
™™S ^
:
™™^ _
true
™™` d
)
™™d e
;
™™e f
if
´´ 
(
´´ 
m_Parent
´´ 
!=
´´ 
null
´´ #
)
´´# $
radius
¨¨ 
=
¨¨ 
Mathf
¨¨ "
.
¨¨" #
Min
¨¨# &
(
¨¨& '
radius
¨¨' -
,
¨¨- .
m_Parent
¨¨/ 7
.
¨¨7 8
radius
¨¨8 >
-
¨¨? @
Vector3
¨¨A H
.
¨¨H I
Distance
¨¨I Q
(
¨¨Q R
center
¨¨R X
,
¨¨X Y
m_Parent
¨¨Z b
.
¨¨b c
center
¨¨c i
)
¨¨i j
)
¨¨j k
;
¨¨k l
}
≠≠ 
}
ÆÆ 	
}
ØØ 
}∞∞  ˙
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\Context.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
public 

enum 
	ViewIndex 
{ 
First 
, 
Second 
} 
; 
public 

enum  
ViewCompositionIndex $
{ 
First 
= 
	ViewIndex 
. 
First 
,  
Second 
= 
	ViewIndex 
. 
Second !
,! "
	Composite 
} 
; 
public%% 

enum%% 
Layout%% 
{&& 
FullFirstView(( 
,(( 
FullSecondView** 
,** 
HorizontalSplit,, 
,,, 
VerticalSplit.. 
,.. 
CustomSplit00 
}11 
public66 

enum66 
	SidePanel66 
{77 
None99 
=99 
-99 
$num99 
,99 
Environment;; 
,;; 
Debug== 
,== 
}>> 
publicCC 

enumCC 
TargetDebugViewCC 
{DD 
FirstFF 
,FF 
BothHH 
,HH 
SecondJJ 
}KK 
;KK 
[PP 
SystemPP 
.PP 
SerializablePP 
]PP 
publicQQ 

classQQ 
ContextQQ 
:QQ 
ScriptableObjectQQ +
,QQ+ ,
IDisposableQQ- 8
{RR 
[SS 	
SerializeFieldSS	 
]SS 
stringTT $
m_EnvironmentLibraryGUIDTT '
=TT( )
$strTT* ,
;TT, -
[VV 	
SerializeFieldVV	 
]VV 
boolWW 
m_CameraSyncedWW 
=WW 
trueWW "
;WW" #
EnvironmentLibraryYY  
m_EnvironmentLibraryYY /
;YY/ 0
public\\ 
EnvironmentLibrary\\ !
environmentLibrary\\" 4
{]] 	
get^^ 
{__ 
ifaa 
(aa  
m_EnvironmentLibraryaa (
!=aa) +
nullaa, 0
&&aa1 3
AssetDatabaseaa4 A
.aaA B
ContainsaaB J
(aaJ K 
m_EnvironmentLibraryaaK _
)aa_ `
)aa` a
returnbb  
m_EnvironmentLibrarybb /
;bb/ 0
ifdd 
(dd 
!dd 
Stringdd 
.dd 
IsNullOrEmptydd )
(dd) *$
m_EnvironmentLibraryGUIDdd* B
)ddB C
)ddC D
{ee $
m_EnvironmentLibraryGUIDgg ,
=gg- .
$strgg/ 1
;gg1 2
LookDevhh 
.hh '
currentEnvironmentDisplayerhh 7
.hh7 8
Repainthh8 ?
(hh? @
)hh@ A
;hhA B
}ii 
returnjj 
nulljj 
;jj 
}kk 
privatell 
setll 
=>ll  
m_EnvironmentLibraryll /
=ll0 1
valuell2 7
;ll7 8
}mm 	
[pp 	
fieldpp	 
:pp 
SerializeFieldpp 
]pp 
publicqq 
LayoutContextqq 
layoutqq #
{qq$ %
getqq& )
;qq) *
privateqq+ 2
setqq3 6
;qq6 7
}qq8 9
=qq: ;
newqq< ?
LayoutContextqq@ M
(qqM N
)qqN O
;qqO P
publicvv 
boolvv 
cameraSyncedvv  
{ww 	
getxx 
=>xx 
m_CameraSyncedxx !
;xx! "
setyy 
{zz 
if{{ 
({{ 
m_CameraSynced{{ "
^{{# $
value{{% *
){{* +
{|| 
if}} 
(}} 
value}} 
)}} 
EditorApplication~~ )
.~~) *
update~~* 0
+=~~1 3#
SynchronizeCameraStates~~4 K
;~~K L
else 
EditorApplication
ÄÄ )
.
ÄÄ) *
update
ÄÄ* 0
-=
ÄÄ1 3%
SynchronizeCameraStates
ÄÄ4 K
;
ÄÄK L
m_CameraSynced
ÅÅ "
=
ÅÅ# $
value
ÅÅ% *
;
ÅÅ* +
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 	
[
ÜÜ 	
SerializeField
ÜÜ	 
]
ÜÜ 
ViewContext
áá 
[
áá 
]
áá 
m_Views
áá 
=
áá 
new
áá  #
ViewContext
áá$ /
[
áá/ 0
$num
áá0 1
]
áá1 2
{
àà 	
new
ââ 
ViewContext
ââ 
(
ââ 
)
ââ 
,
ââ 
new
ää 
ViewContext
ää 
(
ää 
)
ää 
}
ãã 	
;
ãã	 

public
êê 
struct
êê 
ViewIterator
êê "
:
êê# $
IEnumerable
êê% 0
<
êê0 1
ViewContext
êê1 <
>
êê< =
{
ëë 	
ViewContext
íí 
[
íí 
]
íí 
m_Views
íí !
;
íí! "
internal
ìì 
ViewIterator
ìì !
(
ìì! "
ViewContext
ìì" -
[
ìì- .
]
ìì. /
views
ìì0 5
)
ìì5 6
=>
îî 
m_Views
îî 
=
îî 
views
îî "
;
îî" #
IEnumerator
öö 
IEnumerable
öö #
.
öö# $
GetEnumerator
öö$ 1
(
öö1 2
)
öö2 3
=>
õõ 
m_Views
õõ 
.
õõ 
GetEnumerator
õõ (
(
õõ( )
)
õõ) *
;
õõ* +
IEnumerator
°° 
<
°° 
ViewContext
°° #
>
°°# $
IEnumerable
°°% 0
<
°°0 1
ViewContext
°°1 <
>
°°< =
.
°°= >
GetEnumerator
°°> K
(
°°K L
)
°°L M
=>
¢¢ 
(
¢¢ 
(
¢¢ 
IEnumerable
¢¢  
<
¢¢  !
ViewContext
¢¢! ,
>
¢¢, -
)
¢¢- .
m_Views
¢¢. 5
)
¢¢5 6
.
¢¢6 7
GetEnumerator
¢¢7 D
(
¢¢D E
)
¢¢E F
;
¢¢F G
}
££ 	
public
®® 
ViewIterator
®® 
viewContexts
®® (
=>
©© 
new
©© 
ViewIterator
©© 
(
©©  
m_Views
©©  '
)
©©' (
;
©©( )
public
∞∞ 
ViewContext
∞∞ 
GetViewContent
∞∞ )
(
∞∞) *
	ViewIndex
∞∞* 3
index
∞∞4 9
)
∞∞9 :
=>
±± 
m_Views
±± 
[
±± 
(
±± 
int
±± 
)
±± 
index
±± !
]
±±! "
;
±±" #
internal
≥≥ 
void
≥≥ 
Init
≥≥ 
(
≥≥ 
)
≥≥ 
{
¥¥ 	,
LoadEnvironmentLibraryFromGUID
µµ *
(
µµ* +
)
µµ+ ,
;
µµ, -
layout
∏∏ 
.
∏∏ 

gizmoState
∏∏ 
.
∏∏ 
Init
∏∏ "
(
∏∏" #
)
∏∏# $
;
∏∏$ %
if
∫∫ 
(
∫∫ 
cameraSynced
∫∫ 
)
∫∫ 
EditorApplication
ªª !
.
ªª! "
update
ªª" (
+=
ªª) +%
SynchronizeCameraStates
ªª, C
;
ªªC D
}
ºº 	
public
¿¿ 
void
¿¿ &
UpdateEnvironmentLibrary
¿¿ ,
(
¿¿, - 
EnvironmentLibrary
¿¿- ?
library
¿¿@ G
)
¿¿G H
{
¡¡ 	&
m_EnvironmentLibraryGUID
¬¬ $
=
¬¬% &
$str
¬¬' )
;
¬¬) * 
environmentLibrary
√√ 
=
√√  
null
√√! %
;
√√% &
if
ƒƒ 
(
ƒƒ 
library
ƒƒ 
==
ƒƒ 
null
ƒƒ 
||
ƒƒ  "
library
ƒƒ# *
.
ƒƒ* +
Equals
ƒƒ+ 1
(
ƒƒ1 2
null
ƒƒ2 6
)
ƒƒ6 7
)
ƒƒ7 8
return
≈≈ 
;
≈≈ &
m_EnvironmentLibraryGUID
«« $
=
««% &
AssetDatabase
««' 4
.
««4 5
AssetPathToGUID
««5 D
(
««D E
AssetDatabase
««E R
.
««R S
GetAssetPath
««S _
(
««_ `
library
««` g
)
««g h
)
««h i
;
««i j 
environmentLibrary
»» 
=
»»  
library
»»! (
;
»»( )
}
…… 	
void
ÀÀ ,
LoadEnvironmentLibraryFromGUID
ÀÀ +
(
ÀÀ+ ,
)
ÀÀ, -
{
ÃÃ 	 
environmentLibrary
ÕÕ 
=
ÕÕ  
null
ÕÕ! %
;
ÕÕ% &
GUID
œœ 

storedGUID
œœ 
;
œœ 
GUID
–– 
.
–– 
TryParse
–– 
(
–– &
m_EnvironmentLibraryGUID
–– 2
,
––2 3
out
––4 7

storedGUID
––8 B
)
––B C
;
––C D
if
—— 
(
—— 

storedGUID
—— 
.
—— 
Empty
——  
(
——  !
)
——! "
)
——" #
return
““ 
;
““ 
string
‘‘ 
path
‘‘ 
=
‘‘ 
AssetDatabase
‘‘ '
.
‘‘' (
GUIDToAssetPath
‘‘( 7
(
‘‘7 8&
m_EnvironmentLibraryGUID
‘‘8 P
)
‘‘P Q
;
‘‘Q R 
environmentLibrary
’’ 
=
’’  
AssetDatabase
’’! .
.
’’. /
LoadAssetAtPath
’’/ >
<
’’> ? 
EnvironmentLibrary
’’? Q
>
’’Q R
(
’’R S
path
’’S W
)
’’W X
;
’’X Y
}
÷÷ 	
public
‹‹ 
void
‹‹ %
SynchronizeCameraStates
‹‹ +
(
‹‹+ ,
	ViewIndex
‹‹, 5
baseCameraState
‹‹6 E
)
‹‹E F
{
›› 	
switch
ﬁﬁ 
(
ﬁﬁ 
baseCameraState
ﬁﬁ #
)
ﬁﬁ# $
{
ﬂﬂ 
case
‡‡ 
	ViewIndex
‡‡ 
.
‡‡ 
First
‡‡ $
:
‡‡$ %
m_Views
·· 
[
·· 
$num
·· 
]
·· 
.
·· 
camera
·· %
.
··% &
SynchronizeFrom
··& 5
(
··5 6
m_Views
··6 =
[
··= >
$num
··> ?
]
··? @
.
··@ A
camera
··A G
)
··G H
;
··H I
break
‚‚ 
;
‚‚ 
case
„„ 
	ViewIndex
„„ 
.
„„ 
Second
„„ %
:
„„% &
m_Views
‰‰ 
[
‰‰ 
$num
‰‰ 
]
‰‰ 
.
‰‰ 
camera
‰‰ %
.
‰‰% &
SynchronizeFrom
‰‰& 5
(
‰‰5 6
m_Views
‰‰6 =
[
‰‰= >
$num
‰‰> ?
]
‰‰? @
.
‰‰@ A
camera
‰‰A G
)
‰‰G H
;
‰‰H I
break
ÂÂ 
;
ÂÂ 
default
ÊÊ 
:
ÊÊ 
throw
ÁÁ 
new
ÁÁ 
System
ÁÁ $
.
ÁÁ$ %
ArgumentException
ÁÁ% 6
(
ÁÁ6 7
$str
ÁÁ7 ]
)
ÁÁ] ^
;
ÁÁ^ _
}
ËË 
}
ÈÈ 	
void
ÎÎ %
SynchronizeCameraStates
ÎÎ $
(
ÎÎ$ %
)
ÎÎ% &
=>
ÏÏ %
SynchronizeCameraStates
ÏÏ &
(
ÏÏ& '
layout
ÏÏ' -
.
ÏÏ- .
lastFocusedView
ÏÏ. =
)
ÏÏ= >
;
ÏÏ> ?
public
ÛÛ 
void
ÛÛ 
SetFocusedCamera
ÛÛ $
(
ÛÛ$ %
	ViewIndex
ÛÛ% .
index
ÛÛ/ 4
)
ÛÛ4 5
=>
ÙÙ 
layout
ÙÙ 
.
ÙÙ 
lastFocusedView
ÙÙ %
=
ÙÙ& '
index
ÙÙ( -
;
ÙÙ- .
private
˜˜ 
bool
˜˜ 
disposedValue
˜˜ "
=
˜˜# $
false
˜˜% *
;
˜˜* +
void
˘˘ 
IDisposable
˘˘ 
.
˘˘ 
Dispose
˘˘  
(
˘˘  !
)
˘˘! "
{
˙˙ 	
if
˚˚ 
(
˚˚ 
!
˚˚ 
disposedValue
˚˚ 
)
˚˚ 
{
¸¸ 
if
˝˝ 
(
˝˝ 
cameraSynced
˝˝  
)
˝˝  !
EditorApplication
˛˛ %
.
˛˛% &
update
˛˛& ,
-=
˛˛- /%
SynchronizeCameraStates
˛˛0 G
;
˛˛G H
disposedValue
ÄÄ 
=
ÄÄ 
true
ÄÄ  $
;
ÄÄ$ %
}
ÅÅ 
}
ÇÇ 	
internal
ÑÑ 
bool
ÑÑ $
HasLibraryAssetChanged
ÑÑ ,
(
ÑÑ, - 
EnvironmentLibrary
ÑÑ- ? 
environmentLibrary
ÑÑ@ R
)
ÑÑR S
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ  
environmentLibrary
ÜÜ "
==
ÜÜ# %
null
ÜÜ& *
)
ÜÜ* +
return
áá 
!
áá 
String
áá 
.
áá 
IsNullOrEmpty
áá ,
(
áá, -&
m_EnvironmentLibraryGUID
áá- E
)
ááE F
;
ááF G
return
ââ &
m_EnvironmentLibraryGUID
ââ +
!=
ââ, .
AssetDatabase
ââ/ <
.
ââ< =
AssetPathToGUID
ââ= L
(
ââL M
AssetDatabase
ââM Z
.
ââZ [
GetAssetPath
ââ[ g
(
ââg h 
environmentLibrary
ââh z
)
ââz {
)
ââ{ |
;
ââ| }
}
ää 	
internal
åå 
void
åå ,
FullReimportEnvironmentLibrary
åå 4
(
åå4 5
)
åå5 6
{
çç 	
if
éé 
(
éé  
environmentLibrary
éé "
==
éé# %
null
éé& *
)
éé* +
return
èè 
;
èè 
string
íí 
libraryPath
íí 
=
íí  
AssetDatabase
íí! .
.
íí. /
GetAssetPath
íí/ ;
(
íí; < 
environmentLibrary
íí< N
)
ííN O
;
ííO P
AssetDatabase
ìì 
.
ìì 
ImportAsset
ìì %
(
ìì% &
AssetDatabase
ìì& 3
.
ìì3 4
GetAssetPath
ìì4 @
(
ìì@ A 
environmentLibrary
ììA S
)
ììS T
,
ììT U 
ImportAssetOptions
ììV h
.
ììh i*
DontDownloadFromCacheServerììi Ñ
|ììÖ Ü"
ImportAssetOptionsììá ô
.ììô ö&
ForceSynchronousImportììö ∞
|ìì± ≤"
ImportAssetOptionsìì≥ ≈
.ìì≈ ∆
ForceUpdateìì∆ —
|ìì“ ”"
ImportAssetOptionsìì‘ Ê
.ììÊ Á
ImportRecursiveììÁ ˆ
)ììˆ ˜
;ìì˜ ¯&
UpdateEnvironmentLibrary
îî $
(
îî$ %
AssetDatabase
îî% 2
.
îî2 3
LoadAssetAtPath
îî3 B
<
îîB C 
EnvironmentLibrary
îîC U
>
îîU V
(
îîV W
libraryPath
îîW b
)
îîb c
)
îîc d
;
îîd e
EditorUtility
ïï 
.
ïï 
SetDirty
ïï "
(
ïï" # 
environmentLibrary
ïï# 5
)
ïï5 6
;
ïï6 7
}
ññ 	
}
óó 
[
úú 
System
úú 
.
úú 
Serializable
úú 
]
úú 
public
ùù 

class
ùù 
LayoutContext
ùù 
{
ûû 
public
†† 
Layout
†† 

viewLayout
††  
;
††  !
public
¢¢ 
	ViewIndex
¢¢ 
lastFocusedView
¢¢ (
=
¢¢) *
	ViewIndex
¢¢+ 4
.
¢¢4 5
First
¢¢5 :
;
¢¢: ;
public
§§ 
	SidePanel
§§ 
showedSidePanel
§§ (
;
§§( )
[
¶¶ 	
NonSerialized
¶¶	 
]
¶¶ 
public
ßß 
TargetDebugView
ßß 
debugPanelSource
ßß /
=
ßß0 1
TargetDebugView
ßß2 A
.
ßßA B
Both
ßßB F
;
ßßF G
[
©© 	
SerializeField
©©	 
]
©© 
internal
™™ "
ComparisonGizmoState
™™ %

gizmoState
™™& 0
=
™™1 2
new
™™3 6"
ComparisonGizmoState
™™7 K
(
™™K L
)
™™L M
;
™™M N
internal
¨¨ 
bool
¨¨ 
isSimpleView
¨¨ "
=>
¨¨# %

viewLayout
¨¨& 0
==
¨¨1 3
Layout
¨¨4 :
.
¨¨: ;
FullFirstView
¨¨; H
||
¨¨I K

viewLayout
¨¨L V
==
¨¨W Y
Layout
¨¨Z `
.
¨¨` a
FullSecondView
¨¨a o
;
¨¨o p
internal
≠≠ 
bool
≠≠ 
isMultiView
≠≠ !
=>
≠≠" $

viewLayout
≠≠% /
==
≠≠0 2
Layout
≠≠3 9
.
≠≠9 :
HorizontalSplit
≠≠: I
||
≠≠J L

viewLayout
≠≠M W
==
≠≠X Z
Layout
≠≠[ a
.
≠≠a b
VerticalSplit
≠≠b o
;
≠≠o p
internal
ÆÆ 
bool
ÆÆ 
isCombinedView
ÆÆ $
=>
ÆÆ% '

viewLayout
ÆÆ( 2
==
ÆÆ3 5
Layout
ÆÆ6 <
.
ÆÆ< =
CustomSplit
ÆÆ= H
;
ÆÆH I
}
ØØ 
[
¥¥ 
System
¥¥ 
.
¥¥ 
Serializable
¥¥ 
]
¥¥ 
public
µµ 

class
µµ 
ViewContext
µµ 
{
∂∂ 
[
∏∏ 	
field
∏∏	 
:
∏∏ 
SerializeField
∏∏ 
]
∏∏ 
public
ππ 
CameraState
ππ 
camera
ππ !
{
ππ" #
get
ππ$ '
;
ππ' (
private
ππ) 0
set
ππ1 4
;
ππ4 5
}
ππ6 7
=
ππ8 9
new
ππ: =
CameraState
ππ> I
(
ππI J
)
ππJ K
;
ππK L
public
ºº 
DebugContext
ºº 
debug
ºº !
{
ºº" #
get
ºº$ '
;
ºº' (
private
ºº) 0
set
ºº1 4
;
ºº4 5
}
ºº6 7
=
ºº8 9
new
ºº: =
DebugContext
ºº> J
(
ººJ K
)
ººK L
;
ººL M
[
øø 	
SerializeField
øø	 
]
øø 
string
¿¿ 
m_EnvironmentGUID
¿¿  
=
¿¿! "
$str
¿¿# %
;
¿¿% &
public
∆∆ 
bool
∆∆ 
hasEnvironment
∆∆ "
=>
∆∆# %
!
∆∆& '
String
∆∆' -
.
∆∆- .
IsNullOrEmpty
∆∆. ;
(
∆∆; <
m_EnvironmentGUID
∆∆< M
)
∆∆M N
;
∆∆N O
public
…… 
Environment
…… 
environment
…… &
{
……' (
get
……) ,
;
……, -
private
……. 5
set
……6 9
;
……9 :
}
……; <
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
string
ÃÃ #
viewedObjectAssetGUID
ÃÃ $
=
ÃÃ% &
$str
ÃÃ' )
;
ÃÃ) *
[
—— 	
SerializeField
——	 
]
—— 
int
““ -
viewedObjecHierarchytInstanceID
““ +
;
““+ ,
public
ÿÿ 
bool
ÿÿ 
hasViewedObject
ÿÿ #
=>
ÿÿ$ &
!
ŸŸ 
String
ŸŸ 
.
ŸŸ 
IsNullOrEmpty
ŸŸ !
(
ŸŸ! "#
viewedObjectAssetGUID
ŸŸ" 7
)
ŸŸ7 8
||
⁄⁄ -
viewedObjecHierarchytInstanceID
⁄⁄ .
!=
⁄⁄/ 1
$num
⁄⁄2 3
;
⁄⁄3 4
public
›› 

GameObject
›› #
viewedObjectReference
›› /
{
››0 1
get
››2 5
;
››5 6
private
››7 >
set
››? B
;
››B C
}
››D E
public
‰‰ 

GameObject
‰‰ %
viewedInstanceInPreview
‰‰ 1
{
‰‰2 3
get
‰‰4 7
;
‰‰7 8
internal
‰‰9 A
set
‰‰B E
;
‰‰E F
}
‰‰G H
public
ÏÏ 
void
ÏÏ 
UpdateEnvironment
ÏÏ %
(
ÏÏ% &
UnityEngine
ÏÏ& 1
.
ÏÏ1 2
Object
ÏÏ2 8'
environmentOrCubemapAsset
ÏÏ9 R
)
ÏÏR S
{
ÌÌ 	
m_EnvironmentGUID
ÓÓ 
=
ÓÓ 
$str
ÓÓ  "
;
ÓÓ" #
environment
ÔÔ 
=
ÔÔ 
null
ÔÔ 
;
ÔÔ 
if
 
(
 '
environmentOrCubemapAsset
 )
==
* ,
null
- 1
||
2 4'
environmentOrCubemapAsset
5 N
.
N O
Equals
O U
(
U V
null
V Z
)
Z [
)
[ \
return
ÒÒ 
;
ÒÒ 
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 
(
ÛÛ '
environmentOrCubemapAsset
ÛÛ +
is
ÛÛ, .
Environment
ÛÛ/ :
)
ÛÛ: ;
&&
ÙÙ 
!
ÙÙ 
(
ÙÙ '
environmentOrCubemapAsset
ÙÙ .
is
ÙÙ/ 1
Cubemap
ÙÙ2 9
)
ÙÙ9 :
)
ÙÙ: ;
throw
ıı 
new
ıı 
System
ıı  
.
ıı  !
ArgumentException
ıı! 2
(
ıı2 3
$strıı3 Å
)ııÅ Ç
;ııÇ É
string
˜˜ 
GUID
˜˜ 
;
˜˜ 
long
¯¯ 
localIDInFile
¯¯ 
;
¯¯ 
AssetDatabase
˘˘ 
.
˘˘ .
 TryGetGUIDAndLocalFileIdentifier
˘˘ :
(
˘˘: ;'
environmentOrCubemapAsset
˘˘; T
,
˘˘T U
out
˘˘V Y
GUID
˘˘Z ^
,
˘˘^ _
out
˘˘` c
localIDInFile
˘˘d q
)
˘˘q r
;
˘˘r s
m_EnvironmentGUID
˙˙ 
=
˙˙ 
$"
˙˙  "
{
˙˙" #
GUID
˙˙# '
}
˙˙' (
,
˙˙( )
{
˙˙) *
localIDInFile
˙˙* 7
}
˙˙7 8
"
˙˙8 9
;
˙˙9 :
if
¸¸ 
(
¸¸ '
environmentOrCubemapAsset
¸¸ )
is
¸¸* ,
Environment
¸¸- 8
)
¸¸8 9
environment
˝˝ 
=
˝˝ '
environmentOrCubemapAsset
˝˝ 7
as
˝˝8 :
Environment
˝˝; F
;
˝˝F G
else
˛˛ 
environment
ˇˇ 
=
ˇˇ 
Environment
ˇˇ )
.
ˇˇ) */
!GetTemporaryEnvironmentForCubemap
ˇˇ* K
(
ˇˇK L'
environmentOrCubemapAsset
ˇˇL e
as
ˇˇf h
Cubemap
ˇˇi p
)
ˇˇp q
;
ˇˇq r
}
ÄÄ 	
void
ÇÇ %
LoadEnvironmentFromGUID
ÇÇ $
(
ÇÇ$ %
)
ÇÇ% &
{
ÉÉ 	
environment
ÑÑ 
=
ÑÑ 
null
ÑÑ 
;
ÑÑ 
GUID
ÜÜ 

storedGUID
ÜÜ 
;
ÜÜ 
string
áá 
[
áá 
]
áá "
GUIDAndLocalIDInFile
áá )
=
áá* +
m_EnvironmentGUID
áá, =
.
áá= >
Split
áá> C
(
ááC D
new
ááD G
[
ááG H
]
ááH I
{
ááJ K
$char
ááL O
}
ááP Q
)
ááQ R
;
ááR S
GUID
àà 
.
àà 
TryParse
àà 
(
àà "
GUIDAndLocalIDInFile
àà .
[
àà. /
$num
àà/ 0
]
àà0 1
,
àà1 2
out
àà3 6

storedGUID
àà7 A
)
ààA B
;
ààB C
if
ââ 
(
ââ 

storedGUID
ââ 
.
ââ 
Empty
ââ  
(
ââ  !
)
ââ! "
)
ââ" #
return
ää 
;
ää 
long
ãã 
localIDInFile
ãã 
=
ãã  "
GUIDAndLocalIDInFile
ãã! 5
.
ãã5 6
Length
ãã6 <
<
ãã= >
$num
ãã? @
?
ããA B
$num
ããC E
:
ããF G
long
ããH L
.
ããL M
Parse
ããM R
(
ããR S"
GUIDAndLocalIDInFile
ããS g
[
ããg h
$num
ããh i
]
ããi j
)
ããj k
;
ããk l
string
çç 
path
çç 
=
çç 
AssetDatabase
çç '
.
çç' (
GUIDToAssetPath
çç( 7
(
çç7 8"
GUIDAndLocalIDInFile
çç8 L
[
ççL M
$num
ççM N
]
ççN O
)
ççO P
;
ççP Q
Type
èè 
	savedType
èè 
=
èè 
AssetDatabase
èè *
.
èè* +$
GetMainAssetTypeAtPath
èè+ A
(
èèA B
path
èèB F
)
èèF G
;
èèG H
if
êê 
(
êê 
	savedType
êê 
==
êê 
typeof
êê #
(
êê# $ 
EnvironmentLibrary
êê$ 6
)
êê6 7
)
êê7 8
{
ëë 
object
íí 
[
íí 
]
íí 
loaded
íí 
=
íí  !
AssetDatabase
íí" /
.
íí/ 0!
LoadAllAssetsAtPath
íí0 C
(
ííC D
path
ííD H
)
ííH I
;
ííI J
for
ìì 
(
ìì 
int
ìì 
i
ìì 
=
ìì 
$num
ìì 
;
ìì 
i
ìì  !
<
ìì" #
loaded
ìì$ *
.
ìì* +
Length
ìì+ 1
;
ìì1 2
++
ìì3 5
i
ìì5 6
)
ìì6 7
{
îî 
string
ïï 
garbage
ïï "
;
ïï" #
long
ññ 
testedLocalIndex
ññ )
;
ññ) *
if
óó 
(
óó 
AssetDatabase
óó %
.
óó% &.
 TryGetGUIDAndLocalFileIdentifier
óó& F
(
óóF G
(
óóG H
UnityEngine
óóH S
.
óóS T
Object
óóT Z
)
óóZ [
loaded
óó[ a
[
óóa b
i
óób c
]
óóc d
,
óód e
out
óóf i
garbage
óój q
,
óóq r
out
óós v
testedLocalIndexóów á
)óóá à
&&
òò 
testedLocalIndex
òò +
==
òò, .
localIDInFile
òò/ <
)
òò< =
{
ôô 
environment
öö #
=
öö$ %
loaded
öö& ,
[
öö, -
i
öö- .
]
öö. /
as
öö0 2
Environment
öö3 >
;
öö> ?
break
õõ 
;
õõ 
}
úú 
}
ùù 
}
ûû 
else
üü 
if
üü 
(
üü 
	savedType
üü 
==
üü !
typeof
üü" (
(
üü( )
Environment
üü) 4
)
üü4 5
)
üü5 6
environment
†† 
=
†† 
AssetDatabase
†† +
.
††+ ,
LoadAssetAtPath
††, ;
<
††; <
Environment
††< G
>
††G H
(
††H I
path
††I M
)
††M N
;
††N O
else
°° 
if
°° 
(
°° 
	savedType
°° 
==
°° !
typeof
°°" (
(
°°( )
Cubemap
°°) 0
)
°°0 1
)
°°1 2
{
¢¢ 
Cubemap
££ 
cubemap
££ 
=
££  !
AssetDatabase
££" /
.
££/ 0
LoadAssetAtPath
££0 ?
<
££? @
Cubemap
££@ G
>
££G H
(
££H I
path
££I M
)
££M N
;
££N O
environment
§§ 
=
§§ 
Environment
§§ )
.
§§) */
!GetTemporaryEnvironmentForCubemap
§§* K
(
§§K L
cubemap
§§L S
)
§§S T
;
§§T U
}
•• 
}
¶¶ 	
public
™™ 
void
™™  
UpdateViewedObject
™™ &
(
™™& '

GameObject
™™' 1
viewedObject
™™2 >
)
™™> ?
{
´´ 	#
viewedObjectAssetGUID
¨¨ !
=
¨¨" #
$str
¨¨$ &
;
¨¨& '-
viewedObjecHierarchytInstanceID
≠≠ +
=
≠≠, -
$num
≠≠. /
;
≠≠/ 0#
viewedObjectReference
ÆÆ !
=
ÆÆ" #
null
ÆÆ$ (
;
ÆÆ( )
if
ØØ 
(
ØØ 
viewedObject
ØØ 
==
ØØ 
null
ØØ  $
||
ØØ% '
viewedObject
ØØ( 4
.
ØØ4 5
Equals
ØØ5 ;
(
ØØ; <
null
ØØ< @
)
ØØ@ A
)
ØØA B
return
∞∞ 
;
∞∞ 
bool
≤≤ 
fromHierarchy
≤≤ 
=
≤≤  
viewedObject
≤≤! -
.
≤≤- .
scene
≤≤. 3
.
≤≤3 4
IsValid
≤≤4 ;
(
≤≤; <
)
≤≤< =
;
≤≤= >
if
≥≥ 
(
≥≥ 
fromHierarchy
≥≥ 
)
≥≥ -
viewedObjecHierarchytInstanceID
¥¥ /
=
¥¥0 1
viewedObject
¥¥2 >
.
¥¥> ?
GetInstanceID
¥¥? L
(
¥¥L M
)
¥¥M N
;
¥¥N O
else
µµ #
viewedObjectAssetGUID
∂∂ %
=
∂∂& '
AssetDatabase
∂∂( 5
.
∂∂5 6
AssetPathToGUID
∂∂6 E
(
∂∂E F
AssetDatabase
∂∂F S
.
∂∂S T
GetAssetPath
∂∂T `
(
∂∂` a
viewedObject
∂∂a m
)
∂∂m n
)
∂∂n o
;
∂∂o p#
viewedObjectReference
∑∑ !
=
∑∑" #
viewedObject
∑∑$ 0
;
∑∑0 1
}
∏∏ 	
void
ªª 
LoadViewedObject
ªª 
(
ªª 
)
ªª 
{
ºº 	#
viewedObjectReference
ΩΩ !
=
ΩΩ" #
null
ΩΩ$ (
;
ΩΩ( )
GUID
øø 

storedGUID
øø 
;
øø 
GUID
¿¿ 
.
¿¿ 
TryParse
¿¿ 
(
¿¿ #
viewedObjectAssetGUID
¿¿ /
,
¿¿/ 0
out
¿¿1 4

storedGUID
¿¿5 ?
)
¿¿? @
;
¿¿@ A
if
¡¡ 
(
¡¡ 
!
¡¡ 

storedGUID
¡¡ 
.
¡¡ 
Empty
¡¡ !
(
¡¡! "
)
¡¡" #
)
¡¡# $
{
¬¬ 
string
√√ 
path
√√ 
=
√√ 
AssetDatabase
√√ +
.
√√+ ,
GUIDToAssetPath
√√, ;
(
√√; <#
viewedObjectAssetGUID
√√< Q
)
√√Q R
;
√√R S#
viewedObjectReference
ƒƒ %
=
ƒƒ& '
AssetDatabase
ƒƒ( 5
.
ƒƒ5 6
LoadAssetAtPath
ƒƒ6 E
<
ƒƒE F

GameObject
ƒƒF P
>
ƒƒP Q
(
ƒƒQ R
path
ƒƒR V
)
ƒƒV W
;
ƒƒW X
}
≈≈ 
else
∆∆ 
if
∆∆ 
(
∆∆ -
viewedObjecHierarchytInstanceID
∆∆ 4
!=
∆∆5 7
$num
∆∆8 9
)
∆∆9 :
{
«« #
viewedObjectReference
»» %
=
»»& '
EditorUtility
»»( 5
.
»»5 6 
InstanceIDToObject
»»6 H
(
»»H I-
viewedObjecHierarchytInstanceID
»»I h
)
»»h i
as
»»j l

GameObject
»»m w
;
»»w x
}
…… 
}
   	
internal
ÃÃ 
void
ÃÃ 
LoadAll
ÃÃ 
(
ÃÃ 
bool
ÃÃ "#
reloadWithTemporaryID
ÃÃ# 8
)
ÃÃ8 9
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
!
ŒŒ #
reloadWithTemporaryID
ŒŒ &
)
ŒŒ& ')
CleanTemporaryObjectIndexes
œœ +
(
œœ+ ,
)
œœ, -
;
œœ- .%
LoadEnvironmentFromGUID
–– #
(
––# $
)
––$ %
;
––% &
LoadViewedObject
—— 
(
—— 
)
—— 
;
—— 
}
““ 	
internal
‘‘ 
void
‘‘ )
CleanTemporaryObjectIndexes
‘‘ 1
(
‘‘1 2
)
‘‘2 3
=>
’’ -
viewedObjecHierarchytInstanceID
’’ .
=
’’/ 0
$num
’’1 2
;
’’2 3
public
ÿÿ 
void
ÿÿ 
ResetCameraState
ÿÿ $
(
ÿÿ$ %
)
ÿÿ% &
=>
ŸŸ 
camera
ŸŸ 
.
ŸŸ 
Reset
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
public
‡‡ 

class
‡‡ 
DebugContext
‡‡ 
{
·· 
public
„„ 
bool
„„ 
shadow
„„ 
=
„„ 
true
„„ !
;
„„! "
public
ÊÊ 
int
ÊÊ 
viewMode
ÊÊ 
=
ÊÊ 
-
ÊÊ 
$num
ÊÊ  
;
ÊÊ  !
}
 
}ÒÒ “@
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\CameraState.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
public		 

	interface		 
ICameraUpdater		 #
{

 
void 
UpdateCamera 
( 
Camera  
camera! '
)' (
;( )
} 
[ 
System 
. 
Serializable 
] 
public 

class 
CameraState 
: 
ICameraUpdater -
{ 
private 
static 
readonly 

Quaternion  *
k_DefaultRotation+ <
== >

Quaternion? I
.I J
LookRotationJ V
(V W
newW Z
Vector3[ b
(b c
$numc g
,g h
$numi m
,m n
$numo s
)s t
)t u
;u v
private 
const 
float 
k_DefaultViewSize -
=. /
$num0 3
;3 4
private 
static 
readonly 
Vector3  '
k_DefaultPivot( 6
=7 8
Vector39 @
.@ A
zeroA E
;E F
private 
const 
float 
k_DefaultFoV (
=) *
$num+ .
;. /
private 
const 
float 
k_NearFactor (
=) *
$num+ 4
;4 5
private 
const 
float 
k_MaxFar $
=% &
$num' +
;+ ,
[ 	
field	 
: 
SerializeField 
] 
public 
Vector3 
pivot 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
k_DefaultPivot- ;
;; <
["" 	
field""	 
:"" 
SerializeField"" 
]"" 
public## 

Quaternion## 
rotation## "
{### $
get##% (
;##( )
set##* -
;##- .
}##/ 0
=##1 2
k_DefaultRotation##3 D
;##D E
[&& 	
field&&	 
:&& 
SerializeField&& 
]&& 
public'' 
float'' 
viewSize'' 
{'' 
get''  #
;''# $
set''% (
;''( )
}''* +
='', -
k_DefaultViewSize''. ?
;''? @
public** 
float** 
distanceFromPivot** &
=>.. 
viewSize.. 
;.. 
public11 
Vector311 
position11 
=>22 
pivot22 
+22 
rotation22 
*22  !
new22" %
Vector322& -
(22- .
$num22. /
,22/ 0
$num221 2
,222 3
-224 5
distanceFromPivot225 F
)22F G
;22G H
public55 
float55 
fieldOfView55  
=>55! #
k_DefaultFoV55$ 0
;550 1
public88 
float88 
farClip88 
=>88 
Mathf88  %
.88% &
Max88& )
(88) *
k_MaxFar88* 2
,882 3
$num884 5
*886 7
k_MaxFar888 @
*88A B
viewSize88C K
)88K L
;88L M
public;; 
float;; 
nearClip;; 
=>;;  
farClip;;! (
*;;) *
k_NearFactor;;+ 7
;;;7 8
public>> 
Vector3>> 
forward>> 
=>>> !
rotation>>" *
*>>+ ,
Vector3>>- 4
.>>4 5
forward>>5 <
;>>< =
publicAA 
Vector3AA 
upAA 
=>AA 
rotationAA %
*AA& '
Vector3AA( /
.AA/ 0
upAA0 2
;AA2 3
publicDD 
Vector3DD 
rightDD 
=>DD 
rotationDD  (
*DD) *
Vector3DD+ 2
.DD2 3
rightDD3 8
;DD8 9
internalFF 
Vector3FF 5
)QuickReprojectionWithFixedFOVOnPivotPlaneFF B
(FFB C
RectFFC G
screenFFH N
,FFN O
Vector2FFP W
screenPointFFX c
)FFc d
{GG 	
ifHH 
(HH 
screenHH 
.HH 
heightHH 
==HH  
$numHH! "
)HH" #
returnII 
Vector3II 
.II 
zeroII #
;II# $
floatJJ 
aspectJJ 
=JJ 
screenJJ !
.JJ! "
widthJJ" '
/JJ( )
screenJJ* 0
.JJ0 1
heightJJ1 7
;JJ7 8
floatLL 
verticalDistanceLL "
=LL# $
distanceFromPivotLL% 6
;LL6 7
Vector2MM !
normalizedScreenPointMM )
=MM* +
newMM, /
Vector2MM0 7
(MM7 8
screenPointNN 
.NN 
xNN 
*NN 
$numNN  "
/NN# $
screenNN% +
.NN+ ,
widthNN, 1
-NN2 3
$numNN4 6
,NN6 7
screenPointOO 
.OO 
yOO 
*OO 
$numOO  "
/OO# $
screenOO% +
.OO+ ,
heightOO, 2
-OO3 4
$numOO5 7
)OO7 8
;OO8 9
returnPP 
pivotPP 
-QQ 
upQQ 
*QQ 
verticalDistanceQQ '
*QQ( )!
normalizedScreenPointQQ* ?
.QQ? @
yQQ@ A
-RR 
rightRR 
*RR 
verticalDistanceRR *
*RR+ ,
aspectRR- 3
*RR4 5!
normalizedScreenPointRR6 K
.RRK L
xRRL M
;RRM N
}SS 	
internalVV 
Vector3VV %
QuickProjectPivotInScreenVV 2
(VV2 3
RectVV3 7
screenVV8 >
)VV> ?
=>WW 
newWW 
Vector3WW 
(WW 
screenWW !
.WW! "
widthWW" '
*WW( )
$numWW* -
,WW- .
screenWW/ 5
.WW5 6
heightWW6 <
*WW= >
$numWW? B
,WWB C
distanceFromPivotWWD U
)WWU V
;WWV W
public]] 
void]] 
UpdateCamera]]  
(]]  !
Camera]]! '
camera]]( .
)]]. /
{^^ 	
camera__ 
.__ 
	transform__ 
.__ 
rotation__ %
=__& '
rotation__( 0
;__0 1
camera`` 
.`` 
	transform`` 
.`` 
position`` %
=``& '
position``( 0
;``0 1
cameraaa 
.aa 
nearClipPlaneaa  
=aa! "
nearClipaa# +
;aa+ ,
camerabb 
.bb 
farClipPlanebb 
=bb  !
farClipbb" )
;bb) *
cameracc 
.cc 
fieldOfViewcc 
=cc  
fieldOfViewcc! ,
;cc, -
}dd 	
publicii 
voidii 
Resetii 
(ii 
)ii 
{jj 	
pivotkk 
=kk 
k_DefaultPivotkk "
;kk" #
rotationll 
=ll 
k_DefaultRotationll (
;ll( )
viewSizemm 
=mm 
k_DefaultViewSizemm (
;mm( )
}nn 	
internalpp 
voidpp 
SynchronizeFrompp %
(pp% &
CameraStatepp& 1
otherpp2 7
)pp7 8
{qq 	
pivotrr 
=rr 
otherrr 
.rr 
pivotrr 
;rr  
rotationss 
=ss 
otherss 
.ss 
rotationss %
;ss% &
viewSizett 
=tt 
othertt 
.tt 
viewSizett %
;tt% &
}uu 	
}vv 
}ww ØÆ
´D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\ShaderGenerator\ShaderTypeGeneration.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{		 
internal

 
class

 
ShaderTypeGenerator

 &
{ 
public 
ShaderTypeGenerator "
(" #
Type# '
type( ,
,, -
GenerateHLSL. :
attr; ?
)? @
{ 	
this 
. 
type 
= 
type 
; 
this 
. 
attr 
= 
attr 
; 
debugCounter 
= 
$num 
; 
} 	
enum 
PrimitiveType 
{ 	
Float 
, 
Int 
, 
UInt 
, 
Bool "
," #
Half$ (
,( )
Real* .
} 	
;	 

static 
string 
PrimitiveToString '
(' (
PrimitiveType( 5
type6 :
,: ;
int< ?
rows@ D
,D E
intF I
colsJ N
)N O
{ 	
string 
text 
= 
$str 
; 
switch 
( 
type 
) 
{ 
case 
PrimitiveType "
." #
Float# (
:( )
text 
= 
$str "
;" #
break 
; 
case   
PrimitiveType   "
.  " #
Int  # &
:  & '
text!! 
=!! 
$str!!  
;!!  !
break"" 
;"" 
case## 
PrimitiveType## "
.##" #
UInt### '
:##' (
text$$ 
=$$ 
$str$$ !
;$$! "
break%% 
;%% 
case&& 
PrimitiveType&& "
.&&" #
Bool&&# '
:&&' (
text'' 
='' 
$str'' !
;''! "
break(( 
;(( 
case)) 
PrimitiveType)) "
.))" #
Half))# '
:))' (
text** 
=** 
$str** !
;**! "
break++ 
;++ 
case,, 
PrimitiveType,, "
.,," #
Real,,# '
:,,' (
text-- 
=-- 
$str-- !
;--! "
break.. 
;.. 
}// 
if11 
(11 
rows11 
>11 
$num11 
)11 
{22 
text33 
+=33 
rows33 
.33 
ToString33 %
(33% &
)33& '
;33' (
if44 
(44 
cols44 
>44 
$num44 
)44 
{55 
text66 
+=66 
$str66 
+66  !
cols66" &
.66& '
ToString66' /
(66/ 0
)660 1
;661 2
}77 
}88 
return:: 
text:: 
;:: 
};; 	
class== 
Accessor== 
{>> 	
public?? 
Accessor?? 
(?? 
PrimitiveType?? )
type??* .
,??. /
string??0 6
name??7 ;
,??; <
int??= @
rows??A E
,??E F
int??G J
cols??K O
)??O P
{@@ 
thisAA 
.AA 
nameAA 
=AA 
nameAA  
;AA  !
thisBB 
.BB 
fullTypeBB 
=BB 
PrimitiveToStringBB  1
(BB1 2
typeBB2 6
,BB6 7
rowsBB8 <
,BB< =
colsBB> B
)BBB C
;BBC D
fieldCC 
=CC 
nameCC 
;CC 
}DD 
AccessorFF 
(FF 
stringFF 
nameFF  
,FF  !
stringFF" (
swizzleFF) 0
,FF0 1
stringFF2 8
fieldFF9 >
,FF> ?
stringFF@ F
fullTypeFFG O
)FFO P
{GG 
thisHH 
.HH 
nameHH 
=HH 
nameHH  
;HH  !
thisII 
.II 
fieldII 
=II 
fieldII "
;II" #
thisJJ 
.JJ 
fullTypeJJ 
=JJ 
fullTypeJJ  (
;JJ( )
}KK 
publicMM 
stringMM 
nameMM 
;MM 
publicNN 
stringNN 
fieldNN 
;NN  
publicOO 
stringOO 
fullTypeOO "
;OO" #
}PP 	
;PP	 

classRR 
ShaderFieldInfoRR 
:RR 

ICloneableRR  *
{SS 	
publicTT 
ShaderFieldInfoTT "
(TT" #
PrimitiveTypeTT# 0
typeTT1 5
,TT5 6
stringTT7 =
nameTT> B
,TTB C
intTTD G
rowsTTH L
,TTL M
intTTN Q
colsTTR V
,TTV W
intTTX [
	arraySizeTT\ e
)TTe f
{UU 
thisVV 
.VV 
typeVV 
=VV 
typeVV  
;VV  !
thisWW 
.WW 
nameWW 
=WW 
originalNameWW (
=WW) *
nameWW+ /
;WW/ 0
thisXX 
.XX 
rowsXX 
=XX 
rowsXX  
;XX  !
thisYY 
.YY 
colsYY 
=YY 
colsYY  
;YY  !
thisZZ 
.ZZ 
	arraySizeZZ 
=ZZ  
	arraySizeZZ! *
;ZZ* +
this[[ 
.[[ 
comment[[ 
=[[ 
$str[[ !
;[[! "
swizzleOffset\\ 
=\\ 
$num\\  !
;\\! "
packed]] 
=]] 
false]] 
;]] 
accessor^^ 
=^^ 
new^^ 
Accessor^^ '
(^^' (
type^^( ,
,^^, -
name^^. 2
,^^2 3
rows^^4 8
,^^8 9
cols^^: >
)^^> ?
;^^? @
}__ 
publicaa 
ShaderFieldInfoaa "
(aa" #
PrimitiveTypeaa# 0
typeaa1 5
,aa5 6
stringaa7 =
nameaa> B
,aaB C
intaaD G
rowsaaH L
,aaL M
intaaN Q
colsaaR V
,aaV W
intaaX [
	arraySizeaa\ e
,aae f
stringaag m
commentaan u
)aau v
{bb 
thiscc 
.cc 
typecc 
=cc 
typecc  
;cc  !
thisdd 
.dd 
namedd 
=dd 
originalNamedd (
=dd) *
namedd+ /
;dd/ 0
thisee 
.ee 
rowsee 
=ee 
rowsee  
;ee  !
thisff 
.ff 
colsff 
=ff 
colsff  
;ff  !
thisgg 
.gg 
	arraySizegg 
=gg  
	arraySizegg! *
;gg* +
thishh 
.hh 
commenthh 
=hh 
commenthh &
;hh& '
swizzleOffsetii 
=ii 
$numii  !
;ii! "
packedjj 
=jj 
falsejj 
;jj 
accessorkk 
=kk 
newkk 
Accessorkk '
(kk' (
typekk( ,
,kk, -
namekk. 2
,kk2 3
rowskk4 8
,kk8 9
colskk: >
)kk> ?
;kk? @
}ll 
publicnn 
stringnn 

typeStringnn $
{oo 
getpp 
{pp 
returnpp 
PrimitiveToStringpp .
(pp. /
typepp/ 3
,pp3 4
rowspp5 9
,pp9 :
colspp; ?
)pp? @
;pp@ A
}ppB C
}qq 
publicss 
stringss 

DeclStringss $
(ss$ %
)ss% &
{tt 
stringuu 
	arrayTextuu  
=uu! "
(uu# $
	arraySizeuu$ -
>uu. /
$numuu0 1
)uu1 2
?uu3 4
$struu5 8
+uu9 :
	arraySizeuu; D
+uuE F
$struuG J
:uuK L
$struuM O
;uuO P
returnvv 
PrimitiveToStringvv (
(vv( )
typevv) -
,vv- .
rowsvv/ 3
,vv3 4
colsvv5 9
)vv9 :
+vv; <
$strvv= @
+vvA B
namevvC G
+vvH I
	arrayTextvvJ S
;vvS T
}ww 
publicyy 
overrideyy 
stringyy "
ToStringyy# +
(yy+ ,
)yy, -
{zz 
string{{ 
text{{ 
={{ 

DeclString{{ (
({{( )
){{) *
+{{+ ,
$str{{- 0
;{{0 1
if|| 
(|| 
comment|| 
.|| 
Length|| "
>||# $
$num||% &
)||& '
{}} 
text~~ 
+=~~ 
$str~~ "
+~~# $
comment~~% ,
;~~, -
} 
return
ÄÄ 
text
ÄÄ 
;
ÄÄ 
}
ÅÅ 
public
ÉÉ 
int
ÉÉ 
elementCount
ÉÉ #
{
ÑÑ 
get
ÖÖ 
{
ÖÖ 
return
ÖÖ 
rows
ÖÖ !
*
ÖÖ" #
cols
ÖÖ$ (
*
ÖÖ) *
Mathf
ÖÖ+ 0
.
ÖÖ0 1
Max
ÖÖ1 4
(
ÖÖ4 5
	arraySize
ÖÖ5 >
,
ÖÖ> ?
$num
ÖÖ@ A
)
ÖÖA B
;
ÖÖB C
}
ÖÖD E
}
ÜÜ 
public
àà 
object
àà 
Clone
àà 
(
àà  
)
àà  !
{
ââ 
ShaderFieldInfo
ää 
info
ää  $
=
ää% &
new
ää' *
ShaderFieldInfo
ää+ :
(
ää: ;
type
ää; ?
,
ää? @
name
ääA E
,
ääE F
rows
ääG K
,
ääK L
cols
ääM Q
,
ääQ R
	arraySize
ääS \
,
ää\ ]
comment
ää^ e
)
ääe f
;
ääf g
info
ãã 
.
ãã 
swizzleOffset
ãã "
=
ãã# $
swizzleOffset
ãã% 2
;
ãã2 3
info
åå 
.
åå 
packed
åå 
=
åå 
packed
åå $
;
åå$ %
info
çç 
.
çç 
accessor
çç 
=
çç 
accessor
çç  (
;
çç( )
return
éé 
info
éé 
;
éé 
}
èè 
public
ëë 
readonly
ëë 
PrimitiveType
ëë )
type
ëë* .
;
ëë. /
public
íí 
string
íí 
name
íí 
;
íí 
public
ìì 
readonly
ìì 
string
ìì "
originalName
ìì# /
;
ìì/ 0
public
îî 
readonly
îî 
string
îî "
comment
îî# *
;
îî* +
public
ïï 
int
ïï 
rows
ïï 
;
ïï 
public
ññ 
int
ññ 
cols
ññ 
;
ññ 
public
óó 
int
óó 
	arraySize
óó  
;
óó  !
public
òò 
int
òò 
swizzleOffset
òò $
;
òò$ %
public
ôô 
bool
ôô 
packed
ôô 
;
ôô 
public
öö 
Accessor
öö 
accessor
öö $
;
öö$ %
}
õõ 	
;
õõ	 

class
ùù 
DebugFieldInfo
ùù 
{
ûû 	
public
üü 
DebugFieldInfo
üü !
(
üü! "
string
üü" (

defineName
üü) 3
,
üü3 4
string
üü5 ;
	fieldName
üü< E
,
üüE F
Type
üüG K
	fieldType
üüL U
,
üüU V
bool
üüW [
isDirection
üü\ g
,
üüg h
bool
üüi m
isSRGB
üün t
,
üüt u
bool
üüv z 
checkIsNormalizedüü{ å
,üüå ç
stringüüé î
displayNameüüï †
=üü° ¢
$strüü£ •
)üü• ¶
{
†† 
this
°° 
.
°° 

defineName
°° 
=
°°  !

defineName
°°" ,
;
°°, -
this
¢¢ 
.
¢¢ 
	fieldName
¢¢ 
=
¢¢  
	fieldName
¢¢! *
;
¢¢* +
this
££ 
.
££ 
	fieldType
££ 
=
££  
	fieldType
££! *
;
££* +
this
§§ 
.
§§ 
isDirection
§§  
=
§§! "
isDirection
§§# .
;
§§. /
this
•• 
.
•• 
isSRGB
•• 
=
•• 
isSRGB
•• $
;
••$ %
this
¶¶ 
.
¶¶ 
displayName
¶¶  
=
¶¶! "
displayName
¶¶# .
;
¶¶. /
this
ßß 
.
ßß 
checkIsNormalized
ßß &
=
ßß' (
checkIsNormalized
ßß) :
;
ßß: ;
}
®® 
public
™™ 
string
™™ 

defineName
™™ $
;
™™$ %
public
´´ 
string
´´ 
	fieldName
´´ #
;
´´# $
public
¨¨ 
string
¨¨ 
displayName
¨¨ %
;
¨¨% &
public
≠≠ 
Type
≠≠ 
	fieldType
≠≠ !
;
≠≠! "
public
ÆÆ 
bool
ÆÆ 
isDirection
ÆÆ #
;
ÆÆ# $
public
ØØ 
bool
ØØ 
isSRGB
ØØ 
;
ØØ 
public
∞∞ 
bool
∞∞ 
checkIsNormalized
∞∞ )
;
∞∞) *
}
±± 	
class
≥≥ 
PackedFieldInfo
≥≥ 
{
¥¥ 	
public
µµ 
PackedFieldInfo
µµ "
(
µµ" #
PackingAttribute
µµ# 3
packingAttribute
µµ4 D
,
µµD E
Type
µµF J
	fieldType
µµK T
,
µµT U
string
µµV \
	fieldName
µµ] f
)
µµf g
{
∂∂ 
this
∑∑ 
.
∑∑ 
packingAttribute
∑∑ %
=
∑∑& '
packingAttribute
∑∑( 8
;
∑∑8 9
this
∏∏ 
.
∏∏ 
	fieldType
∏∏ 
=
∏∏  
	fieldType
∏∏! *
;
∏∏* +
this
ππ 
.
ππ 
	fieldName
ππ 
=
ππ  
	fieldName
ππ! *
;
ππ* +
}
∫∫ 
public
ºº 
PackingAttribute
ºº #
packingAttribute
ºº$ 4
;
ºº4 5
public
ΩΩ 
Type
ΩΩ 
	fieldType
ΩΩ !
;
ΩΩ! "
public
ææ 
string
ææ 
	fieldName
ææ #
;
ææ# $
}
øø 	
void
¡¡ 
Error
¡¡ 
(
¡¡ 
string
¡¡ 
error
¡¡ 
)
¡¡  
{
¬¬ 	
if
√√ 
(
√√ 
errors
√√ 
==
√√ 
null
√√ 
)
√√ 
{
ƒƒ 
errors
≈≈ 
=
≈≈ 
new
≈≈ 
List
≈≈ !
<
≈≈! "
string
≈≈" (
>
≈≈( )
(
≈≈) *
)
≈≈* +
;
≈≈+ ,
}
∆∆ 
errors
«« 
.
«« 
Add
«« 
(
«« 
$str
«« <
+
««= >
type
««? C
.
««C D
ToString
««D L
(
««L M
)
««M N
+
««O P
$str
««Q U
+
««V W
error
««X ]
)
««] ^
;
««^ _
}
»» 	
public
   
void
   
PrintErrors
   
(
    
)
    !
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
errors
ÃÃ 
!=
ÃÃ 
null
ÃÃ 
)
ÃÃ 
{
ÕÕ 
foreach
ŒŒ 
(
ŒŒ 
var
ŒŒ 
e
ŒŒ 
in
ŒŒ !
errors
ŒŒ" (
)
ŒŒ( )
{
œœ 
Debug
–– 
.
–– 
LogError
–– "
(
––" #
e
––# $
)
––$ %
;
––% &
}
—— 
}
““ 
}
”” 	
void
’’ 
EmitPrimitiveType
’’ 
(
’’ 
PrimitiveType
’’ ,
type
’’- 1
,
’’1 2
int
’’3 6
elements
’’7 ?
,
’’? @
int
’’A D
	arraySize
’’E N
,
’’N O
string
’’P V
name
’’W [
,
’’[ \
string
’’] c
comment
’’d k
,
’’k l
List
’’m q
<
’’q r
ShaderFieldInfo’’r Å
>’’Å Ç
fields’’É â
)’’â ä
{
÷÷ 	
fields
◊◊ 
.
◊◊ 
Add
◊◊ 
(
◊◊ 
new
◊◊ 
ShaderFieldInfo
◊◊ *
(
◊◊* +
type
◊◊+ /
,
◊◊/ 0
name
◊◊1 5
,
◊◊5 6
elements
◊◊7 ?
,
◊◊? @
$num
◊◊A B
,
◊◊B C
	arraySize
◊◊D M
,
◊◊M N
comment
◊◊O V
)
◊◊V W
)
◊◊W X
;
◊◊X Y
}
ÿÿ 	
void
⁄⁄ 
EmitMatrixType
⁄⁄ 
(
⁄⁄ 
PrimitiveType
⁄⁄ )
type
⁄⁄* .
,
⁄⁄. /
int
⁄⁄0 3
rows
⁄⁄4 8
,
⁄⁄8 9
int
⁄⁄: =
cols
⁄⁄> B
,
⁄⁄B C
int
⁄⁄D G
	arraySize
⁄⁄H Q
,
⁄⁄Q R
string
⁄⁄S Y
name
⁄⁄Z ^
,
⁄⁄^ _
string
⁄⁄` f
comment
⁄⁄g n
,
⁄⁄n o
List
⁄⁄p t
<
⁄⁄t u
ShaderFieldInfo⁄⁄u Ñ
>⁄⁄Ñ Ö
fields⁄⁄Ü å
)⁄⁄å ç
{
€€ 	
fields
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹ 
new
‹‹ 
ShaderFieldInfo
‹‹ *
(
‹‹* +
type
‹‹+ /
,
‹‹/ 0
name
‹‹1 5
,
‹‹5 6
rows
‹‹7 ;
,
‹‹; <
cols
‹‹= A
,
‹‹A B
	arraySize
‹‹C L
,
‹‹L M
comment
‹‹N U
)
‹‹U V
)
‹‹V W
;
‹‹W X
}
›› 	
bool
ﬂﬂ 
ExtractComplex
ﬂﬂ 
(
ﬂﬂ 
	FieldInfo
ﬂﬂ %
field
ﬂﬂ& +
,
ﬂﬂ+ ,
List
ﬂﬂ- 1
<
ﬂﬂ1 2
ShaderFieldInfo
ﬂﬂ2 A
>
ﬂﬂA B
shaderFields
ﬂﬂC O
)
ﬂﬂO P
{
‡‡ 	
var
·· 
floatFields
·· 
=
·· 
new
·· !
List
··" &
<
··& '
	FieldInfo
··' 0
>
··0 1
(
··1 2
)
··2 3
;
··3 4
var
‚‚ 
	intFields
‚‚ 
=
‚‚ 
new
‚‚ 
List
‚‚  $
<
‚‚$ %
	FieldInfo
‚‚% .
>
‚‚. /
(
‚‚/ 0
)
‚‚0 1
;
‚‚1 2
var
„„ 

uintFields
„„ 
=
„„ 
new
„„  
List
„„! %
<
„„% &
	FieldInfo
„„& /
>
„„/ 0
(
„„0 1
)
„„1 2
;
„„2 3
var
‰‰ 

boolFields
‰‰ 
=
‰‰ 
new
‰‰  
List
‰‰! %
<
‰‰% &
	FieldInfo
‰‰& /
>
‰‰/ 0
(
‰‰0 1
)
‰‰1 2
;
‰‰2 3
var
ÂÂ 
descs
ÂÂ 
=
ÂÂ 
new
ÂÂ 
string
ÂÂ "
[
ÂÂ" #
$num
ÂÂ# $
]
ÂÂ$ %
{
ÂÂ& '
$str
ÂÂ( -
,
ÂÂ- .
$str
ÂÂ/ 4
,
ÂÂ4 5
$str
ÂÂ6 ;
,
ÂÂ; <
$str
ÂÂ= B
}
ÂÂC D
;
ÂÂD E
int
ÊÊ 
	numFields
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
string
ËË 
	fieldName
ËË 
=
ËË 
$str
ËË "
+
ËË# $
field
ËË% *
.
ËË* +
	FieldType
ËË+ 4
.
ËË4 5
Name
ËË5 9
+
ËË: ;
$str
ËË< ?
+
ËË@ A
field
ËËB G
.
ËËG H
Name
ËËH L
+
ËËM N
$str
ËËO R
;
ËËR S
foreach
ÍÍ 
(
ÍÍ 
var
ÍÍ 
subField
ÍÍ !
in
ÍÍ" $
field
ÍÍ% *
.
ÍÍ* +
	FieldType
ÍÍ+ 4
.
ÍÍ4 5
	GetFields
ÍÍ5 >
(
ÍÍ> ?
)
ÍÍ? @
)
ÍÍ@ A
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 
subField
ÏÏ 
.
ÏÏ 
IsStatic
ÏÏ %
)
ÏÏ% &
continue
ÌÌ 
;
ÌÌ 
if
ÔÔ 
(
ÔÔ 
!
ÔÔ 
subField
ÔÔ 
.
ÔÔ 
	FieldType
ÔÔ '
.
ÔÔ' (
IsPrimitive
ÔÔ( 3
)
ÔÔ3 4
{
 
Error
ÒÒ 
(
ÒÒ 
$str
ÒÒ 
+
ÒÒ 
	fieldName
ÒÒ  )
+
ÒÒ* +
$strÒÒ, Å
+ÒÒÇ É
subFieldÒÒÑ å
.ÒÒå ç
	FieldTypeÒÒç ñ
+ÒÒó ò
$strÒÒô ú
)ÒÒú ù
;ÒÒù û
return
ÚÚ 
false
ÚÚ  
;
ÚÚ  !
}
ÛÛ 
if
ÙÙ 
(
ÙÙ 
subField
ÙÙ 
.
ÙÙ 
	FieldType
ÙÙ &
==
ÙÙ' )
typeof
ÙÙ* 0
(
ÙÙ0 1
float
ÙÙ1 6
)
ÙÙ6 7
)
ÙÙ7 8
floatFields
ıı 
.
ıı  
Add
ıı  #
(
ıı# $
subField
ıı$ ,
)
ıı, -
;
ıı- .
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
subField
ˆˆ !
.
ˆˆ! "
	FieldType
ˆˆ" +
==
ˆˆ, .
typeof
ˆˆ/ 5
(
ˆˆ5 6
int
ˆˆ6 9
)
ˆˆ9 :
)
ˆˆ: ;
	intFields
˜˜ 
.
˜˜ 
Add
˜˜ !
(
˜˜! "
subField
˜˜" *
)
˜˜* +
;
˜˜+ ,
else
¯¯ 
if
¯¯ 
(
¯¯ 
subField
¯¯ !
.
¯¯! "
	FieldType
¯¯" +
==
¯¯, .
typeof
¯¯/ 5
(
¯¯5 6
uint
¯¯6 :
)
¯¯: ;
)
¯¯; <

uintFields
˘˘ 
.
˘˘ 
Add
˘˘ "
(
˘˘" #
subField
˘˘# +
)
˘˘+ ,
;
˘˘, -
else
˙˙ 
if
˙˙ 
(
˙˙ 
subField
˙˙ !
.
˙˙! "
	FieldType
˙˙" +
==
˙˙, .
typeof
˙˙/ 5
(
˙˙5 6
bool
˙˙6 :
)
˙˙: ;
)
˙˙; <

boolFields
˚˚ 
.
˚˚ 
Add
˚˚ "
(
˚˚" #
subField
˚˚# +
)
˚˚+ ,
;
˚˚, -
else
¸¸ 
{
˝˝ 
Error
˛˛ 
(
˛˛ 
$str
˛˛ 
+
˛˛ 
	fieldName
˛˛  )
+
˛˛* +
$str˛˛, Ä
+˛˛Å Ç
subField˛˛É ã
.˛˛ã å
	FieldType˛˛å ï
+˛˛ñ ó
$str˛˛ò õ
)˛˛õ ú
;˛˛ú ù
return
ˇˇ 
false
ˇˇ  
;
ˇˇ  !
}
ÄÄ 
if
ÇÇ 
(
ÇÇ 
	numFields
ÇÇ 
==
ÇÇ  
$num
ÇÇ! "
)
ÇÇ" #
{
ÉÉ 
Error
ÑÑ 
(
ÑÑ 
$str
ÑÑ 
+
ÑÑ 
	fieldName
ÑÑ  )
+
ÑÑ* +
$str
ÑÑ, y
)
ÑÑy z
;
ÑÑz {
return
ÖÖ 
false
ÖÖ  
;
ÖÖ  !
}
ÜÜ 
descs
àà 
[
àà 
	numFields
àà 
]
àà  
+=
àà! #
subField
àà$ ,
.
àà, -
Name
àà- 1
+
àà2 3
$str
àà4 7
;
àà7 8
	numFields
ââ 
++
ââ 
;
ââ 
}
ää 
Array
ãã 
.
ãã 
Resize
ãã 
(
ãã 
ref
ãã 
descs
ãã "
,
ãã" #
	numFields
ãã$ -
)
ãã- .
;
ãã. /
string
çç 
comment
çç 
=
çç 
string
çç #
.
çç# $
Concat
çç$ *
(
çç* +
descs
çç+ 0
)
çç0 1
;
çç1 2
string
éé 
mismatchErrorMsg
éé #
=
éé$ %
$str
éé& )
+
éé* +
	fieldName
éé, 5
+
éé6 7
$stréé8 ã
;ééã å
if
êê 
(
êê 
floatFields
êê 
.
êê 
Count
êê !
>
êê" #
$num
êê$ %
)
êê% &
{
ëë 
if
íí 
(
íí 
	intFields
íí 
.
íí 
Count
íí #
+
íí$ %

uintFields
íí& 0
.
íí0 1
Count
íí1 6
+
íí7 8

boolFields
íí9 C
.
ííC D
Count
ííD I
>
ííJ K
$num
ííL M
)
ííM N
{
ìì 
Error
îî 
(
îî 
mismatchErrorMsg
îî *
)
îî* +
;
îî+ ,
return
ïï 
false
ïï  
;
ïï  !
}
ññ 
EmitPrimitiveType
óó !
(
óó! "
PrimitiveType
óó" /
.
óó/ 0
Float
óó0 5
,
óó5 6
floatFields
óó7 B
.
óóB C
Count
óóC H
,
óóH I
$num
óóJ K
,
óóK L
field
óóM R
.
óóR S
Name
óóS W
,
óóW X
comment
óóY `
,
óó` a
shaderFields
óób n
)
óón o
;
óóo p
}
òò 
else
ôô 
if
ôô 
(
ôô 
	intFields
ôô 
.
ôô 
Count
ôô $
>
ôô% &
$num
ôô' (
)
ôô( )
{
öö 
if
õõ 
(
õõ 
floatFields
õõ 
.
õõ  
Count
õõ  %
+
õõ& '

uintFields
õõ( 2
.
õõ2 3
Count
õõ3 8
+
õõ9 :

boolFields
õõ; E
.
õõE F
Count
õõF K
>
õõL M
$num
õõN O
)
õõO P
{
úú 
Error
ùù 
(
ùù 
mismatchErrorMsg
ùù *
)
ùù* +
;
ùù+ ,
return
ûû 
false
ûû  
;
ûû  !
}
üü 
EmitPrimitiveType
†† !
(
††! "
PrimitiveType
††" /
.
††/ 0
Int
††0 3
,
††3 4
	intFields
††5 >
.
††> ?
Count
††? D
,
††D E
$num
††F G
,
††G H
field
††I N
.
††N O
Name
††O S
,
††S T
$str
††U W
,
††W X
shaderFields
††Y e
)
††e f
;
††f g
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 

uintFields
¢¢ 
.
¢¢  
Count
¢¢  %
>
¢¢& '
$num
¢¢( )
)
¢¢) *
{
££ 
if
§§ 
(
§§ 
floatFields
§§ 
.
§§  
Count
§§  %
+
§§& '
	intFields
§§( 1
.
§§1 2
Count
§§2 7
+
§§8 9

boolFields
§§: D
.
§§D E
Count
§§E J
>
§§K L
$num
§§M N
)
§§N O
{
•• 
Error
¶¶ 
(
¶¶ 
mismatchErrorMsg
¶¶ *
)
¶¶* +
;
¶¶+ ,
return
ßß 
false
ßß  
;
ßß  !
}
®® 
EmitPrimitiveType
©© !
(
©©! "
PrimitiveType
©©" /
.
©©/ 0
UInt
©©0 4
,
©©4 5

uintFields
©©6 @
.
©©@ A
Count
©©A F
,
©©F G
$num
©©H I
,
©©I J
field
©©K P
.
©©P Q
Name
©©Q U
,
©©U V
$str
©©W Y
,
©©Y Z
shaderFields
©©[ g
)
©©g h
;
©©h i
}
™™ 
else
´´ 
if
´´ 
(
´´ 

boolFields
´´ 
.
´´  
Count
´´  %
>
´´& '
$num
´´( )
)
´´) *
{
¨¨ 
if
≠≠ 
(
≠≠ 
floatFields
≠≠ 
.
≠≠  
Count
≠≠  %
+
≠≠& '
	intFields
≠≠( 1
.
≠≠1 2
Count
≠≠2 7
+
≠≠8 9

uintFields
≠≠: D
.
≠≠D E
Count
≠≠E J
>
≠≠K L
$num
≠≠M N
)
≠≠N O
{
ÆÆ 
Error
ØØ 
(
ØØ 
mismatchErrorMsg
ØØ *
)
ØØ* +
;
ØØ+ ,
return
∞∞ 
false
∞∞  
;
∞∞  !
}
±± 
EmitPrimitiveType
≤≤ !
(
≤≤! "
PrimitiveType
≤≤" /
.
≤≤/ 0
Bool
≤≤0 4
,
≤≤4 5

boolFields
≤≤6 @
.
≤≤@ A
Count
≤≤A F
,
≤≤F G
$num
≤≤H I
,
≤≤I J
field
≤≤K P
.
≤≤P Q
Name
≤≤Q U
,
≤≤U V
$str
≤≤W Y
,
≤≤Y Z
shaderFields
≤≤[ g
)
≤≤g h
;
≤≤h i
}
≥≥ 
else
¥¥ 
{
µµ 
}
∑∑ 
return
ππ 
true
ππ 
;
ππ 
}
∫∫ 	
enum
ºº 
MergeResult
ºº 
{
ΩΩ 	
Merged
ææ 
,
ææ 
Full
øø 
,
øø 
Failed
¿¿ 
}
¡¡ 	
;
¡¡	 

MergeResult
√√ 

PackFields
√√ 
(
√√ 
ShaderFieldInfo
√√ .
info
√√/ 3
,
√√3 4
ref
√√5 8
ShaderFieldInfo
√√9 H
merged
√√I O
)
√√O P
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
merged
≈≈ 
.
≈≈ 
elementCount
≈≈ #
%
≈≈$ %
$num
≈≈& '
==
≈≈( *
$num
≈≈+ ,
)
≈≈, -
{
∆∆ 
return
«« 
MergeResult
«« "
.
««" #
Full
««# '
;
««' (
}
»» 
if
   
(
   
info
   
.
   
type
   
!=
   
merged
   #
.
  # $
type
  $ (
)
  ( )
{
ÀÀ 
Error
ÃÃ 
(
ÃÃ 
$str
ÃÃ %
+
ÃÃ& '
merged
ÃÃ( .
.
ÃÃ. /

DeclString
ÃÃ/ 9
(
ÃÃ9 :
)
ÃÃ: ;
+
ÃÃ< =
$str
ÃÃ> G
+
ÃÃH I
info
ÃÃJ N
.
ÃÃN O

DeclString
ÃÃO Y
(
ÃÃY Z
)
ÃÃZ [
+
ÃÃ\ ]
$strÃÃ^ Ù
)ÃÃÙ ı
;ÃÃı ˆ
return
ÕÕ 
MergeResult
ÕÕ "
.
ÕÕ" #
Failed
ÕÕ# )
;
ÕÕ) *
}
ŒŒ 
if
–– 
(
–– 
info
–– 
.
–– 
cols
–– 
>
–– 
$num
–– 
||
––  
merged
––! '
.
––' (
cols
––( ,
>
––- .
$num
––/ 0
)
––0 1
{
—— 
Error
““ 
(
““ 
$str
““ A
+
““B C
merged
““D J
.
““J K

DeclString
““K U
(
““U V
)
““V W
+
““X Y
$str
““Z c
+
““d e
info
““f j
.
““j k

DeclString
““k u
(
““u v
)
““v w
+
““x y
$str““z ‰
)““‰ Â
;““Â Ê
return
”” 
MergeResult
”” "
.
””" #
Failed
””# )
;
””) *
}
‘‘ 
if
÷÷ 
(
÷÷ 
info
÷÷ 
.
÷÷ 
rows
÷÷ 
+
÷÷ 
merged
÷÷ "
.
÷÷" #
rows
÷÷# '
>
÷÷( )
$num
÷÷* +
)
÷÷+ ,
{
◊◊ 
Error
ŸŸ 
(
ŸŸ 
$str
ŸŸ %
+
ŸŸ& '
merged
ŸŸ( .
.
ŸŸ. /

DeclString
ŸŸ/ 9
(
ŸŸ9 :
)
ŸŸ: ;
+
ŸŸ< =
$str
ŸŸ> G
+
ŸŸH I
info
ŸŸJ N
.
ŸŸN O

DeclString
ŸŸO Y
(
ŸŸY Z
)
ŸŸZ [
+
ŸŸ\ ]
$str
ŸŸ^ o
+
ŸŸp q
info
ŸŸr v
.
ŸŸv w
name
ŸŸw {
+
ŸŸ| }
$strŸŸ~ à
)ŸŸà â
;ŸŸâ ä
return
⁄⁄ 
MergeResult
⁄⁄ "
.
⁄⁄" #
Failed
⁄⁄# )
;
⁄⁄) *
}
€€ 
merged
›› 
.
›› 
rows
›› 
+=
›› 
info
›› 
.
››  
rows
››  $
;
››$ %
merged
ﬁﬁ 
.
ﬁﬁ 
name
ﬁﬁ 
+=
ﬁﬁ 
$str
ﬁﬁ 
+
ﬁﬁ  
info
ﬁﬁ! %
.
ﬁﬁ% &
name
ﬁﬁ& *
;
ﬁﬁ* +
return
ﬂﬂ 
MergeResult
ﬂﬂ 
.
ﬂﬂ 
Merged
ﬂﬂ %
;
ﬂﬂ% &
}
‡‡ 	
List
‚‚ 
<
‚‚ 
ShaderFieldInfo
‚‚ 
>
‚‚ 
Pack
‚‚ "
(
‚‚" #
List
‚‚# '
<
‚‚' (
ShaderFieldInfo
‚‚( 7
>
‚‚7 8
shaderFields
‚‚9 E
)
‚‚E F
{
„„ 	
List
‰‰ 
<
‰‰ 
ShaderFieldInfo
‰‰  
>
‰‰  !
mergedFields
‰‰" .
=
‰‰/ 0
new
‰‰1 4
List
‰‰5 9
<
‰‰9 :
ShaderFieldInfo
‰‰: I
>
‰‰I J
(
‰‰J K
)
‰‰K L
;
‰‰L M
using
ÊÊ 
(
ÊÊ 
var
ÊÊ 
e
ÊÊ 
=
ÊÊ 
shaderFields
ÊÊ '
.
ÊÊ' (
GetEnumerator
ÊÊ( 5
(
ÊÊ5 6
)
ÊÊ6 7
)
ÊÊ7 8
{
ÁÁ 
if
ËË 
(
ËË 
!
ËË 
e
ËË 
.
ËË 
MoveNext
ËË 
(
ËË  
)
ËË  !
)
ËË! "
{
ÈÈ 
return
ÎÎ 
shaderFields
ÎÎ '
;
ÎÎ' (
}
ÏÏ 
ShaderFieldInfo
ÓÓ 
current
ÓÓ  '
=
ÓÓ( )
e
ÓÓ* +
.
ÓÓ+ ,
Current
ÓÓ, 3
.
ÓÓ3 4
Clone
ÓÓ4 9
(
ÓÓ9 :
)
ÓÓ: ;
as
ÓÓ< >
ShaderFieldInfo
ÓÓ? N
;
ÓÓN O
while
 
(
 
e
 
.
 
MoveNext
 !
(
! "
)
" #
)
# $
{
ÒÒ 
while
ÚÚ 
(
ÚÚ 
true
ÚÚ 
)
ÚÚ  
{
ÛÛ 
int
ÙÙ 
offset
ÙÙ "
=
ÙÙ# $
current
ÙÙ% ,
.
ÙÙ, -
elementCount
ÙÙ- 9
;
ÙÙ9 :
var
ıı 
result
ıı "
=
ıı# $

PackFields
ıı% /
(
ıı/ 0
e
ıı0 1
.
ıı1 2
Current
ıı2 9
,
ıı9 :
ref
ıı; >
current
ıı? F
)
ııF G
;
ııG H
if
˜˜ 
(
˜˜ 
result
˜˜ "
==
˜˜# %
MergeResult
˜˜& 1
.
˜˜1 2
Failed
˜˜2 8
)
˜˜8 9
{
¯¯ 
return
˘˘ "
null
˘˘# '
;
˘˘' (
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚  !
result
˚˚! '
==
˚˚( *
MergeResult
˚˚+ 6
.
˚˚6 7
Full
˚˚7 ;
)
˚˚; <
{
¸¸ 
break
˝˝ !
;
˝˝! "
}
˛˛ 
var
ÅÅ 
acc
ÅÅ 
=
ÅÅ  !
current
ÅÅ" )
.
ÅÅ) *
accessor
ÅÅ* 2
;
ÅÅ2 3
acc
ÉÉ 
.
ÉÉ 
name
ÉÉ  
=
ÉÉ! "
current
ÉÉ# *
.
ÉÉ* +
name
ÉÉ+ /
;
ÉÉ/ 0
e
ÑÑ 
.
ÑÑ 
Current
ÑÑ !
.
ÑÑ! "
accessor
ÑÑ" *
=
ÑÑ+ ,
acc
ÑÑ- 0
;
ÑÑ0 1
e
ÖÖ 
.
ÖÖ 
Current
ÖÖ !
.
ÖÖ! "
swizzleOffset
ÖÖ" /
+=
ÖÖ0 2
offset
ÖÖ3 9
;
ÖÖ9 :
current
áá 
.
áá  
packed
áá  &
=
áá' (
e
áá) *
.
áá* +
Current
áá+ 2
.
áá2 3
packed
áá3 9
=
áá: ;
true
áá< @
;
áá@ A
if
ââ 
(
ââ 
!
ââ 
e
ââ 
.
ââ 
MoveNext
ââ '
(
ââ' (
)
ââ( )
)
ââ) *
{
ää 
mergedFields
ãã (
.
ãã( )
Add
ãã) ,
(
ãã, -
current
ãã- 4
)
ãã4 5
;
ãã5 6
return
åå "
mergedFields
åå# /
;
åå/ 0
}
çç 
}
éé 
mergedFields
èè  
.
èè  !
Add
èè! $
(
èè$ %
current
èè% ,
)
èè, -
;
èè- .
current
êê 
=
êê 
e
êê 
.
êê  
Current
êê  '
.
êê' (
Clone
êê( -
(
êê- .
)
êê. /
as
êê0 2
ShaderFieldInfo
êê3 B
;
êêB C
}
ëë 
}
íí 
return
ìì 
mergedFields
ìì 
;
ìì  
}
îî 	
public
ññ 
string
ññ 
EmitTypeDecl
ññ "
(
ññ" #
)
ññ# $
{
óó 	
string
òò 

shaderText
òò 
=
òò 
string
òò  &
.
òò& '
Empty
òò' ,
;
òò, -

shaderText
öö 
+=
öö 
$str
öö .
+
öö/ 0
type
öö1 5
.
öö5 6
FullName
öö6 >
+
öö? @
$str
ööA E
;
ööE F

shaderText
õõ 
+=
õõ 
$str
õõ .
+
õõ/ 0
attr
õõ1 5
.
õõ5 6
packingRules
õõ6 B
.
õõB C
ToString
õõC K
(
õõK L
)
õõL M
+
õõN O
$str
õõP T
;
õõT U
if
ùù 
(
ùù 
attr
ùù 
.
ùù 
generateCBuffer
ùù $
)
ùù$ %
{
ûû 
if
üü 
(
üü 
attr
üü 
.
üü 
constantRegister
üü )
!=
üü* ,
-
üü- .
$num
üü. /
)
üü/ 0

shaderText
†† 
+=
†† !
$str
††" 9
+
††: ;
type
††< @
.
††@ A
Name
††A E
+
††F G
$str
††H M
+
††N O
attr
††P T
.
††T U
constantRegister
††U e
+
††f g
$str
††h m
;
††m n
else
°° 

shaderText
¢¢ 
+=
¢¢ !
$str
¢¢" 2
+
¢¢3 4
type
¢¢5 9
.
¢¢9 :
Name
¢¢: >
+
¢¢? @
$str
¢¢A F
;
¢¢F G
}
££ 
else
§§ 
if
§§ 
(
§§ 
!
§§ 
attr
§§ 
.
§§ #
omitStructDeclaration
§§ 0
)
§§0 1
{
•• 

shaderText
¶¶ 
+=
¶¶ 
$str
¶¶ '
+
¶¶( )
type
¶¶* .
.
¶¶. /
Name
¶¶/ 3
+
¶¶4 5
$str
¶¶6 :
;
¶¶: ;

shaderText
ßß 
+=
ßß 
$str
ßß #
;
ßß# $
}
®® 
foreach
™™ 
(
™™ 
var
™™ 
shaderFieldInfo
™™ (
in
™™) +
m_PackedFields
™™, :
)
™™: ;
{
´´ 

shaderText
¨¨ 
+=
¨¨ 
$str
¨¨ $
+
¨¨% &
shaderFieldInfo
¨¨' 6
.
¨¨6 7
ToString
¨¨7 ?
(
¨¨? @
)
¨¨@ A
+
¨¨B C
$str
¨¨D H
;
¨¨H I
}
≠≠ 
if
ØØ 
(
ØØ 
attr
ØØ 
.
ØØ 
generateCBuffer
ØØ $
)
ØØ$ %
{
∞∞ 

shaderText
±± 
+=
±± 
$str
±± -
;
±±- .
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥ 
!
≥≥ 
attr
≥≥ 
.
≥≥ #
omitStructDeclaration
≥≥ 0
)
≥≥0 1
{
¥¥ 

shaderText
µµ 
+=
µµ 
$str
µµ $
;
µµ$ %
}
∂∂ 
return
∏∏ 

shaderText
∏∏ 
;
∏∏ 
}
ππ 	
public
ªª 
string
ªª 
EmitSetters
ªª !
(
ªª! "
bool
ªª" & 
generatingInitFunc
ªª' 9
=
ªª: ;
false
ªª< A
)
ªªA B
{
ºº 	
string
ΩΩ 

shaderText
ΩΩ 
=
ΩΩ 
string
ΩΩ  &
.
ΩΩ& '
Empty
ΩΩ' ,
;
ΩΩ, -
if
øø 
(
øø 
!
øø 
hasPackedInfo
øø 
&&
øø !
attr
øø" &
.
øø& '
needSetters
øø' 2
)
øø2 3
{
¿¿ 

shaderText
¡¡ 
+=
¡¡ 
$str
¡¡ $
;
¡¡$ %

shaderText
¬¬ 
+=
¬¬ 
$str
¬¬ /
+
¬¬0 1
type
¬¬2 6
.
¬¬6 7
FullName
¬¬7 ?
+
¬¬@ A
$str
¬¬B F
;
¬¬F G

shaderText
√√ 
+=
√√ 
$str
√√ $
;
√√$ %
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
shaderField
ƒƒ (
in
ƒƒ) +
m_ShaderFields
ƒƒ, :
)
ƒƒ: ;
{
≈≈ 
Accessor
∆∆ 
acc
∆∆  
=
∆∆! "
shaderField
∆∆# .
.
∆∆. /
accessor
∆∆/ 7
;
∆∆7 8
string
«« 

setterName
«« %
=
««& '
shaderField
««( 3
.
««3 4
originalName
««4 @
;
««@ A
string
»» 
setterOrInit
»» '
=
»»( ) 
generatingInitFunc
»»* <
?
»»= >
$str
»»? E
:
»»F G
$str
»»H M
;
»»M N

setterName
…… 
=
……  
setterOrInit
……! -
+
……. /
char
……0 4
.
……4 5
ToUpper
……5 <
(
……< =

setterName
……= G
[
……G H
$num
……H I
]
……I J
)
……J K
+
……L M

setterName
……N X
.
……X Y
	Substring
……Y b
(
……b c
$num
……c d
)
……d e
;
……e f
if
ÀÀ 
(
ÀÀ 
shaderField
ÀÀ #
.
ÀÀ# $
	arraySize
ÀÀ$ -
>
ÀÀ. /
$num
ÀÀ0 1
)
ÀÀ1 2

shaderText
ÃÃ "
+=
ÃÃ# %
$str
ÃÃ& -
+
ÃÃ. /

setterName
ÃÃ0 :
+
ÃÃ; <
$str
ÃÃ= K
+
ÃÃL M
shaderField
ÃÃN Y
.
ÃÃY Z

typeString
ÃÃZ d
+
ÃÃe f
$str
ÃÃg z
+
ÃÃ{ |
typeÃÃ} Å
.ÃÃÅ Ç
NameÃÃÇ Ü
+ÃÃá à
$strÃÃâ î
;ÃÃî ï
else
ÕÕ 

shaderText
ŒŒ "
+=
ŒŒ# %
$str
ŒŒ& -
+
ŒŒ. /

setterName
ŒŒ0 :
+
ŒŒ; <
$str
ŒŒ= @
+
ŒŒA B
shaderField
ŒŒC N
.
ŒŒN O

typeString
ŒŒO Y
+
ŒŒZ [
$str
ŒŒ\ o
+
ŒŒp q
type
ŒŒr v
.
ŒŒv w
Name
ŒŒw {
+
ŒŒ| }
$strŒŒ~ â
;ŒŒâ ä

shaderText
œœ 
+=
œœ !
$str
œœ" '
;
œœ' (
string
—— 
arrayAccess
—— &
=
——' (
$str
——) +
;
——+ ,
if
”” 
(
”” 
shaderField
”” #
.
””# $
	arraySize
””$ -
>
””. /
$num
””0 1
)
””1 2
{
‘‘ 
arrayAccess
’’ #
=
’’$ %
$str
’’& /
;
’’/ 0
}
÷÷ 

shaderText
ÿÿ 
+=
ÿÿ !
$str
⁄⁄  &
+
€€  !
$str
€€" )
+
€€* +
acc
€€, /
.
€€/ 0
name
€€0 4
+
€€5 6
arrayAccess
€€7 B
+
€€C D
$str
€€E U
;
€€U V

shaderText
‹‹ 
+=
‹‹ !
$str
‹‹" '
;
‹‹' (
}
›› 
}
ﬁﬁ 
return
‡‡ 

shaderText
‡‡ 
;
‡‡ 
}
·· 	
public
„„ 
string
„„ 
EmitAccessors
„„ #
(
„„# $
)
„„$ %
{
‰‰ 	
string
ÂÂ 

shaderText
ÂÂ 
=
ÂÂ 
string
ÂÂ  &
.
ÂÂ& '
Empty
ÂÂ' ,
;
ÂÂ, -
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
hasPackedInfo
ÁÁ 
)
ÁÁ 
{
ËË 

shaderText
ÈÈ 
+=
ÈÈ 
$str
ÈÈ $
;
ÈÈ$ %

shaderText
ÍÍ 
+=
ÍÍ 
$str
ÍÍ 1
+
ÍÍ2 3
type
ÍÍ4 8
.
ÍÍ8 9
FullName
ÍÍ9 A
+
ÍÍB C
$str
ÍÍD H
;
ÍÍH I

shaderText
ÎÎ 
+=
ÎÎ 
$str
ÎÎ $
;
ÎÎ$ %
foreach
ÏÏ 
(
ÏÏ 
var
ÏÏ 
shaderField
ÏÏ (
in
ÏÏ) +
m_ShaderFields
ÏÏ, :
)
ÏÏ: ;
{
ÌÌ 
Accessor
ÓÓ 
acc
ÓÓ  
=
ÓÓ! "
shaderField
ÓÓ# .
.
ÓÓ. /
accessor
ÓÓ/ 7
;
ÓÓ7 8
string
ÔÔ 
accessorName
ÔÔ '
=
ÔÔ( )
shaderField
ÔÔ* 5
.
ÔÔ5 6
originalName
ÔÔ6 B
;
ÔÔB C
accessorName
  
=
! "
$str
# (
+
) *
char
+ /
.
/ 0
ToUpper
0 7
(
7 8
accessorName
8 D
[
D E
$num
E F
]
F G
)
G H
+
I J
accessorName
K W
.
W X
	Substring
X a
(
a b
$num
b c
)
c d
;
d e
if
ÚÚ 
(
ÚÚ 
shaderField
ÚÚ #
.
ÚÚ# $
	arraySize
ÚÚ$ -
>
ÚÚ. /
$num
ÚÚ0 1
)
ÚÚ1 2

shaderText
ÛÛ "
+=
ÛÛ# %
shaderField
ÛÛ& 1
.
ÛÛ1 2

typeString
ÛÛ2 <
+
ÛÛ= >
$str
ÛÛ? B
+
ÛÛC D
accessorName
ÛÛE Q
+
ÛÛR S
$str
ÛÛT W
+
ÛÛX Y
type
ÛÛZ ^
.
ÛÛ^ _
Name
ÛÛ_ c
+
ÛÛd e
$str
ÛÛf |
;
ÛÛ| }
else
ÙÙ 

shaderText
ıı "
+=
ıı# %
shaderField
ıı& 1
.
ıı1 2

typeString
ıı2 <
+
ıı= >
$str
ıı? B
+
ııC D
accessorName
ııE Q
+
ııR S
$str
ııT W
+
ııX Y
type
ııZ ^
.
ıı^ _
Name
ıı_ c
+
ııd e
$str
ııf q
;
ııq r

shaderText
ˆˆ 
+=
ˆˆ !
$str
ˆˆ" '
;
ˆˆ' (
string
¯¯ 
swizzle
¯¯ "
=
¯¯# $
$str
¯¯% '
;
¯¯' (
string
˘˘ 
arrayAccess
˘˘ &
=
˘˘' (
$str
˘˘) +
;
˘˘+ ,
if
¸¸ 
(
¸¸ 
shaderField
¸¸ #
.
¸¸# $
cols
¸¸$ (
==
¸¸) +
$num
¸¸, -
)
¸¸- .
{
˝˝ 
if
ˇˇ 
(
ˇˇ 
shaderField
ˇˇ '
.
ˇˇ' (
originalName
ˇˇ( 4
!=
ˇˇ5 7
acc
ˇˇ8 ;
.
ˇˇ; <
name
ˇˇ< @
)
ˇˇ@ A
{
ÄÄ 
swizzle
ÅÅ #
=
ÅÅ$ %
$str
ÅÅ& )
+
ÅÅ* +
$str
ÅÅ, 2
.
ÅÅ2 3
	Substring
ÅÅ3 <
(
ÅÅ< =
shaderField
ÅÅ= H
.
ÅÅH I
swizzleOffset
ÅÅI V
,
ÅÅV W
shaderField
ÅÅX c
.
ÅÅc d
elementCount
ÅÅd p
)
ÅÅp q
;
ÅÅq r
}
ÇÇ 
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
shaderField
ÖÖ #
.
ÖÖ# $
	arraySize
ÖÖ$ -
>
ÖÖ. /
$num
ÖÖ0 1
)
ÖÖ1 2
{
ÜÜ 
arrayAccess
áá #
=
áá$ %
$str
áá& /
;
áá/ 0
}
àà 

shaderText
ää 
+=
ää !
$str
åå  &
+
çç  !
$str
çç" 1
+
çç2 3
acc
çç4 7
.
çç7 8
name
çç8 <
+
çç= >
swizzle
çç? F
+
ççG H
arrayAccess
ççI T
+
ççU V
$str
ççW \
;
çç\ ]

shaderText
éé 
+=
éé !
$str
éé" '
;
éé' (
}
èè 
}
êê 
return
íí 

shaderText
íí 
;
íí 
}
ìì 	
public
ïï 
string
ïï 
EmitDefines
ïï !
(
ïï! "
)
ïï" #
{
ññ 	
string
óó 

shaderText
óó 
=
óó 
string
óó  &
.
óó& '
Empty
óó' ,
;
óó, -

shaderText
ôô 
+=
ôô 
$str
ôô  
;
ôô  !

shaderText
öö 
+=
öö 
$str
öö 
+
öö  !
type
öö" &
.
öö& '
FullName
öö' /
+
öö0 1
$str
öö2 F
;
ööF G

shaderText
õõ 
+=
õõ 
$str
õõ  
;
õõ  !
foreach
úú 
(
úú 
var
úú 
def
úú 
in
úú 
	m_Statics
úú  )
)
úú) *
{
ùù 

shaderText
ûû 
+=
ûû 
$str
ûû (
+
ûû) *
def
ûû+ .
.
ûû. /
Key
ûû/ 2
+
ûû3 4
$str
ûû5 9
+
ûû: ;
def
ûû< ?
.
ûû? @
Value
ûû@ E
+
ûûF G
$str
ûûH M
;
ûûM N
}
üü 
return
°° 

shaderText
°° 
;
°° 
}
¢¢ 	
public
§§ 
string
§§ 
EmitFunctions
§§ #
(
§§# $
)
§§$ %
{
•• 	
string
¶¶ 

shaderText
¶¶ 
=
¶¶ 
string
¶¶  &
.
¶¶& '
Empty
¶¶' ,
;
¶¶, -
if
©© 
(
©© 
!
©© 
attr
©© 
.
©© 
needParamDebug
©© $
)
©©$ %
return
™™ 

shaderText
™™ !
;
™™! "
string
≠≠ 
lowerStructName
≠≠ "
=
≠≠# $
type
≠≠% )
.
≠≠) *
Name
≠≠* .
.
≠≠. /
ToLower
≠≠/ 6
(
≠≠6 7
)
≠≠7 8
;
≠≠8 9

shaderText
ØØ 
+=
ØØ 
$str
ØØ  
;
ØØ  !

shaderText
∞∞ 
+=
∞∞ 
$str
∞∞ 0
;
∞∞0 1

shaderText
±± 
+=
±± 
$str
±±  
;
±±  !

shaderText
≥≥ 
+=
≥≥ 
$str
≥≥ -
+
≥≥. /
type
≥≥0 4
.
≥≥4 5
Name
≥≥5 9
+
≥≥: ;
$str
≥≥< R
+
≥≥S T
type
≥≥U Y
.
≥≥Y Z
Name
≥≥Z ^
+
≥≥_ `
$str
≥≥a d
+
≥≥e f
lowerStructName
≥≥g v
+
≥≥w x
$str≥≥y ∞
;≥≥∞ ±

shaderText
¥¥ 
+=
¥¥ 
$str
¥¥ 
;
¥¥  

shaderText
µµ 
+=
µµ 
$str
µµ 2
;
µµ2 3

shaderText
∂∂ 
+=
∂∂ 
$str
∂∂ #
;
∂∂# $
foreach
∏∏ 
(
∏∏ 
var
∏∏ 

debugField
∏∏ #
in
∏∏$ &
m_DebugFields
∏∏' 4
)
∏∏4 5
{
ππ 

shaderText
∫∫ 
+=
∫∫ 
$str
∫∫ -
+
∫∫. /

debugField
∫∫0 :
.
∫∫: ;

defineName
∫∫; E
+
∫∫F G
$str
∫∫H M
;
∫∫M N
if
ªª 
(
ªª 

debugField
ªª 
.
ªª 
	fieldType
ªª (
==
ªª) +
typeof
ªª, 2
(
ªª2 3
float
ªª3 8
)
ªª8 9
)
ªª9 :
{
ºº 
if
ΩΩ 
(
ΩΩ 

debugField
ΩΩ "
.
ΩΩ" #
isDirection
ΩΩ# .
)
ΩΩ. /
{
ææ 

shaderText
øø "
+=
øø# %
$str
øø& =
+
øø> ?
lowerStructName
øø@ O
+
øøP Q
$str
øøR U
+
øøV W

debugField
øøX b
.
øøb c
	fieldName
øøc l
+
øøm n
$strøøo Ñ
;øøÑ Ö
}
¿¿ 
else
¡¡ 
{
¬¬ 

shaderText
√√ "
+=
√√# %
$str
√√& =
+
√√> ?
lowerStructName
√√@ O
+
√√P Q
$str
√√R U
+
√√V W

debugField
√√X b
.
√√b c
	fieldName
√√c l
+
√√m n
$str
√√o x
;
√√x y
}
ƒƒ 
}
≈≈ 
else
∆∆ 
if
∆∆ 
(
∆∆ 

debugField
∆∆ #
.
∆∆# $
	fieldType
∆∆$ -
==
∆∆. 0
typeof
∆∆1 7
(
∆∆7 8
Vector2
∆∆8 ?
)
∆∆? @
)
∆∆@ A
{
«« 

shaderText
»» 
+=
»» !
$str
»»" @
+
»»A B
lowerStructName
»»C R
+
»»S T
$str
»»U X
+
»»Y Z

debugField
»»[ e
.
»»e f
	fieldName
»»f o
+
»»p q
$str
»»r }
;
»»} ~
}
…… 
else
   
if
   
(
   

debugField
   #
.
  # $
	fieldType
  $ -
==
  . 0
typeof
  1 7
(
  7 8
Vector3
  8 ?
)
  ? @
)
  @ A
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 

debugField
ÃÃ "
.
ÃÃ" #
isDirection
ÃÃ# .
)
ÃÃ. /
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 

debugField
ŒŒ &
.
ŒŒ& '
checkIsNormalized
ŒŒ' 8
)
ŒŒ8 9
{
œœ 

shaderText
–– &
+=
––' )
$str
––* N
+
––O P
lowerStructName
––Q `
+
––a b
$str
––c f
+
––g h

debugField
––i s
.
––s t
	fieldName
––t }
+
––~ 
$str–– Ñ
+––Ö Ü
lowerStructName––á ñ
+––ó ò
$str––ô ú
+––ù û

debugField––ü ©
.––© ™
	fieldName––™ ≥
+––¥ µ
$str––∂ ﬂ
;––ﬂ ‡
}
““ 
else
”” 
{
‘‘ 

shaderText
’’ &
+=
’’' )
$str
’’* A
+
’’B C
lowerStructName
’’D S
+
’’T U
$str
’’V Y
+
’’Z [

debugField
’’\ f
.
’’f g
	fieldName
’’g p
+
’’q r
$str’’s Ñ
;’’Ñ Ö
}
÷÷ 
}
◊◊ 
else
ÿÿ 
{
ŸŸ 

shaderText
⁄⁄ "
+=
⁄⁄# %
$str
⁄⁄& =
+
⁄⁄> ?
lowerStructName
⁄⁄@ O
+
⁄⁄P Q
$str
⁄⁄R U
+
⁄⁄V W

debugField
⁄⁄X b
.
⁄⁄b c
	fieldName
⁄⁄c l
+
⁄⁄m n
$str
⁄⁄o t
;
⁄⁄t u
}
€€ 
}
‹‹ 
else
›› 
if
›› 
(
›› 

debugField
›› #
.
››# $
	fieldType
››$ -
==
››. 0
typeof
››1 7
(
››7 8
Vector4
››8 ?
)
››? @
)
››@ A
{
ﬁﬁ 

shaderText
ﬂﬂ 
+=
ﬂﬂ !
$str
ﬂﬂ" 9
+
ﬂﬂ: ;
lowerStructName
ﬂﬂ< K
+
ﬂﬂL M
$str
ﬂﬂN Q
+
ﬂﬂR S

debugField
ﬂﬂT ^
.
ﬂﬂ^ _
	fieldName
ﬂﬂ_ h
+
ﬂﬂi j
$str
ﬂﬂk t
;
ﬂﬂt u
}
‡‡ 
else
·· 
if
·· 
(
·· 

debugField
·· #
.
··# $
	fieldType
··$ -
==
··. 0
typeof
··1 7
(
··7 8
bool
··8 <
)
··< =
)
··= >
{
‚‚ 

shaderText
„„ 
+=
„„ !
$str
„„" :
+
„„; <
lowerStructName
„„= L
+
„„M N
$str
„„O R
+
„„S T

debugField
„„U _
.
„„_ `
	fieldName
„„` i
+
„„j k
$str„„l ¢
;„„¢ £
}
‰‰ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 

debugField
ÂÂ #
.
ÂÂ# $
	fieldType
ÂÂ$ -
==
ÂÂ. 0
typeof
ÂÂ1 7
(
ÂÂ7 8
uint
ÂÂ8 <
)
ÂÂ< =
||
ÂÂ> @

debugField
ÂÂA K
.
ÂÂK L
	fieldType
ÂÂL U
==
ÂÂV X
typeof
ÂÂY _
(
ÂÂ_ `
int
ÂÂ` c
)
ÂÂc d
)
ÂÂd e
{
ÊÊ 

shaderText
ÁÁ 
+=
ÁÁ !
$str
ÁÁ" G
+
ÁÁH I
lowerStructName
ÁÁJ Y
+
ÁÁZ [
$str
ÁÁ\ _
+
ÁÁ` a

debugField
ÁÁb l
.
ÁÁl m
	fieldName
ÁÁm v
+
ÁÁw x
$str
ÁÁy 
;ÁÁ Ä
}
ËË 
else
ÈÈ 
{
ÍÍ 

shaderText
ÎÎ 
+=
ÎÎ !
$str
ÎÎ" G
+
ÎÎH I
lowerStructName
ÎÎJ Y
+
ÎÎZ [
$str
ÎÎ\ _
+
ÎÎ` a

debugField
ÎÎb l
.
ÎÎl m
	fieldName
ÎÎm v
+
ÎÎw x
$str
ÎÎy 
;ÎÎ Ä
}
ÏÏ 
if
ÓÓ 
(
ÓÓ 

debugField
ÓÓ 
.
ÓÓ 
isSRGB
ÓÓ %
)
ÓÓ% &
{
ÔÔ 

shaderText
 
+=
 !
$str
" J
;
J K
}
ÒÒ 

shaderText
ÛÛ 
+=
ÛÛ 
$str
ÛÛ 4
;
ÛÛ4 5
}
ÙÙ 

shaderText
ˆˆ 
+=
ˆˆ 
$str
ˆˆ #
;
ˆˆ# $

shaderText
˜˜ 
+=
˜˜ 
$str
˜˜ 
;
˜˜  
return
˘˘ 

shaderText
˘˘ 
;
˘˘ 
}
˙˙ 	
public
¸¸ 
string
¸¸ $
EmitFunctionsForPacked
¸¸ ,
(
¸¸, -
)
¸¸- .
{
˝˝ 	
string
˛˛ 

shaderText
˛˛ 
=
˛˛ 
string
˛˛  &
.
˛˛& '
Empty
˛˛' ,
;
˛˛, -
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
attr
ÅÅ 
.
ÅÅ 
needParamDebug
ÅÅ $
)
ÅÅ$ %
return
ÇÇ 

shaderText
ÇÇ !
;
ÇÇ! "
string
ÖÖ 
lowerStructName
ÖÖ "
=
ÖÖ# $
type
ÖÖ% )
.
ÖÖ) *
Name
ÖÖ* .
.
ÖÖ. /
ToLower
ÖÖ/ 6
(
ÖÖ6 7
)
ÖÖ7 8
;
ÖÖ8 9

shaderText
áá 
+=
áá 
$str
áá  
;
áá  !

shaderText
àà 
+=
àà 
$str
àà 0
;
àà0 1

shaderText
ââ 
+=
ââ 
$str
ââ  
;
ââ  !

shaderText
ãã 
+=
ãã 
$str
ãã -
+
ãã. /
type
ãã0 4
.
ãã4 5
Name
ãã5 9
+
ãã: ;
$str
ãã< R
+
ããS T
type
ããU Y
.
ããY Z
Name
ããZ ^
+
ãã_ `
$str
ããa d
+
ããe f
lowerStructName
ããg v
+
ããw x
$strããy ∞
;ãã∞ ±

shaderText
åå 
+=
åå 
$str
åå 
;
åå  

shaderText
çç 
+=
çç 
$str
çç 2
;
çç2 3

shaderText
éé 
+=
éé 
$str
éé #
;
éé# $
foreach
êê 
(
êê 
var
êê 

debugField
êê #
in
êê$ &
m_DebugFields
êê' 4
)
êê4 5
{
ëë 

shaderText
íí 
+=
íí 
$str
íí -
+
íí. /

debugField
íí0 :
.
íí: ;

defineName
íí; E
+
ííF G
$str
ííH M
;
ííM N
if
ìì 
(
ìì 

debugField
ìì 
.
ìì 
	fieldType
ìì (
==
ìì) +
typeof
ìì, 2
(
ìì2 3
float
ìì3 8
)
ìì8 9
)
ìì9 :
{
îî 
if
ïï 
(
ïï 

debugField
ïï "
.
ïï" #
isDirection
ïï# .
)
ïï. /
{
ññ 

shaderText
óó "
+=
óó# %
$str
óó& @
+
óóA B

debugField
óóC M
.
óóM N
displayName
óóN Y
+
óóZ [
$str
óó\ _
+
óó` a
lowerStructName
óób q
+
óór s
$str
óót w
+
óóx y
$stróóz è
;óóè ê
}
òò 
else
ôô 
{
öö 

shaderText
õõ "
+=
õõ# %
$str
õõ& @
+
õõA B

debugField
õõC M
.
õõM N
displayName
õõN Y
+
õõZ [
$str
õõ\ _
+
õõ` a
lowerStructName
õõb q
+
õõr s
$str
õõt w
+
õõx y
$strõõz É
;õõÉ Ñ
}
úú 
}
ùù 
else
ûû 
if
ûû 
(
ûû 

debugField
ûû #
.
ûû# $
	fieldType
ûû$ -
==
ûû. 0
typeof
ûû1 7
(
ûû7 8
Vector2
ûû8 ?
)
ûû? @
)
ûû@ A
{
üü 

shaderText
†† 
+=
†† !
$str
††" @
+
††A B
$str
††C H
+
††I J

debugField
††K U
.
††U V
displayName
††V a
+
††b c
$str
††d g
+
††h i
lowerStructName
††j y
+
††z {
$str††| à
;††à â
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 

debugField
¢¢ #
.
¢¢# $
	fieldType
¢¢$ -
==
¢¢. 0
typeof
¢¢1 7
(
¢¢7 8
Vector3
¢¢8 ?
)
¢¢? @
)
¢¢@ A
{
££ 
if
§§ 
(
§§ 

debugField
§§ "
.
§§" #
isDirection
§§# .
)
§§. /
{
•• 

shaderText
¶¶ "
+=
¶¶# %
$str
¶¶& @
+
¶¶A B

debugField
¶¶C M
.
¶¶M N
displayName
¶¶N Y
+
¶¶Z [
$str
¶¶\ _
+
¶¶` a
lowerStructName
¶¶b q
+
¶¶r s
$str
¶¶t w
+
¶¶x y
$str¶¶z ã
;¶¶ã å
}
ßß 
else
®® 
{
©© 

shaderText
™™ "
+=
™™# %
$str
™™& @
+
™™A B

debugField
™™C M
.
™™M N
displayName
™™N Y
+
™™Z [
$str
™™\ _
+
™™` a
lowerStructName
™™b q
+
™™r s
$str
™™t w
+
™™x y
$str
™™z 
;™™ Ä
}
´´ 
}
¨¨ 
else
≠≠ 
if
≠≠ 
(
≠≠ 

debugField
≠≠ #
.
≠≠# $
	fieldType
≠≠$ -
==
≠≠. 0
typeof
≠≠1 7
(
≠≠7 8
Vector4
≠≠8 ?
)
≠≠? @
)
≠≠@ A
{
ÆÆ 

shaderText
ØØ 
+=
ØØ !
$str
ØØ" <
+
ØØ= >

debugField
ØØ? I
.
ØØI J
displayName
ØØJ U
+
ØØV W
$str
ØØX [
+
ØØ\ ]
lowerStructName
ØØ^ m
+
ØØn o
$str
ØØp s
+
ØØt u
$str
ØØv 
;ØØ Ä
}
∞∞ 
else
±± 
if
±± 
(
±± 

debugField
±± #
.
±±# $
	fieldType
±±$ -
==
±±. 0
typeof
±±1 7
(
±±7 8
bool
±±8 <
)
±±< =
)
±±= >
{
≤≤ 

shaderText
≥≥ 
+=
≥≥ !
$str
≥≥" :
+
≥≥; <
$str
≥≥= B
+
≥≥C D

debugField
≥≥E O
.
≥≥O P
displayName
≥≥P [
+
≥≥\ ]
$str
≥≥^ a
+
≥≥b c
lowerStructName
≥≥d s
+
≥≥t u
$str≥≥v ¨
;≥≥¨ ≠
}
¥¥ 
else
µµ 
if
µµ 
(
µµ 

debugField
µµ #
.
µµ# $
	fieldType
µµ$ -
==
µµ. 0
typeof
µµ1 7
(
µµ7 8
uint
µµ8 <
)
µµ< =
||
µµ> @

debugField
µµA K
.
µµK L
	fieldType
µµL U
==
µµV X
typeof
µµY _
(
µµ_ `
int
µµ` c
)
µµc d
)
µµd e
{
∂∂ 

shaderText
∑∑ 
+=
∑∑ !
$str
∑∑" G
+
∑∑H I
$str
∑∑J O
+
∑∑P Q

debugField
∑∑R \
.
∑∑\ ]
displayName
∑∑] h
+
∑∑i j
$str
∑∑k n
+
∑∑o p
lowerStructName∑∑q Ä
+∑∑Å Ç
$str∑∑É ä
;∑∑ä ã
}
∏∏ 
else
ππ 
{
∫∫ 

shaderText
ªª 
+=
ªª !
$str
ªª" G
+
ªªH I
$str
ªªJ O
+
ªªP Q

debugField
ªªR \
.
ªª\ ]
displayName
ªª] h
+
ªªi j
$str
ªªk n
+
ªªo p
lowerStructNameªªq Ä
+ªªÅ Ç
$strªªÉ ä
;ªªä ã
}
ºº 
if
ææ 
(
ææ 

debugField
ææ 
.
ææ 
isSRGB
ææ %
)
ææ% &
{
øø 

shaderText
¿¿ 
+=
¿¿ !
$str
¿¿" J
;
¿¿J K
}
¡¡ 

shaderText
√√ 
+=
√√ 
$str
√√ 4
;
√√4 5
}
ƒƒ 

shaderText
∆∆ 
+=
∆∆ 
$str
∆∆ #
;
∆∆# $

shaderText
«« 
+=
«« 
$str
«« 
;
««  
return
…… 

shaderText
…… 
;
…… 
}
   	
public
ÃÃ 
string
ÃÃ 
Emit
ÃÃ 
(
ÃÃ 
)
ÃÃ 
{
ÕÕ 	
return
ŒŒ 
EmitDefines
ŒŒ 
(
ŒŒ 
)
ŒŒ  
+
ŒŒ! "
EmitTypeDecl
ŒŒ# /
(
ŒŒ/ 0
)
ŒŒ0 1
+
ŒŒ2 3
EmitAccessors
ŒŒ4 A
(
ŒŒA B
)
ŒŒB C
+
ŒŒD E
EmitSetters
ŒŒF Q
(
ŒŒQ R
)
ŒŒR S
;
ŒŒS T
}
œœ 	
private
—— 
string
—— 
EmitPackedGetters
—— (
(
——( )
)
——) *
{
““ 	
string
”” 
gettersString
””  
=
””! "
$str
””# %
;
””% &
gettersString
’’ 
+=
’’ 
$str
’’ #
;
’’# $
gettersString
÷÷ 
+=
÷÷ 
$str
÷÷ ?
;
÷÷? @
gettersString
◊◊ 
+=
◊◊ 
$str
◊◊ #
;
◊◊# $
foreach
ŸŸ 
(
ŸŸ 
PackedFieldInfo
ŸŸ $

packedInfo
ŸŸ% /
in
ŸŸ0 2!
m_PackedFieldsInfos
ŸŸ3 F
)
ŸŸF G
{
⁄⁄ 
string
€€ 

sourceName
€€ !
=
€€" #
type
€€$ (
.
€€( )
Name
€€) -
.
€€- .
ToLower
€€. 5
(
€€5 6
)
€€6 7
;
€€7 8
string
‹‹ 
funcSignature
‹‹ $
=
‹‹% &
$str
‹‹' ,
+
‹‹- .

packedInfo
‹‹/ 9
.
‹‹9 :
packingAttribute
‹‹: J
.
‹‹J K
displayNames
‹‹K W
[
‹‹W X
$num
‹‹X Y
]
‹‹Y Z
+
‹‹[ \
$str
‹‹] c
+
‹‹d e
type
‹‹f j
.
‹‹j k
Name
‹‹k o
+
‹‹p q
$str
‹‹r u
+
‹‹v w

sourceName‹‹x Ç
+‹‹É Ñ
$str‹‹Ö à
;‹‹à â
string
›› 
funcBody
›› 
=
››  !
$str
››" -
;
››- .
string
ﬁﬁ "
funcBodyBeforeReturn
ﬁﬁ +
=
ﬁﬁ, -
$str
ﬁﬁ. 0
;
ﬁﬁ0 1
float
ﬂﬂ 
minValue
ﬂﬂ 
=
ﬂﬂ  

packedInfo
ﬂﬂ! +
.
ﬂﬂ+ ,
packingAttribute
ﬂﬂ, <
.
ﬂﬂ< =
range
ﬂﬂ= B
[
ﬂﬂB C
$num
ﬂﬂC D
]
ﬂﬂD E
;
ﬂﬂE F
float
‡‡ 
maxValue
‡‡ 
=
‡‡  

packedInfo
‡‡! +
.
‡‡+ ,
packingAttribute
‡‡, <
.
‡‡< =
range
‡‡= B
[
‡‡B C
$num
‡‡C D
]
‡‡D E
;
‡‡E F
bool
·· 
renormalizedRange
·· &
=
··' (
(
··) *
minValue
··* 2
!=
··3 5
$num
··6 :
||
··; =
maxValue
··> F
!=
··G I
$num
··J N
)
··N O
;
··O P
string
‚‚ 
maxMinusMinString
‚‚ (
=
‚‚) *
(
‚‚+ ,
maxValue
‚‚, 4
-
‚‚5 6
minValue
‚‚7 ?
)
‚‚? @
.
‚‚@ A
ToString
‚‚A I
(
‚‚I J
)
‚‚J K
;
‚‚K L
string
„„ 
minValueString
„„ %
=
„„& '
minValue
„„( 0
>
„„1 2
$num
„„3 4
?
„„5 6
$str
„„7 ;
:
„„< =
$str
„„> B
;
„„B C
minValueString
‰‰ 
+=
‰‰ !
Math
‰‰" &
.
‰‰& '
Abs
‰‰' *
(
‰‰* +
minValue
‰‰+ 3
)
‰‰3 4
.
‰‰4 5
ToString
‰‰5 =
(
‰‰= >
)
‰‰> ?
;
‰‰? @
switch
ÊÊ 
(
ÊÊ 

packedInfo
ÊÊ "
.
ÊÊ" #
packingAttribute
ÊÊ# 3
.
ÊÊ3 4
packingScheme
ÊÊ4 A
)
ÊÊA B
{
ÁÁ 
case
ËË 
FieldPacking
ËË %
.
ËË% &
PackedFloat
ËË& 1
:
ËË1 2
funcSignature
ÈÈ %
=
ÈÈ& '
$str
ÈÈ( 0
+
ÈÈ1 2
funcSignature
ÈÈ3 @
;
ÈÈ@ A"
funcBodyBeforeReturn
ÍÍ ,
=
ÍÍ- .
$str
ÍÍ/ C
+
ÍÍD E

sourceName
ÍÍF P
+
ÍÍQ R
$str
ÍÍS V
+
ÍÍW X

packedInfo
ÍÍY c
.
ÍÍc d
	fieldName
ÍÍd m
+
ÍÍn o
$str
ÍÍp t
+
ÍÍu v

packedInfoÍÍw Å
.ÍÍÅ Ç 
packingAttributeÍÍÇ í
.ÍÍí ì
offsetInSourceÍÍì °
+ÍÍ¢ £
$strÍÍ§ ®
+ÍÍ© ™

packedInfoÍÍ´ µ
.ÍÍµ ∂ 
packingAttributeÍÍ∂ ∆
.ÍÍ∆ «

sizeInBitsÍÍ« —
+ÍÍ“ ”
$strÍÍ‘ ◊
;ÍÍ◊ ÿ
if
ÎÎ 
(
ÎÎ 
renormalizedRange
ÎÎ -
)
ÎÎ- .
{
ÏÏ "
funcBodyBeforeReturn
ÌÌ 0
=
ÌÌ1 2
$str
ÌÌ3 7
+
ÌÌ8 9"
funcBodyBeforeReturn
ÌÌ: N
+
ÌÌO P
$str
ÌÌQ V
+
ÌÌW X
maxMinusMinString
ÌÌY j
+
ÌÌk l
$str
ÌÌm q
+
ÌÌr s
minValueStringÌÌt Ç
+ÌÌÉ Ñ
$strÌÌÖ à
;ÌÌà â
}
ÓÓ 
funcBody
  
+=
! #
$str
$ -
+
. /"
funcBodyBeforeReturn
0 D
+
E F
$str
G J
;
J K
break
ÒÒ 
;
ÒÒ 
case
ÚÚ 
FieldPacking
ÚÚ %
.
ÚÚ% &

PackedUint
ÚÚ& 0
:
ÚÚ0 1
funcSignature
ÛÛ %
=
ÛÛ& '
$str
ÛÛ( /
+
ÛÛ0 1
funcSignature
ÛÛ2 ?
;
ÛÛ? @"
funcBodyBeforeReturn
ÙÙ ,
=
ÙÙ- .
$str
ÙÙ/ A
+
ÙÙB C

sourceName
ÙÙD N
+
ÙÙO P
$str
ÙÙQ T
+
ÙÙU V

packedInfo
ÙÙW a
.
ÙÙa b
	fieldName
ÙÙb k
+
ÙÙl m
$str
ÙÙn r
+
ÙÙs t

packedInfo
ÙÙu 
.ÙÙ Ä 
packingAttributeÙÙÄ ê
.ÙÙê ë
offsetInSourceÙÙë ü
+ÙÙ† °
$strÙÙ¢ ¶
+ÙÙß ®

packedInfoÙÙ© ≥
.ÙÙ≥ ¥ 
packingAttributeÙÙ¥ ƒ
.ÙÙƒ ≈

sizeInBitsÙÙ≈ œ
+ÙÙ– —
$strÙÙ“ ’
;ÙÙ’ ÷
if
ıı 
(
ıı 
renormalizedRange
ıı -
)
ıı- .
{
ˆˆ "
funcBodyBeforeReturn
˜˜ 0
=
˜˜1 2
$str
˜˜3 7
+
˜˜8 9"
funcBodyBeforeReturn
˜˜: N
+
˜˜O P
$str
˜˜Q V
+
˜˜W X
maxMinusMinString
˜˜Y j
+
˜˜k l
$str
˜˜m q
+
˜˜r s
minValueString˜˜t Ç
+˜˜É Ñ
$str˜˜Ö à
;˜˜à â
}
¯¯ 
funcBody
˘˘  
+=
˘˘! #
$str
˘˘$ -
+
˘˘. /"
funcBodyBeforeReturn
˘˘0 D
+
˘˘E F
$str
˘˘G J
;
˘˘J K
break
˙˙ 
;
˙˙ 
case
˚˚ 
FieldPacking
˚˚ %
.
˚˚% &
	R11G11B10
˚˚& /
:
˚˚/ 0
funcSignature
¸¸ %
=
¸¸& '
$str
¸¸( 1
+
¸¸2 3
funcSignature
¸¸4 A
;
¸¸A B"
funcBodyBeforeReturn
˝˝ ,
=
˝˝- .
$str
˝˝/ F
+
˝˝G H

sourceName
˝˝I S
+
˝˝T U
$str
˝˝V Y
+
˝˝Z [

packedInfo
˝˝\ f
.
˝˝f g
	fieldName
˝˝g p
+
˝˝q r
$str
˝˝s v
;
˝˝v w
if
˛˛ 
(
˛˛ 
renormalizedRange
˛˛ -
)
˛˛- .
{
ˇˇ "
funcBodyBeforeReturn
ÄÄ 0
=
ÄÄ1 2
$str
ÄÄ3 7
+
ÄÄ8 9"
funcBodyBeforeReturn
ÄÄ: N
+
ÄÄO P
$str
ÄÄQ V
+
ÄÄW X
maxMinusMinString
ÄÄY j
+
ÄÄk l
$str
ÄÄm q
+
ÄÄr s
minValueStringÄÄt Ç
+ÄÄÉ Ñ
$strÄÄÖ à
;ÄÄà â
}
ÅÅ 
funcBody
ÇÇ  
+=
ÇÇ! #
$str
ÇÇ$ -
+
ÇÇ. /"
funcBodyBeforeReturn
ÇÇ0 D
+
ÇÇE F
$str
ÇÇG J
;
ÇÇJ K
break
ÉÉ 
;
ÉÉ 
case
ÑÑ 
FieldPacking
ÑÑ %
.
ÑÑ% &
	NoPacking
ÑÑ& /
:
ÑÑ/ 0
if
ÖÖ 
(
ÖÖ 

packedInfo
ÖÖ &
.
ÖÖ& '
	fieldType
ÖÖ' 0
==
ÖÖ1 3
typeof
ÖÖ4 :
(
ÖÖ: ;
uint
ÖÖ; ?
)
ÖÖ? @
)
ÖÖ@ A
{
ÜÜ 
funcSignature
áá )
=
áá* +
$str
áá, 3
+
áá4 5
funcSignature
áá6 C
;
ááC D
}
àà 
else
ââ 
if
ââ 
(
ââ  !

packedInfo
ââ! +
.
ââ+ ,
	fieldType
ââ, 5
==
ââ6 8
typeof
ââ9 ?
(
ââ? @
float
ââ@ E
)
ââE F
)
ââF G
{
ää 
funcSignature
ãã )
=
ãã* +
$str
ãã, 4
+
ãã5 6
funcSignature
ãã7 D
;
ããD E
}
åå 
else
çç 
if
çç 
(
çç  !

packedInfo
çç! +
.
çç+ ,
	fieldType
çç, 5
==
çç6 8
typeof
çç9 ?
(
çç? @
Vector3
çç@ G
)
ççG H
)
ççH I
{
éé 
funcSignature
èè )
=
èè* +
$str
èè, 5
+
èè6 7
funcSignature
èè8 E
;
èèE F
}
êê 
else
ëë 
if
ëë 
(
ëë  !

packedInfo
ëë! +
.
ëë+ ,
	fieldType
ëë, 5
==
ëë6 8
typeof
ëë9 ?
(
ëë? @
Vector4
ëë@ G
)
ëëG H
)
ëëH I
{
íí 
funcSignature
ìì )
=
ìì* +
$str
ìì, 5
+
ìì6 7
funcSignature
ìì8 E
;
ììE F
}
îî 
else
ïï 
if
ïï 
(
ïï  !

packedInfo
ïï! +
.
ïï+ ,
	fieldType
ïï, 5
==
ïï6 8
typeof
ïï9 ?
(
ïï? @

Vector2Int
ïï@ J
)
ïïJ K
)
ïïK L
{
ññ 
funcSignature
óó )
=
óó* +
$str
óó, 3
+
óó4 5
funcSignature
óó6 C
;
óóC D
}
òò 
funcBody
ôô  
+=
ôô! #
$str
ôô$ .
+
ôô/ 0

sourceName
ôô1 ;
+
ôô< =
$str
ôô> A
+
ôôB C

packedInfo
ôôD N
.
ôôN O
	fieldName
ôôO X
+
ôôY Z
$str
ôô[ _
;
ôô_ `
break
öö 
;
öö 
default
õõ 
:
õõ 
funcSignature
úú %
=
úú& '
$str
úú( N
;
úúN O
break
ùù 
;
ùù 
}
ûû 
funcBody
†† 
+=
†† 
$str
†† #
;
††# $
gettersString
°° 
+=
°°  
funcSignature
°°! .
+
°°/ 0
funcBody
°°1 9
;
°°9 :
}
¢¢ 
return
££ 
gettersString
££  
;
££  !
}
§§ 	
private
•• 
string
•• 
EmitPackedSetters
•• (
(
••( )
)
••) *
{
¶¶ 	
string
ßß 
settersString
ßß  
=
ßß! "
$str
ßß# %
;
ßß% &
settersString
©© 
+=
©© 
$str
©© #
;
©©# $
settersString
™™ 
+=
™™ 
$str
™™ =
;
™™= >
settersString
´´ 
+=
´´ 
$str
´´ #
;
´´# $
foreach
≠≠ 
(
≠≠ 
PackedFieldInfo
≠≠ $

packedInfo
≠≠% /
in
≠≠0 2!
m_PackedFieldsInfos
≠≠3 F
)
≠≠F G
{
ÆÆ 
PackingAttribute
ØØ  
attr
ØØ! %
=
ØØ& '

packedInfo
ØØ( 2
.
ØØ2 3
packingAttribute
ØØ3 C
;
ØØC D
string
∞∞ 
funcSignature
∞∞ $
=
∞∞% &
$str
∞∞' 1
+
∞∞2 3
attr
∞∞4 8
.
∞∞8 9
displayNames
∞∞9 E
[
∞∞E F
$num
∞∞F G
]
∞∞G H
+
∞∞I J
$str
∞∞K N
;
∞∞N O
string
±± 
newParamName
±± #
=
±±$ %
$str
±±& +
+
±±, -
attr
±±. 2
.
±±2 3
displayNames
±±3 ?
[
±±? @
$num
±±@ A
]
±±A B
;
±±B C
string
≤≤ 
funcBody
≤≤ 
=
≤≤  !
$str
≤≤" +
;
≤≤+ ,
string
≥≥ 
shiftString
≥≥ "
=
≥≥# $
attr
≥≥% )
.
≥≥) *
offsetInSource
≥≥* 8
!=
≥≥9 ;
$num
≥≥< =
?
≥≥> ?
(
≥≥@ A
$str
≥≥A G
+
≥≥H I
attr
≥≥J N
.
≥≥N O
offsetInSource
≥≥O ]
)
≥≥] ^
:
≥≥_ `
$str
≥≥a d
;
≥≥d e
string
¥¥ 

sourceName
¥¥ !
=
¥¥" #
type
¥¥$ (
.
¥¥( )
Name
¥¥) -
.
¥¥- .
ToLower
¥¥. 5
(
¥¥5 6
)
¥¥6 7
;
¥¥7 8
uint
µµ 
mask
µµ 
=
µµ 
(
µµ 
$num
µµ 
<<
µµ  "
attr
µµ# '
.
µµ' (

sizeInBits
µµ( 2
)
µµ2 3
-
µµ4 5
$num
µµ6 8
;
µµ8 9
string
∂∂ 

maskString
∂∂ !
=
∂∂" #
mask
∂∂$ (
.
∂∂( )
ToString
∂∂) 1
(
∂∂1 2
)
∂∂2 3
;
∂∂3 4
float
∑∑ 
minValue
∑∑ 
=
∑∑  

packedInfo
∑∑! +
.
∑∑+ ,
packingAttribute
∑∑, <
.
∑∑< =
range
∑∑= B
[
∑∑B C
$num
∑∑C D
]
∑∑D E
;
∑∑E F
float
∏∏ 
maxValue
∏∏ 
=
∏∏  

packedInfo
∏∏! +
.
∏∏+ ,
packingAttribute
∏∏, <
.
∏∏< =
range
∏∏= B
[
∏∏B C
$num
∏∏C D
]
∏∏D E
;
∏∏E F
bool
ππ 
renormalizedRange
ππ &
=
ππ' (
(
ππ) *
minValue
ππ* 2
!=
ππ3 5
$num
ππ6 :
||
ππ; =
maxValue
ππ> F
!=
ππG I
$num
ππJ N
)
ππN O
;
ππO P
float
∫∫ 
maxMinusMinInv
∫∫ $
=
∫∫% &
(
∫∫' (
$num
∫∫( ,
/
∫∫- .
(
∫∫/ 0
maxValue
∫∫0 8
-
∫∫9 :
minValue
∫∫; C
)
∫∫C D
)
∫∫D E
;
∫∫E F
float
ªª  
minOvermaxMinusMin
ªª (
=
ªª) *
minValue
ªª+ 3
*
ªª4 5
maxMinusMinInv
ªª6 D
;
ªªD E
string
ºº &
minOvermaxMinusMinString
ºº /
=
ºº0 1 
minOvermaxMinusMin
ºº2 D
>
ººE F
$num
ººG H
?
ººI J
$str
ººK P
:
ººQ R
$str
ººS X
;
ººX Y&
minOvermaxMinusMinString
ΩΩ (
+=
ΩΩ) +
(
ΩΩ, -
Math
ΩΩ- 1
.
ΩΩ1 2
Abs
ΩΩ2 5
(
ΩΩ5 6 
minOvermaxMinusMin
ΩΩ6 H
)
ΩΩH I
)
ΩΩI J
.
ΩΩJ K
ToString
ΩΩK S
(
ΩΩS T
)
ΩΩT U
;
ΩΩU V
string
ææ "
maxMinusMinInvString
ææ +
=
ææ, -
maxMinusMinInv
ææ. <
.
ææ< =
ToString
ææ= E
(
ææE F
)
ææF G
;
ææG H
string
¿¿ 
newParamCode
¿¿ #
;
¿¿# $
switch
¡¡ 
(
¡¡ 
attr
¡¡ 
.
¡¡ 
packingScheme
¡¡ *
)
¡¡* +
{
¬¬ 
case
√√ 
FieldPacking
√√ %
.
√√% &
PackedFloat
√√& 1
:
√√1 2
funcSignature
ƒƒ %
+=
ƒƒ& (
$str
ƒƒ) 1
+
ƒƒ2 3
newParamName
ƒƒ4 @
+
ƒƒA B
$str
ƒƒC M
+
ƒƒN O
type
ƒƒP T
.
ƒƒT U
Name
ƒƒU Y
+
ƒƒZ [
$str
ƒƒ\ _
+
ƒƒ` a

sourceName
ƒƒb l
+
ƒƒm n
$str
ƒƒo r
;
ƒƒr s
newParamCode
≈≈ $
=
≈≈% &
newParamName
≈≈' 3
;
≈≈3 4
if
∆∆ 
(
∆∆ 
renormalizedRange
∆∆ -
)
∆∆- .
{
«« 
newParamCode
»» (
=
»») *
$str
»»+ /
+
»»0 1
newParamCode
»»2 >
+
»»? @
$str
»»A F
+
»»G H"
maxMinusMinInvString
»»I ]
+
»»^ _
$str
»»` d
+
»»e f&
minOvermaxMinusMinString
»»g 
+»»Ä Å
$str»»Ç Ö
;»»Ö Ü
}
…… 
funcBody
    
+=
  ! #

sourceName
  $ .
+
  / 0
$str
  1 4
+
  5 6

packedInfo
  7 A
.
  A B
	fieldName
  B K
+
  L M
$str
  N b
+
  c d

maskString
  e o
+
  p q
shiftString
  r }
+
  ~ 
$str  Ä é
+  è ê
newParamCode  ë ù
+  û ü
$str  † §
+  • ¶
attr  ß ´
.  ´ ¨

sizeInBits  ¨ ∂
+  ∑ ∏
$str  π º
+  Ω æ
shiftString  ø  
+  À Ã
$str  Õ —
+  “ ”

sourceName  ‘ ﬁ
+  ﬂ ‡
$str  · ‰
+  Â Ê

packedInfo  Á Ò
.  Ò Ú
	fieldName  Ú ˚
+  ¸ ˝
$str  ˛ Ç
;  Ç É
break
ÀÀ 
;
ÀÀ 
case
ÃÃ 
FieldPacking
ÃÃ %
.
ÃÃ% &

PackedUint
ÃÃ& 0
:
ÃÃ0 1
funcSignature
ÕÕ %
+=
ÕÕ& (
$str
ÕÕ) 0
+
ÕÕ1 2
newParamName
ÕÕ3 ?
+
ÕÕ@ A
$str
ÕÕB L
+
ÕÕM N
type
ÕÕO S
.
ÕÕS T
Name
ÕÕT X
+
ÕÕY Z
$str
ÕÕ[ ^
+
ÕÕ_ `

sourceName
ÕÕa k
+
ÕÕl m
$str
ÕÕn q
;
ÕÕq r
newParamCode
ŒŒ $
=
ŒŒ% &
newParamName
ŒŒ' 3
;
ŒŒ3 4
if
œœ 
(
œœ 
renormalizedRange
œœ -
)
œœ- .
{
–– 
newParamCode
—— (
=
——) *
$str
——+ /
+
——0 1
newParamCode
——2 >
+
——? @
$str
——A F
+
——G H"
maxMinusMinInvString
——I ]
+
——^ _
$str
——` d
+
——e f&
minOvermaxMinusMinString
——g 
+——Ä Å
$str——Ç Ö
;——Ö Ü
}
““ 
funcBody
””  
+=
””! #

sourceName
””$ .
+
””/ 0
$str
””1 4
+
””5 6

packedInfo
””7 A
.
””A B
	fieldName
””B K
+
””L M
$str
””N b
+
””c d

maskString
””e o
+
””p q
shiftString
””r }
+
””~ 
$str””Ä Ö
+””Ü á
newParamCode””à î
+””ï ñ
$str””ó ö
+””õ ú
shiftString””ù ®
+””© ™
$str””´ Ø
+””∞ ±

sourceName””≤ º
+””Ω æ
$str””ø ¬
+””√ ƒ

packedInfo””≈ œ
.””œ –
	fieldName””– Ÿ
+””⁄ €
$str””‹ ‡
;””‡ ·
break
‘‘ 
;
‘‘ 
case
’’ 
FieldPacking
’’ %
.
’’% &
	R11G11B10
’’& /
:
’’/ 0
funcSignature
÷÷ %
+=
÷÷& (
$str
÷÷) 2
+
÷÷3 4
newParamName
÷÷5 A
+
÷÷B C
$str
÷÷D N
+
÷÷O P
type
÷÷Q U
.
÷÷U V
Name
÷÷V Z
+
÷÷[ \
$str
÷÷] `
+
÷÷a b

sourceName
÷÷c m
+
÷÷n o
$str
÷÷p s
;
÷÷s t
newParamCode
◊◊ $
=
◊◊% &
newParamName
◊◊' 3
;
◊◊3 4
if
ÿÿ 
(
ÿÿ 
renormalizedRange
ÿÿ -
)
ÿÿ- .
{
ŸŸ 
newParamCode
⁄⁄ (
=
⁄⁄) *
$str
⁄⁄+ /
+
⁄⁄0 1
newParamCode
⁄⁄2 >
+
⁄⁄? @
$str
⁄⁄A F
+
⁄⁄G H"
maxMinusMinInvString
⁄⁄I ]
+
⁄⁄^ _
$str
⁄⁄` d
+
⁄⁄e f&
minOvermaxMinusMinString
⁄⁄g 
+⁄⁄Ä Å
$str⁄⁄Ç Ö
;⁄⁄Ö Ü
}
€€ 
funcBody
‹‹  
+=
‹‹! #

sourceName
‹‹$ .
+
‹‹/ 0
$str
‹‹1 4
+
‹‹5 6

packedInfo
‹‹7 A
.
‹‹A B
	fieldName
‹‹B K
+
‹‹L M
$str
‹‹N d
+
‹‹e f
newParamCode
‹‹g s
+
‹‹t u
$str
‹‹v z
;
‹‹z {
break
›› 
;
›› 
case
ﬁﬁ 
FieldPacking
ﬁﬁ %
.
ﬁﬁ% &
	NoPacking
ﬁﬁ& /
:
ﬁﬁ/ 0
if
ﬂﬂ 
(
ﬂﬂ 

packedInfo
ﬂﬂ &
.
ﬂﬂ& '
	fieldType
ﬂﬂ' 0
==
ﬂﬂ1 3
typeof
ﬂﬂ4 :
(
ﬂﬂ: ;
uint
ﬂﬂ; ?
)
ﬂﬂ? @
)
ﬂﬂ@ A
{
‡‡ 
funcSignature
·· )
+=
··* ,
$str
··- 4
+
··5 6
newParamName
··7 C
+
··D E
$str
··F P
+
··Q R
type
··S W
.
··W X
Name
··X \
+
··] ^
$str
··_ b
+
··c d

sourceName
··e o
+
··p q
$str
··r u
;
··u v
}
‚‚ 
else
„„ 
if
„„ 
(
„„  !

packedInfo
„„! +
.
„„+ ,
	fieldType
„„, 5
==
„„6 8
typeof
„„9 ?
(
„„? @
float
„„@ E
)
„„E F
)
„„F G
{
‰‰ 
funcSignature
ÂÂ )
+=
ÂÂ* ,
$str
ÂÂ- 5
+
ÂÂ6 7
newParamName
ÂÂ8 D
+
ÂÂE F
$str
ÂÂG Q
+
ÂÂR S
type
ÂÂT X
.
ÂÂX Y
Name
ÂÂY ]
+
ÂÂ^ _
$str
ÂÂ` c
+
ÂÂd e

sourceName
ÂÂf p
+
ÂÂq r
$str
ÂÂs v
;
ÂÂv w
}
ÊÊ 
else
ÁÁ 
if
ÁÁ 
(
ÁÁ  !

packedInfo
ÁÁ! +
.
ÁÁ+ ,
	fieldType
ÁÁ, 5
==
ÁÁ6 8
typeof
ÁÁ9 ?
(
ÁÁ? @
Vector3
ÁÁ@ G
)
ÁÁG H
)
ÁÁH I
{
ËË 
funcSignature
ÈÈ )
+=
ÈÈ* ,
$str
ÈÈ- 6
+
ÈÈ7 8
newParamName
ÈÈ9 E
+
ÈÈF G
$str
ÈÈH R
+
ÈÈS T
type
ÈÈU Y
.
ÈÈY Z
Name
ÈÈZ ^
+
ÈÈ_ `
$str
ÈÈa d
+
ÈÈe f

sourceName
ÈÈg q
+
ÈÈr s
$str
ÈÈt w
;
ÈÈw x
}
ÍÍ 
else
ÎÎ 
if
ÎÎ 
(
ÎÎ  !

packedInfo
ÎÎ! +
.
ÎÎ+ ,
	fieldType
ÎÎ, 5
==
ÎÎ6 8
typeof
ÎÎ9 ?
(
ÎÎ? @
Vector4
ÎÎ@ G
)
ÎÎG H
)
ÎÎH I
{
ÏÏ 
funcSignature
ÌÌ )
+=
ÌÌ* ,
$str
ÌÌ- 6
+
ÌÌ7 8
newParamName
ÌÌ9 E
+
ÌÌF G
$str
ÌÌH R
+
ÌÌS T
type
ÌÌU Y
.
ÌÌY Z
Name
ÌÌZ ^
+
ÌÌ_ `
$str
ÌÌa d
+
ÌÌe f

sourceName
ÌÌg q
+
ÌÌr s
$str
ÌÌt w
;
ÌÌw x
}
ÓÓ 
else
ÔÔ 
if
ÔÔ 
(
ÔÔ  !

packedInfo
ÔÔ! +
.
ÔÔ+ ,
	fieldType
ÔÔ, 5
==
ÔÔ6 8
typeof
ÔÔ9 ?
(
ÔÔ? @

Vector2Int
ÔÔ@ J
)
ÔÔJ K
)
ÔÔK L
{
 
funcSignature
ÒÒ )
+=
ÒÒ* ,
$str
ÒÒ- 4
+
ÒÒ5 6
newParamName
ÒÒ7 C
+
ÒÒD E
$str
ÒÒF P
+
ÒÒQ R
type
ÒÒS W
.
ÒÒW X
Name
ÒÒX \
+
ÒÒ] ^
$str
ÒÒ_ b
+
ÒÒc d

sourceName
ÒÒe o
+
ÒÒp q
$str
ÒÒr u
;
ÒÒu v
}
ÚÚ 
funcBody
ÛÛ  
+=
ÛÛ! #

sourceName
ÛÛ$ .
+
ÛÛ/ 0
$str
ÛÛ1 4
+
ÛÛ5 6

packedInfo
ÛÛ7 A
.
ÛÛA B
	fieldName
ÛÛB K
+
ÛÛL M
$str
ÛÛN S
+
ÛÛT U
newParamName
ÛÛV b
+
ÛÛc d
$str
ÛÛe h
;
ÛÛh i
break
ÙÙ 
;
ÙÙ 
default
ıı 
:
ıı 
funcSignature
ˆˆ %
=
ˆˆ& '
$str
ˆˆ( N
;
ˆˆN O
break
˜˜ 
;
˜˜ 
}
¯¯ 
funcSignature
˙˙ 
+=
˙˙  
$str
˙˙! %
;
˙˙% &
funcBody
˚˚ 
+=
˚˚ 
$str
˚˚ #
;
˚˚# $
settersString
˛˛ 
+=
˛˛  
funcSignature
˛˛! .
+
˛˛/ 0
funcBody
˛˛1 9
;
˛˛9 :
}
ˇˇ 
return
ÄÄ 
settersString
ÄÄ  
;
ÄÄ  !
}
ÅÅ 	
private
ÇÇ 
string
ÇÇ 
EmitPackedInit
ÇÇ %
(
ÇÇ% &
)
ÇÇ& '
{
ÉÉ 	
string
ÑÑ 

initString
ÑÑ 
=
ÑÑ 
$str
ÑÑ  "
;
ÑÑ" #

initString
ÜÜ 
+=
ÜÜ 
$str
ÜÜ  
;
ÜÜ  !

initString
áá 
+=
áá 
$str
áá B
;
ááB C

initString
àà 
+=
àà 
$str
àà v
;
ààv w

initString
ââ 
+=
ââ 
$str
ââ  
;
ââ  !
foreach
ãã 
(
ãã 
PackedFieldInfo
ãã $

packedInfo
ãã% /
in
ãã0 2!
m_PackedFieldsInfos
ãã3 F
)
ããF G
{
åå 
PackingAttribute
çç  
attr
çç! %
=
çç& '

packedInfo
çç( 2
.
çç2 3
packingAttribute
çç3 C
;
ççC D
string
éé 
funcSignature
éé $
=
éé% &
$str
éé' 2
+
éé3 4
attr
éé5 9
.
éé9 :
displayNames
éé: F
[
ééF G
$num
ééG H
]
ééH I
+
ééJ K
$str
ééL O
;
ééO P
string
èè 
newParamName
èè #
=
èè$ %
$str
èè& +
+
èè, -
attr
èè. 2
.
èè2 3
displayNames
èè3 ?
[
èè? @
$num
èè@ A
]
èèA B
;
èèB C
string
êê 
funcBody
êê 
=
êê  !
$str
êê" +
;
êê+ ,
string
ëë 
shiftString
ëë "
=
ëë# $
attr
ëë% )
.
ëë) *
offsetInSource
ëë* 8
!=
ëë9 ;
$num
ëë< =
?
ëë> ?
(
ëë@ A
$str
ëëA G
+
ëëH I
attr
ëëJ N
.
ëëN O
offsetInSource
ëëO ]
)
ëë] ^
:
ëë_ `
$str
ëëa d
;
ëëd e
string
íí 

sourceName
íí !
=
íí" #
type
íí$ (
.
íí( )
Name
íí) -
.
íí- .
ToLower
íí. 5
(
íí5 6
)
íí6 7
;
íí7 8
float
ìì 
minValue
ìì 
=
ìì  

packedInfo
ìì! +
.
ìì+ ,
packingAttribute
ìì, <
.
ìì< =
range
ìì= B
[
ììB C
$num
ììC D
]
ììD E
;
ììE F
float
îî 
maxValue
îî 
=
îî  

packedInfo
îî! +
.
îî+ ,
packingAttribute
îî, <
.
îî< =
range
îî= B
[
îîB C
$num
îîC D
]
îîD E
;
îîE F
bool
ïï 
renormalizedRange
ïï &
=
ïï' (
(
ïï) *
minValue
ïï* 2
!=
ïï3 5
$num
ïï6 :
||
ïï; =
maxValue
ïï> F
!=
ïïG I
$num
ïïJ N
)
ïïN O
;
ïïO P
float
ññ 
maxMinusMinInv
ññ $
=
ññ% &
(
ññ' (
$num
ññ( ,
/
ññ- .
(
ññ/ 0
maxValue
ññ0 8
-
ññ9 :
minValue
ññ; C
)
ññC D
)
ññD E
;
ññE F
float
óó  
minOvermaxMinusMin
óó (
=
óó) *
minValue
óó+ 3
*
óó4 5
maxMinusMinInv
óó6 D
;
óóD E
string
òò &
minOvermaxMinusMinString
òò /
=
òò0 1 
minOvermaxMinusMin
òò2 D
>
òòE F
$num
òòG H
?
òòI J
$str
òòK P
:
òòQ R
$str
òòS X
;
òòX Y&
minOvermaxMinusMinString
ôô (
+=
ôô) +
(
ôô, -
Math
ôô- 1
.
ôô1 2
Abs
ôô2 5
(
ôô5 6 
minOvermaxMinusMin
ôô6 H
)
ôôH I
)
ôôI J
.
ôôJ K
ToString
ôôK S
(
ôôS T
)
ôôT U
;
ôôU V
string
öö "
maxMinusMinInvString
öö +
=
öö, -
maxMinusMinInv
öö. <
.
öö< =
ToString
öö= E
(
ööE F
)
ööF G
;
ööG H
string
ùù 
newParamCode
ùù #
;
ùù# $
switch
ûû 
(
ûû 
attr
ûû 
.
ûû 
packingScheme
ûû *
)
ûû* +
{
üü 
case
†† 
FieldPacking
†† %
.
††% &
PackedFloat
††& 1
:
††1 2
funcSignature
°° %
+=
°°& (
$str
°°) 1
+
°°2 3
newParamName
°°4 @
+
°°A B
$str
°°C M
+
°°N O
type
°°P T
.
°°T U
Name
°°U Y
+
°°Z [
$str
°°\ _
+
°°` a

sourceName
°°b l
+
°°m n
$str
°°o r
;
°°r s
newParamCode
¢¢ $
=
¢¢% &
newParamName
¢¢' 3
;
¢¢3 4
if
££ 
(
££ 
renormalizedRange
££ -
)
££- .
{
§§ 
newParamCode
•• (
=
••) *
$str
••+ /
+
••0 1
newParamCode
••2 >
+
••? @
$str
••A F
+
••G H"
maxMinusMinInvString
••I ]
+
••^ _
$str
••` d
+
••e f&
minOvermaxMinusMinString
••g 
+••Ä Å
$str••Ç Ö
;••Ö Ü
}
¶¶ 
funcBody
ßß  
+=
ßß! #

sourceName
ßß$ .
+
ßß/ 0
$str
ßß1 4
+
ßß5 6

packedInfo
ßß7 A
.
ßßA B
	fieldName
ßßB K
+
ßßL M
$str
ßßN ^
+
ßß_ `
newParamCode
ßßa m
+
ßßn o
$str
ßßp t
+
ßßu v
attr
ßßw {
.
ßß{ |

sizeInBitsßß| Ü
+ßßá à
$strßßâ å
+ßßç é
shiftStringßßè ö
+ßßõ ú
$strßßù °
;ßß° ¢
break
®® 
;
®® 
case
©© 
FieldPacking
©© %
.
©©% &

PackedUint
©©& 0
:
©©0 1
funcSignature
™™ %
+=
™™& (
$str
™™) 0
+
™™1 2
newParamName
™™3 ?
+
™™@ A
$str
™™B L
+
™™M N
type
™™O S
.
™™S T
Name
™™T X
+
™™Y Z
$str
™™[ ^
+
™™_ `

sourceName
™™a k
+
™™l m
$str
™™n q
;
™™q r
newParamCode
´´ $
=
´´% &
newParamName
´´' 3
;
´´3 4
if
¨¨ 
(
¨¨ 
renormalizedRange
¨¨ -
)
¨¨- .
{
≠≠ 
newParamCode
ÆÆ (
=
ÆÆ) *
$str
ÆÆ+ /
+
ÆÆ0 1
newParamCode
ÆÆ2 >
+
ÆÆ? @
$str
ÆÆA F
+
ÆÆG H"
maxMinusMinInvString
ÆÆI ]
+
ÆÆ^ _
$str
ÆÆ` d
+
ÆÆe f&
minOvermaxMinusMinString
ÆÆg 
+ÆÆÄ Å
$strÆÆÇ Ö
;ÆÆÖ Ü
}
ØØ 
funcBody
∞∞  
+=
∞∞! #

sourceName
∞∞$ .
+
∞∞/ 0
$str
∞∞1 4
+
∞∞5 6

packedInfo
∞∞7 A
.
∞∞A B
	fieldName
∞∞B K
+
∞∞L M
$str
∞∞N U
+
∞∞V W
newParamCode
∞∞X d
+
∞∞e f
$str
∞∞g j
+
∞∞k l
shiftString
∞∞m x
+
∞∞y z
$str
∞∞{ ~
;
∞∞~ 
break
±± 
;
±± 
case
≤≤ 
FieldPacking
≤≤ %
.
≤≤% &
	R11G11B10
≤≤& /
:
≤≤/ 0
funcSignature
≥≥ %
+=
≥≥& (
$str
≥≥) 2
+
≥≥3 4
newParamName
≥≥5 A
+
≥≥B C
$str
≥≥D N
+
≥≥O P
type
≥≥Q U
.
≥≥U V
Name
≥≥V Z
+
≥≥[ \
$str
≥≥] `
+
≥≥a b

sourceName
≥≥c m
+
≥≥n o
$str
≥≥p s
;
≥≥s t
newParamCode
¥¥ $
=
¥¥% &
newParamName
¥¥' 3
;
¥¥3 4
if
µµ 
(
µµ 
renormalizedRange
µµ -
)
µµ- .
{
∂∂ 
newParamCode
∑∑ (
=
∑∑) *
$str
∑∑+ /
+
∑∑0 1
newParamCode
∑∑2 >
+
∑∑? @
$str
∑∑A F
+
∑∑G H"
maxMinusMinInvString
∑∑I ]
+
∑∑^ _
$str
∑∑` d
+
∑∑e f&
minOvermaxMinusMinString
∑∑g 
+∑∑Ä Å
$str∑∑Ç Ö
;∑∑Ö Ü
}
∏∏ 
funcBody
ππ  
+=
ππ! #

sourceName
ππ$ .
+
ππ/ 0
$str
ππ1 4
+
ππ5 6

packedInfo
ππ7 A
.
ππA B
	fieldName
ππB K
+
ππL M
$str
ππN d
+
ππe f
newParamCode
ππg s
+
ππt u
$str
ππv z
;
ππz {
break
∫∫ 
;
∫∫ 
case
ªª 
FieldPacking
ªª %
.
ªª% &
	NoPacking
ªª& /
:
ªª/ 0
if
ºº 
(
ºº 

packedInfo
ºº &
.
ºº& '
	fieldType
ºº' 0
==
ºº1 3
typeof
ºº4 :
(
ºº: ;
uint
ºº; ?
)
ºº? @
)
ºº@ A
{
ΩΩ 
funcSignature
ææ )
+=
ææ* ,
$str
ææ- 4
+
ææ5 6
newParamName
ææ7 C
+
ææD E
$str
ææF P
+
ææQ R
type
ææS W
.
ææW X
Name
ææX \
+
ææ] ^
$str
ææ_ b
+
ææc d

sourceName
ææe o
+
ææp q
$str
æær u
;
ææu v
}
øø 
else
¿¿ 
if
¿¿ 
(
¿¿  !

packedInfo
¿¿! +
.
¿¿+ ,
	fieldType
¿¿, 5
==
¿¿6 8
typeof
¿¿9 ?
(
¿¿? @
float
¿¿@ E
)
¿¿E F
)
¿¿F G
{
¡¡ 
funcSignature
¬¬ )
+=
¬¬* ,
$str
¬¬- 5
+
¬¬6 7
newParamName
¬¬8 D
+
¬¬E F
$str
¬¬G Q
+
¬¬R S
type
¬¬T X
.
¬¬X Y
Name
¬¬Y ]
+
¬¬^ _
$str
¬¬` c
+
¬¬d e

sourceName
¬¬f p
+
¬¬q r
$str
¬¬s v
;
¬¬v w
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ  !

packedInfo
ƒƒ! +
.
ƒƒ+ ,
	fieldType
ƒƒ, 5
==
ƒƒ6 8
typeof
ƒƒ9 ?
(
ƒƒ? @
Vector3
ƒƒ@ G
)
ƒƒG H
)
ƒƒH I
{
≈≈ 
funcSignature
∆∆ )
+=
∆∆* ,
$str
∆∆- 6
+
∆∆7 8
newParamName
∆∆9 E
+
∆∆F G
$str
∆∆H R
+
∆∆S T
type
∆∆U Y
.
∆∆Y Z
Name
∆∆Z ^
+
∆∆_ `
$str
∆∆a d
+
∆∆e f

sourceName
∆∆g q
+
∆∆r s
$str
∆∆t w
;
∆∆w x
}
«« 
else
»» 
if
»» 
(
»»  !

packedInfo
»»! +
.
»»+ ,
	fieldType
»», 5
==
»»6 8
typeof
»»9 ?
(
»»? @
Vector4
»»@ G
)
»»G H
)
»»H I
{
…… 
funcSignature
   )
+=
  * ,
$str
  - 6
+
  7 8
newParamName
  9 E
+
  F G
$str
  H R
+
  S T
type
  U Y
.
  Y Z
Name
  Z ^
+
  _ `
$str
  a d
+
  e f

sourceName
  g q
+
  r s
$str
  t w
;
  w x
}
ÀÀ 
else
ÃÃ 
if
ÃÃ 
(
ÃÃ  !

packedInfo
ÃÃ! +
.
ÃÃ+ ,
	fieldType
ÃÃ, 5
==
ÃÃ6 8
typeof
ÃÃ9 ?
(
ÃÃ? @

Vector2Int
ÃÃ@ J
)
ÃÃJ K
)
ÃÃK L
{
ÕÕ 
funcSignature
ŒŒ )
+=
ŒŒ* ,
$str
ŒŒ- 4
+
ŒŒ5 6
newParamName
ŒŒ7 C
+
ŒŒD E
$str
ŒŒF P
+
ŒŒQ R
type
ŒŒS W
.
ŒŒW X
Name
ŒŒX \
+
ŒŒ] ^
$str
ŒŒ_ b
+
ŒŒc d

sourceName
ŒŒe o
+
ŒŒp q
$str
ŒŒr u
;
ŒŒu v
}
œœ 
funcBody
––  
+=
––! #

sourceName
––$ .
+
––/ 0
$str
––1 4
+
––5 6

packedInfo
––7 A
.
––A B
	fieldName
––B K
+
––L M
$str
––N S
+
––T U
newParamName
––V b
+
––c d
$str
––e h
;
––h i
break
—— 
;
—— 
default
““ 
:
““ 
funcSignature
”” %
=
””& '
$str
””( S
;
””S T
break
‘‘ 
;
‘‘ 
}
’’ 
funcSignature
◊◊ 
+=
◊◊  
$str
◊◊! %
;
◊◊% &
funcBody
ÿÿ 
+=
ÿÿ 
$str
ÿÿ #
;
ÿÿ# $

initString
ŸŸ 
+=
ŸŸ 
funcSignature
ŸŸ +
+
ŸŸ, -
funcBody
ŸŸ. 6
;
ŸŸ6 7
}
⁄⁄ 
return
€€ 

initString
€€ 
;
€€ 
}
‹‹ 	
public
ﬁﬁ 
string
ﬁﬁ 
EmitPackedInfo
ﬁﬁ $
(
ﬁﬁ$ %
)
ﬁﬁ% &
{
ﬂﬂ 	
string
‡‡ !
pathToPackingHeader
‡‡ &
=
‡‡' (
$str
‡‡) }
;
‡‡} ~
string
·· 
packedStructCode
·· #
=
··$ %!
pathToPackingHeader
··& 9
+
··: ;
EmitPackedGetters
··< M
(
··M N
)
··N O
+
··P Q
EmitPackedSetters
··R c
(
··c d
)
··d e
+
··f g
EmitPackedInit
··h v
(
··v w
)
··w x
+
··y z
$str
··{ 
;·· Ä
if
‚‚ 
(
‚‚ 
attr
‚‚ 
.
‚‚ 
needParamDebug
‚‚ #
)
‚‚# $
{
„„ 
packedStructCode
‰‰  
+=
‰‰! #$
EmitFunctionsForPacked
‰‰$ :
(
‰‰: ;
)
‰‰; <
;
‰‰< =
}
ÂÂ 
return
ÊÊ 
packedStructCode
ÊÊ #
;
ÊÊ# $
}
ÁÁ 	
string
ÎÎ 
InsertUnderscore
ÎÎ 
(
ÎÎ  
string
ÎÎ  &
name
ÎÎ' +
)
ÎÎ+ ,
{
ÏÏ 	
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
i
ÌÌ 
<
ÌÌ 
name
ÌÌ  $
.
ÌÌ$ %
Length
ÌÌ% +
;
ÌÌ+ ,
i
ÌÌ- .
++
ÌÌ. 0
)
ÌÌ0 1
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
char
ÔÔ 
.
ÔÔ 
IsLower
ÔÔ  
(
ÔÔ  !
name
ÔÔ! %
[
ÔÔ% &
i
ÔÔ& '
-
ÔÔ( )
$num
ÔÔ* +
]
ÔÔ+ ,
)
ÔÔ, -
&&
ÔÔ. 0
char
ÔÔ1 5
.
ÔÔ5 6
IsUpper
ÔÔ6 =
(
ÔÔ= >
name
ÔÔ> B
[
ÔÔB C
i
ÔÔC D
]
ÔÔD E
)
ÔÔE F
)
ÔÔF G
{
 
name
ÚÚ 
=
ÚÚ 
name
ÚÚ 
.
ÚÚ  
Insert
ÚÚ  &
(
ÚÚ& '
i
ÚÚ' (
,
ÚÚ( )
$str
ÚÚ* -
)
ÚÚ- .
;
ÚÚ. /
}
ÛÛ 
}
ÙÙ 
return
ˆˆ 
name
ˆˆ 
;
ˆˆ 
}
˜˜ 	
public
˘˘ 
bool
˘˘ 
Generate
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 	
	m_Statics
˚˚ 
=
˚˚ 
new
˚˚ 

Dictionary
˚˚ &
<
˚˚& '
string
˚˚' -
,
˚˚- .
string
˚˚/ 5
>
˚˚5 6
(
˚˚6 7
)
˚˚7 8
;
˚˚8 9
	FieldInfo
˝˝ 
[
˝˝ 
]
˝˝ 
fields
˝˝ 
=
˝˝  
type
˝˝! %
.
˝˝% &
	GetFields
˝˝& /
(
˝˝/ 0
)
˝˝0 1
;
˝˝1 2
m_ShaderFields
˛˛ 
=
˛˛ 
new
˛˛  
List
˛˛! %
<
˛˛% &
ShaderFieldInfo
˛˛& 5
>
˛˛5 6
(
˛˛6 7
)
˛˛7 8
;
˛˛8 9
m_DebugFields
ˇˇ 
=
ˇˇ 
new
ˇˇ 
List
ˇˇ  $
<
ˇˇ$ %
DebugFieldInfo
ˇˇ% 3
>
ˇˇ3 4
(
ˇˇ4 5
)
ˇˇ5 6
;
ˇˇ6 7!
m_PackedFieldsInfos
ÄÄ 
=
ÄÄ  !
new
ÄÄ" %
List
ÄÄ& *
<
ÄÄ* +
PackedFieldInfo
ÄÄ+ :
>
ÄÄ: ;
(
ÄÄ; <
)
ÄÄ< =
;
ÄÄ= >
if
ÇÇ 
(
ÇÇ 
type
ÇÇ 
.
ÇÇ 
IsEnum
ÇÇ 
)
ÇÇ 
{
ÉÉ 
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
field
ÑÑ "
in
ÑÑ# %
fields
ÑÑ& ,
)
ÑÑ, -
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 
field
ÜÜ 
.
ÜÜ 
IsSpecialName
ÜÜ ,
)
ÜÜ, -
{
áá 
string
àà 
name
àà #
=
àà$ %
field
àà& +
.
àà+ ,
Name
àà, 0
;
àà0 1
name
ââ 
=
ââ 
InsertUnderscore
ââ /
(
ââ/ 0
name
ââ0 4
)
ââ4 5
;
ââ5 6
	m_Statics
ää !
[
ää! "
(
ää" #
type
ää# '
.
ää' (
Name
ää( ,
+
ää- .
$str
ää/ 2
+
ää3 4
name
ää5 9
)
ää9 :
.
ää: ;
ToUpper
ää; B
(
ääB C
)
ääC D
]
ääD E
=
ääF G
field
ääH M
.
ääM N!
GetRawConstantValue
ääN a
(
ääa b
)
ääb c
.
ääc d
ToString
ääd l
(
ääl m
)
ääm n
;
ään o
}
ãã 
}
åå 
errors
çç 
=
çç 
null
çç 
;
çç 
return
éé 
true
éé 
;
éé 
}
èè 
foreach
ëë 
(
ëë 
var
ëë 
field
ëë 
in
ëë !
fields
ëë" (
)
ëë( )
{
íí 
Type
îî 
	fieldType
îî 
=
îî  
field
îî! &
.
îî& '
	FieldType
îî' 0
;
îî0 1
int
ïï 
	arraySize
ïï 
=
ïï 
-
ïï  !
$num
ïï! "
;
ïï" #
if
óó 
(
óó 
	Attribute
óó 
.
óó 
	IsDefined
óó '
(
óó' (
field
óó( -
,
óó- .
typeof
óó/ 5
(
óó5 6"
FixedBufferAttribute
óó6 J
)
óóJ K
)
óóK L
)
óóL M
{
òò 
var
ôô 

arrayInfos
ôô "
=
ôô# $
(
ôô% &
field
ôô& +
.
ôô+ ,!
GetCustomAttributes
ôô, ?
(
ôô? @
typeof
ôô@ F
(
ôôF G
	HLSLArray
ôôG P
)
ôôP Q
,
ôôQ R
false
ôôS X
)
ôôX Y
as
ôôZ \
	HLSLArray
ôô] f
[
ôôf g
]
ôôg h
)
ôôh i
;
ôôi j
if
öö 
(
öö 

arrayInfos
öö "
.
öö" #
Length
öö# )
!=
öö* ,
$num
öö- .
)
öö. /
{
õõ 
if
ùù 
(
ùù 
attr
ùù  
.
ùù  !
generateCBuffer
ùù! 0
&&
ùù1 3

arrayInfos
ûû &
[
ûû& '
$num
ûû' (
]
ûû( )
.
ûû) *
elementType
ûû* 5
!=
ûû6 8
typeof
ûû9 ?
(
ûû? @
Vector4
ûû@ G
)
ûûG H
&&
ûûI K

arrayInfos
üü &
[
üü& '
$num
üü' (
]
üü( )
.
üü) *
elementType
üü* 5
!=
üü6 8
typeof
üü9 ?
(
üü? @
ShaderGenUInt4
üü@ N
)
üüN O
&&
üüP R

arrayInfos
†† &
[
††& '
$num
††' (
]
††( )
.
††) *
elementType
††* 5
!=
††6 8
typeof
††9 ?
(
††? @
	Matrix4x4
††@ I
)
††I J
)
††J K
{
°° 
Error
¢¢ !
(
¢¢! "
$str
¢¢" ?
+
¢¢@ A
field
¢¢B G
.
¢¢G H
	FieldType
¢¢H Q
+
¢¢R S
$str
¢¢T W
+
¢¢X Y
$str¢¢Z ∂
)¢¢∂ ∑
;¢¢∑ ∏
return
££ "
false
££# (
;
££( )
}
§§ 
	arraySize
¶¶ !
=
¶¶" #

arrayInfos
¶¶$ .
[
¶¶. /
$num
¶¶/ 0
]
¶¶0 1
.
¶¶1 2
	arraySize
¶¶2 ;
;
¶¶; <
	fieldType
ßß !
=
ßß" #

arrayInfos
ßß$ .
[
ßß. /
$num
ßß/ 0
]
ßß0 1
.
ßß1 2
elementType
ßß2 =
;
ßß= >
}
®® 
else
©© 
{
™™ 
continue
¨¨  
;
¨¨  !
}
≠≠ 
}
ÆÆ 
else
ØØ 
if
ØØ 
(
ØØ 
	Attribute
ØØ "
.
ØØ" #
	IsDefined
ØØ# ,
(
ØØ, -
field
ØØ- 2
,
ØØ2 3
typeof
ØØ4 :
(
ØØ: ;
	HLSLArray
ØØ; D
)
ØØD E
)
ØØE F
)
ØØF G
{
∞∞ 
Error
±± 
(
±± 
$str
±± 7
+
±±8 9
field
±±: ?
.
±±? @
	FieldType
±±@ I
+
±±J K
$str
±±L O
+
±±P Q
$str±±R Ñ
)±±Ñ Ö
;±±Ö Ü
return
≤≤ 
false
≤≤  
;
≤≤  !
}
≥≥ 
if
µµ 
(
µµ 
field
µµ 
.
µµ 
IsStatic
µµ "
)
µµ" #
{
∂∂ 
if
∑∑ 
(
∑∑ 
	fieldType
∑∑ !
.
∑∑! "
IsPrimitive
∑∑" -
)
∑∑- .
{
∏∏ 
string
∫∫ 
name
∫∫ #
=
∫∫$ %
InsertUnderscore
∫∫& 6
(
∫∫6 7
field
∫∫7 <
.
∫∫< =
Name
∫∫= A
)
∫∫A B
;
∫∫B C
if
ªª 
(
ªª 
name
ªª  
.
ªª  !

StartsWith
ªª! +
(
ªª+ ,
$str
ªª, 0
)
ªª0 1
||
ªª2 4
name
ªª5 9
.
ªª9 :

StartsWith
ªª: D
(
ªªD E
$str
ªªE I
)
ªªI J
)
ªªJ K
{
ºº 
name
ΩΩ  
=
ΩΩ! "
name
ΩΩ# '
.
ΩΩ' (
	Substring
ΩΩ( 1
(
ΩΩ1 2
$num
ΩΩ2 3
)
ΩΩ3 4
;
ΩΩ4 5
}
ææ 
string
øø 

defineName
øø )
=
øø* +
name
øø, 0
.
øø0 1
ToUpper
øø1 8
(
øø8 9
)
øø9 :
;
øø: ;
	m_Statics
¿¿ !
[
¿¿! "

defineName
¿¿" ,
]
¿¿, -
=
¿¿. /
field
¿¿0 5
.
¿¿5 6
GetValue
¿¿6 >
(
¿¿> ?
null
¿¿? C
)
¿¿C D
.
¿¿D E
ToString
¿¿E M
(
¿¿M N
)
¿¿N O
;
¿¿O P
}
¡¡ 
continue
¬¬ 
;
¬¬ 
}
√√ 
if
≈≈ 
(
≈≈ 
attr
≈≈ 
.
≈≈ 
needParamDebug
≈≈ '
&&
≈≈( *
!
≈≈+ ,
attr
≈≈, 0
.
≈≈0 1"
containsPackedFields
≈≈1 E
)
≈≈E F
{
∆∆ 
List
«« 
<
«« 
string
«« 
>
««  
displayNames
««! -
=
««. /
new
««0 3
List
««4 8
<
««8 9
string
««9 ?
>
««? @
(
««@ A
)
««A B
;
««B C
displayNames
»»  
.
»»  !
Add
»»! $
(
»»$ %
field
»»% *
.
»»* +
Name
»»+ /
)
»»/ 0
;
»»0 1
bool
   
isDirection
   $
=
  % &
false
  ' ,
;
  , -
bool
ÀÀ 
sRGBDisplay
ÀÀ $
=
ÀÀ% &
false
ÀÀ' ,
;
ÀÀ, -
bool
ÃÃ 
checkIsNormalized
ÃÃ *
=
ÃÃ+ ,
false
ÃÃ- 2
;
ÃÃ2 3
if
œœ 
(
œœ 
	Attribute
œœ !
.
œœ! "
	IsDefined
œœ" +
(
œœ+ ,
field
œœ, 1
,
œœ1 2
typeof
œœ3 9
(
œœ9 :#
SurfaceDataAttributes
œœ: O
)
œœO P
)
œœP Q
)
œœQ R
{
–– 
var
—— 
propertyAttr
—— (
=
——) *
(
——+ ,#
SurfaceDataAttributes
——, A
[
——A B
]
——B C
)
——C D
field
——D I
.
——I J!
GetCustomAttributes
——J ]
(
——] ^
typeof
——^ d
(
——d e#
SurfaceDataAttributes
——e z
)
——z {
,
——{ |
false——} Ç
)——Ç É
;——É Ñ
if
’’ 
(
’’ 
propertyAttr
’’ (
[
’’( )
$num
’’) *
]
’’* +
.
’’+ ,
displayNames
’’, 8
[
’’8 9
$num
’’9 :
]
’’: ;
!=
’’< >
$str
’’? A
)
’’A B
{
÷÷ 
displayNames
◊◊ (
.
◊◊( )
Clear
◊◊) .
(
◊◊. /
)
◊◊/ 0
;
◊◊0 1
displayNames
ÿÿ (
.
ÿÿ( )
AddRange
ÿÿ) 1
(
ÿÿ1 2
propertyAttr
ÿÿ2 >
[
ÿÿ> ?
$num
ÿÿ? @
]
ÿÿ@ A
.
ÿÿA B
displayNames
ÿÿB N
)
ÿÿN O
;
ÿÿO P
}
ŸŸ 
isDirection
⁄⁄ #
=
⁄⁄$ %
propertyAttr
⁄⁄& 2
[
⁄⁄2 3
$num
⁄⁄3 4
]
⁄⁄4 5
.
⁄⁄5 6
isDirection
⁄⁄6 A
;
⁄⁄A B
sRGBDisplay
€€ #
=
€€$ %
propertyAttr
€€& 2
[
€€2 3
$num
€€3 4
]
€€4 5
.
€€5 6
sRGBDisplay
€€6 A
;
€€A B
checkIsNormalized
‹‹ )
=
‹‹* +
propertyAttr
‹‹, 8
[
‹‹8 9
$num
‹‹9 :
]
‹‹: ;
.
‹‹; <
checkIsNormalized
‹‹< M
;
‹‹M N
}
›› 
if
‡‡ 
(
‡‡ 
!
‡‡ 
attr
‡‡ 
.
‡‡ "
containsPackedFields
‡‡ 2
)
‡‡2 3
{
·· 
string
‚‚ 
	className
‚‚ (
=
‚‚) *
type
‚‚+ /
.
‚‚/ 0
FullName
‚‚0 8
.
‚‚8 9
	Substring
‚‚9 B
(
‚‚B C
type
‚‚C G
.
‚‚G H
FullName
‚‚H P
.
‚‚P Q
LastIndexOf
‚‚Q \
(
‚‚\ ]
(
‚‚] ^
$str
‚‚^ a
)
‚‚a b
)
‚‚b c
+
‚‚d e
$num
‚‚f g
)
‚‚g h
;
‚‚h i
	className
„„ !
=
„„" #
	className
„„$ -
.
„„- .
Replace
„„. 5
(
„„5 6
$char
„„6 9
,
„„9 :
$char
„„; >
)
„„> ?
;
„„? @
foreach
ÂÂ 
(
ÂÂ  !
string
ÂÂ! '
it
ÂÂ( *
in
ÂÂ+ -
displayNames
ÂÂ. :
)
ÂÂ: ;
{
ÊÊ 
string
ÁÁ "
	fieldName
ÁÁ# ,
=
ÁÁ- .
it
ÁÁ/ 1
.
ÁÁ1 2
Replace
ÁÁ2 9
(
ÁÁ9 :
$char
ÁÁ: =
,
ÁÁ= >
$char
ÁÁ? B
)
ÁÁB C
;
ÁÁC D
string
ËË "
name
ËË# '
=
ËË( )
InsertUnderscore
ËË* :
(
ËË: ;
	fieldName
ËË; D
)
ËËD E
;
ËËE F
string
ÈÈ "

defineName
ÈÈ# -
=
ÈÈ. /
(
ÈÈ0 1
$str
ÈÈ1 =
+
ÈÈ> ?
	className
ÈÈ@ I
+
ÈÈJ K
$str
ÈÈL O
+
ÈÈP Q
name
ÈÈR V
)
ÈÈV W
.
ÈÈW X
ToUpper
ÈÈX _
(
ÈÈ_ `
)
ÈÈ` a
;
ÈÈa b
	m_Statics
ÍÍ %
[
ÍÍ% &

defineName
ÍÍ& 0
]
ÍÍ0 1
=
ÍÍ2 3
Convert
ÍÍ4 ;
.
ÍÍ; <
ToString
ÍÍ< D
(
ÍÍD E
attr
ÍÍE I
.
ÍÍI J
paramDefinesStart
ÍÍJ [
+
ÍÍ\ ]
debugCounter
ÍÍ^ j
++
ÍÍj l
)
ÍÍl m
;
ÍÍm n
m_DebugFields
ÏÏ )
.
ÏÏ) *
Add
ÏÏ* -
(
ÏÏ- .
new
ÏÏ. 1
DebugFieldInfo
ÏÏ2 @
(
ÏÏ@ A

defineName
ÏÏA K
,
ÏÏK L
field
ÏÏM R
.
ÏÏR S
Name
ÏÏS W
,
ÏÏW X
	fieldType
ÏÏY b
,
ÏÏb c
isDirection
ÏÏd o
,
ÏÏo p
sRGBDisplay
ÏÏq |
,
ÏÏ| } 
checkIsNormalizedÏÏ~ è
)ÏÏè ê
)ÏÏê ë
;ÏÏë í
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
if
ÒÒ 
(
ÒÒ 
attr
ÒÒ 
.
ÒÒ "
containsPackedFields
ÒÒ -
)
ÒÒ- .
{
ÚÚ 
bool
ÙÙ 
isDirection
ÙÙ $
=
ÙÙ% &
false
ÙÙ' ,
;
ÙÙ, -
bool
ıı 
sRGBDisplay
ıı $
=
ıı% &
false
ıı' ,
;
ıı, -
bool
ˆˆ 
checkIsNormalized
ˆˆ *
=
ˆˆ+ ,
false
ˆˆ- 2
;
ˆˆ2 3
if
¯¯ 
(
¯¯ 
	Attribute
¯¯ !
.
¯¯! "
	IsDefined
¯¯" +
(
¯¯+ ,
field
¯¯, 1
,
¯¯1 2
typeof
¯¯3 9
(
¯¯9 :
PackingAttribute
¯¯: J
)
¯¯J K
)
¯¯K L
)
¯¯L M
{
˘˘ 
var
˙˙ 
packingAttributes
˙˙ -
=
˙˙. /
(
˙˙0 1
PackingAttribute
˙˙1 A
[
˙˙A B
]
˙˙B C
)
˙˙C D
field
˙˙D I
.
˙˙I J!
GetCustomAttributes
˙˙J ]
(
˙˙] ^
typeof
˙˙^ d
(
˙˙d e
PackingAttribute
˙˙e u
)
˙˙u v
,
˙˙v w
false
˙˙x }
)
˙˙} ~
;
˙˙~ 
isDirection
˚˚ #
=
˚˚$ %
packingAttributes
˚˚& 7
[
˚˚7 8
$num
˚˚8 9
]
˚˚9 :
.
˚˚: ;
isDirection
˚˚; F
;
˚˚F G
sRGBDisplay
¸¸ #
=
¸¸$ %
packingAttributes
¸¸& 7
[
¸¸7 8
$num
¸¸8 9
]
¸¸9 :
.
¸¸: ;
sRGBDisplay
¸¸; F
;
¸¸F G
checkIsNormalized
˝˝ )
=
˝˝* +
packingAttributes
˝˝, =
[
˝˝= >
$num
˝˝> ?
]
˝˝? @
.
˝˝@ A
checkIsNormalized
˝˝A R
;
˝˝R S
string
Ä	Ä	 
	className
Ä	Ä	 (
=
Ä	Ä	) *
type
Ä	Ä	+ /
.
Ä	Ä	/ 0
FullName
Ä	Ä	0 8
.
Ä	Ä	8 9
	Substring
Ä	Ä	9 B
(
Ä	Ä	B C
type
Ä	Ä	C G
.
Ä	Ä	G H
FullName
Ä	Ä	H P
.
Ä	Ä	P Q
LastIndexOf
Ä	Ä	Q \
(
Ä	Ä	\ ]
(
Ä	Ä	] ^
$str
Ä	Ä	^ a
)
Ä	Ä	a b
)
Ä	Ä	b c
+
Ä	Ä	d e
$num
Ä	Ä	f g
)
Ä	Ä	g h
;
Ä	Ä	h i
	className
Å	Å	 !
=
Å	Å	" #
	className
Å	Å	$ -
.
Å	Å	- .
Replace
Å	Å	. 5
(
Å	Å	5 6
$char
Å	Å	6 9
,
Å	Å	9 :
$char
Å	Å	; >
)
Å	Å	> ?
;
Å	Å	? @
foreach
Ç	Ç	 
(
Ç	Ç	  !
PackingAttribute
Ç	Ç	! 1
packAttr
Ç	Ç	2 :
in
Ç	Ç	; =
packingAttributes
Ç	Ç	> O
)
Ç	Ç	O P
{
É	É	 
List
Ñ	Ñ	  
<
Ñ	Ñ	  !
string
Ñ	Ñ	! '
>
Ñ	Ñ	' (
displayNames
Ñ	Ñ	) 5
=
Ñ	Ñ	6 7
new
Ñ	Ñ	8 ;
List
Ñ	Ñ	< @
<
Ñ	Ñ	@ A
string
Ñ	Ñ	A G
>
Ñ	Ñ	G H
(
Ñ	Ñ	H I
)
Ñ	Ñ	I J
;
Ñ	Ñ	J K
displayNames
Ü	Ü	 (
.
Ü	Ü	( )
AddRange
Ü	Ü	) 1
(
Ü	Ü	1 2
packAttr
Ü	Ü	2 :
.
Ü	Ü	: ;
displayNames
Ü	Ü	; G
)
Ü	Ü	G H
;
Ü	Ü	H I
foreach
á	á	 #
(
á	á	$ %
string
á	á	% +
it
á	á	, .
in
á	á	/ 1
displayNames
á	á	2 >
)
á	á	> ?
{
à	à	 
string
â	â	  &
	fieldName
â	â	' 0
=
â	â	1 2
it
â	â	3 5
.
â	â	5 6
Replace
â	â	6 =
(
â	â	= >
$char
â	â	> A
,
â	â	A B
$char
â	â	C F
)
â	â	F G
;
â	â	G H
string
ä	ä	  &
name
ä	ä	' +
=
ä	ä	, -
InsertUnderscore
ä	ä	. >
(
ä	ä	> ?
	fieldName
ä	ä	? H
)
ä	ä	H I
;
ä	ä	I J
string
ã	ã	  &

defineName
ã	ã	' 1
=
ã	ã	2 3
(
ã	ã	4 5
$str
ã	ã	5 A
+
ã	ã	B C
	className
ã	ã	D M
+
ã	ã	N O
$str
ã	ã	P S
+
ã	ã	T U
name
ã	ã	V Z
)
ã	ã	Z [
.
ã	ã	[ \
ToUpper
ã	ã	\ c
(
ã	ã	c d
)
ã	ã	d e
;
ã	ã	e f
	m_Statics
å	å	  )
[
å	å	) *

defineName
å	å	* 4
]
å	å	4 5
=
å	å	6 7
Convert
å	å	8 ?
.
å	å	? @
ToString
å	å	@ H
(
å	å	H I
attr
å	å	I M
.
å	å	M N
paramDefinesStart
å	å	N _
+
å	å	` a
debugCounter
å	å	b n
++
å	å	n p
)
å	å	p q
;
å	å	q r
Type
é	é	  $
typeForDebug
é	é	% 1
=
é	é	2 3
typeof
é	é	4 :
(
é	é	: ;
uint
é	é	; ?
)
é	é	? @
;
é	é	@ A
if
è	è	  "
(
è	è	# $
packAttr
è	è	$ ,
.
è	è	, -
packingScheme
è	è	- :
==
è	è	; =
FieldPacking
è	è	> J
.
è	è	J K
PackedFloat
è	è	K V
)
è	è	V W
{
ê	ê	  !
typeForDebug
ë	ë	$ 0
=
ë	ë	1 2
typeof
ë	ë	3 9
(
ë	ë	9 :
float
ë	ë	: ?
)
ë	ë	? @
;
ë	ë	@ A
}
í	í	  !
else
ì	ì	  $
if
ì	ì	% '
(
ì	ì	( )
packAttr
ì	ì	) 1
.
ì	ì	1 2
packingScheme
ì	ì	2 ?
==
ì	ì	@ B
FieldPacking
ì	ì	C O
.
ì	ì	O P
	R11G11B10
ì	ì	P Y
)
ì	ì	Y Z
{
î	î	  !
typeForDebug
ï	ï	$ 0
=
ï	ï	1 2
typeof
ï	ï	3 9
(
ï	ï	9 :
Vector3
ï	ï	: A
)
ï	ï	A B
;
ï	ï	B C
}
ñ	ñ	  !
else
ó	ó	  $
if
ó	ó	% '
(
ó	ó	( )
packAttr
ó	ó	) 1
.
ó	ó	1 2
packingScheme
ó	ó	2 ?
==
ó	ó	@ B
FieldPacking
ó	ó	C O
.
ó	ó	O P
	NoPacking
ó	ó	P Y
)
ó	ó	Y Z
{
ò	ò	  !
typeForDebug
ô	ô	$ 0
=
ô	ô	1 2
	fieldType
ô	ô	3 <
;
ô	ô	< =
}
ö	ö	  !
m_DebugFields
ú	ú	  -
.
ú	ú	- .
Add
ú	ú	. 1
(
ú	ú	1 2
new
ú	ú	2 5
DebugFieldInfo
ú	ú	6 D
(
ú	ú	D E

defineName
ú	ú	E O
,
ú	ú	O P
field
ú	ú	Q V
.
ú	ú	V W
Name
ú	ú	W [
,
ú	ú	[ \
typeForDebug
ú	ú	] i
,
ú	ú	i j
isDirection
ú	ú	k v
,
ú	ú	v w
sRGBDisplayú	ú	x É
,ú	ú	É Ñ!
checkIsNormalizedú	ú	Ö ñ
,ú	ú	ñ ó
packAttrú	ú	ò †
.ú	ú	† °
displayNamesú	ú	° ≠
[ú	ú	≠ Æ
$numú	ú	Æ Ø
]ú	ú	Ø ∞
)ú	ú	∞ ±
)ú	ú	± ≤
;ú	ú	≤ ≥
}
ù	ù	 !
m_PackedFieldsInfos
ü	ü	 /
.
ü	ü	/ 0
Add
ü	ü	0 3
(
ü	ü	3 4
new
ü	ü	4 7
PackedFieldInfo
ü	ü	8 G
(
ü	ü	G H
packAttr
ü	ü	H P
,
ü	ü	P Q
	fieldType
ü	ü	R [
,
ü	ü	[ \
field
ü	ü	] b
.
ü	ü	b c
Name
ü	ü	c g
)
ü	ü	g h
)
ü	ü	h i
;
ü	ü	i j
}
†	†	 
}
°	°	 
}
¢	¢	 
PrimitiveType
§	§	 
floatPrecision
§	§	 ,
=
§	§	- .
PrimitiveType
§	§	/ <
.
§	§	< =
Float
§	§	= B
;
§	§	B C
if
•	•	 
(
•	•	 
	Attribute
•	•	 
.
•	•	 
	IsDefined
•	•	 '
(
•	•	' (
field
•	•	( -
,
•	•	- .
typeof
•	•	/ 5
(
•	•	5 6#
SurfaceDataAttributes
•	•	6 K
)
•	•	K L
)
•	•	L M
)
•	•	M N
{
¶	¶	 
var
ß	ß	 
propertyAttr
ß	ß	 $
=
ß	ß	% &
(
ß	ß	' (#
SurfaceDataAttributes
ß	ß	( =
[
ß	ß	= >
]
ß	ß	> ?
)
ß	ß	? @
field
ß	ß	@ E
.
ß	ß	E F!
GetCustomAttributes
ß	ß	F Y
(
ß	ß	Y Z
typeof
ß	ß	Z `
(
ß	ß	` a#
SurfaceDataAttributes
ß	ß	a v
)
ß	ß	v w
,
ß	ß	w x
false
ß	ß	y ~
)
ß	ß	~ 
;ß	ß	 Ä
if
®	®	 
(
®	®	 
propertyAttr
®	®	 $
[
®	®	$ %
$num
®	®	% &
]
®	®	& '
.
®	®	' (
	precision
®	®	( 1
==
®	®	2 4
FieldPrecision
®	®	5 C
.
®	®	C D
Half
®	®	D H
)
®	®	H I
floatPrecision
©	©	 &
=
©	©	' (
PrimitiveType
©	©	) 6
.
©	©	6 7
Half
©	©	7 ;
;
©	©	; <
else
™	™	 
if
™	™	 
(
™	™	 
propertyAttr
™	™	 )
[
™	™	) *
$num
™	™	* +
]
™	™	+ ,
.
™	™	, -
	precision
™	™	- 6
==
™	™	7 9
FieldPrecision
™	™	: H
.
™	™	H I
Real
™	™	I M
)
™	™	M N
floatPrecision
´	´	 &
=
´	´	' (
PrimitiveType
´	´	) 6
.
´	´	6 7
Real
´	´	7 ;
;
´	´	; <
}
¨	¨	 
if
Æ	Æ	 
(
Æ	Æ	 
	fieldType
Æ	Æ	 
.
Æ	Æ	 
IsPrimitive
Æ	Æ	 )
)
Æ	Æ	) *
{
Ø	Ø	 
if
∞	∞	 
(
∞	∞	 
	fieldType
∞	∞	 !
==
∞	∞	" $
typeof
∞	∞	% +
(
∞	∞	+ ,
float
∞	∞	, 1
)
∞	∞	1 2
)
∞	∞	2 3
EmitPrimitiveType
±	±	 )
(
±	±	) *
floatPrecision
±	±	* 8
,
±	±	8 9
$num
±	±	: ;
,
±	±	; <
	arraySize
±	±	= F
,
±	±	F G
field
±	±	H M
.
±	±	M N
Name
±	±	N R
,
±	±	R S
$str
±	±	T V
,
±	±	V W
m_ShaderFields
±	±	X f
)
±	±	f g
;
±	±	g h
else
≤	≤	 
if
≤	≤	 
(
≤	≤	 
	fieldType
≤	≤	 &
==
≤	≤	' )
typeof
≤	≤	* 0
(
≤	≤	0 1
int
≤	≤	1 4
)
≤	≤	4 5
)
≤	≤	5 6
EmitPrimitiveType
≥	≥	 )
(
≥	≥	) *
PrimitiveType
≥	≥	* 7
.
≥	≥	7 8
Int
≥	≥	8 ;
,
≥	≥	; <
$num
≥	≥	= >
,
≥	≥	> ?
	arraySize
≥	≥	@ I
,
≥	≥	I J
field
≥	≥	K P
.
≥	≥	P Q
Name
≥	≥	Q U
,
≥	≥	U V
$str
≥	≥	W Y
,
≥	≥	Y Z
m_ShaderFields
≥	≥	[ i
)
≥	≥	i j
;
≥	≥	j k
else
¥	¥	 
if
¥	¥	 
(
¥	¥	 
	fieldType
¥	¥	 &
==
¥	¥	' )
typeof
¥	¥	* 0
(
¥	¥	0 1
uint
¥	¥	1 5
)
¥	¥	5 6
)
¥	¥	6 7
EmitPrimitiveType
µ	µ	 )
(
µ	µ	) *
PrimitiveType
µ	µ	* 7
.
µ	µ	7 8
UInt
µ	µ	8 <
,
µ	µ	< =
$num
µ	µ	> ?
,
µ	µ	? @
	arraySize
µ	µ	A J
,
µ	µ	J K
field
µ	µ	L Q
.
µ	µ	Q R
Name
µ	µ	R V
,
µ	µ	V W
$str
µ	µ	X Z
,
µ	µ	Z [
m_ShaderFields
µ	µ	\ j
)
µ	µ	j k
;
µ	µ	k l
else
∂	∂	 
if
∂	∂	 
(
∂	∂	 
	fieldType
∂	∂	 &
==
∂	∂	' )
typeof
∂	∂	* 0
(
∂	∂	0 1
bool
∂	∂	1 5
)
∂	∂	5 6
)
∂	∂	6 7
EmitPrimitiveType
∑	∑	 )
(
∑	∑	) *
PrimitiveType
∑	∑	* 7
.
∑	∑	7 8
Bool
∑	∑	8 <
,
∑	∑	< =
$num
∑	∑	> ?
,
∑	∑	? @
	arraySize
∑	∑	A J
,
∑	∑	J K
field
∑	∑	L Q
.
∑	∑	Q R
Name
∑	∑	R V
,
∑	∑	V W
$str
∑	∑	X Z
,
∑	∑	Z [
m_ShaderFields
∑	∑	\ j
)
∑	∑	j k
;
∑	∑	k l
else
∏	∏	 
{
π	π	 
Error
∫	∫	 
(
∫	∫	 
$str
∫	∫	 8
+
∫	∫	9 :
	fieldType
∫	∫	; D
+
∫	∫	E F
$str
∫	∫	G J
)
∫	∫	J K
;
∫	∫	K L
return
ª	ª	 
false
ª	ª	 $
;
ª	ª	$ %
}
º	º	 
}
Ω	Ω	 
else
æ	æ	 
{
ø	ø	 
if
¡	¡	 
(
¡	¡	 
	fieldType
¡	¡	 !
==
¡	¡	" $
typeof
¡	¡	% +
(
¡	¡	+ ,
Vector2
¡	¡	, 3
)
¡	¡	3 4
)
¡	¡	4 5
EmitPrimitiveType
¬	¬	 )
(
¬	¬	) *
floatPrecision
¬	¬	* 8
,
¬	¬	8 9
$num
¬	¬	: ;
,
¬	¬	; <
	arraySize
¬	¬	= F
,
¬	¬	F G
field
¬	¬	H M
.
¬	¬	M N
Name
¬	¬	N R
,
¬	¬	R S
$str
¬	¬	T V
,
¬	¬	V W
m_ShaderFields
¬	¬	X f
)
¬	¬	f g
;
¬	¬	g h
else
√	√	 
if
√	√	 
(
√	√	 
	fieldType
√	√	 &
==
√	√	' )
typeof
√	√	* 0
(
√	√	0 1
Vector3
√	√	1 8
)
√	√	8 9
)
√	√	9 :
EmitPrimitiveType
ƒ	ƒ	 )
(
ƒ	ƒ	) *
floatPrecision
ƒ	ƒ	* 8
,
ƒ	ƒ	8 9
$num
ƒ	ƒ	: ;
,
ƒ	ƒ	; <
	arraySize
ƒ	ƒ	= F
,
ƒ	ƒ	F G
field
ƒ	ƒ	H M
.
ƒ	ƒ	M N
Name
ƒ	ƒ	N R
,
ƒ	ƒ	R S
$str
ƒ	ƒ	T V
,
ƒ	ƒ	V W
m_ShaderFields
ƒ	ƒ	X f
)
ƒ	ƒ	f g
;
ƒ	ƒ	g h
else
≈	≈	 
if
≈	≈	 
(
≈	≈	 
	fieldType
≈	≈	 &
==
≈	≈	' )
typeof
≈	≈	* 0
(
≈	≈	0 1
Vector4
≈	≈	1 8
)
≈	≈	8 9
)
≈	≈	9 :
EmitPrimitiveType
∆	∆	 )
(
∆	∆	) *
floatPrecision
∆	∆	* 8
,
∆	∆	8 9
$num
∆	∆	: ;
,
∆	∆	; <
	arraySize
∆	∆	= F
,
∆	∆	F G
field
∆	∆	H M
.
∆	∆	M N
Name
∆	∆	N R
,
∆	∆	R S
$str
∆	∆	T V
,
∆	∆	V W
m_ShaderFields
∆	∆	X f
)
∆	∆	f g
;
∆	∆	g h
else
«	«	 
if
«	«	 
(
«	«	 
	fieldType
«	«	 &
==
«	«	' )
typeof
«	«	* 0
(
«	«	0 1

Vector2Int
«	«	1 ;
)
«	«	; <
)
«	«	< =
EmitPrimitiveType
»	»	 )
(
»	»	) *
PrimitiveType
»	»	* 7
.
»	»	7 8
Int
»	»	8 ;
,
»	»	; <
$num
»	»	= >
,
»	»	> ?
	arraySize
»	»	@ I
,
»	»	I J
field
»	»	K P
.
»	»	P Q
Name
»	»	Q U
,
»	»	U V
$str
»	»	W Y
,
»	»	Y Z
m_ShaderFields
»	»	[ i
)
»	»	i j
;
»	»	j k
else
…	…	 
if
…	…	 
(
…	…	 
	fieldType
…	…	 &
==
…	…	' )
typeof
…	…	* 0
(
…	…	0 1
ShaderGenUInt4
…	…	1 ?
)
…	…	? @
)
…	…	@ A
EmitPrimitiveType
 	 	 )
(
 	 	) *
PrimitiveType
 	 	* 7
.
 	 	7 8
UInt
 	 	8 <
,
 	 	< =
$num
 	 	> ?
,
 	 	? @
	arraySize
 	 	A J
,
 	 	J K
field
 	 	L Q
.
 	 	Q R
Name
 	 	R V
,
 	 	V W
$str
 	 	X Z
,
 	 	Z [
m_ShaderFields
 	 	\ j
)
 	 	j k
;
 	 	k l
else
À	À	 
if
À	À	 
(
À	À	 
	fieldType
À	À	 &
==
À	À	' )
typeof
À	À	* 0
(
À	À	0 1
	Matrix4x4
À	À	1 :
)
À	À	: ;
)
À	À	; <
EmitMatrixType
Ã	Ã	 &
(
Ã	Ã	& '
floatPrecision
Ã	Ã	' 5
,
Ã	Ã	5 6
$num
Ã	Ã	7 8
,
Ã	Ã	8 9
$num
Ã	Ã	: ;
,
Ã	Ã	; <
	arraySize
Ã	Ã	= F
,
Ã	Ã	F G
field
Ã	Ã	H M
.
Ã	Ã	M N
Name
Ã	Ã	N R
,
Ã	Ã	R S
$str
Ã	Ã	T V
,
Ã	Ã	V W
m_ShaderFields
Ã	Ã	X f
)
Ã	Ã	f g
;
Ã	Ã	g h
else
Õ	Õ	 
if
Õ	Õ	 
(
Õ	Õ	 
!
Õ	Õ	 
ExtractComplex
Õ	Õ	 ,
(
Õ	Õ	, -
field
Õ	Õ	- 2
,
Õ	Õ	2 3
m_ShaderFields
Õ	Õ	4 B
)
Õ	Õ	B C
)
Õ	Õ	C D
{
Œ	Œ	 
return
–	–	 
false
–	–	 $
;
–	–	$ %
}
—	—	 
}
“	“	 
}
”	”	 
m_PackedFields
’	’	 
=
’	’	 
m_ShaderFields
’	’	 +
;
’	’	+ ,
if
÷	÷	 
(
÷	÷	 
attr
÷	÷	 
.
÷	÷	 
packingRules
÷	÷	 !
==
÷	÷	" $
PackingRules
÷	÷	% 1
.
÷	÷	1 2

Aggressive
÷	÷	2 <
)
÷	÷	< =
{
◊	◊	 
m_PackedFields
ÿ	ÿ	 
=
ÿ	ÿ	  
Pack
ÿ	ÿ	! %
(
ÿ	ÿ	% &
m_ShaderFields
ÿ	ÿ	& 4
)
ÿ	ÿ	4 5
;
ÿ	ÿ	5 6
if
⁄	⁄	 
(
⁄	⁄	 
m_PackedFields
⁄	⁄	 "
==
⁄	⁄	# %
null
⁄	⁄	& *
)
⁄	⁄	* +
{
€	€	 
return
‹	‹	 
false
‹	‹	  
;
‹	‹	  !
}
›	›	 
}
ﬁ	ﬁ	 
errors
‡	‡	 
=
‡	‡	 
null
‡	‡	 
;
‡	‡	 
return
·	·	 
true
·	·	 
;
·	·	 
}
‚	‚	 	
public
‰	‰	 
bool
‰	‰	 
	hasFields
‰	‰	 
{
Â	Â	 	
get
Ê	Ê	 
{
Ê	Ê	 
return
Ê	Ê	 
m_ShaderFields
Ê	Ê	 '
.
Ê	Ê	' (
Count
Ê	Ê	( -
>
Ê	Ê	. /
$num
Ê	Ê	0 1
;
Ê	Ê	1 2
}
Ê	Ê	3 4
}
Á	Á	 	
public
È	È	 
bool
È	È	 
hasPackedInfo
È	È	 !
{
Í	Í	 	
get
Î	Î	 
{
Î	Î	 
return
Î	Î	 !
m_PackedFieldsInfos
Î	Î	 ,
.
Î	Î	, -
Count
Î	Î	- 2
>
Î	Î	3 4
$num
Î	Î	5 6
;
Î	Î	6 7
}
Î	Î	8 9
}
Ï	Ï	 	
public
Ó	Ó	 
bool
Ó	Ó	 

hasStatics
Ó	Ó	 
{
Ô	Ô	 	
get
		 
{
		 
return
		 
	m_Statics
		 "
.
		" #
Count
		# (
>
		) *
$num
		+ ,
;
		, -
}
		. /
}
Ò	Ò	 	
public
Û	Û	 
bool
Û	Û	 
needAccessors
Û	Û	 !
{
Ù	Ù	 	
get
ı	ı	 
{
ı	ı	 
return
ı	ı	 
attr
ı	ı	 
.
ı	ı	 
needAccessors
ı	ı	 +
;
ı	ı	+ ,
}
ı	ı	- .
}
ˆ	ˆ	 	
public
˜	˜	 
bool
˜	˜	 
needParamDebug
˜	˜	 "
{
¯	¯	 	
get
˘	˘	 
{
˘	˘	 
return
˘	˘	 
attr
˘	˘	 
.
˘	˘	 
needParamDebug
˘	˘	 ,
;
˘	˘	, -
}
˘	˘	. /
}
˙	˙	 	
public
¸	¸	 
Type
¸	¸	 
type
¸	¸	 
;
¸	¸	 
public
˝	˝	 
GenerateHLSL
˝	˝	 
attr
˝	˝	  
;
˝	˝	  !
public
˛	˛	 
int
˛	˛	 
debugCounter
˛	˛	 
;
˛	˛	  
public
ˇ	ˇ	 
List
ˇ	ˇ	 
<
ˇ	ˇ	 
string
ˇ	ˇ	 
>
ˇ	ˇ	 
errors
ˇ	ˇ	 "
=
ˇ	ˇ	# $
null
ˇ	ˇ	% )
;
ˇ	ˇ	) *

Dictionary
Å
Å
 
<
Å
Å
 
string
Å
Å
 
,
Å
Å
 
string
Å
Å
 !
>
Å
Å
! "
	m_Statics
Å
Å
# ,
;
Å
Å
, -
List
Ç
Ç
 
<
Ç
Ç
 
ShaderFieldInfo
Ç
Ç
 
>
Ç
Ç
 
m_ShaderFields
Ç
Ç
 ,
;
Ç
Ç
, -
List
É
É
 
<
É
É
 
ShaderFieldInfo
É
É
 
>
É
É
 
m_PackedFields
É
É
 ,
;
É
É
, -
List
Ñ
Ñ
 
<
Ñ
Ñ
 
DebugFieldInfo
Ñ
Ñ
 
>
Ñ
Ñ
 
m_DebugFields
Ñ
Ñ
 *
;
Ñ
Ñ
* +
List
á
á
 
<
á
á
 
PackedFieldInfo
á
á
 
>
á
á
 !
m_PackedFieldsInfos
á
á
 1
;
á
á
1 2
}
à
à
 
}â
â
 çu
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\EnvironmentLibrary.cs
	namespace		 	
UnityEditor		
 
.		 
	Rendering		 
.		  
LookDev		  '
{

 
[ 
HelpURL 
( 
Documentation 
. 
baseURLHDRP &
+' (
Documentation) 6
.6 7
version7 >
+? @
DocumentationA N
.N O
subURLO U
+V W
$strX m
+n o
Documentationp }
.} ~
endURL	~ Ñ
)
Ñ Ö
]
Ö Ü
public 

class 
EnvironmentLibrary #
:$ %
ScriptableObject& 6
{ 
[ 	
field	 
: 
SerializeField 
] 
List 
< 
Environment 
> 
environments &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
Environment@ K
>K L
(L M
)M N
;N O
public 
int 
Count 
=> 
environments (
.( )
Count) .
;. /
public 
Environment 
this 
[  
int  #
index$ )
]) *
=>+ -
environments. :
[: ;
index; @
]@ A
;A B
public!! 
Environment!! 
Add!! 
(!! 
)!!  
{"" 	
Undo## 
.## 
SetCurrentGroupName## $
(##$ %
$str##% 6
)##6 7
;##7 8
int$$ 
group$$ 
=$$ 
Undo$$ 
.$$ 
GetCurrentGroup$$ ,
($$, -
)$$- .
;$$. /
Environment&& 
environment&& #
=&&$ %
ScriptableObject&&& 6
.&&6 7
CreateInstance&&7 E
<&&E F
Environment&&F Q
>&&Q R
(&&R S
)&&S T
;&&T U
environment'' 
.'' 
name'' 
='' 
$str'' 0
;''0 1
Undo(( 
.(( %
RegisterCreatedObjectUndo(( *
(((* +
environment((+ 6
,((6 7
$str((8 I
)((I J
;((J K
Undo** 
.** 
RecordObject** 
(** 
this** "
,**" #
$str**$ 5
)**5 6
;**6 7
environments++ 
.++ 
Add++ 
(++ 
environment++ (
)++( )
;++) *
AssetDatabase.. 
... 
AddObjectToAsset.. *
(..* +
environment..+ 6
,..6 7
this..8 <
)..< =
;..= >
Undo00 
.00 "
CollapseUndoOperations00 '
(00' (
group00( -
)00- .
;00. /
EditorUtility33 
.33 
SetDirty33 "
(33" #
this33# '
)33' (
;33( )
AssetDatabase44 
.44 

SaveAssets44 $
(44$ %
)44% &
;44& '
return66 
environment66 
;66 
}77 	
public== 
void== 
Remove== 
(== 
int== 
index== $
)==$ %
{>> 	
Undo?? 
.?? 
SetCurrentGroupName?? $
(??$ %
$str??% 9
)??9 :
;??: ;
int@@ 
group@@ 
=@@ 
Undo@@ 
.@@ 
GetCurrentGroup@@ ,
(@@, -
)@@- .
;@@. /
EnvironmentBB 
environmentBB #
=BB$ %
environmentsBB& 2
[BB2 3
indexBB3 8
]BB8 9
;BB9 :
UndoCC 
.CC 
RecordObjectCC 
(CC 
thisCC "
,CC" #
$strCC$ 8
)CC8 9
;CC9 :
environmentsDD 
.DD 
RemoveAtDD !
(DD! "
indexDD" '
)DD' (
;DD( )
UndoEE 
.EE "
DestroyObjectImmediateEE '
(EE' (
environmentEE( 3
)EE3 4
;EE4 5
UndoGG 
.GG "
CollapseUndoOperationsGG '
(GG' (
groupGG( -
)GG- .
;GG. /
EditorUtilityJJ 
.JJ 
SetDirtyJJ "
(JJ" #
thisJJ# '
)JJ' (
;JJ( )
AssetDatabaseKK 
.KK 

SaveAssetsKK $
(KK$ %
)KK% &
;KK& '
}LL 	
publicSS 
EnvironmentSS 
	DuplicateSS $
(SS$ %
intSS% (
	fromIndexSS) 2
)SS2 3
{TT 	
UndoUU 
.UU 
SetCurrentGroupNameUU $
(UU$ %
$strUU% <
)UU< =
;UU= >
intVV 
groupVV 
=VV 
UndoVV 
.VV 
GetCurrentGroupVV ,
(VV, -
)VV- .
;VV. /
EnvironmentXX 
environmentXX #
=XX$ %
ScriptableObjectXX& 6
.XX6 7
CreateInstanceXX7 E
<XXE F
EnvironmentXXF Q
>XXQ R
(XXR S
)XXS T
;XXT U
EnvironmentYY 
environmentToCopyYY )
=YY* +
environmentsYY, 8
[YY8 9
	fromIndexYY9 B
]YYB C
;YYC D
environmentToCopyZZ 
.ZZ 
CopyToZZ $
(ZZ$ %
environmentZZ% 0
)ZZ0 1
;ZZ1 2
Undo\\ 
.\\ %
RegisterCreatedObjectUndo\\ *
(\\* +
environment\\+ 6
,\\6 7
$str\\8 O
)\\O P
;\\P Q
Undo]] 
.]] 
RecordObject]] 
(]] 
this]] "
,]]" #
$str]]$ ;
)]]; <
;]]< =
environments^^ 
.^^ 
Add^^ 
(^^ 
environment^^ (
)^^( )
;^^) *
AssetDatabaseaa 
.aa 
AddObjectToAssetaa *
(aa* +
environmentaa+ 6
,aa6 7
thisaa8 <
)aa< =
;aa= >
Undocc 
.cc "
CollapseUndoOperationscc '
(cc' (
groupcc( -
)cc- .
;cc. /
EditorUtilityff 
.ff 
SetDirtyff "
(ff" #
thisff# '
)ff' (
;ff( )
AssetDatabasegg 
.gg 

SaveAssetsgg $
(gg$ %
)gg% &
;gg& '
returnii 
environmentii 
;ii 
}jj 	
publicqq 
intqq 
IndexOfqq 
(qq 
Environmentqq &
environmentqq' 2
)qq2 3
=>rr 
environmentsrr 
.rr 
IndexOfrr #
(rr# $
environmentrr$ /
)rr/ 0
;rr0 1
}ss 
[uu 
CustomEditoruu 
(uu 
typeofuu 
(uu 
EnvironmentLibraryuu +
)uu+ ,
)uu, -
]uu- .
classvv 	$
EnvironmentLibraryEditorvv
 "
:vv# $
Editorvv% +
{ww 
VisualElementxx 
rootxx 
;xx 
publiczz 
sealedzz 
overridezz 
VisualElementzz ,
CreateInspectorGUIzz- ?
(zz? @
)zz@ A
{{{ 	
var|| 
library|| 
=|| 
target||  
as||! #
EnvironmentLibrary||$ 6
;||6 7
root}} 
=}} 
new}} 
VisualElement}} $
(}}$ %
)}}% &
;}}& '
Button 
open 
= 
new 
Button $
($ %
(% &
)& '
=>( *
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
LookDev
ÅÅ 
.
ÅÅ 
open
ÅÅ !
)
ÅÅ! "
LookDev
ÇÇ 
.
ÇÇ 
Open
ÇÇ  
(
ÇÇ  !
)
ÇÇ! "
;
ÇÇ" #
LookDev
ÉÉ 
.
ÉÉ 
currentContext
ÉÉ &
.
ÉÉ& '&
UpdateEnvironmentLibrary
ÉÉ' ?
(
ÉÉ? @
library
ÉÉ@ G
)
ÉÉG H
;
ÉÉH I
LookDev
ÑÑ 
.
ÑÑ )
currentEnvironmentDisplayer
ÑÑ 3
.
ÑÑ3 4
Repaint
ÑÑ4 ;
(
ÑÑ; <
)
ÑÑ< =
;
ÑÑ= >
}
ÖÖ 
)
ÖÖ 
{
ÜÜ 
text
áá 
=
áá 
$str
áá /
}
àà 
;
àà 
root
ää 
.
ää 
Add
ää 
(
ää 
open
ää 
)
ää 
;
ää 
return
ãã 
root
ãã 
;
ãã 
}
åå 	
public
èè 
sealed
èè 
override
èè 
void
èè #
OnInspectorGUI
èè$ 2
(
èè2 3
)
èè3 4
{
èè5 6
}
èè7 8
}
êê 
class
íí 	'
EnvironmentLibraryCreator
íí
 #
:
íí$ %#
ProjectWindowCallback
íí& ;
.
íí; <
EndNameEditAction
íí< M
{
ìì 
ObjectField
îî 
m_Field
îî 
=
îî 
null
îî "
;
îî" #
public
ññ 
void
ññ 
SetField
ññ 
(
ññ 
ObjectField
ññ (
field
ññ) .
)
ññ. /
=>
óó 
m_Field
óó 
=
óó 
field
óó 
;
óó 
public
ôô 
override
ôô 
void
ôô 
	Cancelled
ôô &
(
ôô& '
int
ôô' *

instanceId
ôô+ 5
,
ôô5 6
string
ôô7 =
pathName
ôô> F
,
ôôF G
string
ôôH N
resourceFile
ôôO [
)
ôô[ \
=>
öö 
m_Field
öö 
=
öö 
null
öö 
;
öö 
public
úú 
override
úú 
void
úú 
Action
úú #
(
úú# $
int
úú$ '

instanceId
úú( 2
,
úú2 3
string
úú4 :
pathName
úú; C
,
úúC D
string
úúE K
resourceFile
úúL X
)
úúX Y
{
ùù 	
var
ûû 
newAsset
ûû 
=
ûû 
CreateInstance
ûû )
<
ûû) * 
EnvironmentLibrary
ûû* <
>
ûû< =
(
ûû= >
)
ûû> ?
;
ûû? @
newAsset
üü 
.
üü 
name
üü 
=
üü 
Path
üü  
.
üü  !
GetFileName
üü! ,
(
üü, -
pathName
üü- 5
)
üü5 6
;
üü6 7
AssetDatabase
†† 
.
†† 
CreateAsset
†† %
(
††% &
newAsset
††& .
,
††. /
pathName
††0 8
)
††8 9
;
††9 :
ProjectWindowUtil
°° 
.
°° 
ShowCreatedAsset
°° .
(
°°. /
newAsset
°°/ 7
)
°°7 8
;
°°8 9
if
¢¢ 
(
¢¢ 
m_Field
¢¢ 
!=
¢¢ 
null
¢¢ 
)
¢¢  
m_Field
££ 
.
££ 
value
££ 
=
££ 
newAsset
££  (
;
££( )
m_Field
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
[
ßß 	
MenuItem
ßß	 
(
ßß 
$str
ßß =
,
ßß= >
priority
ßß? G
=
ßßH I
$num
ßßJ N
)
ßßN O
]
ßßO P
static
®® 
void
®® 
Create
®® 
(
®® 
)
®® 
{
©© 	
var
™™ 
icon
™™ 
=
™™ 
EditorGUIUtility
™™ '
.
™™' (
FindTexture
™™( 3
(
™™3 4
$str
™™4 K
)
™™K L
;
™™L M
ProjectWindowUtil
´´ 
.
´´ 3
%StartNameEditingIfProjectWindowExists
´´ C
(
´´C D
$num
´´D E
,
´´E F
ScriptableObject
´´G W
.
´´W X
CreateInstance
´´X f
<
´´f g(
EnvironmentLibraryCreator´´g Ä
>´´Ä Å
(´´Å Ç
)´´Ç É
,´´É Ñ
$str´´Ö £
,´´£ §
icon´´• ©
,´´© ™
null´´´ Ø
)´´Ø ∞
;´´∞ ±
}
¨¨ 	
public
ÆÆ 
static
ÆÆ 
void
ÆÆ 
CreateAndAssignTo
ÆÆ ,
(
ÆÆ, -
ObjectField
ÆÆ- 8
field
ÆÆ9 >
)
ÆÆ> ?
{
ØØ 	
var
∞∞ 
icon
∞∞ 
=
∞∞ 
EditorGUIUtility
∞∞ '
.
∞∞' (
FindTexture
∞∞( 3
(
∞∞3 4
$str
∞∞4 K
)
∞∞K L
;
∞∞L M
var
±± 
assetCreator
±± 
=
±± 
ScriptableObject
±± /
.
±±/ 0
CreateInstance
±±0 >
<
±±> ?'
EnvironmentLibraryCreator
±±? X
>
±±X Y
(
±±Y Z
)
±±Z [
;
±±[ \
assetCreator
≤≤ 
.
≤≤ 
SetField
≤≤ !
(
≤≤! "
field
≤≤" '
)
≤≤' (
;
≤≤( )
ProjectWindowUtil
≥≥ 
.
≥≥ 3
%StartNameEditingIfProjectWindowExists
≥≥ C
(
≥≥C D
assetCreator
≥≥D P
.
≥≥P Q
GetInstanceID
≥≥Q ^
(
≥≥^ _
)
≥≥_ `
,
≥≥` a
assetCreator
≥≥b n
,
≥≥n o
$str≥≥p é
,≥≥é è
icon≥≥ê î
,≥≥î ï
null≥≥ñ ö
)≥≥ö õ
;≥≥õ ú
}
¥¥ 	
}
µµ 
static
∑∑ 

class
∑∑ &
EnvironmentLibraryLoader
∑∑ )
{
∏∏ 
static
ππ 
Action
ππ 
<
ππ 
UnityEngine
ππ !
.
ππ! "
Object
ππ" (
>
ππ( )
LoadCallback
ππ* 6
(
ππ6 7
Action
ππ7 =
onUpdate
ππ> F
)
ππF G
{
∫∫ 	
return
ªª 
(
ªª 
UnityEngine
ªª 
.
ªª  
Object
ªª  &

newLibrary
ªª' 1
)
ªª1 2
=>
ªª3 5
{
ºº 
LookDev
ΩΩ 
.
ΩΩ 
currentContext
ΩΩ &
.
ΩΩ& '&
UpdateEnvironmentLibrary
ΩΩ' ?
(
ΩΩ? @

newLibrary
ΩΩ@ J
as
ΩΩK M 
EnvironmentLibrary
ΩΩN `
)
ΩΩ` a
;
ΩΩa b
onUpdate
ææ 
?
ææ 
.
ææ 
Invoke
ææ  
(
ææ  !
)
ææ! "
;
ææ" #
}
øø 
;
øø 
}
¿¿ 	
}
¡¡ 
}¬¬ Ú(
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\DebugUIDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public

 

class

 "
DebugUIDrawerAttribute

 '
:

( )
	Attribute

* 3
{ 
internal 
readonly 
Type 
type #
;# $
public "
DebugUIDrawerAttribute %
(% &
Type& *
type+ /
)/ 0
{ 	
this 
. 
type 
= 
type 
; 
} 	
} 
public 

class 
DebugUIDrawer 
{ 
	protected## 
T## 
Cast## 
<## 
T## 
>## 
(## 
object## "
o### $
)##$ %
where$$ 
T$$ 
:$$ 
class$$ 
{%% 	
var&& 
casted&& 
=&& 
o&& 
as&& 
T&& 
;&&  
if(( 
((( 
casted(( 
==(( 
null(( 
)(( 
{)) 
string** 
typeName** 
=**  !
o**" #
==**$ &
null**' +
?**, -
$str**. 4
:**5 6
o**7 8
.**8 9
GetType**9 @
(**@ A
)**A B
.**B C
ToString**C K
(**K L
)**L M
;**M N
throw++ 
new++ %
InvalidOperationException++ 3
(++3 4
$str++4 A
+++B C
typeName++D L
+++M N
$str++O U
+++V W
typeof++X ^
(++^ _
T++_ `
)++` a
)++a b
;++b c
},, 
return.. 
casted.. 
;.. 
}// 	
public66 
virtual66 
void66 
Begin66 !
(66! "
DebugUI66" )
.66) *
Widget66* 0
widget661 7
,667 8

DebugState669 C
state66D I
)66I J
{77 	
}77	 

public?? 
virtual?? 
bool?? 
OnGUI?? !
(??! "
DebugUI??" )
.??) *
Widget??* 0
widget??1 7
,??7 8

DebugState??9 C
state??D I
)??I J
{@@ 	
returnAA 
trueAA 
;AA 
}BB 	
publicII 
virtualII 
voidII 
EndII 
(II  
DebugUIII  '
.II' (
WidgetII( .
widgetII/ 5
,II5 6

DebugStateII7 A
stateIIB G
)IIG H
{JJ 	
}JJ	 

	protectedRR 
voidRR 
ApplyRR 
(RR 
DebugUIRR $
.RR$ %
IValueFieldRR% 0
widgetRR1 7
,RR7 8

DebugStateRR9 C
stateRRD I
,RRI J
objectRRK Q
valueRRR W
)RRW X
{SS 	
UndoTT 
.TT &
RegisterCompleteObjectUndoTT +
(TT+ ,
stateTT, 1
,TT1 2
$strTT3 J
)TTJ K
;TTK L
stateUU 
.UU 
SetValueUU 
(UU 
valueUU  
,UU  !
widgetUU" (
)UU( )
;UU) *
widgetVV 
.VV 
SetValueVV 
(VV 
valueVV !
)VV! "
;VV" #
EditorUtilityWW 
.WW 
SetDirtyWW "
(WW" #
stateWW# (
)WW( )
;WW) *

DebugStateXX 
.XX 
m_CurrentDirtyStateXX *
=XX+ ,
stateXX- 2
;XX2 3
UnityEditorInternalYY 
.YY  !
InternalEditorUtilityYY  5
.YY5 6
RepaintAllViewsYY6 E
(YYE F
)YYF G
;YYG H
}ZZ 	
	protectedaa 
Rectaa 
PrepareControlRectaa )
(aa) *
floataa* /
heightaa0 6
=aa7 8
-aa9 :
$numaa: ;
)aa; <
{bb 	
ifcc 
(cc 
heightcc 
<cc 
$numcc 
)cc 
heightdd 
=dd 
EditorGUIUtilitydd )
.dd) *
singleLineHeightdd* :
;dd: ;
varee 
rectee 
=ee 
GUILayoutUtilityee '
.ee' (
GetRectee( /
(ee/ 0
$numee0 2
,ee2 3
$numee4 6
,ee6 7
heightee8 >
,ee> ?
heightee@ F
)eeF G
;eeG H
rectff 
.ff 
widthff 
-=ff 
$numff 
;ff 
rectgg 
.gg 
xMingg 
+=gg 
$numgg 
;gg 
EditorGUIUtilityhh 
.hh 

labelWidthhh '
=hh( )
recthh* .
.hh. /
widthhh/ 4
/hh5 6
$numhh7 9
;hh9 :
returnii 
rectii 
;ii 
}jj 	
}kk 
}ll ùA
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\LookDevRenderer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
class		 	
RenderingData		
 
:		 
IDisposable		 %
{

 
public 
bool 
sizeMissmatched #
;# $
public 
Stage 
stage 
; 
public 
ICameraUpdater 
updater %
;% &
public 
Rect 
viewPort 
; 
public 
RenderTexture 
output #
;# $
private 
bool 
disposed 
= 
false  %
;% &
public 
void 
Dispose 
( 
) 
{ 	
if 
( 
disposed 
) 
return 
; 
disposed 
= 
true 
; 
stage!! 
=!! 
null!! 
;!! 
updater"" 
="" 
null"" 
;"" 
output## 
?## 
.## 
Release## 
(## 
)## 
;## 
output$$ 
=$$ 
null$$ 
;$$ 
}%% 	
}&& 
class)) 	
Renderer))
 
{** 
public,, 
bool,, 
pixelPerfect,,  
{,,! "
get,,# &
;,,& '
set,,( +
;,,+ ,
},,- .
public00 
Renderer00 
(00 
bool00 
pixelPerfect00 )
=00* +
false00, 1
)001 2
=>11 
this11 
.11 
pixelPerfect11  
=11! "
pixelPerfect11# /
;11/ 0
public55 
void55 
BeginRendering55 "
(55" #
RenderingData55# 0
data551 5
,555 6
IDataProvider557 D
dataProvider55E Q
)55Q R
{66 	
data77 
.77 
stage77 
.77 
OnBeginRendering77 '
(77' (
dataProvider77( 4
)774 5
;775 6
data88 
.88 
updater88 
?88 
.88 
UpdateCamera88 &
(88& '
data88' +
.88+ ,
stage88, 1
.881 2
camera882 8
)888 9
;889 :
data99 
.99 
stage99 
.99 
camera99 
.99 
enabled99 %
=99& '
true99( ,
;99, -
}:: 	
public>> 
void>> 
EndRendering>>  
(>>  !
RenderingData>>! .
data>>/ 3
,>>3 4
IDataProvider>>5 B
dataProvider>>C O
)>>O P
{?? 	
data@@ 
.@@ 
stage@@ 
.@@ 
camera@@ 
.@@ 
enabled@@ %
=@@& '
false@@( -
;@@- .
dataAA 
.AA 
stageAA 
.AA 
OnEndRenderingAA %
(AA% &
dataProviderAA& 2
)AA2 3
;AA3 4
}BB 	
boolDD  
CheckWrongSizeOutputDD !
(DD! "
RenderingDataDD" /
dataDD0 4
)DD4 5
{EE 	
ifFF 
(FF 
dataFF 
.FF 
viewPortFF 
.FF 
IsNullOrInvertedFF .
(FF. /
)FF/ 0
||GG 
dataGG 
.GG 
viewPortGG  
.GG  !
widthGG! &
!=GG' )
dataGG* .
.GG. /
outputGG/ 5
.GG5 6
widthGG6 ;
||HH 
dataHH 
.HH 
viewPortHH  
.HH  !
heightHH! '
!=HH( *
dataHH+ /
.HH/ 0
viewPortHH0 8
.HH8 9
heightHH9 ?
)HH? @
{II 
dataJJ 
.JJ 
outputJJ 
=JJ 
nullJJ "
;JJ" #
dataKK 
.KK 
sizeMissmatchedKK $
=KK% &
trueKK' +
;KK+ ,
returnLL 
trueLL 
;LL 
}MM 
dataOO 
.OO 
sizeMissmatchedOO  
=OO! "
falseOO# (
;OO( )
returnPP 
falsePP 
;PP 
}QQ 	
publicZZ 
voidZZ 
AcquireZZ 
(ZZ 
RenderingDataZZ )
dataZZ* .
)ZZ. /
{[[ 	
if\\ 
(\\  
CheckWrongSizeOutput\\ $
(\\$ %
data\\% )
)\\) *
)\\* +
return]] 
;]] 
data__ 
.__ 
stage__ 
.__ 
camera__ 
.__ 
targetTexture__ +
=__, -
data__. 2
.__2 3
output__3 9
;__9 :
data`` 
.`` 
stage`` 
.`` 
camera`` 
.`` 
Render`` $
(``$ %
)``% &
;``& '
}aa 	
internalcc 
staticcc 
voidcc 
DrawFullScreenQuadcc /
(cc/ 0
Rectcc0 4
rectcc5 9
)cc9 :
{dd 	
GLee 
.ee 

PushMatrixee 
(ee 
)ee 
;ee 
GLff 
.ff 
	LoadOrthoff 
(ff 
)ff 
;ff 
GLgg 
.gg 
Viewportgg 
(gg 
rectgg 
)gg 
;gg 
GLii 
.ii 
Beginii 
(ii 
GLii 
.ii 
QUADSii 
)ii 
;ii 
GLjj 
.jj 
	TexCoord2jj 
(jj 
$numjj 
,jj 
$numjj 
)jj 
;jj 
GLkk 
.kk 
Vertex3kk 
(kk 
$numkk 
,kk 
$numkk 
,kk 
$numkk  
)kk  !
;kk! "
GLll 
.ll 
	TexCoord2ll 
(ll 
$numll 
,ll 
$numll 
)ll 
;ll 
GLmm 
.mm 
Vertex3mm 
(mm 
$nummm 
,mm 
$nummm 
,mm 
$nummm  
)mm  !
;mm! "
GLnn 
.nn 
	TexCoord2nn 
(nn 
$numnn 
,nn 
$numnn 
)nn 
;nn 
GLoo 
.oo 
Vertex3oo 
(oo 
$numoo 
,oo 
$numoo 
,oo 
$numoo  
)oo  !
;oo! "
GLpp 
.pp 
	TexCoord2pp 
(pp 
$numpp 
,pp 
$numpp 
)pp 
;pp 
GLqq 
.qq 
Vertex3qq 
(qq 
$numqq 
,qq 
$numqq 
,qq 
$numqq  
)qq  !
;qq! "
GLrr 
.rr 
Endrr 
(rr 
)rr 
;rr 
GLss 
.ss 
	PopMatrixss 
(ss 
)ss 
;ss 
}tt 	
}uu 
publicxx 

staticxx 
partialxx 
classxx 
RectExtensionxx  -
{yy 
public}} 
static}} 
bool}} 
IsNullOrInverted}} +
(}}+ ,
this}}, 0
Rect}}1 5
r}}6 7
)}}7 8
=>~~ 
r~~ 
.~~ 
width~~ 
<=~~ 
$num~~ 
||~~ 
r~~  !
.~~! "
height~~" (
<=~~) +
$num~~, .
|| 
float 
. 
IsNaN 
( 
r 
. 
width "
)" #
||$ &
float' ,
., -
IsNaN- 2
(2 3
r3 4
.4 5
height5 ;
); <
;< =
}
ÄÄ 
}ÅÅ •≈
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[		 
CustomEditor		 
(		 
typeof		 
(		 
Volume		 
)		  
)		  !
]		! "
sealed

 

class

 
VolumeEditor

 
:

 
Editor

  &
{ 
SerializedProperty 

m_IsGlobal %
;% &
SerializedProperty 
m_BlendRadius (
;( )
SerializedProperty 
m_Weight #
;# $
SerializedProperty 

m_Priority %
;% &
SerializedProperty 
	m_Profile $
;$ %%
VolumeComponentListEditor !
m_ComponentList" 1
;1 2
Volume 
actualTarget 
=> 
target %
as& (
Volume) /
;/ 0
VolumeProfile 

profileRef  
=>! #
actualTarget$ 0
.0 1"
HasInstantiatedProfile1 G
(G H
)H I
?J K
actualTargetL X
.X Y
profileY `
:a b
actualTargetc o
.o p
sharedProfilep }
;} ~
readonly 

GUIContent 
[ 
] 
m_Modes %
=& '
{( )
new* -

GUIContent. 8
(8 9
$str9 A
)A B
,B C
newD G

GUIContentH R
(R S
$strS Z
)Z [
}\ ]
;] ^
void 
OnEnable 
( 
) 
{ 	
var 
o 
= 
new 
PropertyFetcher '
<' (
Volume( .
>. /
(/ 0
serializedObject0 @
)@ A
;A B

m_IsGlobal 
= 
o 
. 
Find 
(  
x  !
=>" $
x% &
.& '
isGlobal' /
)/ 0
;0 1
m_BlendRadius 
= 
o 
. 
Find "
(" #
x# $
=>% '
x( )
.) *
blendDistance* 7
)7 8
;8 9
m_Weight 
= 
o 
. 
Find 
( 
x 
=>  "
x# $
.$ %
weight% +
)+ ,
;, -

m_Priority   
=   
o   
.   
Find   
(    
x    !
=>  " $
x  % &
.  & '
priority  ' /
)  / 0
;  0 1
	m_Profile!! 
=!! 
o!! 
.!! 
Find!! 
(!! 
x!!  
=>!!! #
x!!$ %
.!!% &
sharedProfile!!& 3
)!!3 4
;!!4 5
m_ComponentList## 
=## 
new## !%
VolumeComponentListEditor##" ;
(##; <
this##< @
)##@ A
;##A B#
RefreshEffectListEditor$$ #
($$# $
actualTarget$$$ 0
.$$0 1
sharedProfile$$1 >
)$$> ?
;$$? @
}%% 	
void'' 
	OnDisable'' 
('' 
)'' 
{(( 	
m_ComponentList)) 
?)) 
.)) 
Clear)) "
())" #
)))# $
;))$ %
}** 	
void,, #
RefreshEffectListEditor,, $
(,,$ %
VolumeProfile,,% 2
asset,,3 8
),,8 9
{-- 	
m_ComponentList.. 
... 
Clear.. !
(..! "
).." #
;..# $
if00 
(00 
asset00 
!=00 
null00 
)00 
m_ComponentList11 
.11  
Init11  $
(11$ %
asset11% *
,11* +
new11, /
SerializedObject110 @
(11@ A
asset11A F
)11F G
)11G H
;11H I
}22 	
public44 
override44 
void44 
OnInspectorGUI44 +
(44+ ,
)44, -
{55 	
serializedObject66 
.66 
Update66 #
(66# $
)66$ %
;66% &

GUIContent88 
label88 
=88 
EditorGUIUtility88 /
.88/ 0
TrTextContent880 =
(88= >
$str88> D
,88D E
$str88F v
)88v w
;88w x
Rect99 
lineRect99 
=99 
EditorGUILayout99 +
.99+ ,
GetControlRect99, :
(99: ;
)99; <
;99< =
int:: 
isGlobal:: 
=:: 

m_IsGlobal:: %
.::% &
	boolValue::& /
?::0 1
$num::2 3
:::4 5
$num::6 7
;::7 8
	EditorGUI;; 
.;; 
BeginProperty;; #
(;;# $
lineRect;;$ ,
,;;, -
label;;. 3
,;;3 4

m_IsGlobal;;5 ?
);;? @
;;;@ A
{<< 
	EditorGUI== 
.== 
BeginChangeCheck== *
(==* +
)==+ ,
;==, -
isGlobal>> 
=>> 
	EditorGUI>> $
.>>$ %
Popup>>% *
(>>* +
lineRect>>+ 3
,>>3 4
label>>5 :
,>>: ;
isGlobal>>< D
,>>D E
m_Modes>>F M
)>>M N
;>>N O
if?? 
(?? 
	EditorGUI?? 
.?? 
EndChangeCheck?? ,
(??, -
)??- .
)??. /

m_IsGlobal@@ 
.@@ 
	boolValue@@ (
=@@) *
isGlobal@@+ 3
==@@4 6
$num@@7 8
;@@8 9
}AA 
	EditorGUIBB 
.BB 
EndPropertyBB !
(BB! "
)BB" #
;BB# $
ifDD 
(DD 
isGlobalDD 
!=DD 
$numDD 
)DD 
{EE 
ifFF 
(FF 
!FF 
actualTargetFF !
.FF! "
TryGetComponentFF" 1
<FF1 2
ColliderFF2 :
>FF: ;
(FF; <
outFF< ?
_FF@ A
)FFA B
)FFB C
{GG 
EditorGUILayoutHH #
.HH# $
HelpBoxHH$ +
(HH+ ,
$strHH, w
,HHw x
MessageType	HHy Ñ
.
HHÑ Ö
Info
HHÖ â
)
HHâ ä
;
HHä ã
ifJJ 
(JJ 
	GUILayoutJJ !
.JJ! "
ButtonJJ" (
(JJ( )
EditorGUIUtilityJJ) 9
.JJ9 :
TrTextContentJJ: G
(JJG H
$strJJH V
)JJV W
,JJW X
EditorStylesJJY e
.JJe f

miniButtonJJf p
)JJp q
)JJq r
{KK 
varLL 
menuLL  
=LL! "
newLL# &
GenericMenuLL' 2
(LL2 3
)LL3 4
;LL4 5
menuMM 
.MM 
AddItemMM $
(MM$ %
EditorGUIUtilityMM% 5
.MM5 6
TrTextContentMM6 C
(MMC D
$strMMD I
)MMI J
,MMJ K
falseMML Q
,MMQ R
(MMS T
)MMT U
=>MMV X
UndoMMY ]
.MM] ^
AddComponentMM^ j
<MMj k
BoxColliderMMk v
>MMv w
(MMw x
actualTarget	MMx Ñ
.
MMÑ Ö

gameObject
MMÖ è
)
MMè ê
)
MMê ë
;
MMë í
menuNN 
.NN 
AddItemNN $
(NN$ %
EditorGUIUtilityNN% 5
.NN5 6
TrTextContentNN6 C
(NNC D
$strNND L
)NNL M
,NNM N
falseNNO T
,NNT U
(NNV W
)NNW X
=>NNY [
UndoNN\ `
.NN` a
AddComponentNNa m
<NNm n
SphereColliderNNn |
>NN| }
(NN} ~
actualTarget	NN~ ä
.
NNä ã

gameObject
NNã ï
)
NNï ñ
)
NNñ ó
;
NNó ò
menuOO 
.OO 
AddItemOO $
(OO$ %
EditorGUIUtilityOO% 5
.OO5 6
TrTextContentOO6 C
(OOC D
$strOOD M
)OOM N
,OON O
falseOOP U
,OOU V
(OOW X
)OOX Y
=>OOZ \
UndoOO] a
.OOa b
AddComponentOOb n
<OOn o
CapsuleColliderOOo ~
>OO~ 
(	OO Ä
actualTarget
OOÄ å
.
OOå ç

gameObject
OOç ó
)
OOó ò
)
OOò ô
;
OOô ö
menuPP 
.PP 
AddItemPP $
(PP$ %
EditorGUIUtilityPP% 5
.PP5 6
TrTextContentPP6 C
(PPC D
$strPPD J
)PPJ K
,PPK L
falsePPM R
,PPR S
(PPT U
)PPU V
=>PPW Y
UndoPPZ ^
.PP^ _
AddComponentPP_ k
<PPk l
MeshColliderPPl x
>PPx y
(PPy z
actualTarget	PPz Ü
.
PPÜ á

gameObject
PPá ë
)
PPë í
)
PPí ì
;
PPì î
menuQQ 
.QQ 
ShowAsContextQQ *
(QQ* +
)QQ+ ,
;QQ, -
}RR 
}SS 
EditorGUILayoutUU 
.UU  
PropertyFieldUU  -
(UU- .
m_BlendRadiusUU. ;
)UU; <
;UU< =
m_BlendRadiusVV 
.VV 

floatValueVV (
=VV) *
MathfVV+ 0
.VV0 1
MaxVV1 4
(VV4 5
m_BlendRadiusVV5 B
.VVB C

floatValueVVC M
,VVM N
$numVVO Q
)VVQ R
;VVR S
}WW 
EditorGUILayoutYY 
.YY 
PropertyFieldYY )
(YY) *
m_WeightYY* 2
)YY2 3
;YY3 4
EditorGUILayoutZZ 
.ZZ 
PropertyFieldZZ )
(ZZ) *

m_PriorityZZ* 4
)ZZ4 5
;ZZ5 6
bool\\ 
assetHasChanged\\  
=\\! "
false\\# (
;\\( )
bool]] 
showCopy]] 
=]] 
	m_Profile]] %
.]]% & 
objectReferenceValue]]& :
!=]]; =
null]]> B
;]]B C
bool^^ 
	multiEdit^^ 
=^^ 
	m_Profile^^ &
.^^& '&
hasMultipleDifferentValues^^' A
;^^A B
intbb 
buttonWidthbb 
=bb 
showCopybb &
?bb' (
$numbb) +
:bb, -
$numbb. 0
;bb0 1
floatcc 
indentOffsetcc 
=cc  
	EditorGUIcc! *
.cc* +
indentLevelcc+ 6
*cc7 8
$numcc9 <
;cc< =
lineRectdd 
=dd 
EditorGUILayoutdd &
.dd& '
GetControlRectdd' 5
(dd5 6
)dd6 7
;dd7 8
varee 
	labelRectee 
=ee 
newee 
Rectee  $
(ee$ %
lineRectee% -
.ee- .
xee. /
,ee/ 0
lineRectee1 9
.ee9 :
yee: ;
,ee; <
EditorGUIUtilityee= M
.eeM N

labelWidtheeN X
-eeY Z
indentOffsetee[ g
,eeg h
lineRecteei q
.eeq r
heighteer x
)eex y
;eey z
varff 
	fieldRectff 
=ff 
newff 
Rectff  $
(ff$ %
	labelRectff% .
.ff. /
xMaxff/ 3
,ff3 4
lineRectff5 =
.ff= >
yff> ?
,ff? @
lineRectffA I
.ffI J
widthffJ O
-ffP Q
	labelRectffR [
.ff[ \
widthff\ a
-ffb c
buttonWidthffd o
*ffp q
(ffr s
showCopyffs {
?ff| }
$numff~ 
:
ffÄ Å
$num
ffÇ É
)
ffÉ Ñ
,
ffÑ Ö
lineRect
ffÜ é
.
ffé è
height
ffè ï
)
ffï ñ
;
ffñ ó
vargg 
buttonNewRectgg 
=gg 
newgg  #
Rectgg$ (
(gg( )
	fieldRectgg) 2
.gg2 3
xMaxgg3 7
,gg7 8
lineRectgg9 A
.ggA B
yggB C
,ggC D
buttonWidthggE P
,ggP Q
lineRectggR Z
.ggZ [
heightgg[ a
)gga b
;ggb c
varhh 
buttonCopyRecthh 
=hh  
newhh! $
Recthh% )
(hh) *
buttonNewRecthh* 7
.hh7 8
xMaxhh8 <
,hh< =
lineRecthh> F
.hhF G
yhhG H
,hhH I
buttonWidthhhJ U
,hhU V
lineRecthhW _
.hh_ `
heighthh` f
)hhf g
;hhg h

GUIContentjj 

guiContentjj !
;jj! "
ifkk 
(kk 
actualTargetkk 
.kk "
HasInstantiatedProfilekk 3
(kk3 4
)kk4 5
)kk5 6

guiContentll 
=ll 
EditorGUIUtilityll -
.ll- .
TrTextContentll. ;
(ll; <
$strll< P
,llP Q
$strllR n
)lln o
;llo p
elsemm 

guiContentnn 
=nn 
EditorGUIUtilitynn -
.nn- .
TrTextContentnn. ;
(nn; <
$strnn< E
,nnE F
$strnnG h
)nnh i
;nni j
	EditorGUIoo 
.oo 
PrefixLabeloo !
(oo! "
	labelRectoo" +
,oo+ ,

guiContentoo- 7
)oo7 8
;oo8 9
usingqq 
(qq 
varqq 
scopeqq 
=qq 
newqq "
	EditorGUIqq# ,
.qq, -
ChangeCheckScopeqq- =
(qq= >
)qq> ?
)qq? @
{rr 
	EditorGUIss 
.ss 
BeginPropertyss '
(ss' (
	fieldRectss( 1
,ss1 2

GUIContentss3 =
.ss= >
noness> B
,ssB C
	m_ProfilessD M
)ssM N
;ssN O
VolumeProfileuu 
profileuu %
;uu% &
ifww 
(ww 
actualTargetww  
.ww  !"
HasInstantiatedProfileww! 7
(ww7 8
)ww8 9
)ww9 :
profilexx 
=xx 
(xx 
VolumeProfilexx ,
)xx, -
	EditorGUIxx- 6
.xx6 7
ObjectFieldxx7 B
(xxB C
	fieldRectxxC L
,xxL M
actualTargetxxN Z
.xxZ [
profilexx[ b
,xxb c
typeofxxd j
(xxj k
VolumeProfilexxk x
)xxx y
,xxy z
false	xx{ Ä
)
xxÄ Å
;
xxÅ Ç
elseyy 
profilezz 
=zz 
(zz 
VolumeProfilezz ,
)zz, -
	EditorGUIzz- 6
.zz6 7
ObjectFieldzz7 B
(zzB C
	fieldRectzzC L
,zzL M
	m_ProfilezzN W
.zzW X 
objectReferenceValuezzX l
,zzl m
typeofzzn t
(zzt u
VolumeProfile	zzu Ç
)
zzÇ É
,
zzÉ Ñ
false
zzÖ ä
)
zzä ã
;
zzã å
if|| 
(|| 
scope|| 
.|| 
changed|| !
)||! "
{}} 
assetHasChanged~~ #
=~~$ %
true~~& *
;~~* +
	m_Profile 
.  
objectReferenceValue 2
=3 4
profile5 <
;< =
if
ÅÅ 
(
ÅÅ 
actualTarget
ÅÅ $
.
ÅÅ$ %$
HasInstantiatedProfile
ÅÅ% ;
(
ÅÅ; <
)
ÅÅ< =
)
ÅÅ= >
actualTarget
ÇÇ $
.
ÇÇ$ %
profile
ÇÇ% ,
=
ÇÇ- .
null
ÇÇ/ 3
;
ÇÇ3 4
}
ÉÉ 
	EditorGUI
ÖÖ 
.
ÖÖ 
EndProperty
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
;
ÖÖ' (
}
ÜÜ 
using
àà 
(
àà 
new
àà 
	EditorGUI
àà  
.
àà  !
DisabledScope
àà! .
(
àà. /
	multiEdit
àà/ 8
)
àà8 9
)
àà9 :
{
ââ 
if
ää 
(
ää 
GUI
ää 
.
ää 
Button
ää 
(
ää 
buttonNewRect
ää ,
,
ää, -
EditorGUIUtility
ää. >
.
ää> ?
TrTextContent
ää? L
(
ääL M
$str
ääM R
,
ääR S
$str
ääT k
)
ääk l
,
ääl m
showCopy
ään v
?
ääw x
EditorStylesääy Ö
.ääÖ Ü
miniButtonLeftääÜ î
:ääï ñ
EditorStylesääó £
.ää£ §

miniButtonää§ Æ
)ääÆ Ø
)ääØ ∞
{
ãã 
var
éé 

targetName
éé "
=
éé# $
actualTarget
éé% 1
.
éé1 2
name
éé2 6
;
éé6 7
var
èè 
scene
èè 
=
èè 
actualTarget
èè  ,
.
èè, -

gameObject
èè- 7
.
èè7 8
scene
èè8 =
;
èè= >
var
êê 
asset
êê 
=
êê "
VolumeProfileFactory
êê  4
.
êê4 5!
CreateVolumeProfile
êê5 H
(
êêH I
scene
êêI N
,
êêN O

targetName
êêP Z
)
êêZ [
;
êê[ \
	m_Profile
ëë 
.
ëë "
objectReferenceValue
ëë 2
=
ëë3 4
asset
ëë5 :
;
ëë: ;
actualTarget
íí  
.
íí  !
profile
íí! (
=
íí) *
null
íí+ /
;
íí/ 0
assetHasChanged
ìì #
=
ìì$ %
true
ìì& *
;
ìì* +
}
îî 
if
ññ 
(
ññ 
actualTarget
ññ  
.
ññ  !$
HasInstantiatedProfile
ññ! 7
(
ññ7 8
)
ññ8 9
)
ññ9 :

guiContent
óó 
=
óó  
EditorGUIUtility
óó! 1
.
óó1 2
TrTextContent
óó2 ?
(
óó? @
$str
óó@ F
,
óóF G
$str
óóH g
)
óóg h
;
óóh i
else
òò 

guiContent
ôô 
=
ôô  
EditorGUIUtility
ôô! 1
.
ôô1 2
TrTextContent
ôô2 ?
(
ôô? @
$str
ôô@ G
,
ôôG H
$strôôI ó
)ôôó ò
;ôôò ô
if
öö 
(
öö 
showCopy
öö 
&&
öö 
GUI
öö  #
.
öö# $
Button
öö$ *
(
öö* +
buttonCopyRect
öö+ 9
,
öö9 :

guiContent
öö; E
,
ööE F
EditorStyles
ööG S
.
ööS T
miniButtonRight
ööT c
)
ööc d
)
ööd e
{
õõ 
var
ùù 
origin
ùù 
=
ùù  

profileRef
ùù! +
;
ùù+ ,
var
ûû 
path
ûû 
=
ûû 
AssetDatabase
ûû ,
.
ûû, -
GetAssetPath
ûû- 9
(
ûû9 :
	m_Profile
ûû: C
.
ûûC D"
objectReferenceValue
ûûD X
)
ûûX Y
;
ûûY Z
path
†† 
=
†† &
IsAssetInReadOnlyPackage
†† 3
(
††3 4
path
††4 8
)
††8 9
?
££ 
AssetDatabase
££ '
.
££' (%
GenerateUniqueAssetPath
££( ?
(
££? @
Path
££@ D
.
££D E
Combine
££E L
(
££L M
$str
££M U
,
££U V
Path
££W [
.
££[ \
GetFileName
££\ g
(
££g h
path
££h l
)
££l m
)
££m n
)
££n o
:
•• 
AssetDatabase
•• '
.
••' (%
GenerateUniqueAssetPath
••( ?
(
••? @
path
••@ D
)
••D E
;
••E F
var
ßß 
asset
ßß 
=
ßß 
Instantiate
ßß  +
(
ßß+ ,
origin
ßß, 2
)
ßß2 3
;
ßß3 4
asset
®® 
.
®® 

components
®® $
.
®®$ %
Clear
®®% *
(
®®* +
)
®®+ ,
;
®®, -
AssetDatabase
©© !
.
©©! "
CreateAsset
©©" -
(
©©- .
asset
©©. 3
,
©©3 4
path
©©5 9
)
©©9 :
;
©©: ;
foreach
´´ 
(
´´ 
var
´´  
item
´´! %
in
´´& (
origin
´´) /
.
´´/ 0

components
´´0 :
)
´´: ;
{
¨¨ 
var
≠≠ 
itemCopy
≠≠ $
=
≠≠% &
Instantiate
≠≠' 2
(
≠≠2 3
item
≠≠3 7
)
≠≠7 8
;
≠≠8 9
itemCopy
ÆÆ  
.
ÆÆ  !
	hideFlags
ÆÆ! *
=
ÆÆ+ ,
	HideFlags
ÆÆ- 6
.
ÆÆ6 7
HideInInspector
ÆÆ7 F
|
ÆÆG H
	HideFlags
ÆÆI R
.
ÆÆR S
HideInHierarchy
ÆÆS b
;
ÆÆb c
itemCopy
ØØ  
.
ØØ  !
name
ØØ! %
=
ØØ& '
item
ØØ( ,
.
ØØ, -
name
ØØ- 1
;
ØØ1 2
asset
∞∞ 
.
∞∞ 

components
∞∞ (
.
∞∞( )
Add
∞∞) ,
(
∞∞, -
itemCopy
∞∞- 5
)
∞∞5 6
;
∞∞6 7
AssetDatabase
±± %
.
±±% &
AddObjectToAsset
±±& 6
(
±±6 7
itemCopy
±±7 ?
,
±±? @
asset
±±A F
)
±±F G
;
±±G H
}
≤≤ 
AssetDatabase
¥¥ !
.
¥¥! "

SaveAssets
¥¥" ,
(
¥¥, -
)
¥¥- .
;
¥¥. /
AssetDatabase
µµ !
.
µµ! "
Refresh
µµ" )
(
µµ) *
)
µµ* +
;
µµ+ ,
	m_Profile
∑∑ 
.
∑∑ "
objectReferenceValue
∑∑ 2
=
∑∑3 4
asset
∑∑5 :
;
∑∑: ;
actualTarget
∏∏  
.
∏∏  !
profile
∏∏! (
=
∏∏) *
null
∏∏+ /
;
∏∏/ 0
assetHasChanged
ππ #
=
ππ$ %
true
ππ& *
;
ππ* +
}
∫∫ 
}
ªª 
EditorGUILayout
ΩΩ 
.
ΩΩ 
Space
ΩΩ !
(
ΩΩ! "
)
ΩΩ" #
;
ΩΩ# $
if
øø 
(
øø 
	m_Profile
øø 
.
øø "
objectReferenceValue
øø .
==
øø/ 1
null
øø2 6
&&
øø7 9
!
øø: ;
actualTarget
øø; G
.
øøG H$
HasInstantiatedProfile
øøH ^
(
øø^ _
)
øø_ `
)
øø` a
{
¿¿ 
if
¡¡ 
(
¡¡ 
assetHasChanged
¡¡ #
)
¡¡# $
m_ComponentList
¬¬ #
.
¬¬# $
Clear
¬¬$ )
(
¬¬) *
)
¬¬* +
;
¬¬+ ,
}
√√ 
else
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ 
assetHasChanged
∆∆ #
||
∆∆$ &

profileRef
∆∆' 1
!=
∆∆2 4
m_ComponentList
∆∆5 D
.
∆∆D E
asset
∆∆E J
)
∆∆J K
{
«« 
serializedObject
»» $
.
»»$ %%
ApplyModifiedProperties
»»% <
(
»»< =
)
»»= >
;
»»> ?
serializedObject
…… $
.
……$ %
Update
……% +
(
……+ ,
)
……, -
;
……- .%
RefreshEffectListEditor
   +
(
  + ,

profileRef
  , 6
)
  6 7
;
  7 8
}
ÀÀ 
if
ÕÕ 
(
ÕÕ 
!
ÕÕ 
	multiEdit
ÕÕ 
)
ÕÕ 
{
ŒŒ 
m_ComponentList
œœ #
.
œœ# $
OnGUI
œœ$ )
(
œœ) *
)
œœ* +
;
œœ+ ,
EditorGUILayout
–– #
.
––# $
Space
––$ )
(
––) *
)
––* +
;
––+ ,
}
—— 
}
““ 
serializedObject
‘‘ 
.
‘‘ %
ApplyModifiedProperties
‘‘ 4
(
‘‘4 5
)
‘‘5 6
;
‘‘6 7
}
’’ 	
static
◊◊ 
bool
◊◊ &
IsAssetInReadOnlyPackage
◊◊ ,
(
◊◊, -
string
◊◊- 3
path
◊◊4 8
)
◊◊8 9
{
ÿÿ 	
Assert
ŸŸ 
.
ŸŸ 
	IsNotNull
ŸŸ 
(
ŸŸ 
path
ŸŸ !
)
ŸŸ! "
;
ŸŸ" #
var
⁄⁄ 
info
⁄⁄ 
=
⁄⁄ 
PackageManager
⁄⁄ %
.
⁄⁄% &
PackageInfo
⁄⁄& 1
.
⁄⁄1 2
FindForAssetPath
⁄⁄2 B
(
⁄⁄B C
path
⁄⁄C G
)
⁄⁄G H
;
⁄⁄H I
return
€€ 
info
€€ 
!=
€€ 
null
€€ 
&&
€€  "
(
€€# $
info
€€$ (
.
€€( )
source
€€) /
!=
€€0 2
PackageSource
€€3 @
.
€€@ A
Local
€€A F
&&
€€G I
info
€€J N
.
€€N O
source
€€O U
!=
€€V X
PackageSource
€€Y f
.
€€f g
Embedded
€€g o
)
€€o p
;
€€p q
}
‹‹ 	
}
›› 
}ﬁﬁ ≥
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\ExpandedState.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

struct 
ExpandedState 
<  
TState  &
,& '
TTarget( /
>/ 0
where		 
TState		 
:		 
struct		 
,		 
IConvertible		 +
{

 
EditorPrefBoolFlags 
< 
TState "
>" #
m_State$ +
;+ ,
public 
ExpandedState 
( 
TState #
defaultValue$ 0
,0 1
string2 8
prefix9 ?
=@ A
$strB J
)J K
{ 	
String 
Key 
= 
string 
.  
Format  &
(& '
$str' 9
,9 :
prefix; A
,A B
typeofC I
(I J
TTargetJ Q
)Q R
.R S
NameS W
)W X
;X Y
m_State 
= 
new 
EditorPrefBoolFlags -
<- .
TState. 4
>4 5
(5 6
Key6 9
)9 :
;: ;
if 
( 
! 
EditorPrefs 
. 
HasKey #
(# $
Key$ '
)' (
)( )
{ 
EditorPrefs 
. 
SetInt "
(" #
Key# &
,& '
(( )
int) ,
), -
(- .
object. 4
)4 5
defaultValue5 A
)A B
;B C
} 
} 	
public 
bool 
this 
[ 
TState 
mask  $
]$ %
{   	
get!! 
{!! 
return!! 
m_State!!  
.!!  !
HasFlag!!! (
(!!( )
mask!!) -
)!!- .
;!!. /
}!!0 1
set"" 
{"" 
m_State"" 
."" 
SetFlag"" !
(""! "
mask""" &
,""& '
value""( -
)""- .
;"". /
}""0 1
}## 	
public(( 
bool(( 
GetExpandedAreas(( $
((($ %
TState((% +
mask((, 0
)((0 1
{)) 	
return** 
m_State** 
.** 
HasFlag** "
(**" #
mask**# '
)**' (
;**( )
}++ 	
public00 
void00 
SetExpandedAreas00 $
(00$ %
TState00% +
mask00, 0
,000 1
bool002 6
value007 <
)00< =
{11 	
m_State22 
.22 
SetFlag22 
(22 
mask22  
,22  !
value22" '
)22' (
;22( )
}33 	
public66 
void66 
	ExpandAll66 
(66 
)66 
{77 	
m_State88 
.88 
rawValue88 
=88 
~88  
(88  !
-88! "
$num88" #
)88# $
;88$ %
}99 	
public<< 
void<< 
CollapseAll<< 
(<<  
)<<  !
{== 	
m_State>> 
.>> 
rawValue>> 
=>> 
$num>>  
;>>  !
}?? 	
}@@ 
}AA ›ﬁ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\CoreEditorDrawers.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
Flags 

]
 
public		 

enum		 
FoldoutOption		 
{

 
None 
= 
$num 
, 
Indent 
= 
$num 
<< 
$num 
, 
Boxed 
= 
$num 
<< 
$num 
, 

SubFoldout 
= 
$num 
<< 
$num 
, 
NoSpaceAtEnd 
= 
$num 
<< 
$num 
} 
[ 
Flags 

]
 
public 

enum 
GroupOption 
{ 
None 
= 
$num 
, 
Indent 
= 
$num 
<< 
$num 
} 
public%% 

static%% 
class%% 
CoreEditorDrawer%% (
<%%( )
TData%%) .
>%%. /
{&& 
public(( 
	interface(( 
IDrawer((  
{)) 	
void// 
Draw// 
(// 
TData// 
serializedProperty// .
,//. /
Editor//0 6
owner//7 <
)//< =
;//= >
}00 	
public66 
delegate66 
bool66 
Enabler66 $
(66$ %
TData66% *
data66+ /
,66/ 0
Editor661 7
owner668 =
)66= >
;66> ?
public;; 
delegate;; 
void;; 
SwitchEnabler;; *
(;;* +
TData;;+ 0
data;;1 5
,;;5 6
Editor;;7 =
owner;;> C
);;C D
;;;D E
publicBB 
delegateBB 
T2DataBB 

DataSelectBB )
<BB) *
T2DataBB* 0
>BB0 1
(BB1 2
TDataBB2 7
dataBB8 <
,BB< =
EditorBB> D
ownerBBE J
)BBJ K
;BBK L
publicGG 
delegateGG 
voidGG 
ActionDrawerGG )
(GG) *
TDataGG* /
dataGG0 4
,GG4 5
EditorGG6 <
ownerGG= B
)GGB C
;GGC D
publicJJ 
staticJJ 
readonlyJJ 
IDrawerJJ &
spaceJJ' ,
=JJ- .
GroupJJ/ 4
(JJ4 5
(JJ5 6
dataJJ6 :
,JJ: ;
ownerJJ< A
)JJA B
=>JJC E
EditorGUILayoutJJF U
.JJU V
SpaceJJV [
(JJ[ \
)JJ\ ]
)JJ] ^
;JJ^ _
publicMM 
staticMM 
readonlyMM 
IDrawerMM &
noopMM' +
=MM, -
GroupMM. 3
(MM3 4
(MM4 5
dataMM5 9
,MM9 :
ownerMM; @
)MM@ A
=>MMB D
{MME F
}MMG H
)MMH I
;MMI J
publicUU 
staticUU 
IDrawerUU 
ConditionalUU )
(UU) *
EnablerUU* 1
enablerUU2 9
,UU9 :
paramsUU; A
IDrawerUUB I
[UUI J
]UUJ K
contentDrawersUUL Z
)UUZ [
{VV 	
returnWW 
newWW %
ConditionalDrawerInternalWW 0
(WW0 1
enablerWW1 8
,WW8 9
contentDrawersWW: H
.WWH I
DrawWWI M
)WWM N
;WWN O
}XX 	
public`` 
static`` 
IDrawer`` 
Conditional`` )
(``) *
Enabler``* 1
enabler``2 9
,``9 :
params``; A
ActionDrawer``B N
[``N O
]``O P
contentDrawers``Q _
)``_ `
{aa 	
returnbb 
newbb %
ConditionalDrawerInternalbb 0
(bb0 1
enablerbb1 8
,bb8 9
contentDrawersbb: H
)bbH I
;bbI J
}cc 	
classee %
ConditionalDrawerInternalee '
:ee( )
IDraweree* 1
{ff 	
ActionDrawergg 
[gg 
]gg 
actionDrawersgg (
{gg) *
getgg+ .
;gg. /
setgg0 3
;gg3 4
}gg5 6
Enablerhh 
	m_Enablerhh 
;hh 
publicjj %
ConditionalDrawerInternaljj ,
(jj, -
Enablerjj- 4
enablerjj5 <
=jj= >
nulljj? C
,jjC D
paramsjjE K
ActionDrawerjjL X
[jjX Y
]jjY Z
actionDrawersjj[ h
)jjh i
{kk 
thisll 
.ll 
actionDrawersll "
=ll# $
actionDrawersll% 2
;ll2 3
	m_Enablermm 
=mm 
enablermm #
;mm# $
}nn 
voidpp 
IDrawerpp 
.pp 
Drawpp 
(pp 
TDatapp #
datapp$ (
,pp( )
Editorpp* 0
ownerpp1 6
)pp6 7
{qq 
ifrr 
(rr 
	m_Enablerrr 
!=rr  
nullrr! %
&&rr& (
!rr) *
	m_Enablerrr* 3
(rr3 4
datarr4 8
,rr8 9
ownerrr: ?
)rr? @
)rr@ A
returnss 
;ss 
foruu 
(uu 
varuu 
iuu 
=uu 
$numuu 
;uu 
iuu  !
<uu" #
actionDrawersuu$ 1
.uu1 2
Lengthuu2 8
;uu8 9
iuu: ;
++uu; =
)uu= >
actionDrawersvv !
[vv! "
ivv" #
]vv# $
(vv$ %
datavv% )
,vv) *
ownervv+ 0
)vv0 1
;vv1 2
}ww 
}xx 	
public
ÅÅ 
static
ÅÅ 
IDrawer
ÅÅ  
TernaryConditional
ÅÅ 0
(
ÅÅ0 1
Enabler
ÅÅ1 8
@switch
ÅÅ9 @
,
ÅÅ@ A
IDrawer
ÅÅB I

drawIfTrue
ÅÅJ T
,
ÅÅT U
IDrawer
ÅÅV ]
drawIfFalse
ÅÅ^ i
)
ÅÅi j
=>
ÇÇ 
new
ÇÇ .
 TernaryConditionalDrawerInternal
ÇÇ 3
(
ÇÇ3 4
@switch
ÇÇ4 ;
,
ÇÇ; <

drawIfTrue
ÇÇ= G
.
ÇÇG H
Draw
ÇÇH L
,
ÇÇL M
drawIfFalse
ÇÇN Y
.
ÇÇY Z
Draw
ÇÇZ ^
)
ÇÇ^ _
;
ÇÇ_ `
public
ãã 
static
ãã 
IDrawer
ãã  
TernaryConditional
ãã 0
(
ãã0 1
Enabler
ãã1 8
@switch
ãã9 @
,
ãã@ A
ActionDrawer
ããB N

drawIfTrue
ããO Y
,
ããY Z
ActionDrawer
ãã[ g
drawIfFalse
ããh s
)
ããs t
=>
åå 
new
åå .
 TernaryConditionalDrawerInternal
åå 3
(
åå3 4
@switch
åå4 ;
,
åå; <

drawIfTrue
åå= G
,
ååG H
drawIfFalse
ååI T
)
ååT U
;
ååU V
class
éé .
 TernaryConditionalDrawerInternal
éé .
:
éé/ 0
IDrawer
éé1 8
{
èè 	
ActionDrawer
êê 

drawIfTrue
êê #
;
êê# $
ActionDrawer
ëë 
drawIfFalse
ëë $
;
ëë$ %
Enabler
íí 
m_Switch
íí 
;
íí 
public
îî .
 TernaryConditionalDrawerInternal
îî 3
(
îî3 4
Enabler
îî4 ;
@switch
îî< C
,
îîC D
ActionDrawer
îîE Q

drawIfTrue
îîR \
,
îî\ ]
ActionDrawer
îî^ j
drawIfFalse
îîk v
)
îîv w
{
ïï 
this
ññ 
.
ññ 

drawIfTrue
ññ 
=
ññ  !

drawIfTrue
ññ" ,
;
ññ, -
this
óó 
.
óó 
drawIfFalse
óó  
=
óó! "
drawIfFalse
óó# .
;
óó. /
m_Switch
òò 
=
òò 
@switch
òò "
;
òò" #
}
ôô 
void
õõ 
IDrawer
õõ 
.
õõ 
Draw
õõ 
(
õõ 
TData
õõ #
data
õõ$ (
,
õõ( )
Editor
õõ* 0
owner
õõ1 6
)
õõ6 7
{
úú 
if
ùù 
(
ùù 
m_Switch
ùù 
!=
ùù 
null
ùù  $
&&
ùù% '
!
ùù( )
m_Switch
ùù) 1
(
ùù1 2
data
ùù2 6
,
ùù6 7
owner
ùù8 =
)
ùù= >
)
ùù> ?
drawIfFalse
ûû 
?
ûû  
.
ûû  !
Invoke
ûû! '
(
ûû' (
data
ûû( ,
,
ûû, -
owner
ûû. 3
)
ûû3 4
;
ûû4 5
else
üü 

drawIfTrue
†† 
?
†† 
.
††  
Invoke
††  &
(
††& '
data
††' +
,
††+ ,
owner
††- 2
)
††2 3
;
††3 4
}
°° 
}
¢¢ 	
public
™™ 
static
™™ 
IDrawer
™™ 
Group
™™ #
(
™™# $
params
™™$ *
IDrawer
™™+ 2
[
™™2 3
]
™™3 4
contentDrawers
™™5 C
)
™™C D
{
´´ 	
return
¨¨ 
new
¨¨ !
GroupDrawerInternal
¨¨ *
(
¨¨* +
-
¨¨+ ,
$num
¨¨, .
,
¨¨. /
GroupOption
¨¨0 ;
.
¨¨; <
None
¨¨< @
,
¨¨@ A
contentDrawers
¨¨B P
.
¨¨P Q
Draw
¨¨Q U
)
¨¨U V
;
¨¨V W
}
≠≠ 	
public
µµ 
static
µµ 
IDrawer
µµ 
Group
µµ #
(
µµ# $
params
µµ$ *
ActionDrawer
µµ+ 7
[
µµ7 8
]
µµ8 9
contentDrawers
µµ: H
)
µµH I
{
∂∂ 	
return
∑∑ 
new
∑∑ !
GroupDrawerInternal
∑∑ *
(
∑∑* +
-
∑∑+ ,
$num
∑∑, .
,
∑∑. /
GroupOption
∑∑0 ;
.
∑∑; <
None
∑∑< @
,
∑∑@ A
contentDrawers
∑∑B P
)
∑∑P Q
;
∑∑Q R
}
∏∏ 	
public
ææ 
static
ææ 
IDrawer
ææ 
Group
ææ #
(
ææ# $
float
ææ$ )

labelWidth
ææ* 4
,
ææ4 5
params
ææ6 <
IDrawer
ææ= D
[
ææD E
]
ææE F
contentDrawers
ææG U
)
ææU V
{
øø 	
return
¿¿ 
new
¿¿ !
GroupDrawerInternal
¿¿ *
(
¿¿* +

labelWidth
¿¿+ 5
,
¿¿5 6
GroupOption
¿¿7 B
.
¿¿B C
None
¿¿C G
,
¿¿G H
contentDrawers
¿¿I W
.
¿¿W X
Draw
¿¿X \
)
¿¿\ ]
;
¿¿] ^
}
¡¡ 	
public
«« 
static
«« 
IDrawer
«« 
Group
«« #
(
««# $
float
««$ )

labelWidth
««* 4
,
««4 5
params
««6 <
ActionDrawer
««= I
[
««I J
]
««J K
contentDrawers
««L Z
)
««Z [
{
»» 	
return
…… 
new
…… !
GroupDrawerInternal
…… *
(
……* +

labelWidth
……+ 5
,
……5 6
GroupOption
……7 B
.
……B C
None
……C G
,
……G H
contentDrawers
……I W
)
……W X
;
……X Y
}
   	
public
”” 
static
”” 
IDrawer
”” 
Group
”” #
(
””# $
GroupOption
””$ /
options
””0 7
,
””7 8
params
””9 ?
IDrawer
””@ G
[
””G H
]
””H I
contentDrawers
””J X
)
””X Y
{
‘‘ 	
return
’’ 
new
’’ !
GroupDrawerInternal
’’ *
(
’’* +
-
’’+ ,
$num
’’, .
,
’’. /
options
’’0 7
,
’’7 8
contentDrawers
’’9 G
.
’’G H
Draw
’’H L
)
’’L M
;
’’M N
}
÷÷ 	
public
ﬂﬂ 
static
ﬂﬂ 
IDrawer
ﬂﬂ 
Group
ﬂﬂ #
(
ﬂﬂ# $
GroupOption
ﬂﬂ$ /
options
ﬂﬂ0 7
,
ﬂﬂ7 8
params
ﬂﬂ9 ?
ActionDrawer
ﬂﬂ@ L
[
ﬂﬂL M
]
ﬂﬂM N
contentDrawers
ﬂﬂO ]
)
ﬂﬂ] ^
{
‡‡ 	
return
·· 
new
·· !
GroupDrawerInternal
·· *
(
··* +
-
··+ ,
$num
··, .
,
··. /
options
··0 7
,
··7 8
contentDrawers
··9 G
)
··G H
;
··H I
}
‚‚ 	
public
ÈÈ 
static
ÈÈ 
IDrawer
ÈÈ 
Group
ÈÈ #
(
ÈÈ# $
float
ÈÈ$ )

labelWidth
ÈÈ* 4
,
ÈÈ4 5
GroupOption
ÈÈ6 A
options
ÈÈB I
,
ÈÈI J
params
ÈÈK Q
IDrawer
ÈÈR Y
[
ÈÈY Z
]
ÈÈZ [
contentDrawers
ÈÈ\ j
)
ÈÈj k
{
ÍÍ 	
return
ÎÎ 
new
ÎÎ !
GroupDrawerInternal
ÎÎ *
(
ÎÎ* +

labelWidth
ÎÎ+ 5
,
ÎÎ5 6
options
ÎÎ7 >
,
ÎÎ> ?
contentDrawers
ÎÎ@ N
.
ÎÎN O
Draw
ÎÎO S
)
ÎÎS T
;
ÎÎT U
}
ÏÏ 	
public
ÛÛ 
static
ÛÛ 
IDrawer
ÛÛ 
Group
ÛÛ #
(
ÛÛ# $
float
ÛÛ$ )

labelWidth
ÛÛ* 4
,
ÛÛ4 5
GroupOption
ÛÛ6 A
options
ÛÛB I
,
ÛÛI J
params
ÛÛK Q
ActionDrawer
ÛÛR ^
[
ÛÛ^ _
]
ÛÛ_ `
contentDrawers
ÛÛa o
)
ÛÛo p
{
ÙÙ 	
return
ıı 
new
ıı !
GroupDrawerInternal
ıı *
(
ıı* +

labelWidth
ıı+ 5
,
ıı5 6
options
ıı7 >
,
ıı> ?
contentDrawers
ıı@ N
)
ııN O
;
ııO P
}
ˆˆ 	
class
¯¯ !
GroupDrawerInternal
¯¯ !
:
¯¯" #
IDrawer
¯¯$ +
{
˘˘ 	
ActionDrawer
˙˙ 
[
˙˙ 
]
˙˙ 
actionDrawers
˙˙ (
{
˙˙) *
get
˙˙+ .
;
˙˙. /
set
˙˙0 3
;
˙˙3 4
}
˙˙5 6
float
˚˚ 
m_LabelWidth
˚˚ 
;
˚˚ 
bool
¸¸ 

isIndented
¸¸ 
;
¸¸ 
public
˛˛ !
GroupDrawerInternal
˛˛ &
(
˛˛& '
float
˛˛' ,

labelWidth
˛˛- 7
=
˛˛8 9
-
˛˛: ;
$num
˛˛; =
,
˛˛= >
GroupOption
˛˛? J
options
˛˛K R
=
˛˛S T
GroupOption
˛˛U `
.
˛˛` a
None
˛˛a e
,
˛˛e f
params
˛˛g m
ActionDrawer
˛˛n z
[
˛˛z {
]
˛˛{ |
actionDrawers˛˛} ä
)˛˛ä ã
{
ˇˇ 
this
ÄÄ 
.
ÄÄ 
actionDrawers
ÄÄ "
=
ÄÄ# $
actionDrawers
ÄÄ% 2
;
ÄÄ2 3
m_LabelWidth
ÅÅ 
=
ÅÅ 

labelWidth
ÅÅ )
;
ÅÅ) *

isIndented
ÇÇ 
=
ÇÇ 
(
ÇÇ 
options
ÇÇ %
&
ÇÇ& '
GroupOption
ÇÇ( 3
.
ÇÇ3 4
Indent
ÇÇ4 :
)
ÇÇ: ;
!=
ÇÇ< >
$num
ÇÇ? @
;
ÇÇ@ A
}
ÉÉ 
void
ÖÖ 
IDrawer
ÖÖ 
.
ÖÖ 
Draw
ÖÖ 
(
ÖÖ 
TData
ÖÖ #
data
ÖÖ$ (
,
ÖÖ( )
Editor
ÖÖ* 0
owner
ÖÖ1 6
)
ÖÖ6 7
{
ÜÜ 
if
áá 
(
áá 

isIndented
áá 
)
áá 
++
àà 
	EditorGUI
àà 
.
àà  
indentLevel
àà  +
;
àà+ ,
var
ââ 
currentLabelWidth
ââ %
=
ââ& '
EditorGUIUtility
ââ( 8
.
ââ8 9

labelWidth
ââ9 C
;
ââC D
if
ää 
(
ää 
m_LabelWidth
ää  
>=
ää! #
$num
ää$ &
)
ää& '
{
ãã 
EditorGUIUtility
åå $
.
åå$ %

labelWidth
åå% /
=
åå0 1
m_LabelWidth
åå2 >
;
åå> ?
}
çç 
for
éé 
(
éé 
var
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé  !
<
éé" #
actionDrawers
éé$ 1
.
éé1 2
Length
éé2 8
;
éé8 9
i
éé: ;
++
éé; =
)
éé= >
actionDrawers
èè !
[
èè! "
i
èè" #
]
èè# $
(
èè$ %
data
èè% )
,
èè) *
owner
èè+ 0
)
èè0 1
;
èè1 2
if
êê 
(
êê 
m_LabelWidth
êê  
>=
êê! #
$num
êê$ &
)
êê& '
{
ëë 
EditorGUIUtility
íí $
.
íí$ %

labelWidth
íí% /
=
íí0 1
currentLabelWidth
íí2 C
;
ííC D
}
ìì 
if
îî 
(
îî 

isIndented
îî 
)
îî 
--
ïï 
	EditorGUI
ïï 
.
ïï  
indentLevel
ïï  +
;
ïï+ ,
}
ññ 
}
óó 	
public
ûû 
static
ûû 
IDrawer
ûû 
Select
ûû $
<
ûû$ %
T2Data
ûû% +
>
ûû+ ,
(
ûû, -

DataSelect
üü 
<
üü 
T2Data
üü 
>
üü 

dataSelect
üü )
,
üü) *
params
†† 
CoreEditorDrawer
†† #
<
††# $
T2Data
††$ *
>
††* +
.
††+ ,
IDrawer
††, 3
[
††3 4
]
††4 5
otherDrawers
††6 B
)
††B C
{
°° 	
return
¢¢ 
new
¢¢ "
SelectDrawerInternal
¢¢ +
<
¢¢+ ,
T2Data
¢¢, 2
>
¢¢2 3
(
¢¢3 4

dataSelect
¢¢4 >
,
¢¢> ?
otherDrawers
¢¢@ L
.
¢¢L M
Draw
¢¢M Q
)
¢¢Q R
;
¢¢R S
}
££ 	
public
™™ 
static
™™ 
IDrawer
™™ 
Select
™™ $
<
™™$ %
T2Data
™™% +
>
™™+ ,
(
™™, -

DataSelect
´´ 
<
´´ 
T2Data
´´ 
>
´´ 

dataSelect
´´ )
,
´´) *
params
¨¨ 
CoreEditorDrawer
¨¨ #
<
¨¨# $
T2Data
¨¨$ *
>
¨¨* +
.
¨¨+ ,
ActionDrawer
¨¨, 8
[
¨¨8 9
]
¨¨9 :
otherDrawers
¨¨; G
)
¨¨G H
{
≠≠ 	
return
ÆÆ 
new
ÆÆ "
SelectDrawerInternal
ÆÆ +
<
ÆÆ+ ,
T2Data
ÆÆ, 2
>
ÆÆ2 3
(
ÆÆ3 4

dataSelect
ÆÆ4 >
,
ÆÆ> ?
otherDrawers
ÆÆ@ L
)
ÆÆL M
;
ÆÆM N
}
ØØ 	
class
±± "
SelectDrawerInternal
±± "
<
±±" #
T2Data
±±# )
>
±±) *
:
±±+ ,
IDrawer
±±- 4
{
≤≤ 	

DataSelect
≥≥ 
<
≥≥ 
T2Data
≥≥ 
>
≥≥ 
m_DataSelect
≥≥ +
;
≥≥+ ,
CoreEditorDrawer
¥¥ 
<
¥¥ 
T2Data
¥¥ #
>
¥¥# $
.
¥¥$ %
ActionDrawer
¥¥% 1
[
¥¥1 2
]
¥¥2 3
m_SourceDrawers
¥¥4 C
;
¥¥C D
public
∂∂ "
SelectDrawerInternal
∂∂ '
(
∂∂' (

DataSelect
∂∂( 2
<
∂∂2 3
T2Data
∂∂3 9
>
∂∂9 :

dataSelect
∂∂; E
,
∂∂E F
params
∑∑ 
CoreEditorDrawer
∑∑ '
<
∑∑' (
T2Data
∑∑( .
>
∑∑. /
.
∑∑/ 0
ActionDrawer
∑∑0 <
[
∑∑< =
]
∑∑= >
otherDrawers
∑∑? K
)
∑∑K L
{
∏∏ 
m_SourceDrawers
ππ 
=
ππ  !
otherDrawers
ππ" .
;
ππ. /
m_DataSelect
∫∫ 
=
∫∫ 

dataSelect
∫∫ )
;
∫∫) *
}
ªª 
void
ΩΩ 
IDrawer
ΩΩ 
.
ΩΩ 
Draw
ΩΩ 
(
ΩΩ 
TData
ΩΩ #
data
ΩΩ$ (
,
ΩΩ( )
Editor
ΩΩ* 0
o
ΩΩ1 2
)
ΩΩ2 3
{
ææ 
var
øø 
p2
øø 
=
øø 
m_DataSelect
øø %
(
øø% &
data
øø& *
,
øø* +
o
øø, -
)
øø- .
;
øø. /
for
¿¿ 
(
¿¿ 
var
¿¿ 
i
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
i
¿¿  !
<
¿¿" #
m_SourceDrawers
¿¿$ 3
.
¿¿3 4
Length
¿¿4 :
;
¿¿: ;
i
¿¿< =
++
¿¿= ?
)
¿¿? @
m_SourceDrawers
¡¡ #
[
¡¡# $
i
¡¡$ %
]
¡¡% &
(
¡¡& '
p2
¡¡' )
,
¡¡) *
o
¡¡+ ,
)
¡¡, -
;
¡¡- .
}
¬¬ 
}
√√ 	
public
–– 
static
–– 
IDrawer
–– 
FoldoutGroup
–– *
<
––* +
TEnum
––+ 0
,
––0 1
TState
––2 8
>
––8 9
(
––9 :
string
––: @
title
––A F
,
––F G
TEnum
––H M
mask
––N R
,
––R S
ExpandedState
––T a
<
––a b
TEnum
––b g
,
––g h
TState
––i o
>
––o p
state
––q v
,
––v w
params
––x ~
IDrawer–– Ü
[––Ü á
]––á à
contentDrawers––â ó
)––ó ò
where
—— 
TEnum
—— 
:
—— 
struct
——  
,
——  !
IConvertible
——" .
{
““ 	
return
”” 
FoldoutGroup
”” 
(
””  
title
””  %
,
””% &
mask
””' +
,
””+ ,
state
””- 2
,
””2 3
contentDrawers
””4 B
.
””B C
Draw
””C G
)
””G H
;
””H I
}
‘‘ 	
public
·· 
static
·· 
IDrawer
·· 
FoldoutGroup
·· *
<
··* +
TEnum
··+ 0
,
··0 1
TState
··2 8
>
··8 9
(
··9 :
string
··: @
title
··A F
,
··F G
TEnum
··H M
mask
··N R
,
··R S
ExpandedState
··T a
<
··a b
TEnum
··b g
,
··g h
TState
··i o
>
··o p
state
··q v
,
··v w
params
··x ~
ActionDrawer·· ã
[··ã å
]··å ç
contentDrawers··é ú
)··ú ù
where
‚‚ 
TEnum
‚‚ 
:
‚‚ 
struct
‚‚  
,
‚‚  !
IConvertible
‚‚" .
{
„„ 	
return
‰‰ 
FoldoutGroup
‰‰ 
(
‰‰  
EditorGUIUtility
‰‰  0
.
‰‰0 1
TrTextContent
‰‰1 >
(
‰‰> ?
title
‰‰? D
)
‰‰D E
,
‰‰E F
mask
‰‰G K
,
‰‰K L
state
‰‰M R
,
‰‰R S
contentDrawers
‰‰T b
)
‰‰b c
;
‰‰c d
}
ÂÂ 	
public
 
static
 
IDrawer
 
FoldoutGroup
 *
<
* +
TEnum
+ 0
,
0 1
TState
2 8
>
8 9
(
9 :
string
: @
title
A F
,
F G
TEnum
H M
mask
N R
,
R S
ExpandedState
T a
<
a b
TEnum
b g
,
g h
TState
i o
>
o p
state
q v
,
v w
FoldoutOptionx Ö
optionsÜ ç
,ç é
paramsè ï
IDrawerñ ù
[ù û
]û ü
contentDrawers† Æ
)Æ Ø
where
ÒÒ 
TEnum
ÒÒ 
:
ÒÒ 
struct
ÒÒ  
,
ÒÒ  !
IConvertible
ÒÒ" .
{
ÚÚ 	
return
ÛÛ 
FoldoutGroup
ÛÛ 
(
ÛÛ  
title
ÛÛ  %
,
ÛÛ% &
mask
ÛÛ' +
,
ÛÛ+ ,
state
ÛÛ- 2
,
ÛÛ2 3
options
ÛÛ4 ;
,
ÛÛ; <
contentDrawers
ÛÛ= K
.
ÛÛK L
Draw
ÛÛL P
)
ÛÛP Q
;
ÛÛQ R
}
ÙÙ 	
public
ˇˇ 
static
ˇˇ 
IDrawer
ˇˇ 
FoldoutGroup
ˇˇ *
<
ˇˇ* +
TEnum
ˇˇ+ 0
,
ˇˇ0 1
TState
ˇˇ2 8
>
ˇˇ8 9
(
ˇˇ9 :
string
ˇˇ: @
title
ˇˇA F
,
ˇˇF G
TEnum
ˇˇH M
mask
ˇˇN R
,
ˇˇR S
ExpandedState
ˇˇT a
<
ˇˇa b
TEnum
ˇˇb g
,
ˇˇg h
TState
ˇˇi o
>
ˇˇo p
state
ˇˇq v
,
ˇˇv w
FoldoutOptionˇˇx Ö
optionsˇˇÜ ç
,ˇˇç é
paramsˇˇè ï
ActionDrawerˇˇñ ¢
[ˇˇ¢ £
]ˇˇ£ §
contentDrawersˇˇ• ≥
)ˇˇ≥ ¥
where
ÄÄ 
TEnum
ÄÄ 
:
ÄÄ 
struct
ÄÄ  
,
ÄÄ  !
IConvertible
ÄÄ" .
{
ÅÅ 	
return
ÇÇ 
FoldoutGroup
ÇÇ 
(
ÇÇ  
EditorGUIUtility
ÇÇ  0
.
ÇÇ0 1
TrTextContent
ÇÇ1 >
(
ÇÇ> ?
title
ÇÇ? D
)
ÇÇD E
,
ÇÇE F
mask
ÇÇG K
,
ÇÇK L
state
ÇÇM R
,
ÇÇR S
options
ÇÇT [
,
ÇÇ[ \
contentDrawers
ÇÇ] k
)
ÇÇk l
;
ÇÇl m
}
ÉÉ 	
public
êê 
static
êê 
IDrawer
êê 
FoldoutGroup
êê *
<
êê* +
TEnum
êê+ 0
,
êê0 1
TState
êê2 8
>
êê8 9
(
êê9 :

GUIContent
êê: D
title
êêE J
,
êêJ K
TEnum
êêL Q
mask
êêR V
,
êêV W
ExpandedState
êêX e
<
êêe f
TEnum
êêf k
,
êêk l
TState
êêm s
>
êês t
state
êêu z
,
êêz {
paramsêê| Ç
IDrawerêêÉ ä
[êêä ã
]êêã å
contentDrawersêêç õ
)êêõ ú
where
ëë 
TEnum
ëë 
:
ëë 
struct
ëë  
,
ëë  !
IConvertible
ëë" .
{
íí 	
return
ìì 
FoldoutGroup
ìì 
(
ìì  
title
ìì  %
,
ìì% &
mask
ìì' +
,
ìì+ ,
state
ìì- 2
,
ìì2 3
contentDrawers
ìì4 B
.
ììB C
Draw
ììC G
)
ììG H
;
ììH I
}
îî 	
public
°° 
static
°° 
IDrawer
°° 
FoldoutGroup
°° *
<
°°* +
TEnum
°°+ 0
,
°°0 1
TState
°°2 8
>
°°8 9
(
°°9 :

GUIContent
°°: D
title
°°E J
,
°°J K
TEnum
°°L Q
mask
°°R V
,
°°V W
ExpandedState
°°X e
<
°°e f
TEnum
°°f k
,
°°k l
TState
°°m s
>
°°s t
state
°°u z
,
°°z {
params°°| Ç
ActionDrawer°°É è
[°°è ê
]°°ê ë
contentDrawers°°í †
)°°† °
where
¢¢ 
TEnum
¢¢ 
:
¢¢ 
struct
¢¢  
,
¢¢  !
IConvertible
¢¢" .
{
££ 	
return
§§ 
FoldoutGroup
§§ 
(
§§  
title
§§  %
,
§§% &
mask
§§' +
,
§§+ ,
state
§§- 2
,
§§2 3
FoldoutOption
§§4 A
.
§§A B
Indent
§§B H
,
§§H I
contentDrawers
§§J X
)
§§X Y
;
§§Y Z
}
•• 	
public
∞∞ 
static
∞∞ 
IDrawer
∞∞ 
FoldoutGroup
∞∞ *
<
∞∞* +
TEnum
∞∞+ 0
,
∞∞0 1
TState
∞∞2 8
>
∞∞8 9
(
∞∞9 :

GUIContent
∞∞: D
title
∞∞E J
,
∞∞J K
TEnum
∞∞L Q
mask
∞∞R V
,
∞∞V W
ExpandedState
∞∞X e
<
∞∞e f
TEnum
∞∞f k
,
∞∞k l
TState
∞∞m s
>
∞∞s t
state
∞∞u z
,
∞∞z {
FoldoutOption∞∞| â
options∞∞ä ë
,∞∞ë í
params∞∞ì ô
IDrawer∞∞ö °
[∞∞° ¢
]∞∞¢ £
contentDrawers∞∞§ ≤
)∞∞≤ ≥
where
±± 
TEnum
±± 
:
±± 
struct
±±  
,
±±  !
IConvertible
±±" .
{
≤≤ 	
return
≥≥ 
FoldoutGroup
≥≥ 
(
≥≥  
title
≥≥  %
,
≥≥% &
mask
≥≥' +
,
≥≥+ ,
state
≥≥- 2
,
≥≥2 3
options
≥≥4 ;
,
≥≥; <
contentDrawers
≥≥= K
.
≥≥K L
Draw
≥≥L P
)
≥≥P Q
;
≥≥Q R
}
¥¥ 	
public
øø 
static
øø 
IDrawer
øø 
FoldoutGroup
øø *
<
øø* +
TEnum
øø+ 0
,
øø0 1
TState
øø2 8
>
øø8 9
(
øø9 :

GUIContent
øø: D
title
øøE J
,
øøJ K
TEnum
øøL Q
mask
øøR V
,
øøV W
ExpandedState
øøX e
<
øøe f
TEnum
øøf k
,
øøk l
TState
øøm s
>
øøs t
state
øøu z
,
øøz {
FoldoutOptionøø| â
optionsøøä ë
,øøë í
paramsøøì ô
ActionDrawerøøö ¶
[øø¶ ß
]øøß ®
contentDrawersøø© ∑
)øø∑ ∏
where
¿¿ 
TEnum
¿¿ 
:
¿¿ 
struct
¿¿  
,
¿¿  !
IConvertible
¿¿" .
{
¡¡ 	
return
¬¬ 
FoldoutGroup
¬¬ 
(
¬¬  
title
¬¬  %
,
¬¬% &
mask
¬¬' +
,
¬¬+ ,
state
¬¬- 2
,
¬¬2 3
options
¬¬4 ;
,
¬¬; <
null
¬¬= A
,
¬¬A B
null
¬¬C G
,
¬¬G H
contentDrawers
¬¬I W
)
¬¬W X
;
¬¬X Y
}
√√ 	
static
∆∆ 
IDrawer
∆∆ 
FoldoutGroup
∆∆ #
<
∆∆# $
TEnum
∆∆$ )
,
∆∆) *
TState
∆∆+ 1
>
∆∆1 2
(
∆∆2 3

GUIContent
∆∆3 =
title
∆∆> C
,
∆∆C D
TEnum
∆∆E J
mask
∆∆K O
,
∆∆O P
ExpandedState
∆∆Q ^
<
∆∆^ _
TEnum
∆∆_ d
,
∆∆d e
TState
∆∆f l
>
∆∆l m
state
∆∆n s
,
∆∆s t
FoldoutOption∆∆u Ç
options∆∆É ä
,∆∆ä ã
Enabler∆∆å ì

isAdvanced∆∆î û
,∆∆û ü
SwitchEnabler∆∆† ≠
switchAdvanced∆∆Æ º
,∆∆º Ω
params∆∆æ ƒ
ActionDrawer∆∆≈ —
[∆∆— “
]∆∆“ ”
contentDrawers∆∆‘ ‚
)∆∆‚ „
where
«« 
TEnum
«« 
:
«« 
struct
««  
,
««  !
IConvertible
««" .
{
»» 	
return
…… 
Group
…… 
(
…… 
(
…… 
data
…… 
,
…… 
owner
……  %
)
……% &
=>
……' )
{
   
bool
ÀÀ 
isBoxed
ÀÀ 
=
ÀÀ 
(
ÀÀ  
options
ÀÀ  '
&
ÀÀ( )
FoldoutOption
ÀÀ* 7
.
ÀÀ7 8
Boxed
ÀÀ8 =
)
ÀÀ= >
!=
ÀÀ? A
$num
ÀÀB C
;
ÀÀC D
bool
ÃÃ 

isIndented
ÃÃ 
=
ÃÃ  !
(
ÃÃ" #
options
ÃÃ# *
&
ÃÃ+ ,
FoldoutOption
ÃÃ- :
.
ÃÃ: ;
Indent
ÃÃ; A
)
ÃÃA B
!=
ÃÃC E
$num
ÃÃF G
;
ÃÃG H
bool
ÕÕ 
isSubFoldout
ÕÕ !
=
ÕÕ" #
(
ÕÕ$ %
options
ÕÕ% ,
&
ÕÕ- .
FoldoutOption
ÕÕ/ <
.
ÕÕ< =

SubFoldout
ÕÕ= G
)
ÕÕG H
!=
ÕÕI K
$num
ÕÕL M
;
ÕÕM N
bool
ŒŒ 
noSpaceAtEnd
ŒŒ !
=
ŒŒ" #
(
ŒŒ$ %
options
ŒŒ% ,
&
ŒŒ- .
FoldoutOption
ŒŒ/ <
.
ŒŒ< =
NoSpaceAtEnd
ŒŒ= I
)
ŒŒI J
!=
ŒŒK M
$num
ŒŒN O
;
ŒŒO P
bool
œœ 
expended
œœ 
=
œœ 
state
œœ  %
[
œœ% &
mask
œœ& *
]
œœ* +
;
œœ+ ,
bool
–– 
newExpended
––  
=
––! "
expended
––# +
;
––+ ,
if
—— 
(
—— 
isSubFoldout
——  
)
——  !
{
““ 
newExpended
”” 
=
””  !
CoreEditorUtils
””" 1
.
””1 2"
DrawSubHeaderFoldout
””2 F
(
””F G
title
””G L
,
””L M
expended
””N V
,
””V W
isBoxed
””X _
,
””_ `

isAdvanced
‘‘ "
==
‘‘# %
null
‘‘& *
?
‘‘+ ,
(
‘‘- .
Func
‘‘. 2
<
‘‘2 3
bool
‘‘3 7
>
‘‘7 8
)
‘‘8 9
null
‘‘9 =
:
‘‘> ?
(
‘‘@ A
)
‘‘A B
=>
‘‘C E

isAdvanced
‘‘F P
(
‘‘P Q
data
‘‘Q U
,
‘‘U V
owner
‘‘W \
)
‘‘\ ]
,
‘‘] ^
switchAdvanced
’’ &
==
’’' )
null
’’* .
?
’’/ 0
(
’’1 2
Action
’’2 8
)
’’8 9
null
’’9 =
:
’’> ?
(
’’@ A
)
’’A B
=>
’’C E
switchAdvanced
’’F T
(
’’T U
data
’’U Y
,
’’Y Z
owner
’’[ `
)
’’` a
)
’’a b
;
’’b c
}
÷÷ 
else
◊◊ 
{
ÿÿ 
CoreEditorUtils
ŸŸ #
.
ŸŸ# $
DrawSplitter
ŸŸ$ 0
(
ŸŸ0 1
isBoxed
ŸŸ1 8
)
ŸŸ8 9
;
ŸŸ9 :
newExpended
⁄⁄ 
=
⁄⁄  !
CoreEditorUtils
⁄⁄" 1
.
⁄⁄1 2
DrawHeaderFoldout
⁄⁄2 C
(
⁄⁄C D
title
⁄⁄D I
,
⁄⁄I J
expended
⁄⁄K S
,
⁄⁄S T
isBoxed
⁄⁄U \
,
⁄⁄\ ]

isAdvanced
€€ "
==
€€# %
null
€€& *
?
€€+ ,
(
€€- .
Func
€€. 2
<
€€2 3
bool
€€3 7
>
€€7 8
)
€€8 9
null
€€9 =
:
€€> ?
(
€€@ A
)
€€A B
=>
€€C E

isAdvanced
€€F P
(
€€P Q
data
€€Q U
,
€€U V
owner
€€W \
)
€€\ ]
,
€€] ^
switchAdvanced
‹‹ &
==
‹‹' )
null
‹‹* .
?
‹‹/ 0
(
‹‹1 2
Action
‹‹2 8
)
‹‹8 9
null
‹‹9 =
:
‹‹> ?
(
‹‹@ A
)
‹‹A B
=>
‹‹C E
switchAdvanced
‹‹F T
(
‹‹T U
data
‹‹U Y
,
‹‹Y Z
owner
‹‹[ `
)
‹‹` a
)
‹‹a b
;
‹‹b c
}
›› 
if
ﬁﬁ 
(
ﬁﬁ 
newExpended
ﬁﬁ 
^
ﬁﬁ  !
expended
ﬁﬁ" *
)
ﬁﬁ* +
state
ﬂﬂ 
[
ﬂﬂ 
mask
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ  !
newExpended
ﬂﬂ" -
;
ﬂﬂ- .
if
‡‡ 
(
‡‡ 
newExpended
‡‡ 
)
‡‡  
{
·· 
if
‚‚ 
(
‚‚ 

isIndented
‚‚ "
)
‚‚" #
++
„„ 
	EditorGUI
„„ #
.
„„# $
indentLevel
„„$ /
;
„„/ 0
for
‰‰ 
(
‰‰ 
var
‰‰ 
i
‰‰ 
=
‰‰  
$num
‰‰! "
;
‰‰" #
i
‰‰$ %
<
‰‰& '
contentDrawers
‰‰( 6
.
‰‰6 7
Length
‰‰7 =
;
‰‰= >
i
‰‰? @
++
‰‰@ B
)
‰‰B C
contentDrawers
ÂÂ &
[
ÂÂ& '
i
ÂÂ' (
]
ÂÂ( )
(
ÂÂ) *
data
ÂÂ* .
,
ÂÂ. /
owner
ÂÂ0 5
)
ÂÂ5 6
;
ÂÂ6 7
if
ÊÊ 
(
ÊÊ 

isIndented
ÊÊ "
)
ÊÊ" #
--
ÁÁ 
	EditorGUI
ÁÁ #
.
ÁÁ# $
indentLevel
ÁÁ$ /
;
ÁÁ/ 0
if
ËË 
(
ËË 
!
ËË 
noSpaceAtEnd
ËË %
)
ËË% &
EditorGUILayout
ÈÈ '
.
ÈÈ' (
Space
ÈÈ( -
(
ÈÈ- .
)
ÈÈ. /
;
ÈÈ/ 0
}
ÍÍ 
}
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
public
˙˙ 
static
˙˙ 
IDrawer
˙˙ "
AdvancedFoldoutGroup
˙˙ 2
<
˙˙2 3
TEnum
˙˙3 8
,
˙˙8 9
TState
˙˙: @
>
˙˙@ A
(
˙˙A B

GUIContent
˙˙B L
foldoutTitle
˙˙M Y
,
˙˙Y Z
TEnum
˙˙[ `
foldoutMask
˙˙a l
,
˙˙l m
ExpandedState
˙˙n {
<
˙˙{ |
TEnum˙˙| Å
,˙˙Å Ç
TState˙˙É â
>˙˙â ä
foldoutState˙˙ã ó
,˙˙ó ò
Enabler˙˙ô †

isAdvanced˙˙° ´
,˙˙´ ¨
SwitchEnabler˙˙≠ ∫
switchAdvanced˙˙ª …
,˙˙…  
IDrawer˙˙À “
normalContent˙˙” ‡
,˙˙‡ ·
IDrawer˙˙‚ È
advancedContent˙˙Í ˘
,˙˙˘ ˙
FoldoutOption˙˙˚ à
options˙˙â ê
=˙˙ë í
FoldoutOption˙˙ì †
.˙˙† °
Indent˙˙° ß
)˙˙ß ®
where
˚˚ 
TEnum
˚˚ 
:
˚˚ 
struct
˚˚  
,
˚˚  !
IConvertible
˚˚" .
{
¸¸ 	
return
˝˝ "
AdvancedFoldoutGroup
˝˝ '
(
˝˝' (
foldoutTitle
˝˝( 4
,
˝˝4 5
foldoutMask
˝˝6 A
,
˝˝A B
foldoutState
˝˝C O
,
˝˝O P

isAdvanced
˝˝Q [
,
˝˝[ \
switchAdvanced
˝˝] k
,
˝˝k l
normalContent
˝˝m z
.
˝˝z {
Draw
˝˝{ 
,˝˝ Ä
advancedContent˝˝Å ê
.˝˝ê ë
Draw˝˝ë ï
,˝˝ï ñ
options˝˝ó û
)˝˝û ü
;˝˝ü †
}
˛˛ 	
public
åå 
static
åå 
IDrawer
åå "
AdvancedFoldoutGroup
åå 2
<
åå2 3
TEnum
åå3 8
,
åå8 9
TState
åå: @
>
åå@ A
(
ååA B

GUIContent
ååB L
foldoutTitle
ååM Y
,
ååY Z
TEnum
åå[ `
foldoutMask
ååa l
,
åål m
ExpandedState
åån {
<
åå{ |
TEnumåå| Å
,ååÅ Ç
TStateååÉ â
>ååâ ä
foldoutStateååã ó
,ååó ò
Enablerååô †

isAdvancedåå° ´
,åå´ ¨
SwitchEnableråå≠ ∫
switchAdvancedååª …
,åå…  
ActionDrawerååÀ ◊
normalContentååÿ Â
,ååÂ Ê
IDrawerååÁ Ó
advancedContentååÔ ˛
,åå˛ ˇ
FoldoutOptionååÄ ç
optionsååé ï
=ååñ ó
FoldoutOptionååò •
.åå• ¶
Indentåå¶ ¨
)åå¨ ≠
where
çç 
TEnum
çç 
:
çç 
struct
çç  
,
çç  !
IConvertible
çç" .
{
éé 	
return
èè "
AdvancedFoldoutGroup
èè '
(
èè' (
foldoutTitle
èè( 4
,
èè4 5
foldoutMask
èè6 A
,
èèA B
foldoutState
èèC O
,
èèO P

isAdvanced
èèQ [
,
èè[ \
switchAdvanced
èè] k
,
èèk l
normalContent
èèm z
,
èèz {
advancedContentèè| ã
.èèã å
Drawèèå ê
,èèê ë
optionsèèí ô
)èèô ö
;èèö õ
}
êê 	
public
ûû 
static
ûû 
IDrawer
ûû "
AdvancedFoldoutGroup
ûû 2
<
ûû2 3
TEnum
ûû3 8
,
ûû8 9
TState
ûû: @
>
ûû@ A
(
ûûA B

GUIContent
ûûB L
foldoutTitle
ûûM Y
,
ûûY Z
TEnum
ûû[ `
foldoutMask
ûûa l
,
ûûl m
ExpandedState
ûûn {
<
ûû{ |
TEnumûû| Å
,ûûÅ Ç
TStateûûÉ â
>ûûâ ä
foldoutStateûûã ó
,ûûó ò
Enablerûûô †

isAdvancedûû° ´
,ûû´ ¨
SwitchEnablerûû≠ ∫
switchAdvancedûûª …
,ûû…  
IDrawerûûÀ “
normalContentûû” ‡
,ûû‡ ·
ActionDrawerûû‚ Ó
advancedContentûûÔ ˛
,ûû˛ ˇ
FoldoutOptionûûÄ ç
optionsûûé ï
=ûûñ ó
FoldoutOptionûûò •
.ûû• ¶
Indentûû¶ ¨
)ûû¨ ≠
where
üü 
TEnum
üü 
:
üü 
struct
üü  
,
üü  !
IConvertible
üü" .
{
†† 	
return
°° "
AdvancedFoldoutGroup
°° '
(
°°' (
foldoutTitle
°°( 4
,
°°4 5
foldoutMask
°°6 A
,
°°A B
foldoutState
°°C O
,
°°O P

isAdvanced
°°Q [
,
°°[ \
switchAdvanced
°°] k
,
°°k l
normalContent
°°m z
.
°°z {
Draw
°°{ 
,°° Ä
advancedContent°°Å ê
,°°ê ë
options°°í ô
)°°ô ö
;°°ö õ
}
¢¢ 	
public
∞∞ 
static
∞∞ 
IDrawer
∞∞ "
AdvancedFoldoutGroup
∞∞ 2
<
∞∞2 3
TEnum
∞∞3 8
,
∞∞8 9
TState
∞∞: @
>
∞∞@ A
(
∞∞A B

GUIContent
∞∞B L
foldoutTitle
∞∞M Y
,
∞∞Y Z
TEnum
∞∞[ `
foldoutMask
∞∞a l
,
∞∞l m
ExpandedState
∞∞n {
<
∞∞{ |
TEnum∞∞| Å
,∞∞Å Ç
TState∞∞É â
>∞∞â ä
foldoutState∞∞ã ó
,∞∞ó ò
Enabler∞∞ô †

isAdvanced∞∞° ´
,∞∞´ ¨
SwitchEnabler∞∞≠ ∫
switchAdvanced∞∞ª …
,∞∞…  
ActionDrawer∞∞À ◊
normalContent∞∞ÿ Â
,∞∞Â Ê
ActionDrawer∞∞Á Û
advancedContent∞∞Ù É
,∞∞É Ñ
FoldoutOption∞∞Ö í
options∞∞ì ö
=∞∞õ ú
FoldoutOption∞∞ù ™
.∞∞™ ´
Indent∞∞´ ±
)∞∞± ≤
where
±± 
TEnum
±± 
:
±± 
struct
±±  
,
±±  !
IConvertible
±±" .
{
≤≤ 	
return
≥≥ 
FoldoutGroup
≥≥ 
(
≥≥  
foldoutTitle
≥≥  ,
,
≥≥, -
foldoutMask
≥≥. 9
,
≥≥9 :
foldoutState
≥≥; G
,
≥≥G H
options
≥≥I P
,
≥≥P Q

isAdvanced
≥≥R \
,
≥≥\ ]
switchAdvanced
≥≥^ l
,
≥≥l m
normalContent
¥¥ 
,
¥¥ 
Conditional
µµ 
(
µµ 
(
µµ 

serialized
µµ '
,
µµ' (
owner
µµ) .
)
µµ. /
=>
µµ0 2

isAdvanced
µµ3 =
(
µµ= >

serialized
µµ> H
,
µµH I
owner
µµJ O
)
µµO P
&&
µµQ S
foldoutState
µµT `
[
µµ` a
foldoutMask
µµa l
]
µµl m
,
µµm n
advancedContent
µµo ~
)
µµ~ 
.µµ Ä
DrawµµÄ Ñ
)
∂∂ 
;
∂∂ 
}
∑∑ 	
}
∏∏ 
public
ªª 

static
ªª 
class
ªª )
CoreEditorDrawersExtensions
ªª 3
{
ºº 
public
¬¬ 
static
¬¬ 
void
¬¬ 
Draw
¬¬ 
<
¬¬  
TData
¬¬  %
>
¬¬% &
(
¬¬& '
this
¬¬' +
IEnumerable
¬¬, 7
<
¬¬7 8
CoreEditorDrawer
¬¬8 H
<
¬¬H I
TData
¬¬I N
>
¬¬N O
.
¬¬O P
IDrawer
¬¬P W
>
¬¬W X
drawers
¬¬Y `
,
¬¬` a
TData
¬¬b g
data
¬¬h l
,
¬¬l m
Editor
¬¬n t
owner
¬¬u z
)
¬¬z {
{
√√ 	
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
drawer
ƒƒ 
in
ƒƒ  "
drawers
ƒƒ# *
)
ƒƒ* +
drawer
≈≈ 
.
≈≈ 
Draw
≈≈ 
(
≈≈ 
data
≈≈  
,
≈≈  !
owner
≈≈" '
)
≈≈' (
;
≈≈( )
}
∆∆ 	
}
«« 
}»» ∂÷
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Gizmo\HierarchicalBox.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
publicCC 

classCC 
HierarchicalBoxCC  
{DD 
constEE 
floatEE 
k_HandleSizeCoefEE $
=EE% &
$numEE' ,
;EE, -
staticFF 
MaterialFF 
k_Material_CacheFF (
;FF( )
staticGG 
MaterialGG 

k_MaterialGG "
=>GG# %
(GG& '
k_Material_CacheGG' 7
==GG8 :
nullGG; ?
||GG@ B
k_Material_CacheGGC S
.GGS T
EqualsGGT Z
(GGZ [
nullGG[ _
)GG_ `
?GGa b
(GGc d
k_Material_CacheGGd t
=GGu v
newGGw z
Material	GG{ É
(
GGÉ Ñ
Shader
GGÑ ä
.
GGä ã
Find
GGã è
(
GGè ê
$str
GGê ∞
)
GG∞ ±
)
GG± ≤
)
GG≤ ≥
:
GG¥ µ
k_Material_Cache
GG∂ ∆
)
GG∆ «
;
GG« »
staticHH 
MeshHH 
k_MeshQuad_CacheHH $
;HH$ %
staticII 
MeshII 

k_MeshQuadII 
=>II !
k_MeshQuad_CacheII" 2
==II3 5
nullII6 :
||II; =
k_MeshQuad_CacheII> N
.IIN O
EqualsIIO U
(IIU V
nullIIV Z
)IIZ [
?II\ ]
(II^ _
k_MeshQuad_CacheII_ o
=IIp q
	ResourcesIIr {
.II{ |
GetBuiltinResource	II| é
<
IIé è
Mesh
IIè ì
>
IIì î
(
IIî ï
$str
IIï ü
)
IIü †
)
II† °
:
II¢ £
k_MeshQuad_Cache
II§ ¥
;
II¥ µ
enumKK 
	NamedFaceKK 
{KK 
RightKK 
,KK 
TopKK  #
,KK# $
FrontKK% *
,KK* +
LeftKK, 0
,KK0 1
BottomKK2 8
,KK8 9
BackKK: >
,KK> ?
NoneKK@ D
}KKE F
MaterialMM 

m_MaterialMM 
;MM 
readonlyNN 
ColorNN 
[NN 
]NN #
m_PolychromeHandleColorNN 0
;NN0 1
readonlyOO 
HierarchicalBoxOO  
m_ParentOO! )
;OO) *
ColorPP !
m_MonochromeFillColorPP #
;PP# $
ColorQQ #
m_MonochromeHandleColorQQ %
;QQ% &
ColorRR 
m_WireframeColorRR 
;RR 
ColorSS "
m_WireframeColorBehindSS $
;SS$ %
intTT 
[TT 
]TT 
m_ControlIDsTT 
=TT 
newTT  
intTT! $
[TT$ %
$numTT% &
]TT& '
{TT( )
$numTT* +
,TT+ ,
$numTT- .
,TT. /
$numTT0 1
,TT1 2
$numTT3 4
,TT4 5
$numTT6 7
,TT7 8
$numTT9 :
}TT; <
;TT< =
boolUU 
m_MonoHandleUU 
=UU 
trueUU  
;UU  !
MaterialWW 
materialWW 
{XX 	
getYY 
{ZZ 
if[[ 
([[ 

m_Material[[ 
==[[ !
null[[" &
||[[' )

m_Material[[* 4
.[[4 5
Equals[[5 ;
([[; <
null[[< @
)[[@ A
)[[A B

m_Material\\ 
=\\  
new\\! $
Material\\% -
(\\- .

k_Material\\. 8
)\\8 9
;\\9 :

m_Material^^ 
.^^ 
color^^  
=^^! "!
m_MonochromeFillColor^^# 8
;^^8 9
return__ 

m_Material__ !
;__! "
}`` 
}aa 	
publicgg 
boolgg 

monoHandlegg 
{gg  
getgg! $
=>gg% '
m_MonoHandlegg( 4
;gg4 5
setgg6 9
=>gg: <
m_MonoHandlegg= I
=ggJ K
valueggL Q
;ggQ R
}ggS T
publicjj 
Vector3jj 
centerjj 
{jj 
getjj  #
;jj# $
setjj% (
;jj( )
}jj* +
publicmm 
Vector3mm 
sizemm 
{mm 
getmm !
;mm! "
setmm# &
;mm& '
}mm( )
publicpp 
Colorpp 
	baseColorpp 
{qq 	
getrr 
{rr 
returnrr 
materialrr !
.rr! "
colorrr" '
;rr' (
}rr) *
setss 
{tt 
valueuu 
.uu 
auu 
=uu 
$numuu 
/uu 
$numuu "
;uu" #!
m_MonochromeFillColorvv %
=vv& '
valuevv( -
;vv- .
materialww 
.ww 
colorww 
=ww  !
m_MonochromeFillColorww! 6
;ww6 7
valuexx 
.xx 
axx 
=xx 
$numxx 
;xx #
m_MonochromeHandleColoryy '
=yy( )
valueyy* /
;yy/ 0
valuezz 
.zz 
azz 
=zz 
$numzz 
;zz 
m_WireframeColor{{  
={{! "
value{{# (
;{{( )
value|| 
.|| 
a|| 
=|| 
$num|| 
;|| "
m_WireframeColorBehind}} &
=}}' (
value}}) .
;}}. /
}~~ 
} 	
static
ÉÉ 
Type
ÉÉ 

k_Slider1D
ÉÉ 
=
ÉÉ  
Type
ÉÉ! %
.
ÉÉ% &
GetType
ÉÉ& -
(
ÉÉ- .
$str
ÉÉ. Y
)
ÉÉY Z
;
ÉÉZ [
static
ÑÑ 

MethodInfo
ÑÑ 
k_Slider1D_Do
ÑÑ '
=
ÑÑ( )

k_Slider1D
ÑÑ* 4
.
ÖÖ 
	GetMethod
ÖÖ 
(
ÖÖ 
$str
ÜÜ 
,
ÜÜ 
BindingFlags
áá  
.
áá  !
Static
áá! '
|
áá( )
BindingFlags
áá* 6
.
áá6 7
	NonPublic
áá7 @
|
ááA B
BindingFlags
ááC O
.
ááO P
Public
ááP V
,
ááV W
null
àà 
,
àà  
CallingConventions
ââ &
.
ââ& '
Any
ââ' *
,
ââ* +
new
ää 
[
ää 
]
ää 
{
ää 
typeof
ää "
(
ää" #
int
ää# &
)
ää& '
,
ää' (
typeof
ää) /
(
ää/ 0
Vector3
ää0 7
)
ää7 8
,
ää8 9
typeof
ää: @
(
ää@ A
Vector3
ääA H
)
ääH I
,
ääI J
typeof
ääK Q
(
ääQ R
float
ääR W
)
ääW X
,
ääX Y
typeof
ääZ `
(
ää` a
Handles
ääa h
.
ääh i
CapFunction
ääi t
)
äät u
,
ääu v
typeof
ääw }
(
ää} ~
floatää~ É
)ääÉ Ñ
}ääÖ Ü
,ääÜ á
null
ãã 
)
ãã 
;
ãã 
static
åå 
void
åå 
Slider1D
åå 
(
åå 
int
åå  
	controlID
åå! *
,
åå* +
ref
åå, /
Vector3
åå0 7
handlePosition
åå8 F
,
ååF G
Vector3
ååH O
handleOrientation
ååP a
,
ååa b
float
ååc h
	snapScale
ååi r
,
åår s
Color
ååt y
color
ååz 
)åå Ä
{
çç 	
using
éé 
(
éé 
new
éé 
Handles
éé 
.
éé 
DrawingScope
éé +
(
éé+ ,
color
éé, 1
)
éé1 2
)
éé2 3
{
èè 
handlePosition
êê 
=
êê  
(
êê! "
Vector3
êê" )
)
êê) *
k_Slider1D_Do
êê* 7
.
êê7 8
Invoke
êê8 >
(
êê> ?
null
êê? C
,
êêC D
new
êêE H
object
êêI O
[
êêO P
]
êêP Q
{
ëë 
	controlID
íí !
,
íí! "
handlePosition
ìì &
,
ìì& '
handleOrientation
îî )
,
îî) *
HandleUtility
ïï %
.
ïï% &
GetHandleSize
ïï& 3
(
ïï3 4
handlePosition
ïï4 B
)
ïïB C
*
ïïD E
k_HandleSizeCoef
ïïF V
,
ïïV W
new
ññ 
Handles
ññ #
.
ññ# $
CapFunction
ññ$ /
(
ññ/ 0
Handles
ññ0 7
.
ññ7 8
DotHandleCap
ññ8 D
)
ññD E
,
ññE F
	snapScale
óó !
}
òò 
)
òò 
;
òò 
}
ôô 
}
öö 	
public
†† 
HierarchicalBox
†† 
(
†† 
Color
†† $
	baseColor
††% .
,
††. /
Color
††0 5
[
††5 6
]
††6 7$
polychromeHandleColors
††8 N
=
††O P
null
††Q U
,
††U V
HierarchicalBox
††W f
parent
††g m
=
††n o
null
††p t
)
††t u
{
°° 	
if
¢¢ 
(
¢¢ $
polychromeHandleColors
¢¢ &
!=
¢¢' )
null
¢¢* .
&&
¢¢/ 1$
polychromeHandleColors
¢¢2 H
.
¢¢H I
Length
¢¢I O
!=
¢¢P R
$num
¢¢S T
)
¢¢T U
throw
££ 
new
££ 
ArgumentException
££ +
(
££+ ,
$str
££, f
)
££f g
;
££g h
m_Parent
•• 
=
•• 
parent
•• 
;
•• 

m_Material
¶¶ 
=
¶¶ 
new
¶¶ 
Material
¶¶ %
(
¶¶% &

k_Material
¶¶& 0
)
¶¶0 1
;
¶¶1 2
this
ßß 
.
ßß 
	baseColor
ßß 
=
ßß 
	baseColor
ßß &
;
ßß& '%
m_PolychromeHandleColor
®® #
=
®®$ %$
polychromeHandleColors
®®& <
??
®®= ?
new
®®@ C
Color
®®D I
[
®®I J
]
®®J K
{
©© 
Handles
™™ 
.
™™ 

xAxisColor
™™ "
,
™™" #
Handles
™™$ +
.
™™+ ,

yAxisColor
™™, 6
,
™™6 7
Handles
™™8 ?
.
™™? @

zAxisColor
™™@ J
,
™™J K
Handles
´´ 
.
´´ 

xAxisColor
´´ "
,
´´" #
Handles
´´$ +
.
´´+ ,

yAxisColor
´´, 6
,
´´6 7
Handles
´´8 ?
.
´´? @

zAxisColor
´´@ J
}
¨¨ 
;
¨¨ 
}
≠≠ 	
public
±± 
void
±± 
DrawHull
±± 
(
±± 
bool
±± !
filled
±±" (
)
±±( )
{
≤≤ 	
Color
≥≥ 
previousColor
≥≥ 
=
≥≥  !
Handles
≥≥" )
.
≥≥) *
color
≥≥* /
;
≥≥/ 0
if
¥¥ 
(
¥¥ 
filled
¥¥ 
)
¥¥ 
{
µµ 
var
∑∑ 
xSize
∑∑ 
=
∑∑ 
new
∑∑ 
Vector3
∑∑  '
(
∑∑' (
size
∑∑( ,
.
∑∑, -
z
∑∑- .
,
∑∑. /
size
∑∑0 4
.
∑∑4 5
y
∑∑5 6
,
∑∑6 7
$num
∑∑8 :
)
∑∑: ;
;
∑∑; <
material
∏∏ 
.
∏∏ 
SetPass
∏∏  
(
∏∏  !
$num
∏∏! "
)
∏∏" #
;
∏∏# $
Graphics
ππ 
.
ππ 
DrawMeshNow
ππ $
(
ππ$ %

k_MeshQuad
ππ% /
,
ππ/ 0
Handles
ππ1 8
.
ππ8 9
matrix
ππ9 ?
*
ππ@ A
	Matrix4x4
ππB K
.
ππK L
TRS
ππL O
(
ππO P
center
ππP V
+
ππW X
size
ππY ]
.
ππ] ^
x
ππ^ _
*
ππ` a
$num
ππb e
*
ππf g
Vector3
ππh o
.
ππo p
left
ππp t
,
ππt u

Quaternionππv Ä
.ππÄ Å
FromToRotationππÅ è
(ππè ê
Vector3ππê ó
.ππó ò
forwardππò ü
,ππü †
Vector3ππ° ®
.ππ® ©
leftππ© ≠
)ππ≠ Æ
,ππÆ Ø
xSizeππ∞ µ
)ππµ ∂
)ππ∂ ∑
;ππ∑ ∏
Graphics
∫∫ 
.
∫∫ 
DrawMeshNow
∫∫ $
(
∫∫$ %

k_MeshQuad
∫∫% /
,
∫∫/ 0
Handles
∫∫1 8
.
∫∫8 9
matrix
∫∫9 ?
*
∫∫@ A
	Matrix4x4
∫∫B K
.
∫∫K L
TRS
∫∫L O
(
∫∫O P
center
∫∫P V
+
∫∫W X
size
∫∫Y ]
.
∫∫] ^
x
∫∫^ _
*
∫∫` a
$num
∫∫b e
*
∫∫f g
Vector3
∫∫h o
.
∫∫o p
right
∫∫p u
,
∫∫u v

Quaternion∫∫w Å
.∫∫Å Ç
FromToRotation∫∫Ç ê
(∫∫ê ë
Vector3∫∫ë ò
.∫∫ò ô
forward∫∫ô †
,∫∫† °
Vector3∫∫¢ ©
.∫∫© ™
right∫∫™ Ø
)∫∫Ø ∞
,∫∫∞ ±
xSize∫∫≤ ∑
)∫∫∑ ∏
)∫∫∏ π
;∫∫π ∫
var
ºº 
ySize
ºº 
=
ºº 
new
ºº 
Vector3
ºº  '
(
ºº' (
size
ºº( ,
.
ºº, -
x
ºº- .
,
ºº. /
size
ºº0 4
.
ºº4 5
z
ºº5 6
,
ºº6 7
$num
ºº8 :
)
ºº: ;
;
ºº; <
Graphics
ΩΩ 
.
ΩΩ 
DrawMeshNow
ΩΩ $
(
ΩΩ$ %

k_MeshQuad
ΩΩ% /
,
ΩΩ/ 0
Handles
ΩΩ1 8
.
ΩΩ8 9
matrix
ΩΩ9 ?
*
ΩΩ@ A
	Matrix4x4
ΩΩB K
.
ΩΩK L
TRS
ΩΩL O
(
ΩΩO P
center
ΩΩP V
+
ΩΩW X
size
ΩΩY ]
.
ΩΩ] ^
y
ΩΩ^ _
*
ΩΩ` a
$num
ΩΩb e
*
ΩΩf g
Vector3
ΩΩh o
.
ΩΩo p
up
ΩΩp r
,
ΩΩr s

Quaternion
ΩΩt ~
.
ΩΩ~ 
FromToRotationΩΩ ç
(ΩΩç é
Vector3ΩΩé ï
.ΩΩï ñ
forwardΩΩñ ù
,ΩΩù û
Vector3ΩΩü ¶
.ΩΩ¶ ß
upΩΩß ©
)ΩΩ© ™
,ΩΩ™ ´
ySizeΩΩ¨ ±
)ΩΩ± ≤
)ΩΩ≤ ≥
;ΩΩ≥ ¥
Graphics
ææ 
.
ææ 
DrawMeshNow
ææ $
(
ææ$ %

k_MeshQuad
ææ% /
,
ææ/ 0
Handles
ææ1 8
.
ææ8 9
matrix
ææ9 ?
*
ææ@ A
	Matrix4x4
ææB K
.
ææK L
TRS
ææL O
(
ææO P
center
ææP V
+
ææW X
size
ææY ]
.
ææ] ^
y
ææ^ _
*
ææ` a
$num
ææb e
*
ææf g
Vector3
ææh o
.
ææo p
down
ææp t
,
ææt u

Quaternionææv Ä
.ææÄ Å
FromToRotationææÅ è
(ææè ê
Vector3ææê ó
.ææó ò
forwardææò ü
,ææü †
Vector3ææ° ®
.ææ® ©
downææ© ≠
)ææ≠ Æ
,ææÆ Ø
ySizeææ∞ µ
)ææµ ∂
)ææ∂ ∑
;ææ∑ ∏
var
¿¿ 
zSize
¿¿ 
=
¿¿ 
new
¿¿ 
Vector3
¿¿  '
(
¿¿' (
size
¿¿( ,
.
¿¿, -
x
¿¿- .
,
¿¿. /
size
¿¿0 4
.
¿¿4 5
y
¿¿5 6
,
¿¿6 7
$num
¿¿8 :
)
¿¿: ;
;
¿¿; <
Graphics
¡¡ 
.
¡¡ 
DrawMeshNow
¡¡ $
(
¡¡$ %

k_MeshQuad
¡¡% /
,
¡¡/ 0
Handles
¡¡1 8
.
¡¡8 9
matrix
¡¡9 ?
*
¡¡@ A
	Matrix4x4
¡¡B K
.
¡¡K L
TRS
¡¡L O
(
¡¡O P
center
¡¡P V
+
¡¡W X
size
¡¡Y ]
.
¡¡] ^
z
¡¡^ _
*
¡¡` a
$num
¡¡b e
*
¡¡f g
Vector3
¡¡h o
.
¡¡o p
forward
¡¡p w
,
¡¡w x

Quaternion¡¡y É
.¡¡É Ñ
identity¡¡Ñ å
,¡¡å ç
zSize¡¡é ì
)¡¡ì î
)¡¡î ï
;¡¡ï ñ
Graphics
¬¬ 
.
¬¬ 
DrawMeshNow
¬¬ $
(
¬¬$ %

k_MeshQuad
¬¬% /
,
¬¬/ 0
Handles
¬¬1 8
.
¬¬8 9
matrix
¬¬9 ?
*
¬¬@ A
	Matrix4x4
¬¬B K
.
¬¬K L
TRS
¬¬L O
(
¬¬O P
center
¬¬P V
+
¬¬W X
size
¬¬Y ]
.
¬¬] ^
z
¬¬^ _
*
¬¬` a
$num
¬¬b e
*
¬¬f g
Vector3
¬¬h o
.
¬¬o p
back
¬¬p t
,
¬¬t u

Quaternion¬¬v Ä
.¬¬Ä Å
FromToRotation¬¬Å è
(¬¬è ê
Vector3¬¬ê ó
.¬¬ó ò
forward¬¬ò ü
,¬¬ü †
Vector3¬¬° ®
.¬¬® ©
back¬¬© ≠
)¬¬≠ Æ
,¬¬Æ Ø
zSize¬¬∞ µ
)¬¬µ ∂
)¬¬∂ ∑
;¬¬∑ ∏
if
≈≈ 
(
≈≈ 
m_Parent
≈≈ 
!=
≈≈ 
null
≈≈  $
)
≈≈$ %
{
∆∆ 
var
«« 

centerDiff
«« "
=
««# $
center
««% +
-
««, -
m_Parent
««. 6
.
««6 7
center
««7 =
;
««= >
var
»» 
xRecal
»» 
=
»»  

centerDiff
»»! +
;
»»+ ,
var
…… 
yRecal
…… 
=
……  

centerDiff
……! +
;
……+ ,
var
   
zRecal
   
=
    

centerDiff
  ! +
;
  + ,
xRecal
ÀÀ 
.
ÀÀ 
x
ÀÀ 
=
ÀÀ 
$num
ÀÀ  
;
ÀÀ  !
yRecal
ÃÃ 
.
ÃÃ 
y
ÃÃ 
=
ÃÃ 
$num
ÃÃ  
;
ÃÃ  !
zRecal
ÕÕ 
.
ÕÕ 
z
ÕÕ 
=
ÕÕ 
$num
ÕÕ  
;
ÕÕ  !
Handles
œœ 
.
œœ 
color
œœ !
=
œœ" #
GetHandleColor
œœ$ 2
(
œœ2 3
	NamedFace
œœ3 <
.
œœ< =
Left
œœ= A
)
œœA B
;
œœB C
Handles
–– 
.
–– 
DrawLine
–– $
(
––$ %
m_Parent
––% -
.
––- .
center
––. 4
+
––5 6
xRecal
––7 =
+
––> ?
m_Parent
––@ H
.
––H I
size
––I M
.
––M N
x
––N O
*
––P Q
$num
––R U
*
––V W
Vector3
––X _
.
––_ `
left
––` d
,
––d e
center
––f l
+
––m n
size
––o s
.
––s t
x
––t u
*
––v w
$num
––x {
*
––| }
Vector3––~ Ö
.––Ö Ü
left––Ü ä
)––ä ã
;––ã å
Handles
““ 
.
““ 
color
““ !
=
““" #
GetHandleColor
““$ 2
(
““2 3
	NamedFace
““3 <
.
““< =
Right
““= B
)
““B C
;
““C D
Handles
”” 
.
”” 
DrawLine
”” $
(
””$ %
m_Parent
””% -
.
””- .
center
””. 4
+
””5 6
xRecal
””7 =
+
””> ?
m_Parent
””@ H
.
””H I
size
””I M
.
””M N
x
””N O
*
””P Q
$num
””R U
*
””V W
Vector3
””X _
.
””_ `
right
””` e
,
””e f
center
””g m
+
””n o
size
””p t
.
””t u
x
””u v
*
””w x
$num
””y |
*
””} ~
Vector3”” Ü
.””Ü á
right””á å
)””å ç
;””ç é
Handles
’’ 
.
’’ 
color
’’ !
=
’’" #
GetHandleColor
’’$ 2
(
’’2 3
	NamedFace
’’3 <
.
’’< =
Top
’’= @
)
’’@ A
;
’’A B
Handles
÷÷ 
.
÷÷ 
DrawLine
÷÷ $
(
÷÷$ %
m_Parent
÷÷% -
.
÷÷- .
center
÷÷. 4
+
÷÷5 6
yRecal
÷÷7 =
+
÷÷> ?
m_Parent
÷÷@ H
.
÷÷H I
size
÷÷I M
.
÷÷M N
y
÷÷N O
*
÷÷P Q
$num
÷÷R U
*
÷÷V W
Vector3
÷÷X _
.
÷÷_ `
up
÷÷` b
,
÷÷b c
center
÷÷d j
+
÷÷k l
size
÷÷m q
.
÷÷q r
y
÷÷r s
*
÷÷t u
$num
÷÷v y
*
÷÷z {
Vector3÷÷| É
.÷÷É Ñ
up÷÷Ñ Ü
)÷÷Ü á
;÷÷á à
Handles
ÿÿ 
.
ÿÿ 
color
ÿÿ !
=
ÿÿ" #
GetHandleColor
ÿÿ$ 2
(
ÿÿ2 3
	NamedFace
ÿÿ3 <
.
ÿÿ< =
Bottom
ÿÿ= C
)
ÿÿC D
;
ÿÿD E
Handles
ŸŸ 
.
ŸŸ 
DrawLine
ŸŸ $
(
ŸŸ$ %
m_Parent
ŸŸ% -
.
ŸŸ- .
center
ŸŸ. 4
+
ŸŸ5 6
yRecal
ŸŸ7 =
+
ŸŸ> ?
m_Parent
ŸŸ@ H
.
ŸŸH I
size
ŸŸI M
.
ŸŸM N
y
ŸŸN O
*
ŸŸP Q
$num
ŸŸR U
*
ŸŸV W
Vector3
ŸŸX _
.
ŸŸ_ `
down
ŸŸ` d
,
ŸŸd e
center
ŸŸf l
+
ŸŸm n
size
ŸŸo s
.
ŸŸs t
y
ŸŸt u
*
ŸŸv w
$num
ŸŸx {
*
ŸŸ| }
Vector3ŸŸ~ Ö
.ŸŸÖ Ü
downŸŸÜ ä
)ŸŸä ã
;ŸŸã å
Handles
€€ 
.
€€ 
color
€€ !
=
€€" #
GetHandleColor
€€$ 2
(
€€2 3
	NamedFace
€€3 <
.
€€< =
Front
€€= B
)
€€B C
;
€€C D
Handles
‹‹ 
.
‹‹ 
DrawLine
‹‹ $
(
‹‹$ %
m_Parent
‹‹% -
.
‹‹- .
center
‹‹. 4
+
‹‹5 6
zRecal
‹‹7 =
+
‹‹> ?
m_Parent
‹‹@ H
.
‹‹H I
size
‹‹I M
.
‹‹M N
z
‹‹N O
*
‹‹P Q
$num
‹‹R U
*
‹‹V W
Vector3
‹‹X _
.
‹‹_ `
forward
‹‹` g
,
‹‹g h
center
‹‹i o
+
‹‹p q
size
‹‹r v
.
‹‹v w
z
‹‹w x
*
‹‹y z
$num
‹‹{ ~
*‹‹ Ä
Vector3‹‹Å à
.‹‹à â
forward‹‹â ê
)‹‹ê ë
;‹‹ë í
Handles
ﬁﬁ 
.
ﬁﬁ 
color
ﬁﬁ !
=
ﬁﬁ" #
GetHandleColor
ﬁﬁ$ 2
(
ﬁﬁ2 3
	NamedFace
ﬁﬁ3 <
.
ﬁﬁ< =
Back
ﬁﬁ= A
)
ﬁﬁA B
;
ﬁﬁB C
Handles
ﬂﬂ 
.
ﬂﬂ 
DrawLine
ﬂﬂ $
(
ﬂﬂ$ %
m_Parent
ﬂﬂ% -
.
ﬂﬂ- .
center
ﬂﬂ. 4
+
ﬂﬂ5 6
zRecal
ﬂﬂ7 =
+
ﬂﬂ> ?
m_Parent
ﬂﬂ@ H
.
ﬂﬂH I
size
ﬂﬂI M
.
ﬂﬂM N
z
ﬂﬂN O
*
ﬂﬂP Q
$num
ﬂﬂR U
*
ﬂﬂV W
Vector3
ﬂﬂX _
.
ﬂﬂ_ `
back
ﬂﬂ` d
,
ﬂﬂd e
center
ﬂﬂf l
+
ﬂﬂm n
size
ﬂﬂo s
.
ﬂﬂs t
z
ﬂﬂt u
*
ﬂﬂv w
$num
ﬂﬂx {
*
ﬂﬂ| }
Vector3ﬂﬂ~ Ö
.ﬂﬂÖ Ü
backﬂﬂÜ ä
)ﬂﬂä ã
;ﬂﬂã å
}
‡‡ 
}
·· 
Handles
„„ 
.
„„ 
color
„„ 
=
„„ 
m_WireframeColor
„„ ,
;
„„, -
Handles
‰‰ 
.
‰‰ 
zTest
‰‰ 
=
‰‰ 
UnityEngine
‰‰ '
.
‰‰' (
	Rendering
‰‰( 1
.
‰‰1 2
CompareFunction
‰‰2 A
.
‰‰A B
	LessEqual
‰‰B K
;
‰‰K L
Handles
ÂÂ 
.
ÂÂ 
DrawWireCube
ÂÂ  
(
ÂÂ  !
center
ÂÂ! '
,
ÂÂ' (
size
ÂÂ) -
)
ÂÂ- .
;
ÂÂ. /
Handles
ÊÊ 
.
ÊÊ 
color
ÊÊ 
=
ÊÊ $
m_WireframeColorBehind
ÊÊ 2
;
ÊÊ2 3
Handles
ÁÁ 
.
ÁÁ 
zTest
ÁÁ 
=
ÁÁ 
UnityEngine
ÁÁ '
.
ÁÁ' (
	Rendering
ÁÁ( 1
.
ÁÁ1 2
CompareFunction
ÁÁ2 A
.
ÁÁA B
Greater
ÁÁB I
;
ÁÁI J
Handles
ËË 
.
ËË 
DrawWireCube
ËË  
(
ËË  !
center
ËË! '
,
ËË' (
size
ËË) -
)
ËË- .
;
ËË. /
Handles
ÈÈ 
.
ÈÈ 
zTest
ÈÈ 
=
ÈÈ 
UnityEngine
ÈÈ '
.
ÈÈ' (
	Rendering
ÈÈ( 1
.
ÈÈ1 2
CompareFunction
ÈÈ2 A
.
ÈÈA B
Always
ÈÈB H
;
ÈÈH I
Handles
ÍÍ 
.
ÍÍ 
color
ÍÍ 
=
ÍÍ 
previousColor
ÍÍ )
;
ÍÍ) *
}
ÎÎ 	
public
ÓÓ 
void
ÓÓ 

DrawHandle
ÓÓ 
(
ÓÓ 
)
ÓÓ  
{
ÔÔ 	
Event
 
evt
 
=
 
Event
 
.
 
current
 %
;
% &
bool
ÒÒ 
useHomothety
ÒÒ 
=
ÒÒ 
evt
ÒÒ  #
.
ÒÒ# $
shift
ÒÒ$ )
;
ÒÒ) *
bool
ÚÚ 

useSymetry
ÚÚ 
=
ÚÚ 
evt
ÚÚ !
.
ÚÚ! "
alt
ÚÚ" %
||
ÚÚ& (
evt
ÚÚ) ,
.
ÚÚ, -
command
ÚÚ- 4
;
ÚÚ4 5
for
ıı 
(
ıı 
int
ıı 
i
ıı 
=
ıı 
$num
ıı 
,
ıı 
count
ıı !
=
ıı" #
m_ControlIDs
ıı$ 0
.
ıı0 1
Length
ıı1 7
;
ıı7 8
i
ıı9 :
<
ıı; <
count
ıı= B
;
ııB C
++
ııD F
i
ııF G
)
ııG H
m_ControlIDs
ˆˆ 
[
ˆˆ 
i
ˆˆ 
]
ˆˆ 
=
ˆˆ  !

GUIUtility
ˆˆ" ,
.
ˆˆ, -
GetControlID
ˆˆ- 9
(
ˆˆ9 :
$str
ˆˆ: K
.
ˆˆK L
GetHashCode
ˆˆL W
(
ˆˆW X
)
ˆˆX Y
+
ˆˆZ [
i
ˆˆ\ ]
,
ˆˆ] ^
	FocusType
ˆˆ_ h
.
ˆˆh i
Passive
ˆˆi p
)
ˆˆp q
;
ˆˆq r
var
¯¯ 
leftPosition
¯¯ 
=
¯¯ 
center
¯¯ %
+
¯¯& '
size
¯¯( ,
.
¯¯, -
x
¯¯- .
*
¯¯/ 0
$num
¯¯1 4
*
¯¯5 6
Vector3
¯¯7 >
.
¯¯> ?
left
¯¯? C
;
¯¯C D
var
˘˘ 
rightPosition
˘˘ 
=
˘˘ 
center
˘˘  &
+
˘˘' (
size
˘˘) -
.
˘˘- .
x
˘˘. /
*
˘˘0 1
$num
˘˘2 5
*
˘˘6 7
Vector3
˘˘8 ?
.
˘˘? @
right
˘˘@ E
;
˘˘E F
var
˙˙ 
topPosition
˙˙ 
=
˙˙ 
center
˙˙ $
+
˙˙% &
size
˙˙' +
.
˙˙+ ,
y
˙˙, -
*
˙˙. /
$num
˙˙0 3
*
˙˙4 5
Vector3
˙˙6 =
.
˙˙= >
up
˙˙> @
;
˙˙@ A
var
˚˚ 
bottomPosition
˚˚ 
=
˚˚  
center
˚˚! '
+
˚˚( )
size
˚˚* .
.
˚˚. /
y
˚˚/ 0
*
˚˚1 2
$num
˚˚3 6
*
˚˚7 8
Vector3
˚˚9 @
.
˚˚@ A
down
˚˚A E
;
˚˚E F
var
¸¸ 
frontPosition
¸¸ 
=
¸¸ 
center
¸¸  &
+
¸¸' (
size
¸¸) -
.
¸¸- .
z
¸¸. /
*
¸¸0 1
$num
¸¸2 5
*
¸¸6 7
Vector3
¸¸8 ?
.
¸¸? @
forward
¸¸@ G
;
¸¸G H
var
˝˝ 
backPosition
˝˝ 
=
˝˝ 
center
˝˝ %
+
˝˝& '
size
˝˝( ,
.
˝˝, -
z
˝˝- .
*
˝˝/ 0
$num
˝˝1 4
*
˝˝5 6
Vector3
˝˝7 >
.
˝˝> ?
back
˝˝? C
;
˝˝C D
var
ˇˇ 
theChangedFace
ˇˇ 
=
ˇˇ  
	NamedFace
ˇˇ! *
.
ˇˇ* +
None
ˇˇ+ /
;
ˇˇ/ 0
	EditorGUI
ÅÅ 
.
ÅÅ 
BeginChangeCheck
ÅÅ &
(
ÅÅ& '
)
ÅÅ' (
;
ÅÅ( )
	EditorGUI
ÉÉ 
.
ÉÉ 
BeginChangeCheck
ÉÉ &
(
ÉÉ& '
)
ÉÉ' (
;
ÉÉ( )
Slider1D
ÑÑ 
(
ÑÑ 
m_ControlIDs
ÑÑ !
[
ÑÑ! "
(
ÑÑ" #
int
ÑÑ# &
)
ÑÑ& '
	NamedFace
ÑÑ' 0
.
ÑÑ0 1
Left
ÑÑ1 5
]
ÑÑ5 6
,
ÑÑ6 7
ref
ÑÑ8 ;
leftPosition
ÑÑ< H
,
ÑÑH I
Vector3
ÑÑJ Q
.
ÑÑQ R
left
ÑÑR V
,
ÑÑV W 
EditorSnapSettings
ÑÑX j
.
ÑÑj k
scale
ÑÑk p
,
ÑÑp q
GetHandleColorÑÑr Ä
(ÑÑÄ Å
	NamedFaceÑÑÅ ä
.ÑÑä ã
LeftÑÑã è
)ÑÑè ê
)ÑÑê ë
;ÑÑë í
if
ÖÖ 
(
ÖÖ 
	EditorGUI
ÖÖ 
.
ÖÖ 
EndChangeCheck
ÖÖ (
(
ÖÖ( )
)
ÖÖ) *
)
ÖÖ* +
theChangedFace
ÜÜ 
=
ÜÜ  
	NamedFace
ÜÜ! *
.
ÜÜ* +
Left
ÜÜ+ /
;
ÜÜ/ 0
	EditorGUI
àà 
.
àà 
BeginChangeCheck
àà &
(
àà& '
)
àà' (
;
àà( )
Slider1D
ââ 
(
ââ 
m_ControlIDs
ââ !
[
ââ! "
(
ââ" #
int
ââ# &
)
ââ& '
	NamedFace
ââ' 0
.
ââ0 1
Right
ââ1 6
]
ââ6 7
,
ââ7 8
ref
ââ9 <
rightPosition
ââ= J
,
ââJ K
Vector3
ââL S
.
ââS T
right
ââT Y
,
ââY Z 
EditorSnapSettings
ââ[ m
.
ââm n
scale
âân s
,
ââs t
GetHandleColorââu É
(ââÉ Ñ
	NamedFaceââÑ ç
.ââç é
Rightââé ì
)ââì î
)ââî ï
;ââï ñ
if
ää 
(
ää 
	EditorGUI
ää 
.
ää 
EndChangeCheck
ää (
(
ää( )
)
ää) *
)
ää* +
theChangedFace
ãã 
=
ãã  
	NamedFace
ãã! *
.
ãã* +
Right
ãã+ 0
;
ãã0 1
	EditorGUI
çç 
.
çç 
BeginChangeCheck
çç &
(
çç& '
)
çç' (
;
çç( )
Slider1D
éé 
(
éé 
m_ControlIDs
éé !
[
éé! "
(
éé" #
int
éé# &
)
éé& '
	NamedFace
éé' 0
.
éé0 1
Top
éé1 4
]
éé4 5
,
éé5 6
ref
éé7 :
topPosition
éé; F
,
ééF G
Vector3
ééH O
.
ééO P
up
ééP R
,
ééR S 
EditorSnapSettings
ééT f
.
ééf g
scale
éég l
,
éél m
GetHandleColor
één |
(
éé| }
	NamedFaceéé} Ü
.ééÜ á
Topééá ä
)ééä ã
)ééã å
;ééå ç
if
èè 
(
èè 
	EditorGUI
èè 
.
èè 
EndChangeCheck
èè (
(
èè( )
)
èè) *
)
èè* +
theChangedFace
êê 
=
êê  
	NamedFace
êê! *
.
êê* +
Top
êê+ .
;
êê. /
	EditorGUI
íí 
.
íí 
BeginChangeCheck
íí &
(
íí& '
)
íí' (
;
íí( )
Slider1D
ìì 
(
ìì 
m_ControlIDs
ìì !
[
ìì! "
(
ìì" #
int
ìì# &
)
ìì& '
	NamedFace
ìì' 0
.
ìì0 1
Bottom
ìì1 7
]
ìì7 8
,
ìì8 9
ref
ìì: =
bottomPosition
ìì> L
,
ììL M
Vector3
ììN U
.
ììU V
down
ììV Z
,
ììZ [ 
EditorSnapSettings
ìì\ n
.
ììn o
scale
ììo t
,
ììt u
GetHandleColorììv Ñ
(ììÑ Ö
	NamedFaceììÖ é
.ììé è
Bottomììè ï
)ììï ñ
)ììñ ó
;ììó ò
if
îî 
(
îî 
	EditorGUI
îî 
.
îî 
EndChangeCheck
îî (
(
îî( )
)
îî) *
)
îî* +
theChangedFace
ïï 
=
ïï  
	NamedFace
ïï! *
.
ïï* +
Bottom
ïï+ 1
;
ïï1 2
	EditorGUI
óó 
.
óó 
BeginChangeCheck
óó &
(
óó& '
)
óó' (
;
óó( )
Slider1D
òò 
(
òò 
m_ControlIDs
òò !
[
òò! "
(
òò" #
int
òò# &
)
òò& '
	NamedFace
òò' 0
.
òò0 1
Front
òò1 6
]
òò6 7
,
òò7 8
ref
òò9 <
frontPosition
òò= J
,
òòJ K
Vector3
òòL S
.
òòS T
forward
òòT [
,
òò[ \ 
EditorSnapSettings
òò] o
.
òòo p
scale
òòp u
,
òòu v
GetHandleColoròòw Ö
(òòÖ Ü
	NamedFaceòòÜ è
.òòè ê
Frontòòê ï
)òòï ñ
)òòñ ó
;òòó ò
if
ôô 
(
ôô 
	EditorGUI
ôô 
.
ôô 
EndChangeCheck
ôô (
(
ôô( )
)
ôô) *
)
ôô* +
theChangedFace
öö 
=
öö  
	NamedFace
öö! *
.
öö* +
Front
öö+ 0
;
öö0 1
	EditorGUI
úú 
.
úú 
BeginChangeCheck
úú &
(
úú& '
)
úú' (
;
úú( )
Slider1D
ùù 
(
ùù 
m_ControlIDs
ùù !
[
ùù! "
(
ùù" #
int
ùù# &
)
ùù& '
	NamedFace
ùù' 0
.
ùù0 1
Back
ùù1 5
]
ùù5 6
,
ùù6 7
ref
ùù8 ;
backPosition
ùù< H
,
ùùH I
Vector3
ùùJ Q
.
ùùQ R
back
ùùR V
,
ùùV W 
EditorSnapSettings
ùùX j
.
ùùj k
scale
ùùk p
,
ùùp q
GetHandleColorùùr Ä
(ùùÄ Å
	NamedFaceùùÅ ä
.ùùä ã
Backùùã è
)ùùè ê
)ùùê ë
;ùùë í
if
ûû 
(
ûû 
	EditorGUI
ûû 
.
ûû 
EndChangeCheck
ûû (
(
ûû( )
)
ûû) *
)
ûû* +
theChangedFace
üü 
=
üü  
	NamedFace
üü! *
.
üü* +
Back
üü+ /
;
üü/ 0
if
°° 
(
°° 
	EditorGUI
°° 
.
°° 
EndChangeCheck
°° (
(
°°( )
)
°°) *
)
°°* +
{
¢¢ 
float
££ 
delta
££ 
=
££ 
$num
££  
;
££  !
switch
§§ 
(
§§ 
theChangedFace
§§ &
)
§§& '
{
•• 
case
¶¶ 
	NamedFace
¶¶ "
.
¶¶" #
Left
¶¶# '
:
¶¶' (
delta
¶¶) .
=
¶¶/ 0
(
¶¶1 2
leftPosition
¶¶2 >
-
¶¶? @
center
¶¶A G
-
¶¶H I
size
¶¶J N
.
¶¶N O
x
¶¶O P
*
¶¶Q R
$num
¶¶S V
*
¶¶W X
Vector3
¶¶Y `
.
¶¶` a
left
¶¶a e
)
¶¶e f
.
¶¶f g
x
¶¶g h
;
¶¶h i
break
¶¶j o
;
¶¶o p
case
ßß 
	NamedFace
ßß "
.
ßß" #
Right
ßß# (
:
ßß( )
delta
ßß* /
=
ßß0 1
-
ßß2 3
(
ßß3 4
rightPosition
ßß4 A
-
ßßB C
center
ßßD J
-
ßßK L
size
ßßM Q
.
ßßQ R
x
ßßR S
*
ßßT U
$num
ßßV Y
*
ßßZ [
Vector3
ßß\ c
.
ßßc d
right
ßßd i
)
ßßi j
.
ßßj k
x
ßßk l
;
ßßl m
break
ßßn s
;
ßßs t
case
®® 
	NamedFace
®® "
.
®®" #
Top
®®# &
:
®®& '
delta
®®( -
=
®®. /
-
®®0 1
(
®®1 2
topPosition
®®2 =
-
®®> ?
center
®®@ F
-
®®G H
size
®®I M
.
®®M N
y
®®N O
*
®®P Q
$num
®®R U
*
®®V W
Vector3
®®X _
.
®®_ `
up
®®` b
)
®®b c
.
®®c d
y
®®d e
;
®®e f
break
®®g l
;
®®l m
case
©© 
	NamedFace
©© "
.
©©" #
Bottom
©©# )
:
©©) *
delta
©©+ 0
=
©©1 2
(
©©3 4
bottomPosition
©©4 B
-
©©C D
center
©©E K
-
©©L M
size
©©N R
.
©©R S
y
©©S T
*
©©U V
$num
©©W Z
*
©©[ \
Vector3
©©] d
.
©©d e
down
©©e i
)
©©i j
.
©©j k
y
©©k l
;
©©l m
break
©©n s
;
©©s t
case
™™ 
	NamedFace
™™ "
.
™™" #
Front
™™# (
:
™™( )
delta
™™* /
=
™™0 1
-
™™2 3
(
™™3 4
frontPosition
™™4 A
-
™™B C
center
™™D J
-
™™K L
size
™™M Q
.
™™Q R
z
™™R S
*
™™T U
$num
™™V Y
*
™™Z [
Vector3
™™\ c
.
™™c d
forward
™™d k
)
™™k l
.
™™l m
z
™™m n
;
™™n o
break
™™p u
;
™™u v
case
´´ 
	NamedFace
´´ "
.
´´" #
Back
´´# '
:
´´' (
delta
´´) .
=
´´/ 0
(
´´1 2
backPosition
´´2 >
-
´´? @
center
´´A G
-
´´H I
size
´´J N
.
´´N O
z
´´O P
*
´´Q R
$num
´´S V
*
´´W X
Vector3
´´Y `
.
´´` a
back
´´a e
)
´´e f
.
´´f g
z
´´g h
;
´´h i
break
´´j o
;
´´o p
}
¨¨ 
if
ÆÆ 
(
ÆÆ 

monoHandle
ÆÆ 
||
ÆÆ !
useHomothety
ÆÆ" .
&&
ÆÆ/ 1

useSymetry
ÆÆ2 <
)
ÆÆ< =
{
ØØ 
var
∞∞ 
tempSize
∞∞  
=
∞∞! "
size
∞∞# '
-
∞∞( )
Vector3
∞∞* 1
.
∞∞1 2
one
∞∞2 5
*
∞∞6 7
delta
∞∞8 =
;
∞∞= >
for
≥≥ 
(
≥≥ 
int
≥≥ 
axis
≥≥ !
=
≥≥" #
$num
≥≥$ %
;
≥≥% &
axis
≥≥' +
<
≥≥, -
$num
≥≥. /
;
≥≥/ 0
++
≥≥1 3
axis
≥≥3 7
)
≥≥7 8
{
¥¥ 
if
µµ 
(
µµ 
tempSize
µµ $
[
µµ$ %
axis
µµ% )
]
µµ) *
<
µµ+ ,
$num
µµ- .
)
µµ. /
{
∂∂ 
delta
∑∑ !
+=
∑∑" $
tempSize
∑∑% -
[
∑∑- .
axis
∑∑. 2
]
∑∑2 3
;
∑∑3 4
tempSize
∏∏ $
=
∏∏% &
size
∏∏' +
-
∏∏, -
Vector3
∏∏. 5
.
∏∏5 6
one
∏∏6 9
*
∏∏: ;
delta
∏∏< A
;
∏∏A B
}
ππ 
}
∫∫ 
if
ΩΩ 
(
ΩΩ 
m_Parent
ΩΩ  
!=
ΩΩ! #
null
ΩΩ$ (
)
ΩΩ( )
{
ææ 
for
øø 
(
øø 
int
øø  
axis
øø! %
=
øø& '
$num
øø( )
;
øø) *
axis
øø+ /
<
øø0 1
$num
øø2 3
;
øø3 4
++
øø5 7
axis
øø7 ;
)
øø; <
{
¿¿ 
if
¡¡ 
(
¡¡  
tempSize
¡¡  (
[
¡¡( )
axis
¡¡) -
]
¡¡- .
>
¡¡/ 0
m_Parent
¡¡1 9
.
¡¡9 :
size
¡¡: >
[
¡¡> ?
axis
¡¡? C
]
¡¡C D
)
¡¡D E
tempSize
¬¬  (
[
¬¬( )
axis
¬¬) -
]
¬¬- .
=
¬¬/ 0
m_Parent
¬¬1 9
.
¬¬9 :
size
¬¬: >
[
¬¬> ?
axis
¬¬? C
]
¬¬C D
;
¬¬D E
}
√√ 
}
ƒƒ 
size
∆∆ 
=
∆∆ 
tempSize
∆∆ #
;
∆∆# $
}
«« 
else
»» 
{
…… 
if
   
(
   

useSymetry
   "
)
  " #
{
ÀÀ 
switch
ÃÃ 
(
ÃÃ  
theChangedFace
ÃÃ  .
)
ÃÃ. /
{
ÕÕ 
case
ŒŒ  
	NamedFace
ŒŒ! *
.
ŒŒ* +
Left
ŒŒ+ /
:
ŒŒ/ 0
rightPosition
ŒŒ1 >
.
ŒŒ> ?
x
ŒŒ? @
-=
ŒŒA C
delta
ŒŒD I
;
ŒŒI J
break
ŒŒK P
;
ŒŒP Q
case
œœ  
	NamedFace
œœ! *
.
œœ* +
Right
œœ+ 0
:
œœ0 1
leftPosition
œœ2 >
.
œœ> ?
x
œœ? @
+=
œœA C
delta
œœD I
;
œœI J
break
œœK P
;
œœP Q
case
––  
	NamedFace
––! *
.
––* +
Top
––+ .
:
––. /
bottomPosition
––0 >
.
––> ?
y
––? @
+=
––A C
delta
––D I
;
––I J
break
––K P
;
––P Q
case
——  
	NamedFace
——! *
.
——* +
Bottom
——+ 1
:
——1 2
topPosition
——3 >
.
——> ?
y
——? @
-=
——A C
delta
——D I
;
——I J
break
——K P
;
——P Q
case
““  
	NamedFace
““! *
.
““* +
Front
““+ 0
:
““0 1
backPosition
““2 >
.
““> ?
z
““? @
+=
““A C
delta
““D I
;
““I J
break
““K P
;
““P Q
case
””  
	NamedFace
””! *
.
””* +
Back
””+ /
:
””/ 0
frontPosition
””1 >
.
””> ?
z
””? @
-=
””A C
delta
””D I
;
””I J
break
””K P
;
””P Q
}
‘‘ 
switch
◊◊ 
(
◊◊  
theChangedFace
◊◊  .
)
◊◊. /
{
ÿÿ 
case
ŸŸ  
	NamedFace
ŸŸ! *
.
ŸŸ* +
Left
ŸŸ+ /
:
ŸŸ/ 0
case
⁄⁄  
	NamedFace
⁄⁄! *
.
⁄⁄* +
Right
⁄⁄+ 0
:
⁄⁄0 1
if
€€  "
(
€€# $
rightPosition
€€$ 1
.
€€1 2
x
€€2 3
<
€€4 5
leftPosition
€€6 B
.
€€B C
x
€€C D
)
€€D E
rightPosition
‹‹$ 1
.
‹‹1 2
x
‹‹2 3
=
‹‹4 5
leftPosition
‹‹6 B
.
‹‹B C
x
‹‹C D
=
‹‹E F
center
‹‹G M
.
‹‹M N
x
‹‹N O
;
‹‹O P
break
››  %
;
››% &
case
ﬁﬁ  
	NamedFace
ﬁﬁ! *
.
ﬁﬁ* +
Top
ﬁﬁ+ .
:
ﬁﬁ. /
case
ﬂﬂ  
	NamedFace
ﬂﬂ! *
.
ﬂﬂ* +
Bottom
ﬂﬂ+ 1
:
ﬂﬂ1 2
if
‡‡  "
(
‡‡# $
topPosition
‡‡$ /
.
‡‡/ 0
y
‡‡0 1
<
‡‡2 3
bottomPosition
‡‡4 B
.
‡‡B C
y
‡‡C D
)
‡‡D E
topPosition
··$ /
.
··/ 0
y
··0 1
=
··2 3
bottomPosition
··4 B
.
··B C
y
··C D
=
··E F
center
··G M
.
··M N
y
··N O
;
··O P
break
‚‚  %
;
‚‚% &
case
„„  
	NamedFace
„„! *
.
„„* +
Front
„„+ 0
:
„„0 1
case
‰‰  
	NamedFace
‰‰! *
.
‰‰* +
Back
‰‰+ /
:
‰‰/ 0
if
ÂÂ  "
(
ÂÂ# $
frontPosition
ÂÂ$ 1
.
ÂÂ1 2
z
ÂÂ2 3
<
ÂÂ4 5
backPosition
ÂÂ6 B
.
ÂÂB C
z
ÂÂC D
)
ÂÂD E
frontPosition
ÊÊ$ 1
.
ÊÊ1 2
z
ÊÊ2 3
=
ÊÊ4 5
backPosition
ÊÊ6 B
.
ÊÊB C
z
ÊÊC D
=
ÊÊE F
center
ÊÊG M
.
ÊÊM N
z
ÊÊN O
;
ÊÊO P
break
ÁÁ  %
;
ÁÁ% &
}
ËË 
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
useHomothety
ÏÏ $
)
ÏÏ$ %
{
ÌÌ 
float
ÓÓ 
	halfDelta
ÓÓ '
=
ÓÓ( )
delta
ÓÓ* /
*
ÓÓ0 1
$num
ÓÓ2 6
;
ÓÓ6 7
switch
ÔÔ 
(
ÔÔ  
theChangedFace
ÔÔ  .
)
ÔÔ. /
{
 
case
ÒÒ  
	NamedFace
ÒÒ! *
.
ÒÒ* +
Left
ÒÒ+ /
:
ÒÒ/ 0
case
ÚÚ  
	NamedFace
ÚÚ! *
.
ÚÚ* +
Right
ÚÚ+ 0
:
ÚÚ0 1
bottomPosition
ÛÛ  .
.
ÛÛ. /
y
ÛÛ/ 0
+=
ÛÛ1 3
	halfDelta
ÛÛ4 =
;
ÛÛ= >
topPosition
ÙÙ  +
.
ÙÙ+ ,
y
ÙÙ, -
-=
ÙÙ. 0
	halfDelta
ÙÙ1 :
;
ÙÙ: ;
backPosition
ıı  ,
.
ıı, -
z
ıı- .
+=
ıı/ 1
	halfDelta
ıı2 ;
;
ıı; <
frontPosition
ˆˆ  -
.
ˆˆ- .
z
ˆˆ. /
-=
ˆˆ0 2
	halfDelta
ˆˆ3 <
;
ˆˆ< =
break
˜˜  %
;
˜˜% &
case
¯¯  
	NamedFace
¯¯! *
.
¯¯* +
Top
¯¯+ .
:
¯¯. /
case
˘˘  
	NamedFace
˘˘! *
.
˘˘* +
Bottom
˘˘+ 1
:
˘˘1 2
rightPosition
˙˙  -
.
˙˙- .
x
˙˙. /
-=
˙˙0 2
	halfDelta
˙˙3 <
;
˙˙< =
leftPosition
˚˚  ,
.
˚˚, -
x
˚˚- .
+=
˚˚/ 1
	halfDelta
˚˚2 ;
;
˚˚; <
backPosition
¸¸  ,
.
¸¸, -
z
¸¸- .
+=
¸¸/ 1
	halfDelta
¸¸2 ;
;
¸¸; <
frontPosition
˝˝  -
.
˝˝- .
z
˝˝. /
-=
˝˝0 2
	halfDelta
˝˝3 <
;
˝˝< =
break
˛˛  %
;
˛˛% &
case
ˇˇ  
	NamedFace
ˇˇ! *
.
ˇˇ* +
Front
ˇˇ+ 0
:
ˇˇ0 1
case
ÄÄ  
	NamedFace
ÄÄ! *
.
ÄÄ* +
Back
ÄÄ+ /
:
ÄÄ/ 0
rightPosition
ÅÅ  -
.
ÅÅ- .
x
ÅÅ. /
-=
ÅÅ0 2
	halfDelta
ÅÅ3 <
;
ÅÅ< =
leftPosition
ÇÇ  ,
.
ÇÇ, -
x
ÇÇ- .
+=
ÇÇ/ 1
	halfDelta
ÇÇ2 ;
;
ÇÇ; <
bottomPosition
ÉÉ  .
.
ÉÉ. /
y
ÉÉ/ 0
+=
ÉÉ1 3
	halfDelta
ÉÉ4 =
;
ÉÉ= >
topPosition
ÑÑ  +
.
ÑÑ+ ,
y
ÑÑ, -
-=
ÑÑ. 0
	halfDelta
ÑÑ1 :
;
ÑÑ: ;
break
ÖÖ  %
;
ÖÖ% &
}
ÜÜ 
switch
ââ 
(
ââ  
theChangedFace
ââ  .
)
ââ. /
{
ää 
case
ãã  
	NamedFace
ãã! *
.
ãã* +
Left
ãã+ /
:
ãã/ 0
if
åå  "
(
åå# $
rightPosition
åå$ 1
.
åå1 2
x
åå2 3
<
åå4 5
leftPosition
åå6 B
.
ååB C
x
ååC D
)
ååD E
leftPosition
çç$ 0
.
çç0 1
x
çç1 2
=
çç3 4
rightPosition
çç5 B
.
ççB C
x
ççC D
;
ççD E
if
éé  "
(
éé# $
topPosition
éé$ /
.
éé/ 0
y
éé0 1
<
éé2 3
bottomPosition
éé4 B
.
ééB C
y
ééC D
)
ééD E
topPosition
èè$ /
.
èè/ 0
y
èè0 1
=
èè2 3
bottomPosition
èè4 B
.
èèB C
y
èèC D
=
èèE F
center
èèG M
.
èèM N
y
èèN O
;
èèO P
if
êê  "
(
êê# $
frontPosition
êê$ 1
.
êê1 2
z
êê2 3
<
êê4 5
backPosition
êê6 B
.
êêB C
z
êêC D
)
êêD E
frontPosition
ëë$ 1
.
ëë1 2
z
ëë2 3
=
ëë4 5
backPosition
ëë6 B
.
ëëB C
z
ëëC D
=
ëëE F
center
ëëG M
.
ëëM N
z
ëëN O
;
ëëO P
break
íí  %
;
íí% &
case
ìì  
	NamedFace
ìì! *
.
ìì* +
Right
ìì+ 0
:
ìì0 1
if
îî  "
(
îî# $
rightPosition
îî$ 1
.
îî1 2
x
îî2 3
<
îî4 5
leftPosition
îî6 B
.
îîB C
x
îîC D
)
îîD E
rightPosition
ïï$ 1
.
ïï1 2
x
ïï2 3
=
ïï4 5
leftPosition
ïï6 B
.
ïïB C
x
ïïC D
;
ïïD E
if
ññ  "
(
ññ# $
topPosition
ññ$ /
.
ññ/ 0
y
ññ0 1
<
ññ2 3
bottomPosition
ññ4 B
.
ññB C
y
ññC D
)
ññD E
topPosition
óó$ /
.
óó/ 0
y
óó0 1
=
óó2 3
bottomPosition
óó4 B
.
óóB C
y
óóC D
=
óóE F
center
óóG M
.
óóM N
y
óóN O
;
óóO P
if
òò  "
(
òò# $
frontPosition
òò$ 1
.
òò1 2
z
òò2 3
<
òò4 5
backPosition
òò6 B
.
òòB C
z
òòC D
)
òòD E
frontPosition
ôô$ 1
.
ôô1 2
z
ôô2 3
=
ôô4 5
backPosition
ôô6 B
.
ôôB C
z
ôôC D
=
ôôE F
center
ôôG M
.
ôôM N
z
ôôN O
;
ôôO P
break
öö  %
;
öö% &
case
õõ  
	NamedFace
õõ! *
.
õõ* +
Top
õõ+ .
:
õõ. /
if
úú  "
(
úú# $
topPosition
úú$ /
.
úú/ 0
y
úú0 1
<
úú2 3
bottomPosition
úú4 B
.
úúB C
y
úúC D
)
úúD E
topPosition
ùù$ /
.
ùù/ 0
y
ùù0 1
=
ùù2 3
bottomPosition
ùù4 B
.
ùùB C
y
ùùC D
;
ùùD E
if
ûû  "
(
ûû# $
rightPosition
ûû$ 1
.
ûû1 2
x
ûû2 3
<
ûû4 5
leftPosition
ûû6 B
.
ûûB C
x
ûûC D
)
ûûD E
rightPosition
üü$ 1
.
üü1 2
x
üü2 3
=
üü4 5
leftPosition
üü6 B
.
üüB C
x
üüC D
=
üüE F
center
üüG M
.
üüM N
x
üüN O
;
üüO P
if
††  "
(
††# $
frontPosition
††$ 1
.
††1 2
z
††2 3
<
††4 5
backPosition
††6 B
.
††B C
z
††C D
)
††D E
frontPosition
°°$ 1
.
°°1 2
z
°°2 3
=
°°4 5
backPosition
°°6 B
.
°°B C
z
°°C D
=
°°E F
center
°°G M
.
°°M N
z
°°N O
;
°°O P
break
¢¢  %
;
¢¢% &
case
££  
	NamedFace
££! *
.
££* +
Bottom
££+ 1
:
££1 2
if
§§  "
(
§§# $
topPosition
§§$ /
.
§§/ 0
y
§§0 1
<
§§2 3
bottomPosition
§§4 B
.
§§B C
y
§§C D
)
§§D E
bottomPosition
••$ 2
.
••2 3
y
••3 4
=
••5 6
topPosition
••7 B
.
••B C
y
••C D
;
••D E
if
¶¶  "
(
¶¶# $
rightPosition
¶¶$ 1
.
¶¶1 2
x
¶¶2 3
<
¶¶4 5
leftPosition
¶¶6 B
.
¶¶B C
x
¶¶C D
)
¶¶D E
rightPosition
ßß$ 1
.
ßß1 2
x
ßß2 3
=
ßß4 5
leftPosition
ßß6 B
.
ßßB C
x
ßßC D
=
ßßE F
center
ßßG M
.
ßßM N
x
ßßN O
;
ßßO P
if
®®  "
(
®®# $
frontPosition
®®$ 1
.
®®1 2
z
®®2 3
<
®®4 5
backPosition
®®6 B
.
®®B C
z
®®C D
)
®®D E
frontPosition
©©$ 1
.
©©1 2
z
©©2 3
=
©©4 5
backPosition
©©6 B
.
©©B C
z
©©C D
=
©©E F
center
©©G M
.
©©M N
z
©©N O
;
©©O P
break
™™  %
;
™™% &
case
´´  
	NamedFace
´´! *
.
´´* +
Front
´´+ 0
:
´´0 1
if
¨¨  "
(
¨¨# $
frontPosition
¨¨$ 1
.
¨¨1 2
z
¨¨2 3
<
¨¨4 5
backPosition
¨¨6 B
.
¨¨B C
z
¨¨C D
)
¨¨D E
frontPosition
≠≠$ 1
.
≠≠1 2
z
≠≠2 3
=
≠≠4 5
backPosition
≠≠6 B
.
≠≠B C
z
≠≠C D
;
≠≠D E
if
ÆÆ  "
(
ÆÆ# $
rightPosition
ÆÆ$ 1
.
ÆÆ1 2
x
ÆÆ2 3
<
ÆÆ4 5
leftPosition
ÆÆ6 B
.
ÆÆB C
x
ÆÆC D
)
ÆÆD E
rightPosition
ØØ$ 1
.
ØØ1 2
x
ØØ2 3
=
ØØ4 5
leftPosition
ØØ6 B
.
ØØB C
x
ØØC D
=
ØØE F
center
ØØG M
.
ØØM N
x
ØØN O
;
ØØO P
if
∞∞  "
(
∞∞# $
topPosition
∞∞$ /
.
∞∞/ 0
y
∞∞0 1
<
∞∞2 3
bottomPosition
∞∞4 B
.
∞∞B C
y
∞∞C D
)
∞∞D E
topPosition
±±$ /
.
±±/ 0
y
±±0 1
=
±±2 3
bottomPosition
±±4 B
.
±±B C
y
±±C D
=
±±E F
center
±±G M
.
±±M N
y
±±N O
;
±±O P
break
≤≤  %
;
≤≤% &
case
≥≥  
	NamedFace
≥≥! *
.
≥≥* +
Back
≥≥+ /
:
≥≥/ 0
if
¥¥  "
(
¥¥# $
frontPosition
¥¥$ 1
.
¥¥1 2
z
¥¥2 3
<
¥¥4 5
backPosition
¥¥6 B
.
¥¥B C
z
¥¥C D
)
¥¥D E
backPosition
µµ$ 0
.
µµ0 1
z
µµ1 2
=
µµ3 4
frontPosition
µµ5 B
.
µµB C
z
µµC D
;
µµD E
if
∂∂  "
(
∂∂# $
rightPosition
∂∂$ 1
.
∂∂1 2
x
∂∂2 3
<
∂∂4 5
leftPosition
∂∂6 B
.
∂∂B C
x
∂∂C D
)
∂∂D E
rightPosition
∑∑$ 1
.
∑∑1 2
x
∑∑2 3
=
∑∑4 5
leftPosition
∑∑6 B
.
∑∑B C
x
∑∑C D
=
∑∑E F
center
∑∑G M
.
∑∑M N
x
∑∑N O
;
∑∑O P
if
∏∏  "
(
∏∏# $
topPosition
∏∏$ /
.
∏∏/ 0
y
∏∏0 1
<
∏∏2 3
bottomPosition
∏∏4 B
.
∏∏B C
y
∏∏C D
)
∏∏D E
topPosition
ππ$ /
.
ππ/ 0
y
ππ0 1
=
ππ2 3
bottomPosition
ππ4 B
.
ππB C
y
ππC D
=
ππE F
center
ππG M
.
ππM N
y
ππN O
;
ππO P
break
∫∫  %
;
∫∫% &
}
ªª 
}
ºº 
var
ææ 
max
ææ 
=
ææ 
new
ææ !
Vector3
ææ" )
(
ææ) *
rightPosition
ææ* 7
.
ææ7 8
x
ææ8 9
,
ææ9 :
topPosition
ææ; F
.
ææF G
y
ææG H
,
ææH I
frontPosition
ææJ W
.
ææW X
z
ææX Y
)
ææY Z
;
ææZ [
var
øø 
min
øø 
=
øø 
new
øø !
Vector3
øø" )
(
øø) *
leftPosition
øø* 6
.
øø6 7
x
øø7 8
,
øø8 9
bottomPosition
øø: H
.
øøH I
y
øøI J
,
øøJ K
backPosition
øøL X
.
øøX Y
z
øøY Z
)
øøZ [
;
øø[ \
if
¡¡ 
(
¡¡ 
!
¡¡ 

useSymetry
¡¡ #
&&
¡¡$ &
!
¡¡' (
useHomothety
¡¡( 4
)
¡¡4 5
{
¬¬ 
for
ƒƒ 
(
ƒƒ 
int
ƒƒ  
axis
ƒƒ! %
=
ƒƒ& '
$num
ƒƒ( )
;
ƒƒ) *
axis
ƒƒ+ /
<
ƒƒ0 1
$num
ƒƒ2 3
;
ƒƒ3 4
++
ƒƒ5 7
axis
ƒƒ7 ;
)
ƒƒ; <
{
≈≈ 
if
∆∆ 
(
∆∆  
min
∆∆  #
[
∆∆# $
axis
∆∆$ (
]
∆∆( )
>
∆∆* +
max
∆∆, /
[
∆∆/ 0
axis
∆∆0 4
]
∆∆4 5
)
∆∆5 6
{
«« 
if
……  "
(
……# $

GUIUtility
……$ .
.
……. /

hotControl
……/ 9
==
……: <
m_ControlIDs
……= I
[
……I J
axis
……J N
]
……N O
)
……O P
max
  $ '
[
  ' (
axis
  ( ,
]
  , -
=
  . /
min
  0 3
[
  3 4
axis
  4 8
]
  8 9
;
  9 :
else
ÀÀ  $
min
ÃÃ$ '
[
ÃÃ' (
axis
ÃÃ( ,
]
ÃÃ, -
=
ÃÃ. /
max
ÃÃ0 3
[
ÃÃ3 4
axis
ÃÃ4 8
]
ÃÃ8 9
;
ÃÃ9 :
}
ÕÕ 
}
ŒŒ 
}
œœ 
if
““ 
(
““ 
m_Parent
““  
!=
““! #
null
““$ (
)
““( )
{
”” 
for
‘‘ 
(
‘‘ 
int
‘‘  
axis
‘‘! %
=
‘‘& '
$num
‘‘( )
;
‘‘) *
axis
‘‘+ /
<
‘‘0 1
$num
‘‘2 3
;
‘‘3 4
++
‘‘5 7
axis
‘‘7 ;
)
‘‘; <
{
’’ 
if
÷÷ 
(
÷÷  
min
÷÷  #
[
÷÷# $
axis
÷÷$ (
]
÷÷( )
<
÷÷* +
m_Parent
÷÷, 4
.
÷÷4 5
center
÷÷5 ;
[
÷÷; <
axis
÷÷< @
]
÷÷@ A
-
÷÷B C
m_Parent
÷÷D L
.
÷÷L M
size
÷÷M Q
[
÷÷Q R
axis
÷÷R V
]
÷÷V W
*
÷÷X Y
$num
÷÷Z ^
)
÷÷^ _
min
◊◊  #
[
◊◊# $
axis
◊◊$ (
]
◊◊( )
=
◊◊* +
m_Parent
◊◊, 4
.
◊◊4 5
center
◊◊5 ;
[
◊◊; <
axis
◊◊< @
]
◊◊@ A
-
◊◊B C
m_Parent
◊◊D L
.
◊◊L M
size
◊◊M Q
[
◊◊Q R
axis
◊◊R V
]
◊◊V W
*
◊◊X Y
$num
◊◊Z ^
;
◊◊^ _
if
ÿÿ 
(
ÿÿ  
max
ÿÿ  #
[
ÿÿ# $
axis
ÿÿ$ (
]
ÿÿ( )
>
ÿÿ* +
m_Parent
ÿÿ, 4
.
ÿÿ4 5
center
ÿÿ5 ;
[
ÿÿ; <
axis
ÿÿ< @
]
ÿÿ@ A
+
ÿÿB C
m_Parent
ÿÿD L
.
ÿÿL M
size
ÿÿM Q
[
ÿÿQ R
axis
ÿÿR V
]
ÿÿV W
*
ÿÿX Y
$num
ÿÿZ ^
)
ÿÿ^ _
max
ŸŸ  #
[
ŸŸ# $
axis
ŸŸ$ (
]
ŸŸ( )
=
ŸŸ* +
m_Parent
ŸŸ, 4
.
ŸŸ4 5
center
ŸŸ5 ;
[
ŸŸ; <
axis
ŸŸ< @
]
ŸŸ@ A
+
ŸŸB C
m_Parent
ŸŸD L
.
ŸŸL M
size
ŸŸM Q
[
ŸŸQ R
axis
ŸŸR V
]
ŸŸV W
*
ŸŸX Y
$num
ŸŸZ ^
;
ŸŸ^ _
}
⁄⁄ 
}
€€ 
center
›› 
=
›› 
(
›› 
max
›› !
+
››" #
min
››$ '
)
››' (
*
››) *
$num
››+ .
;
››. /
size
ﬁﬁ 
=
ﬁﬁ 
max
ﬁﬁ 
-
ﬁﬁ  
min
ﬁﬁ! $
;
ﬁﬁ$ %
}
ﬂﬂ 
}
‡‡ 
}
·· 	
Color
„„ 
GetHandleColor
„„ 
(
„„ 
	NamedFace
„„ &
name
„„' +
)
„„+ ,
=>
„„- /

monoHandle
„„0 :
?
„„; <%
m_MonochromeHandleColor
„„= T
:
„„U V%
m_PolychromeHandleColor
„„W n
[
„„n o
(
„„o p
int
„„p s
)
„„s t
name
„„t x
]
„„x y
;
„„y z
}
‰‰ 
}ÂÂ Ì©
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\MaterialUpgrader.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public

 

static

 
class

 

DialogText

 "
{ 
public 
static 
readonly 
string %
title& +
=, -
$str. A
;A B
public 
static 
readonly 
string %
proceed& -
=. /
$str0 9
;9 :
public 
static 
readonly 
string %
ok& (
=) *
$str+ /
;/ 0
public 
static 
readonly 
string %
cancel& ,
=- .
$str/ 7
;7 8
public 
static 
readonly 
string %
noSelectionMessage& 8
=9 :
$str; c
;c d
public 
static 
readonly 
string %
projectBackMessage& 8
=9 :
$str; r
;r s
} 
public 

class 
MaterialUpgrader !
{ 
public## 
delegate## 
void## 
MaterialFinalizer## .
(##. /
Material##/ 7
mat##8 ;
)##; <
;##< =
string%% 
m_OldShader%% 
;%% 
string&& 
m_NewShader&& 
;&& 
MaterialFinalizer(( 
m_Finalizer(( %
;((% &

Dictionary** 
<** 
string** 
,** 
string** !
>**! "
m_TextureRename**# 2
=**3 4
new**5 8

Dictionary**9 C
<**C D
string**D J
,**J K
string**L R
>**R S
(**S T
)**T U
;**U V

Dictionary++ 
<++ 
string++ 
,++ 
string++ !
>++! "
m_FloatRename++# 0
=++1 2
new++3 6

Dictionary++7 A
<++A B
string++B H
,++H I
string++J P
>++P Q
(++Q R
)++R S
;++S T

Dictionary,, 
<,, 
string,, 
,,, 
string,, !
>,,! "
m_ColorRename,,# 0
=,,1 2
new,,3 6

Dictionary,,7 A
<,,A B
string,,B H
,,,H I
string,,J P
>,,P Q
(,,Q R
),,R S
;,,S T

Dictionary.. 
<.. 
string.. 
,.. 
float..  
>..  !"
m_FloatPropertiesToSet.." 8
=..9 :
new..; >

Dictionary..? I
<..I J
string..J P
,..P Q
float..R W
>..W X
(..X Y
)..Y Z
;..Z [

Dictionary// 
<// 
string// 
,// 
Color//  
>//  !"
m_ColorPropertiesToSet//" 8
=//9 :
new//; >

Dictionary//? I
<//I J
string//J P
,//P Q
Color//R W
>//W X
(//X Y
)//Y Z
;//Z [
List00 
<00 
string00 
>00 
m_TexturesToRemove00 '
=00( )
new00* -
List00. 2
<002 3
string003 9
>009 :
(00: ;
)00; <
;00< =

Dictionary11 
<11 
string11 
,11 
Texture11 "
>11" #
m_TexturesToSet11$ 3
=114 5
new116 9

Dictionary11: D
<11D E
string11E K
,11K L
Texture11M T
>11T U
(11U V
)11V W
;11W X
class44 
KeywordFloatRename44  
{55 	
public66 
string66 
keyword66 !
;66! "
public77 
string77 
property77 "
;77" #
public88 
float88 
setVal88 
,88  
unsetVal88! )
;88) *
}99 	
List:: 
<:: 
KeywordFloatRename:: 
>::   
m_KeywordFloatRename::! 5
=::6 7
new::8 ;
List::< @
<::@ A
KeywordFloatRename::A S
>::S T
(::T U
)::U V
;::V W
[?? 	
Flags??	 
]?? 
public@@ 
enum@@ 
UpgradeFlags@@  
{AA 	
NoneCC 
=CC 
$numCC 
,CC )
LogErrorOnNonExistingPropertyEE )
=EE* +
$numEE, -
,EE- .(
CleanupNonUpgradedPropertiesGG (
=GG) *
$numGG+ ,
,GG, -)
LogMessageWhenNoUpgraderFoundII )
=II* +
$numII, -
}JJ 	
publicQQ 
voidQQ 
UpgradeQQ 
(QQ 
MaterialQQ $
materialQQ% -
,QQ- .
UpgradeFlagsQQ/ ;
flagsQQ< A
)QQA B
{RR 	
MaterialSS 
newMaterialSS  
;SS  !
ifTT 
(TT 
(TT 
flagsTT 
&TT 
UpgradeFlagsTT %
.TT% &(
CleanupNonUpgradedPropertiesTT& B
)TTB C
!=TTD F
$numTTG H
)TTH I
{UU 
newMaterialVV 
=VV 
newVV !
MaterialVV" *
(VV* +
ShaderVV+ 1
.VV1 2
FindVV2 6
(VV6 7
m_NewShaderVV7 B
)VVB C
)VVC D
;VVD E
}WW 
elseXX 
{YY 
newMaterialZZ 
=ZZ 
UnityEngineZZ )
.ZZ) *
ObjectZZ* 0
.ZZ0 1
InstantiateZZ1 <
(ZZ< =
materialZZ= E
)ZZE F
asZZG I
MaterialZZJ R
;ZZR S
newMaterial[[ 
.[[ 
shader[[ "
=[[# $
Shader[[% +
.[[+ ,
Find[[, 0
([[0 1
m_NewShader[[1 <
)[[< =
;[[= >
}\\ 
Convert^^ 
(^^ 
material^^ 
,^^ 
newMaterial^^ )
)^^) *
;^^* +
material`` 
.`` 
shader`` 
=`` 
Shader`` $
.``$ %
Find``% )
(``) *
m_NewShader``* 5
)``5 6
;``6 7
materialaa 
.aa &
CopyPropertiesFromMaterialaa /
(aa/ 0
newMaterialaa0 ;
)aa; <
;aa< =
UnityEnginebb 
.bb 
Objectbb 
.bb 
DestroyImmediatebb /
(bb/ 0
newMaterialbb0 ;
)bb; <
;bb< =
ifdd 
(dd 
m_Finalizerdd 
!=dd 
nulldd #
)dd# $
m_Finalizeree 
(ee 
materialee $
)ee$ %
;ee% &
}ff 	
publicnn 
virtualnn 
voidnn 
Convertnn #
(nn# $
Materialnn$ ,
srcMaterialnn- 8
,nn8 9
Materialnn: B
dstMaterialnnC N
)nnN O
{oo 	
foreachpp 
(pp 
varpp 
tpp 
inpp 
m_TextureRenamepp -
)pp- .
{qq 
ifrr 
(rr 
!rr 
srcMaterialrr  
.rr  !
HasPropertyrr! ,
(rr, -
trr- .
.rr. /
Keyrr/ 2
)rr2 3
||rr4 6
!rr7 8
dstMaterialrr8 C
.rrC D
HasPropertyrrD O
(rrO P
trrP Q
.rrQ R
ValuerrR W
)rrW X
)rrX Y
continuess 
;ss 
dstMaterialuu 
.uu 
SetTextureScaleuu +
(uu+ ,
tuu, -
.uu- .
Valueuu. 3
,uu3 4
srcMaterialuu5 @
.uu@ A
GetTextureScaleuuA P
(uuP Q
tuuQ R
.uuR S
KeyuuS V
)uuV W
)uuW X
;uuX Y
dstMaterialvv 
.vv 
SetTextureOffsetvv ,
(vv, -
tvv- .
.vv. /
Valuevv/ 4
,vv4 5
srcMaterialvv6 A
.vvA B
GetTextureOffsetvvB R
(vvR S
tvvS T
.vvT U
KeyvvU X
)vvX Y
)vvY Z
;vvZ [
dstMaterialww 
.ww 

SetTextureww &
(ww& '
tww' (
.ww( )
Valueww) .
,ww. /
srcMaterialww0 ;
.ww; <

GetTextureww< F
(wwF G
twwG H
.wwH I
KeywwI L
)wwL M
)wwM N
;wwN O
}xx 
foreachzz 
(zz 
varzz 
tzz 
inzz 
m_FloatRenamezz +
)zz+ ,
{{{ 
if|| 
(|| 
!|| 
srcMaterial||  
.||  !
HasProperty||! ,
(||, -
t||- .
.||. /
Key||/ 2
)||2 3
||||4 6
!||7 8
dstMaterial||8 C
.||C D
HasProperty||D O
(||O P
t||P Q
.||Q R
Value||R W
)||W X
)||X Y
continue}} 
;}} 
dstMaterial 
. 
SetFloat $
($ %
t% &
.& '
Value' ,
,, -
srcMaterial. 9
.9 :
GetFloat: B
(B C
tC D
.D E
KeyE H
)H I
)I J
;J K
}
ÄÄ 
foreach
ÇÇ 
(
ÇÇ 
var
ÇÇ 
t
ÇÇ 
in
ÇÇ 
m_ColorRename
ÇÇ +
)
ÇÇ+ ,
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
srcMaterial
ÑÑ  
.
ÑÑ  !
HasProperty
ÑÑ! ,
(
ÑÑ, -
t
ÑÑ- .
.
ÑÑ. /
Key
ÑÑ/ 2
)
ÑÑ2 3
||
ÑÑ4 6
!
ÑÑ7 8
dstMaterial
ÑÑ8 C
.
ÑÑC D
HasProperty
ÑÑD O
(
ÑÑO P
t
ÑÑP Q
.
ÑÑQ R
Value
ÑÑR W
)
ÑÑW X
)
ÑÑX Y
continue
ÖÖ 
;
ÖÖ 
dstMaterial
áá 
.
áá 
SetColor
áá $
(
áá$ %
t
áá% &
.
áá& '
Value
áá' ,
,
áá, -
srcMaterial
áá. 9
.
áá9 :
GetColor
áá: B
(
ááB C
t
ááC D
.
ááD E
Key
ááE H
)
ááH I
)
ááI J
;
ááJ K
}
àà 
foreach
ää 
(
ää 
var
ää 
prop
ää 
in
ää   
m_TexturesToRemove
ää! 3
)
ää3 4
{
ãã 
if
åå 
(
åå 
!
åå 
dstMaterial
åå  
.
åå  !
HasProperty
åå! ,
(
åå, -
prop
åå- 1
)
åå1 2
)
åå2 3
continue
çç 
;
çç 
dstMaterial
èè 
.
èè 

SetTexture
èè &
(
èè& '
prop
èè' +
,
èè+ ,
null
èè- 1
)
èè1 2
;
èè2 3
}
êê 
foreach
íí 
(
íí 
var
íí 
prop
íí 
in
íí  
m_TexturesToSet
íí! 0
)
íí0 1
{
ìì 
if
îî 
(
îî 
!
îî 
dstMaterial
îî  
.
îî  !
HasProperty
îî! ,
(
îî, -
prop
îî- 1
.
îî1 2
Key
îî2 5
)
îî5 6
)
îî6 7
continue
ïï 
;
ïï 
dstMaterial
óó 
.
óó 

SetTexture
óó &
(
óó& '
prop
óó' +
.
óó+ ,
Key
óó, /
,
óó/ 0
prop
óó1 5
.
óó5 6
Value
óó6 ;
)
óó; <
;
óó< =
}
òò 
foreach
öö 
(
öö 
var
öö 
prop
öö 
in
öö  $
m_FloatPropertiesToSet
öö! 7
)
öö7 8
{
õõ 
if
úú 
(
úú 
!
úú 
dstMaterial
úú  
.
úú  !
HasProperty
úú! ,
(
úú, -
prop
úú- 1
.
úú1 2
Key
úú2 5
)
úú5 6
)
úú6 7
continue
ùù 
;
ùù 
dstMaterial
üü 
.
üü 
SetFloat
üü $
(
üü$ %
prop
üü% )
.
üü) *
Key
üü* -
,
üü- .
prop
üü/ 3
.
üü3 4
Value
üü4 9
)
üü9 :
;
üü: ;
}
†† 
foreach
¢¢ 
(
¢¢ 
var
¢¢ 
prop
¢¢ 
in
¢¢  $
m_ColorPropertiesToSet
¢¢! 7
)
¢¢7 8
{
££ 
if
§§ 
(
§§ 
!
§§ 
dstMaterial
§§  
.
§§  !
HasProperty
§§! ,
(
§§, -
prop
§§- 1
.
§§1 2
Key
§§2 5
)
§§5 6
)
§§6 7
continue
•• 
;
•• 
dstMaterial
ßß 
.
ßß 
SetColor
ßß $
(
ßß$ %
prop
ßß% )
.
ßß) *
Key
ßß* -
,
ßß- .
prop
ßß/ 3
.
ßß3 4
Value
ßß4 9
)
ßß9 :
;
ßß: ;
}
®® 
foreach
™™ 
(
™™ 
var
™™ 
t
™™ 
in
™™ "
m_KeywordFloatRename
™™ 2
)
™™2 3
{
´´ 
if
¨¨ 
(
¨¨ 
!
¨¨ 
dstMaterial
¨¨  
.
¨¨  !
HasProperty
¨¨! ,
(
¨¨, -
t
¨¨- .
.
¨¨. /
property
¨¨/ 7
)
¨¨7 8
)
¨¨8 9
continue
≠≠ 
;
≠≠ 
dstMaterial
ØØ 
.
ØØ 
SetFloat
ØØ $
(
ØØ$ %
t
ØØ% &
.
ØØ& '
property
ØØ' /
,
ØØ/ 0
srcMaterial
ØØ1 <
.
ØØ< =
IsKeywordEnabled
ØØ= M
(
ØØM N
t
ØØN O
.
ØØO P
keyword
ØØP W
)
ØØW X
?
ØØY Z
t
ØØ[ \
.
ØØ\ ]
setVal
ØØ] c
:
ØØd e
t
ØØf g
.
ØØg h
unsetVal
ØØh p
)
ØØp q
;
ØØq r
}
∞∞ 
}
±± 	
public
ππ 
void
ππ 
RenameShader
ππ  
(
ππ  !
string
ππ! '
oldName
ππ( /
,
ππ/ 0
string
ππ1 7
newName
ππ8 ?
,
ππ? @
MaterialFinalizer
ππA R
	finalizer
ππS \
=
ππ] ^
null
ππ_ c
)
ππc d
{
∫∫ 	
m_OldShader
ªª 
=
ªª 
oldName
ªª !
;
ªª! "
m_NewShader
ºº 
=
ºº 
newName
ºº !
;
ºº! "
m_Finalizer
ΩΩ 
=
ΩΩ 
	finalizer
ΩΩ #
;
ΩΩ# $
}
ææ 	
public
≈≈ 
void
≈≈ 
RenameTexture
≈≈ !
(
≈≈! "
string
≈≈" (
oldName
≈≈) 0
,
≈≈0 1
string
≈≈2 8
newName
≈≈9 @
)
≈≈@ A
{
∆∆ 	
m_TextureRename
«« 
[
«« 
oldName
«« #
]
««# $
=
««% &
newName
««' .
;
««. /
}
»» 	
public
œœ 
void
œœ 
RenameFloat
œœ 
(
œœ  
string
œœ  &
oldName
œœ' .
,
œœ. /
string
œœ0 6
newName
œœ7 >
)
œœ> ?
{
–– 	
m_FloatRename
—— 
[
—— 
oldName
—— !
]
——! "
=
——# $
newName
——% ,
;
——, -
}
““ 	
public
ŸŸ 
void
ŸŸ 
RenameColor
ŸŸ 
(
ŸŸ  
string
ŸŸ  &
oldName
ŸŸ' .
,
ŸŸ. /
string
ŸŸ0 6
newName
ŸŸ7 >
)
ŸŸ> ?
{
⁄⁄ 	
m_ColorRename
€€ 
[
€€ 
oldName
€€ !
]
€€! "
=
€€# $
newName
€€% ,
;
€€, -
}
‹‹ 	
public
‚‚ 
void
‚‚ 
RemoveTexture
‚‚ !
(
‚‚! "
string
‚‚" (
name
‚‚) -
)
‚‚- .
{
„„ 	 
m_TexturesToRemove
‰‰ 
.
‰‰ 
Add
‰‰ "
(
‰‰" #
name
‰‰# '
)
‰‰' (
;
‰‰( )
}
ÂÂ 	
public
ÏÏ 
void
ÏÏ 
SetFloat
ÏÏ 
(
ÏÏ 
string
ÏÏ #
propertyName
ÏÏ$ 0
,
ÏÏ0 1
float
ÏÏ2 7
value
ÏÏ8 =
)
ÏÏ= >
{
ÌÌ 	$
m_FloatPropertiesToSet
ÓÓ "
[
ÓÓ" #
propertyName
ÓÓ# /
]
ÓÓ/ 0
=
ÓÓ1 2
value
ÓÓ3 8
;
ÓÓ8 9
}
ÔÔ 	
public
ˆˆ 
void
ˆˆ 
SetColor
ˆˆ 
(
ˆˆ 
string
ˆˆ #
propertyName
ˆˆ$ 0
,
ˆˆ0 1
Color
ˆˆ2 7
value
ˆˆ8 =
)
ˆˆ= >
{
˜˜ 	$
m_ColorPropertiesToSet
¯¯ "
[
¯¯" #
propertyName
¯¯# /
]
¯¯/ 0
=
¯¯1 2
value
¯¯3 8
;
¯¯8 9
}
˘˘ 	
public
ÄÄ 
void
ÄÄ 

SetTexture
ÄÄ 
(
ÄÄ 
string
ÄÄ %
propertyName
ÄÄ& 2
,
ÄÄ2 3
Texture
ÄÄ4 ;
value
ÄÄ< A
)
ÄÄA B
{
ÅÅ 	
m_TexturesToSet
ÇÇ 
[
ÇÇ 
propertyName
ÇÇ (
]
ÇÇ( )
=
ÇÇ* +
value
ÇÇ, 1
;
ÇÇ1 2
}
ÉÉ 	
public
åå 
void
åå "
RenameKeywordToFloat
åå (
(
åå( )
string
åå) /
oldName
åå0 7
,
åå7 8
string
åå9 ?
newName
åå@ G
,
ååG H
float
ååI N
setVal
ååO U
,
ååU V
float
ååW \
unsetVal
åå] e
)
ååe f
{
çç 	"
m_KeywordFloatRename
éé  
.
éé  !
Add
éé! $
(
éé$ %
new
éé% ( 
KeywordFloatRename
éé) ;
{
éé< =
keyword
éé> E
=
ééF G
oldName
ééH O
,
ééO P
property
ééQ Y
=
ééZ [
newName
éé\ c
,
ééc d
setVal
éée k
=
éél m
setVal
één t
,
éét u
unsetVal
éév ~
=éé Ä
unsetValééÅ â
}ééä ã
)ééã å
;ééå ç
}
èè 	
static
ëë 
bool
ëë 
IsMaterialPath
ëë "
(
ëë" #
string
ëë# )
path
ëë* .
)
ëë. /
{
íí 	
return
ìì 
path
ìì 
.
ìì 
EndsWith
ìì  
(
ìì  !
$str
ìì! '
,
ìì' (
StringComparison
ìì) 9
.
ìì9 :
OrdinalIgnoreCase
ìì: K
)
ììK L
;
ììL M
}
îî 	
static
ññ 
MaterialUpgrader
ññ 
GetUpgrader
ññ  +
(
ññ+ ,
List
ññ, 0
<
ññ0 1
MaterialUpgrader
ññ1 A
>
ññA B
	upgraders
ññC L
,
ññL M
Material
ññN V
material
ññW _
)
ññ_ `
{
óó 	
if
òò 
(
òò 
material
òò 
==
òò 
null
òò  
||
òò! #
material
òò$ ,
.
òò, -
shader
òò- 3
==
òò4 6
null
òò7 ;
)
òò; <
return
ôô 
null
ôô 
;
ôô 
string
õõ 

shaderName
õõ 
=
õõ 
material
õõ  (
.
õõ( )
shader
õõ) /
.
õõ/ 0
name
õõ0 4
;
õõ4 5
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
;
úú 
i
úú 
!=
úú  
	upgraders
úú! *
.
úú* +
Count
úú+ 0
;
úú0 1
i
úú2 3
++
úú3 5
)
úú5 6
{
ùù 
if
ûû 
(
ûû 
	upgraders
ûû 
[
ûû 
i
ûû 
]
ûû  
.
ûû  !
m_OldShader
ûû! ,
==
ûû- /

shaderName
ûû0 :
)
ûû: ;
return
üü 
	upgraders
üü $
[
üü$ %
i
üü% &
]
üü& '
;
üü' (
}
†† 
return
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
static
¶¶ 
void
¶¶ %
SaveAssetsAndFreeMemory
¶¶ +
(
¶¶+ ,
)
¶¶, -
{
ßß 	
AssetDatabase
®® 
.
®® 

SaveAssets
®® $
(
®®$ %
)
®®% &
;
®®& '
GC
©© 
.
©© 
Collect
©© 
(
©© 
)
©© 
;
©© 
EditorUtility
™™ 
.
™™ )
UnloadUnusedAssetsImmediate
™™ 5
(
™™5 6
)
™™6 7
;
™™7 8
AssetDatabase
´´ 
.
´´ 
Refresh
´´ !
(
´´! "
)
´´" #
;
´´# $
}
¨¨ 	
private
ÆÆ 
static
ÆÆ 
bool
ÆÆ !
ShouldUpgradeShader
ÆÆ /
(
ÆÆ/ 0
Material
ÆÆ0 8
material
ÆÆ9 A
,
ÆÆA B
HashSet
ÆÆC J
<
ÆÆJ K
string
ÆÆK Q
>
ÆÆQ R!
shaderNamesToIgnore
ÆÆS f
)
ÆÆf g
{
ØØ 	
if
∞∞ 
(
∞∞ 
material
∞∞ 
==
∞∞ 
null
∞∞  
)
∞∞  !
return
±± 
false
±± 
;
±± 
if
≥≥ 
(
≥≥ 
material
≥≥ 
.
≥≥ 
shader
≥≥ 
==
≥≥  "
null
≥≥# '
)
≥≥' (
return
¥¥ 
false
¥¥ 
;
¥¥ 
return
∂∂ 
!
∂∂ !
shaderNamesToIgnore
∂∂ '
.
∂∂' (
Contains
∂∂( 0
(
∂∂0 1
material
∂∂1 9
.
∂∂9 :
shader
∂∂: @
.
∂∂@ A
name
∂∂A E
)
∂∂E F
;
∂∂F G
}
∑∑ 	
public
øø 
static
øø 
void
øø "
UpgradeProjectFolder
øø /
(
øø/ 0
List
øø0 4
<
øø4 5
MaterialUpgrader
øø5 E
>
øøE F
	upgraders
øøG P
,
øøP Q
string
øøR X
progressBarName
øøY h
,
øøh i
UpgradeFlags
øøj v
flags
øøw |
=
øø} ~
UpgradeFlagsøø ã
.øøã å
Noneøøå ê
)øøê ë
{
¿¿ 	
HashSet
¡¡ 
<
¡¡ 
string
¡¡ 
>
¡¡ !
shaderNamesToIgnore
¡¡ /
=
¡¡0 1
new
¡¡2 5
HashSet
¡¡6 =
<
¡¡= >
string
¡¡> D
>
¡¡D E
(
¡¡E F
)
¡¡F G
;
¡¡G H"
UpgradeProjectFolder
¬¬  
(
¬¬  !
	upgraders
¬¬! *
,
¬¬* +!
shaderNamesToIgnore
¬¬, ?
,
¬¬? @
progressBarName
¬¬A P
,
¬¬P Q
flags
¬¬R W
)
¬¬W X
;
¬¬X Y
}
√√ 	
public
ÃÃ 
static
ÃÃ 
void
ÃÃ "
UpgradeProjectFolder
ÃÃ /
(
ÃÃ/ 0
List
ÃÃ0 4
<
ÃÃ4 5
MaterialUpgrader
ÃÃ5 E
>
ÃÃE F
	upgraders
ÃÃG P
,
ÃÃP Q
HashSet
ÃÃR Y
<
ÃÃY Z
string
ÃÃZ `
>
ÃÃ` a!
shaderNamesToIgnore
ÃÃb u
,
ÃÃu v
string
ÃÃw }
progressBarNameÃÃ~ ç
,ÃÃç é
UpgradeFlagsÃÃè õ
flagsÃÃú °
=ÃÃ¢ £
UpgradeFlagsÃÃ§ ∞
.ÃÃ∞ ±
NoneÃÃ± µ
)ÃÃµ ∂
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
EditorUtility
ŒŒ 
.
ŒŒ 
DisplayDialog
ŒŒ ,
(
ŒŒ, -

DialogText
ŒŒ- 7
.
ŒŒ7 8
title
ŒŒ8 =
,
ŒŒ= >
$str
ŒŒ? w
+
ŒŒx y

DialogTextŒŒz Ñ
.ŒŒÑ Ö"
projectBackMessageŒŒÖ ó
,ŒŒó ò

DialogTextŒŒô £
.ŒŒ£ §
proceedŒŒ§ ´
,ŒŒ´ ¨

DialogTextŒŒ≠ ∑
.ŒŒ∑ ∏
cancelŒŒ∏ æ
)ŒŒæ ø
)ŒŒø ¿
return
œœ 
;
œœ 
int
——  
totalMaterialCount
—— "
=
——# $
$num
——% &
;
——& '
foreach
““ 
(
““ 
string
““ 
s
““ 
in
““  
UnityEditor
““! ,
.
““, -
AssetDatabase
““- :
.
““: ;
GetAllAssetPaths
““; K
(
““K L
)
““L M
)
““M N
{
”” 
if
‘‘ 
(
‘‘ 
IsMaterialPath
‘‘ "
(
‘‘" #
s
‘‘# $
)
‘‘$ %
)
‘‘% & 
totalMaterialCount
’’ &
++
’’& (
;
’’( )
}
÷÷ 
int
ÿÿ 
materialIndex
ÿÿ 
=
ÿÿ 
$num
ÿÿ  !
;
ÿÿ! "
foreach
ŸŸ 
(
ŸŸ 
string
ŸŸ 
path
ŸŸ  
in
ŸŸ! #
UnityEditor
ŸŸ$ /
.
ŸŸ/ 0
AssetDatabase
ŸŸ0 =
.
ŸŸ= >
GetAllAssetPaths
ŸŸ> N
(
ŸŸN O
)
ŸŸO P
)
ŸŸP Q
{
⁄⁄ 
if
€€ 
(
€€ 
IsMaterialPath
€€ "
(
€€" #
path
€€# '
)
€€' (
)
€€( )
{
‹‹ 
materialIndex
›› !
++
››! #
;
››# $
if
ﬁﬁ 
(
ﬁﬁ 
UnityEditor
ﬁﬁ #
.
ﬁﬁ# $
EditorUtility
ﬁﬁ$ 1
.
ﬁﬁ1 2*
DisplayCancelableProgressBar
ﬁﬁ2 N
(
ﬁﬁN O
progressBarName
ﬁﬁO ^
,
ﬁﬁ^ _
string
ﬁﬁ` f
.
ﬁﬁf g
Format
ﬁﬁg m
(
ﬁﬁm n
$strﬁﬁn Ä
,ﬁﬁÄ Å
materialIndexﬁﬁÇ è
,ﬁﬁè ê"
totalMaterialCountﬁﬁë £
,ﬁﬁ£ §
pathﬁﬁ• ©
)ﬁﬁ© ™
,ﬁﬁ™ ´
(ﬁﬁ¨ ≠
floatﬁﬁ≠ ≤
)ﬁﬁ≤ ≥
materialIndexﬁﬁ≥ ¿
/ﬁﬁ¡ ¬
(ﬁﬁ√ ƒ
floatﬁﬁƒ …
)ﬁﬁ…  "
totalMaterialCountﬁﬁ  ‹
)ﬁﬁ‹ ›
)ﬁﬁ› ﬁ
break
ﬂﬂ 
;
ﬂﬂ 
Material
·· 
m
·· 
=
··  
UnityEditor
··! ,
.
··, -
AssetDatabase
··- :
.
··: ;!
LoadMainAssetAtPath
··; N
(
··N O
path
··O S
)
··S T
as
··U W
Material
··X `
;
··` a
if
„„ 
(
„„ 
!
„„ !
ShouldUpgradeShader
„„ ,
(
„„, -
m
„„- .
,
„„. /!
shaderNamesToIgnore
„„0 C
)
„„C D
)
„„D E
continue
‰‰  
;
‰‰  !
Upgrade
ÊÊ 
(
ÊÊ 
m
ÊÊ 
,
ÊÊ 
	upgraders
ÊÊ (
,
ÊÊ( )
flags
ÊÊ* /
)
ÊÊ/ 0
;
ÊÊ0 1
}
ÈÈ 
}
ÍÍ 
if
ÌÌ 
(
ÌÌ 
Terrain
ÌÌ 
.
ÌÌ 
activeTerrains
ÌÌ &
.
ÌÌ& '
Length
ÌÌ' -
>
ÌÌ. /
$num
ÌÌ0 1
)
ÌÌ1 2
{
ÓÓ 
Material
ÔÔ 

terrainMat
ÔÔ #
=
ÔÔ$ %
Terrain
ÔÔ& -
.
ÔÔ- .
activeTerrain
ÔÔ. ;
.
ÔÔ; <
materialTemplate
ÔÔ< L
;
ÔÔL M
Upgrade
 
(
 

terrainMat
 "
,
" #
	upgraders
$ -
,
- .
flags
/ 4
)
4 5
;
5 6
}
ÒÒ 
UnityEditor
ÛÛ 
.
ÛÛ 
EditorUtility
ÛÛ %
.
ÛÛ% &
ClearProgressBar
ÛÛ& 6
(
ÛÛ6 7
)
ÛÛ7 8
;
ÛÛ8 9
}
ÙÙ 	
public
¸¸ 
static
¸¸ 
void
¸¸ 
Upgrade
¸¸ "
(
¸¸" #
Material
¸¸# +
material
¸¸, 4
,
¸¸4 5
MaterialUpgrader
¸¸6 F
upgrader
¸¸G O
,
¸¸O P
UpgradeFlags
¸¸Q ]
flags
¸¸^ c
)
¸¸c d
{
˝˝ 	
var
˛˛ 
	upgraders
˛˛ 
=
˛˛ 
new
˛˛ 
List
˛˛  $
<
˛˛$ %
MaterialUpgrader
˛˛% 5
>
˛˛5 6
(
˛˛6 7
)
˛˛7 8
;
˛˛8 9
	upgraders
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
upgrader
ˇˇ "
)
ˇˇ" #
;
ˇˇ# $
Upgrade
ÄÄ 
(
ÄÄ 
material
ÄÄ 
,
ÄÄ 
	upgraders
ÄÄ '
,
ÄÄ' (
flags
ÄÄ) .
)
ÄÄ. /
;
ÄÄ/ 0
}
ÅÅ 	
public
ââ 
static
ââ 
void
ââ 
Upgrade
ââ "
(
ââ" #
Material
ââ# +
material
ââ, 4
,
ââ4 5
List
ââ6 :
<
ââ: ;
MaterialUpgrader
ââ; K
>
ââK L
	upgraders
ââM V
,
ââV W
UpgradeFlags
ââX d
flags
ââe j
)
ââj k
{
ää 	
if
ãã 
(
ãã 
material
ãã 
==
ãã 
null
ãã  
)
ãã  !
return
åå 
;
åå 
var
éé 
upgrader
éé 
=
éé 
GetUpgrader
éé &
(
éé& '
	upgraders
éé' 0
,
éé0 1
material
éé2 :
)
éé: ;
;
éé; <
if
êê 
(
êê 
upgrader
êê 
!=
êê 
null
êê  
)
êê  !
upgrader
ëë 
.
ëë 
Upgrade
ëë  
(
ëë  !
material
ëë! )
,
ëë) *
flags
ëë+ 0
)
ëë0 1
;
ëë1 2
else
íí 
if
íí 
(
íí 
(
íí 
flags
íí 
&
íí 
UpgradeFlags
íí *
.
íí* ++
LogMessageWhenNoUpgraderFound
íí+ H
)
ííH I
==
ííJ L
UpgradeFlags
ííM Y
.
ííY Z+
LogMessageWhenNoUpgraderFound
ííZ w
)
ííw x
Debug
ìì 
.
ìì 
Log
ìì 
(
ìì 
string
ìì  
.
ìì  !
Format
ìì! '
(
ìì' (
$strìì( á
,ììá à
materialììâ ë
.ììë í
nameììí ñ
,ììñ ó
materialììò †
.ìì† °
shaderìì° ß
.ììß ®
nameìì® ¨
)ìì¨ ≠
)ìì≠ Æ
;ììÆ Ø
}
îî 	
public
úú 
static
úú 
void
úú 
UpgradeSelection
úú +
(
úú+ ,
List
úú, 0
<
úú0 1
MaterialUpgrader
úú1 A
>
úúA B
	upgraders
úúC L
,
úúL M
string
úúN T
progressBarName
úúU d
,
úúd e
UpgradeFlags
úúf r
flags
úús x
=
úúy z
UpgradeFlagsúú{ á
.úúá à
Noneúúà å
)úúå ç
{
ùù 	
HashSet
ûû 
<
ûû 
string
ûû 
>
ûû !
shaderNamesToIgnore
ûû /
=
ûû0 1
new
ûû2 5
HashSet
ûû6 =
<
ûû= >
string
ûû> D
>
ûûD E
(
ûûE F
)
ûûF G
;
ûûG H
UpgradeSelection
üü 
(
üü 
	upgraders
üü &
,
üü& '!
shaderNamesToIgnore
üü( ;
,
üü; <
progressBarName
üü= L
,
üüL M
flags
üüN S
)
üüS T
;
üüT U
}
†† 	
public
©© 
static
©© 
void
©© 
UpgradeSelection
©© +
(
©©+ ,
List
©©, 0
<
©©0 1
MaterialUpgrader
©©1 A
>
©©A B
	upgraders
©©C L
,
©©L M
HashSet
©©N U
<
©©U V
string
©©V \
>
©©\ ]!
shaderNamesToIgnore
©©^ q
,
©©q r
string
©©s y
progressBarName©©z â
,©©â ä
UpgradeFlags©©ã ó
flags©©ò ù
=©©û ü
UpgradeFlags©©† ¨
.©©¨ ≠
None©©≠ ±
)©©± ≤
{
™™ 	
var
´´ 
	selection
´´ 
=
´´ 
	Selection
´´ %
.
´´% &
objects
´´& -
;
´´- .
if
≠≠ 
(
≠≠ 
	selection
≠≠ 
==
≠≠ 
null
≠≠ !
)
≠≠! "
{
ÆÆ 
EditorUtility
ØØ 
.
ØØ 
DisplayDialog
ØØ +
(
ØØ+ ,

DialogText
ØØ, 6
.
ØØ6 7
title
ØØ7 <
,
ØØ< =

DialogText
ØØ> H
.
ØØH I 
noSelectionMessage
ØØI [
,
ØØ[ \

DialogText
ØØ] g
.
ØØg h
ok
ØØh j
)
ØØj k
;
ØØk l
return
∞∞ 
;
∞∞ 
}
±± 
List
≥≥ 
<
≥≥ 
Material
≥≥ 
>
≥≥ 
selectedMaterials
≥≥ ,
=
≥≥- .
new
≥≥/ 2
List
≥≥3 7
<
≥≥7 8
Material
≥≥8 @
>
≥≥@ A
(
≥≥A B
	selection
≥≥B K
.
≥≥K L
Length
≥≥L R
)
≥≥R S
;
≥≥S T
for
¥¥ 
(
¥¥ 
int
¥¥ 
i
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
i
¥¥ 
<
¥¥ 
	selection
¥¥  )
.
¥¥) *
Length
¥¥* 0
;
¥¥0 1
++
¥¥2 4
i
¥¥4 5
)
¥¥5 6
{
µµ 
Material
∂∂ 
mat
∂∂ 
=
∂∂ 
	selection
∂∂ (
[
∂∂( )
i
∂∂) *
]
∂∂* +
as
∂∂, .
Material
∂∂/ 7
;
∂∂7 8
if
∑∑ 
(
∑∑ 
mat
∑∑ 
!=
∑∑ 
null
∑∑ 
)
∑∑  
selectedMaterials
∏∏ %
.
∏∏% &
Add
∏∏& )
(
∏∏) *
mat
∏∏* -
)
∏∏- .
;
∏∏. /
}
ππ 
int
ªª $
selectedMaterialsCount
ªª &
=
ªª' (
selectedMaterials
ªª) :
.
ªª: ;
Count
ªª; @
;
ªª@ A
if
ºº 
(
ºº $
selectedMaterialsCount
ºº &
==
ºº' )
$num
ºº* +
)
ºº+ ,
{
ΩΩ 
EditorUtility
ææ 
.
ææ 
DisplayDialog
ææ +
(
ææ+ ,

DialogText
ææ, 6
.
ææ6 7
title
ææ7 <
,
ææ< =

DialogText
ææ> H
.
ææH I 
noSelectionMessage
ææI [
,
ææ[ \

DialogText
ææ] g
.
ææg h
ok
ææh j
)
ææj k
;
ææk l
return
øø 
;
øø 
}
¿¿ 
if
¬¬ 
(
¬¬ 
!
¬¬ 
EditorUtility
¬¬ 
.
¬¬ 
DisplayDialog
¬¬ ,
(
¬¬, -

DialogText
¬¬- 7
.
¬¬7 8
title
¬¬8 =
,
¬¬= >
string
¬¬? E
.
¬¬E F
Format
¬¬F L
(
¬¬L M
$str¬¬M Ñ
,¬¬Ñ Ö&
selectedMaterialsCount¬¬Ü ú
,¬¬ú ù&
selectedMaterialsCount¬¬û ¥
>¬¬µ ∂
$num¬¬∑ ∏
?¬¬π ∫
$str¬¬ª æ
:¬¬ø ¿
$str¬¬¡ √
)¬¬√ ƒ
+¬¬≈ ∆

DialogText
√√ 
.
√√  
projectBackMessage
√√ 1
,
√√1 2

DialogText
√√3 =
.
√√= >
proceed
√√> E
,
√√E F

DialogText
√√G Q
.
√√Q R
cancel
√√R X
)
√√X Y
)
√√Y Z
return
ƒƒ 
;
ƒƒ 
string
∆∆ 
lastMaterialName
∆∆ #
=
∆∆$ %
$str
∆∆& (
;
∆∆( )
for
«« 
(
«« 
int
«« 
i
«« 
=
«« 
$num
«« 
;
«« 
i
«« 
<
«« $
selectedMaterialsCount
««  6
;
««6 7
i
««8 9
++
««9 ;
)
««; <
{
»» 
if
…… 
(
…… 
UnityEditor
…… 
.
……  
EditorUtility
……  -
.
……- .*
DisplayCancelableProgressBar
……. J
(
……J K
progressBarName
……K Z
,
……Z [
string
……\ b
.
……b c
Format
……c i
(
……i j
$str
……j |
,
……| }
i
……~ 
,…… Ä&
selectedMaterialsCount……Å ó
,……ó ò 
lastMaterialName……ô ©
)……© ™
,……™ ´
(……¨ ≠
float……≠ ≤
)……≤ ≥
i……≥ ¥
/……µ ∂
(……∑ ∏
float……∏ Ω
)……Ω æ&
selectedMaterialsCount……æ ‘
)……‘ ’
)……’ ÷
break
   
;
   
var
ÃÃ 
material
ÃÃ 
=
ÃÃ 
selectedMaterials
ÃÃ 0
[
ÃÃ0 1
i
ÃÃ1 2
]
ÃÃ2 3
;
ÃÃ3 4
if
ŒŒ 
(
ŒŒ 
!
ŒŒ !
ShouldUpgradeShader
ŒŒ (
(
ŒŒ( )
material
ŒŒ) 1
,
ŒŒ1 2!
shaderNamesToIgnore
ŒŒ3 F
)
ŒŒF G
)
ŒŒG H
continue
œœ 
;
œœ 
Upgrade
—— 
(
—— 
material
——  
,
——  !
	upgraders
——" +
,
——+ ,
flags
——- 2
)
——2 3
;
——3 4
if
““ 
(
““ 
material
““ 
!=
““ 
null
““  $
)
““$ %
lastMaterialName
”” $
=
””% &
material
””' /
.
””/ 0
name
””0 4
;
””4 5
}
‘‘ 
UnityEditor
÷÷ 
.
÷÷ 
EditorUtility
÷÷ %
.
÷÷% &
ClearProgressBar
÷÷& 6
(
÷÷6 7
)
÷÷7 8
;
÷÷8 9
}
◊◊ 	
}
ÿÿ 
}ŸŸ ∞¸
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\DebugWindow.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
Serializable 
] 
sealed 

class !
WidgetStateDictionary &
:' ( 
SerializedDictionary) =
<= >
string> D
,D E

DebugStateF P
>P Q
{R S
}S T
sealed 

class 
DebugWindowSettings $
:% &
ScriptableObject' 7
{ 
public 
int 
currentStateHash #
;# $
public 
int 
selectedPanel  
;  !
void 
OnEnable 
( 
) 
{ 	
	hideFlags 
= 
	HideFlags !
.! "
HideAndDontSave" 1
;1 2
} 	
} 
sealed   

class   
DebugWindow   
:   
EditorWindow   +
{!! 
static"" 
readonly"" 

GUIContent"" " 
k_ResetButtonContent""# 7
=""8 9
new"": =

GUIContent""> H
(""H I
$str""I P
)""P Q
;""Q R
static(( 
Styles(( 
s_Styles(( 
;(( 
static)) 
GUIStyle)) 
s_SplitterLeft)) &
;))& '
static++ 
float++ 
splitterPos++  
=++! "
$num++# '
;++' (
const,, 
float,, 
minSideBarWidth,, #
=,,$ %
$num,,& )
;,,) *
const-- 
float-- 
minContentWidth-- #
=--$ %
$num--& )
;--) *
bool.. 
dragging.. 
=.. 
false.. 
;.. 
[00 	
SerializeField00	 
]00 !
WidgetStateDictionary11 
m_WidgetStates11 ,
;11, -
[33 	
SerializeField33	 
]33 
DebugWindowSettings44 

m_Settings44 &
;44& '
[66 	
SerializeField66	 
]66 
int77 
m_DebugTreeState77 
;77 
bool99 
	m_IsDirty99 
;99 
Vector2;; 
m_PanelScroll;; 
;;; 
Vector2<< 
m_ContentScroll<< 
;<<  
static>> 
bool>> 
s_TypeMapDirty>> "
;>>" #
static?? 

Dictionary?? 
<?? 
Type?? 
,?? 
Type??  $
>??$ %
s_WidgetStateMap??& 6
;??6 7
static@@ 

Dictionary@@ 
<@@ 
Type@@ 
,@@ 
DebugUIDrawer@@  -
>@@- .
s_WidgetDrawerMap@@/ @
;@@@ A
staticBB 
boolBB 
s_OpenBB 
;BB 
publicCC 
staticCC 
boolCC 
openCC 
{DD 	
getEE 
=>EE 
s_OpenEE 
;EE 
privateFF 
setFF 
{GG 
ifHH 
(HH 
s_OpenHH 
^HH 
valueHH "
)HH" # 
OnDebugWindowToggledII (
?II( )
.II) *
InvokeII* 0
(II0 1
valueII1 6
)II6 7
;II7 8
s_OpenJJ 
=JJ 
valueJJ 
;JJ 
}KK 
}LL 	
staticMM 
eventMM 
ActionMM 
<MM 
boolMM  
>MM  ! 
OnDebugWindowToggledMM" 6
;MM6 7
[OO 	
DidReloadScriptsOO	 
]OO 
staticPP 
voidPP 
OnEditorReloadPP "
(PP" #
)PP# $
{QQ 	
s_TypeMapDirtyRR 
=RR 
trueRR !
;RR! "
openUU 
=UU 
(UU 
	ResourcesUU 
.UU  
FindObjectsOfTypeAllUU 2
<UU2 3
DebugWindowUU3 >
>UU> ?
(UU? @
)UU@ A
?UUA B
.UUB C
LengthUUC I
??UUJ L
$numUUM N
)UUN O
>UUP Q
$numUUR S
;UUS T
ifVV 
(VV  
OnDebugWindowToggledVV $
==VV% '
nullVV( ,
)VV, - 
OnDebugWindowToggledWW $
+=WW% '
DebugManagerWW( 4
.WW4 5
instanceWW5 =
.WW= >
ToggleEditorUIWW> L
;WWL M
DebugManagerXX 
.XX 
instanceXX !
.XX! "
ToggleEditorUIXX" 0
(XX0 1
openXX1 5
)XX5 6
;XX6 7
}YY 	
static[[ 
void[[ 
RebuildTypeMaps[[ #
([[# $
)[[$ %
{\\ 	
var__ 
attrType__ 
=__ 
typeof__ !
(__! "
DebugStateAttribute__" 5
)__5 6
;__6 7
var`` 

stateTypes`` 
=`` 
	CoreUtils`` &
.``& '"
GetAllTypesDerivedFrom``' =
<``= >

DebugState``> H
>``H I
(``I J
)``J K
.aa 
Whereaa 
(aa 
tbb 
=>bb 
tbb 
.bb 
	IsDefinedbb $
(bb$ %
attrTypebb% -
,bb- .
falsebb/ 4
)bb4 5
&&cc 
!cc 
tcc 
.cc 

IsAbstractcc $
)dd 
;dd 
s_WidgetStateMapff 
=ff 
newff "

Dictionaryff# -
<ff- .
Typeff. 2
,ff2 3
Typeff4 8
>ff8 9
(ff9 :
)ff: ;
;ff; <
foreachhh 
(hh 
varhh 
	stateTypehh "
inhh# %

stateTypeshh& 0
)hh0 1
{ii 
varjj 
attrjj 
=jj 
(jj 
DebugStateAttributejj /
)jj/ 0
	stateTypejj0 9
.jj9 :
GetCustomAttributesjj: M
(jjM N
attrTypejjN V
,jjV W
falsejjX ]
)jj] ^
[jj^ _
$numjj_ `
]jj` a
;jja b
foreachll 
(ll 
varll 
tll 
inll !
attrll" &
.ll& '
typesll' ,
)ll, -
s_WidgetStateMapmm $
.mm$ %
Addmm% (
(mm( )
tmm) *
,mm* +
	stateTypemm, 5
)mm5 6
;mm6 7
}nn 
attrTypeqq 
=qq 
typeofqq 
(qq "
DebugUIDrawerAttributeqq 4
)qq4 5
;qq5 6
varrr 
typesrr 
=rr 
	CoreUtilsrr !
.rr! ""
GetAllTypesDerivedFromrr" 8
<rr8 9
DebugUIDrawerrr9 F
>rrF G
(rrG H
)rrH I
.ss 
Wheress 
(ss 
ttt 
=>tt 
ttt 
.tt 
	IsDefinedtt $
(tt$ %
attrTypett% -
,tt- .
falsett/ 4
)tt4 5
&&uu 
!uu 
tuu 
.uu 

IsAbstractuu $
)vv 
;vv 
s_WidgetDrawerMapxx 
=xx 
newxx  #

Dictionaryxx$ .
<xx. /
Typexx/ 3
,xx3 4
DebugUIDrawerxx5 B
>xxB C
(xxC D
)xxD E
;xxE F
foreachzz 
(zz 
varzz 
tzz 
inzz 
typeszz #
)zz# $
{{{ 
var|| 
attr|| 
=|| 
(|| "
DebugUIDrawerAttribute|| 2
)||2 3
t||3 4
.||4 5
GetCustomAttributes||5 H
(||H I
attrType||I Q
,||Q R
false||S X
)||X Y
[||Y Z
$num||Z [
]||[ \
;||\ ]
var}} 
inst}} 
=}} 
(}} 
DebugUIDrawer}} )
)}}) *
	Activator}}* 3
.}}3 4
CreateInstance}}4 B
(}}B C
t}}C D
)}}D E
;}}E F
s_WidgetDrawerMap~~ !
.~~! "
Add~~" %
(~~% &
attr~~& *
.~~* +
type~~+ /
,~~/ 0
inst~~1 5
)~~5 6
;~~6 7
} 
s_TypeMapDirty
ÇÇ 
=
ÇÇ 
false
ÇÇ "
;
ÇÇ" #
}
ÉÉ 	
[
ÖÖ 	
MenuItem
ÖÖ	 
(
ÖÖ 
$str
ÖÖ @
,
ÖÖ@ A
priority
ÖÖB J
=
ÖÖK L
$num
ÖÖM R
)
ÖÖR S
]
ÖÖS T
static
ÜÜ 
void
ÜÜ 
Init
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 	
var
àà 
window
àà 
=
àà 
	GetWindow
àà "
<
àà" #
DebugWindow
àà# .
>
àà. /
(
àà/ 0
)
àà0 1
;
àà1 2
window
ââ 
.
ââ 
titleContent
ââ 
=
ââ  !
new
ââ" %

GUIContent
ââ& 0
(
ââ0 1
$str
ââ1 8
)
ââ8 9
;
ââ9 :
if
ää 
(
ää "
OnDebugWindowToggled
ää #
==
ää$ &
null
ää' +
)
ää+ ,"
OnDebugWindowToggled
ãã $
+=
ãã% '
DebugManager
ãã( 4
.
ãã4 5
instance
ãã5 =
.
ãã= >
ToggleEditorUI
ãã> L
;
ããL M
open
åå 
=
åå 
true
åå 
;
åå 
}
çç 	
void
èè 
OnEnable
èè 
(
èè 
)
èè 
{
êê 	
DebugManager
ëë 
.
ëë 
instance
ëë !
.
ëë! "$
refreshEditorRequested
ëë" 8
=
ëë9 :
false
ëë; @
;
ëë@ A
	hideFlags
ìì 
=
ìì 
	HideFlags
ìì !
.
ìì! "
HideAndDontSave
ìì" 1
;
ìì1 2&
autoRepaintOnSceneChange
îî $
=
îî% &
true
îî' +
;
îî+ ,
if
ññ 
(
ññ 

m_Settings
ññ 
==
ññ 
null
ññ "
)
ññ" #

m_Settings
óó 
=
óó 
CreateInstance
óó +
<
óó+ ,!
DebugWindowSettings
óó, ?
>
óó? @
(
óó@ A
)
óóA B
;
óóB C
if
õõ 
(
õõ 
m_WidgetStates
õõ 
==
õõ !
null
õõ" &
||
õõ' )
!
õõ* +"
AreWidgetStatesValid
õõ+ ?
(
õõ? @
)
õõ@ A
)
õõA B
m_WidgetStates
úú 
=
úú  
new
úú! $#
WidgetStateDictionary
úú% :
(
úú: ;
)
úú; <
;
úú< =
if
ûû 
(
ûû 
s_WidgetStateMap
ûû  
==
ûû! #
null
ûû$ (
||
ûû) +
s_WidgetDrawerMap
ûû, =
==
ûû> @
null
ûûA E
||
ûûF H
s_TypeMapDirty
ûûI W
)
ûûW X
RebuildTypeMaps
üü 
(
üü  
)
üü  !
;
üü! "
Undo
°° 
.
°° 
undoRedoPerformed
°° "
+=
°°# %!
OnUndoRedoPerformed
°°& 9
;
°°9 :
DebugManager
¢¢ 
.
¢¢ 
instance
¢¢ !
.
¢¢! "

onSetDirty
¢¢" ,
+=
¢¢- /
	MarkDirty
¢¢0 9
;
¢¢9 :
m_DebugTreeState
•• 
=
•• 
DebugManager
•• +
.
••+ ,
instance
••, 4
.
••4 5
GetState
••5 =
(
••= >
)
••> ?
;
••? @ 
UpdateWidgetStates
¶¶ 
(
¶¶ 
)
¶¶  
;
¶¶  !
EditorApplication
®® 
.
®® 
update
®® $
-=
®®% '
Repaint
®®( /
;
®®/ 0
var
©© 
panels
©© 
=
©© 
DebugManager
©© %
.
©©% &
instance
©©& .
.
©©. /
panels
©©/ 5
;
©©5 6
var
™™  
selectedPanelIndex
™™ "
=
™™# $

m_Settings
™™% /
.
™™/ 0
selectedPanel
™™0 =
;
™™= >
if
´´ 
(
´´  
selectedPanelIndex
´´ "
>=
´´# %
$num
´´& '
&&
¨¨  
selectedPanelIndex
¨¨ %
<
¨¨& '
panels
¨¨( .
.
¨¨. /
Count
¨¨/ 4
&&
≠≠ 
panels
≠≠ 
[
≠≠  
selectedPanelIndex
≠≠ ,
]
≠≠, -
.
≠≠- .
editorForceUpdate
≠≠. ?
)
≠≠? @
EditorApplication
ÆÆ !
.
ÆÆ! "
update
ÆÆ" (
+=
ÆÆ) +
Repaint
ÆÆ, 3
;
ÆÆ3 4
}
ØØ 	
void
≤≤ 
	OnDestroy
≤≤ 
(
≤≤ 
)
≤≤ 
{
≥≥ 	
open
¥¥ 
=
¥¥ 
false
¥¥ 
;
¥¥ 
DebugManager
µµ 
.
µµ 
instance
µµ !
.
µµ! "

onSetDirty
µµ" ,
-=
µµ- /
	MarkDirty
µµ0 9
;
µµ9 :
Undo
∂∂ 
.
∂∂ 
	ClearUndo
∂∂ 
(
∂∂ 

m_Settings
∂∂ %
)
∂∂% &
;
∂∂& '!
DestroyWidgetStates
∏∏ 
(
∏∏  
)
∏∏  !
;
∏∏! "
}
ππ 	
public
ªª 
void
ªª !
DestroyWidgetStates
ªª '
(
ªª' (
)
ªª( )
{
ºº 	
if
ΩΩ 
(
ΩΩ 
m_WidgetStates
ΩΩ 
!=
ΩΩ !
null
ΩΩ" &
)
ΩΩ& '
{
ææ 
foreach
¿¿ 
(
¿¿ 
var
¿¿ 
state
¿¿ "
in
¿¿# %
m_WidgetStates
¿¿& 4
)
¿¿4 5
{
¡¡ 
var
¬¬ 
s
¬¬ 
=
¬¬ 
state
¬¬ !
.
¬¬! "
Value
¬¬" '
;
¬¬' (
Undo
√√ 
.
√√ 
	ClearUndo
√√ "
(
√√" #
s
√√# $
)
√√$ %
;
√√% &
DestroyImmediate
ƒƒ $
(
ƒƒ$ %
s
ƒƒ% &
)
ƒƒ& '
;
ƒƒ' (
}
≈≈ 
m_WidgetStates
«« 
.
«« 
Clear
«« $
(
««$ %
)
««% &
;
««& '
}
»» 
}
…… 	
bool
ÀÀ "
AreWidgetStatesValid
ÀÀ !
(
ÀÀ! "
)
ÀÀ" #
{
ÃÃ 	
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ 
state
ÕÕ 
in
ÕÕ !
m_WidgetStates
ÕÕ" 0
)
ÕÕ0 1
{
ŒŒ 
if
œœ 
(
œœ 
state
œœ 
.
œœ 
Value
œœ 
==
œœ  "
null
œœ# '
)
œœ' (
{
–– 
return
—— 
false
——  
;
——  !
}
““ 
}
”” 
return
‘‘ 
true
‘‘ 
;
‘‘ 
}
’’ 	
void
◊◊ 
	MarkDirty
◊◊ 
(
◊◊ 
)
◊◊ 
{
ÿÿ 	
	m_IsDirty
ŸŸ 
=
ŸŸ 
true
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
void
ﬂﬂ  
UpdateWidgetStates
ﬂﬂ 
(
ﬂﬂ  
)
ﬂﬂ  !
{
‡‡ 	
foreach
·· 
(
·· 
var
·· 
panel
·· 
in
·· !
DebugManager
··" .
.
··. /
instance
··/ 7
.
··7 8
panels
··8 >
)
··> ? 
UpdateWidgetStates
‚‚ "
(
‚‚" #
panel
‚‚# (
)
‚‚( )
;
‚‚) *
}
„„ 	
void
ÂÂ  
UpdateWidgetStates
ÂÂ 
(
ÂÂ  
DebugUI
ÂÂ  '
.
ÂÂ' (

IContainer
ÂÂ( 2
	container
ÂÂ3 <
)
ÂÂ< =
{
ÊÊ 	
var
ËË 
actualWidget
ËË 
=
ËË 
	container
ËË (
as
ËË) +
DebugUI
ËË, 3
.
ËË3 4
Widget
ËË4 :
;
ËË: ;
if
ÈÈ 
(
ÈÈ 
actualWidget
ÈÈ 
!=
ÈÈ 
null
ÈÈ  $
&&
ÈÈ% '
actualWidget
ÈÈ( 4
.
ÈÈ4 5 
isInactiveInEditor
ÈÈ5 G
)
ÈÈG H
return
ÍÍ 
;
ÍÍ 
foreach
ÌÌ 
(
ÌÌ 
var
ÌÌ 
widget
ÌÌ 
in
ÌÌ  "
	container
ÌÌ# ,
.
ÌÌ, -
children
ÌÌ- 5
)
ÌÌ5 6
{
ÓÓ 
var
ÒÒ 

valueField
ÒÒ 
=
ÒÒ  
widget
ÒÒ! '
as
ÒÒ( *
DebugUI
ÒÒ+ 2
.
ÒÒ2 3
IValueField
ÒÒ3 >
;
ÒÒ> ?
if
ÚÚ 
(
ÚÚ 

valueField
ÚÚ 
!=
ÚÚ !
null
ÚÚ" &
)
ÚÚ& '
{
ÛÛ 
if
ıı 
(
ıı 
widget
ıı 
.
ıı  
isInactiveInEditor
ıı 1
)
ıı1 2
return
ˆˆ 
;
ˆˆ 
var
¯¯ 

widgetType
¯¯ "
=
¯¯# $
widget
¯¯% +
.
¯¯+ ,
GetType
¯¯, 3
(
¯¯3 4
)
¯¯4 5
;
¯¯5 6
string
˘˘ 
guid
˘˘ 
=
˘˘  !
widget
˘˘" (
.
˘˘( )
	queryPath
˘˘) 2
;
˘˘2 3
Type
˙˙ 
	stateType
˙˙ "
;
˙˙" #
s_WidgetStateMap
˚˚ $
.
˚˚$ %
TryGetValue
˚˚% 0
(
˚˚0 1

widgetType
˚˚1 ;
,
˚˚; <
out
˚˚= @
	stateType
˚˚A J
)
˚˚J K
;
˚˚K L
if
˛˛ 
(
˛˛ 
	stateType
˛˛ !
!=
˛˛" $
null
˛˛% )
)
˛˛) *
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
m_WidgetStates
ÄÄ +
.
ÄÄ+ ,
ContainsKey
ÄÄ, 7
(
ÄÄ7 8
guid
ÄÄ8 <
)
ÄÄ< =
||
ÄÄ> @
m_WidgetStates
ÄÄA O
[
ÄÄO P
guid
ÄÄP T
]
ÄÄT U
==
ÄÄV X
null
ÄÄY ]
)
ÄÄ] ^
{
ÅÅ 
var
ÇÇ 
inst
ÇÇ  $
=
ÇÇ% &
(
ÇÇ' (

DebugState
ÇÇ( 2
)
ÇÇ2 3
CreateInstance
ÇÇ3 A
(
ÇÇA B
	stateType
ÇÇB K
)
ÇÇK L
;
ÇÇL M
inst
ÉÉ  
.
ÉÉ  !
	queryPath
ÉÉ! *
=
ÉÉ+ ,
guid
ÉÉ- 1
;
ÉÉ1 2
inst
ÑÑ  
.
ÑÑ  !
SetValue
ÑÑ! )
(
ÑÑ) *

valueField
ÑÑ* 4
.
ÑÑ4 5
GetValue
ÑÑ5 =
(
ÑÑ= >
)
ÑÑ> ?
,
ÑÑ? @

valueField
ÑÑA K
)
ÑÑK L
;
ÑÑL M
m_WidgetStates
ÖÖ *
[
ÖÖ* +
guid
ÖÖ+ /
]
ÖÖ/ 0
=
ÖÖ1 2
inst
ÖÖ3 7
;
ÖÖ7 8
}
ÜÜ 
}
áá 
}
àà 
var
ãã 
containerField
ãã "
=
ãã# $
widget
ãã% +
as
ãã, .
DebugUI
ãã/ 6
.
ãã6 7

IContainer
ãã7 A
;
ããA B
if
åå 
(
åå 
containerField
åå "
!=
åå# %
null
åå& *
)
åå* + 
UpdateWidgetStates
çç &
(
çç& '
containerField
çç' 5
)
çç5 6
;
çç6 7
}
éé 
}
èè 	
public
ëë 
void
ëë 
ApplyStates
ëë 
(
ëë  
bool
ëë  $
forceApplyAll
ëë% 2
=
ëë3 4
false
ëë5 :
)
ëë: ;
{
íí 	
if
ìì 
(
ìì 
!
ìì 
forceApplyAll
ìì 
&&
ìì !

DebugState
ìì" ,
.
ìì, -!
m_CurrentDirtyState
ìì- @
!=
ììA C
null
ììD H
)
ììH I
{
îî 

ApplyState
ïï 
(
ïï 

DebugState
ïï %
.
ïï% &!
m_CurrentDirtyState
ïï& 9
.
ïï9 :
	queryPath
ïï: C
,
ïïC D

DebugState
ïïE O
.
ïïO P!
m_CurrentDirtyState
ïïP c
)
ïïc d
;
ïïd e

DebugState
ññ 
.
ññ !
m_CurrentDirtyState
ññ .
=
ññ/ 0
null
ññ1 5
;
ññ5 6
return
óó 
;
óó 
}
òò 
foreach
öö 
(
öö 
var
öö 
state
öö 
in
öö !
m_WidgetStates
öö" 0
)
öö0 1

ApplyState
õõ 
(
õõ 
state
õõ  
.
õõ  !
Key
õõ! $
,
õõ$ %
state
õõ& +
.
õõ+ ,
Value
õõ, 1
)
õõ1 2
;
õõ2 3

DebugState
ùù 
.
ùù !
m_CurrentDirtyState
ùù *
=
ùù+ ,
null
ùù- 1
;
ùù1 2
}
ûû 	
void
†† 

ApplyState
†† 
(
†† 
string
†† 
	queryPath
†† (
,
††( )

DebugState
††* 4
state
††5 :
)
††: ;
{
°° 	
var
¢¢ 
widget
¢¢ 
=
¢¢ 
DebugManager
¢¢ %
.
¢¢% &
instance
¢¢& .
.
¢¢. /
GetItem
¢¢/ 6
(
¢¢6 7
	queryPath
¢¢7 @
)
¢¢@ A
as
¢¢B D
DebugUI
¢¢E L
.
¢¢L M
IValueField
¢¢M X
;
¢¢X Y
if
§§ 
(
§§ 
widget
§§ 
==
§§ 
null
§§ 
)
§§ 
return
•• 
;
•• 
widget
ßß 
.
ßß 
SetValue
ßß 
(
ßß 
state
ßß !
.
ßß! "
GetValue
ßß" *
(
ßß* +
)
ßß+ ,
)
ßß, -
;
ßß- .
}
®® 	
void
™™ !
OnUndoRedoPerformed
™™  
(
™™  !
)
™™! "
{
´´ 	
int
¨¨ 
	stateHash
¨¨ 
=
¨¨ 
ComputeStateHash
¨¨ ,
(
¨¨, -
)
¨¨- .
;
¨¨. /
if
ØØ 
(
ØØ 
	stateHash
ØØ 
!=
ØØ 

m_Settings
ØØ '
.
ØØ' (
currentStateHash
ØØ( 8
)
ØØ8 9
{
∞∞ 
ApplyStates
±± 
(
±± 
true
±±  
)
±±  !
;
±±! "

m_Settings
≤≤ 
.
≤≤ 
currentStateHash
≤≤ +
=
≤≤, -
	stateHash
≤≤. 7
;
≤≤7 8
}
≥≥ 
Repaint
µµ 
(
µµ 
)
µµ 
;
µµ 
}
∂∂ 	
int
∏∏ 
ComputeStateHash
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ 	
	unchecked
∫∫ 
{
ªª 
int
ºº 
hash
ºº 
=
ºº 
$num
ºº 
;
ºº 
foreach
ææ 
(
ææ 
var
ææ 
state
ææ "
in
ææ# %
m_WidgetStates
ææ& 4
)
ææ4 5
hash
øø 
=
øø 
hash
øø 
*
øø  !
$num
øø" $
+
øø% &
state
øø' ,
.
øø, -
Value
øø- 2
.
øø2 3
GetHashCode
øø3 >
(
øø> ?
)
øø? @
;
øø@ A
return
¡¡ 
hash
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 	
void
≈≈ 
Update
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 	
if
…… 
(
…… 
DebugManager
…… 
.
…… 
instance
…… %
.
……% &$
refreshEditorRequested
……& <
)
……< =
{
   !
DestroyWidgetStates
ÀÀ #
(
ÀÀ# $
)
ÀÀ$ %
;
ÀÀ% &
DebugManager
ÃÃ 
.
ÃÃ 
instance
ÃÃ %
.
ÃÃ% &$
refreshEditorRequested
ÃÃ& <
=
ÃÃ= >
false
ÃÃ? D
;
ÃÃD E
}
ÕÕ 
int
œœ 
	treeState
œœ 
=
œœ 
DebugManager
œœ (
.
œœ( )
instance
œœ) 1
.
œœ1 2
GetState
œœ2 :
(
œœ: ;
)
œœ; <
;
œœ< =
if
—— 
(
—— 
m_DebugTreeState
——  
!=
——! #
	treeState
——$ -
||
——. 0
	m_IsDirty
——1 :
)
——: ;
{
““  
UpdateWidgetStates
”” "
(
””" #
)
””# $
;
””$ %
ApplyStates
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
m_DebugTreeState
’’  
=
’’! "
	treeState
’’# ,
;
’’, -
	m_IsDirty
÷÷ 
=
÷÷ 
false
÷÷ !
;
÷÷! "
}
◊◊ 
}
ÿÿ 	
void
⁄⁄ 
OnGUI
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
{
€€ 	
if
‹‹ 
(
‹‹ 
s_Styles
‹‹ 
==
‹‹ 
null
‹‹  
)
‹‹  !
{
›› 
s_Styles
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
Styles
ﬁﬁ %
(
ﬁﬁ% &
)
ﬁﬁ& '
;
ﬁﬁ' (
s_SplitterLeft
ﬂﬂ 
=
ﬂﬂ  
new
ﬂﬂ! $
GUIStyle
ﬂﬂ% -
(
ﬂﬂ- .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
}
‡‡ 
var
‚‚ 
panels
‚‚ 
=
‚‚ 
DebugManager
‚‚ %
.
‚‚% &
instance
‚‚& .
.
‚‚. /
panels
‚‚/ 5
;
‚‚5 6
int
„„ 
	itemCount
„„ 
=
„„ 
panels
„„ "
.
„„" #
Count
„„# (
(
„„( )
x
„„) *
=>
„„+ -
!
„„. /
x
„„/ 0
.
„„0 1 
isInactiveInEditor
„„1 C
&&
„„D F
x
„„G H
.
„„H I
children
„„I Q
.
„„Q R
Count
„„R W
(
„„W X
w
„„X Y
=>
„„Z \
!
„„] ^
w
„„^ _
.
„„_ ` 
isInactiveInEditor
„„` r
)
„„r s
>
„„t u
$num
„„v w
)
„„w x
;
„„x y
if
ÂÂ 
(
ÂÂ 
	itemCount
ÂÂ 
==
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
{
ÊÊ 
EditorGUILayout
ÁÁ 
.
ÁÁ  
HelpBox
ÁÁ  '
(
ÁÁ' (
$str
ÁÁ( >
,
ÁÁ> ?
MessageType
ÁÁ@ K
.
ÁÁK L
Info
ÁÁL P
)
ÁÁP Q
;
ÁÁQ R
return
ËË 
;
ËË 
}
ÈÈ 
var
ÏÏ 
wrect
ÏÏ 
=
ÏÏ 
position
ÏÏ  
;
ÏÏ  !
wrect
ÌÌ 
.
ÌÌ 
x
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
wrect
ÓÓ 
.
ÓÓ 
y
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
var
ÔÔ 
oldColor
ÔÔ 
=
ÔÔ 
GUI
ÔÔ 
.
ÔÔ 
color
ÔÔ $
;
ÔÔ$ %
GUI
 
.
 
color
 
=
 
s_Styles
  
.
  !!
skinBackgroundColor
! 4
;
4 5
GUI
ÒÒ 
.
ÒÒ 
DrawTexture
ÒÒ 
(
ÒÒ 
wrect
ÒÒ !
,
ÒÒ! "
EditorGUIUtility
ÒÒ# 3
.
ÒÒ3 4
whiteTexture
ÒÒ4 @
)
ÒÒ@ A
;
ÒÒA B
GUI
ÚÚ 
.
ÚÚ 
color
ÚÚ 
=
ÚÚ 
oldColor
ÚÚ  
;
ÚÚ  !
	GUILayout
ıı 
.
ıı 
BeginHorizontal
ıı %
(
ıı% &
EditorStyles
ıı& 2
.
ıı2 3
toolbar
ıı3 :
)
ıı: ;
;
ıı; <
	GUILayout
˘˘ 
.
˘˘ 
FlexibleSpace
˘˘ #
(
˘˘# $
)
˘˘$ %
;
˘˘% &
if
¸¸ 
(
¸¸ 
	GUILayout
¸¸ 
.
¸¸ 
Button
¸¸  
(
¸¸  !"
k_ResetButtonContent
¸¸! 5
,
¸¸5 6
EditorStyles
¸¸7 C
.
¸¸C D
toolbarButton
¸¸D Q
)
¸¸Q R
)
¸¸R S
DebugManager
˝˝ 
.
˝˝ 
instance
˝˝ %
.
˝˝% &
Reset
˝˝& +
(
˝˝+ ,
)
˝˝, -
;
˝˝- .
	GUILayout
˛˛ 
.
˛˛ 
EndHorizontal
˛˛ #
(
˛˛# $
)
˛˛$ %
;
˛˛% &
using
ÄÄ 
(
ÄÄ 
new
ÄÄ 
EditorGUILayout
ÄÄ &
.
ÄÄ& '
HorizontalScope
ÄÄ' 6
(
ÄÄ6 7
)
ÄÄ7 8
)
ÄÄ8 9
{
ÅÅ 
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 
scrollScope
ÉÉ &
=
ÉÉ' (
new
ÉÉ) ,
EditorGUILayout
ÉÉ- <
.
ÉÉ< =
ScrollViewScope
ÉÉ= L
(
ÉÉL M
m_PanelScroll
ÉÉM Z
,
ÉÉZ [
s_Styles
ÉÉ\ d
.
ÉÉd e
sectionScrollView
ÉÉe v
,
ÉÉv w
	GUILayoutÉÉx Å
.ÉÉÅ Ç
WidthÉÉÇ á
(ÉÉá à
splitterPosÉÉà ì
)ÉÉì î
)ÉÉî ï
)ÉÉï ñ
{
ÑÑ 
	GUILayout
ÖÖ 
.
ÖÖ 
Space
ÖÖ #
(
ÖÖ# $
$num
ÖÖ$ '
)
ÖÖ' (
;
ÖÖ( )
if
áá 
(
áá 

m_Settings
áá "
.
áá" #
selectedPanel
áá# 0
>=
áá1 3
panels
áá4 :
.
áá: ;
Count
áá; @
)
áá@ A

m_Settings
àà "
.
àà" #
selectedPanel
àà# 0
=
àà1 2
$num
àà3 4
;
àà4 5
while
ãã 
(
ãã 
panels
ãã !
[
ãã! "

m_Settings
ãã" ,
.
ãã, -
selectedPanel
ãã- :
]
ãã: ;
.
ãã; < 
isInactiveInEditor
ãã< N
||
ããO Q
panels
ããR X
[
ããX Y

m_Settings
ããY c
.
ããc d
selectedPanel
ããd q
]
ããq r
.
ããr s
children
ããs {
.
ãã{ |
Countãã| Å
(ããÅ Ç
xããÇ É
=>ããÑ Ü
!ããá à
xããà â
.ããâ ä"
isInactiveInEditorããä ú
)ããú ù
==ããû †
$numãã° ¢
)ãã¢ £
{
åå 

m_Settings
çç "
.
çç" #
selectedPanel
çç# 0
++
çç0 2
;
çç2 3
if
èè 
(
èè 

m_Settings
èè &
.
èè& '
selectedPanel
èè' 4
>=
èè5 7
panels
èè8 >
.
èè> ?
Count
èè? D
)
èèD E

m_Settings
êê &
.
êê& '
selectedPanel
êê' 4
=
êê5 6
$num
êê7 8
;
êê8 9
}
ëë 
for
îî 
(
îî 
int
îî 
i
îî 
=
îî  
$num
îî! "
;
îî" #
i
îî$ %
<
îî& '
panels
îî( .
.
îî. /
Count
îî/ 4
;
îî4 5
i
îî6 7
++
îî7 9
)
îî9 :
{
ïï 
var
ññ 
panel
ññ !
=
ññ" #
panels
ññ$ *
[
ññ* +
i
ññ+ ,
]
ññ, -
;
ññ- .
if
òò 
(
òò 
panel
òò !
.
òò! " 
isInactiveInEditor
òò" 4
)
òò4 5
continue
ôô $
;
ôô$ %
if
õõ 
(
õõ 
panel
õõ !
.
õõ! "
children
õõ" *
.
õõ* +
Count
õõ+ 0
(
õõ0 1
x
õõ1 2
=>
õõ3 5
!
õõ6 7
x
õõ7 8
.
õõ8 9 
isInactiveInEditor
õõ9 K
)
õõK L
==
õõM O
$num
õõP Q
)
õõQ R
continue
úú $
;
úú$ %
var
ûû 
elementRect
ûû '
=
ûû( )
GUILayoutUtility
ûû* :
.
ûû: ;
GetRect
ûû; B
(
ûûB C
EditorGUIUtility
ûûC S
.
ûûS T
TrTextContent
ûûT a
(
ûûa b
panel
ûûb g
.
ûûg h
displayName
ûûh s
)
ûûs t
,
ûût u
s_Styles
ûûv ~
.
ûû~ 
sectionElementûû ç
,ûûç é
	GUILayoutûûè ò
.ûûò ô
ExpandWidthûûô §
(ûû§ •
trueûû• ©
)ûû© ™
)ûû™ ´
;ûû´ ¨
if
†† 
(
†† 

m_Settings
†† &
.
††& '
selectedPanel
††' 4
==
††5 7
i
††8 9
&&
††: <
Event
††= B
.
††B C
current
††C J
.
††J K
type
††K O
==
††P R
	EventType
††S \
.
††\ ]
Repaint
††] d
)
††d e
s_Styles
°° $
.
°°$ %
selected
°°% -
.
°°- .
Draw
°°. 2
(
°°2 3
elementRect
°°3 >
,
°°> ?
false
°°@ E
,
°°E F
false
°°G L
,
°°L M
false
°°N S
,
°°S T
false
°°U Z
)
°°Z [
;
°°[ \
	EditorGUI
££ !
.
££! "
BeginChangeCheck
££" 2
(
££2 3
)
££3 4
;
££4 5
GUI
§§ 
.
§§ 
Toggle
§§ "
(
§§" #
elementRect
§§# .
,
§§. /

m_Settings
§§0 :
.
§§: ;
selectedPanel
§§; H
==
§§I K
i
§§L M
,
§§M N
panel
§§O T
.
§§T U
displayName
§§U `
,
§§` a
s_Styles
§§b j
.
§§j k
sectionElement
§§k y
)
§§y z
;
§§z {
if
•• 
(
•• 
	EditorGUI
•• %
.
••% &
EndChangeCheck
••& 4
(
••4 5
)
••5 6
)
••6 7
{
¶¶ 
Undo
ßß  
.
ßß  !(
RegisterCompleteObjectUndo
ßß! ;
(
ßß; <

m_Settings
ßß< F
,
ßßF G
$str
ßßH _
)
ßß_ `
;
ßß` a
var
®® 
previousPanel
®®  -
=
®®. /

m_Settings
®®0 :
.
®®: ;
selectedPanel
®®; H
>=
®®I K
$num
®®L M
&&
®®N P

m_Settings
®®Q [
.
®®[ \
selectedPanel
®®\ i
<
®®j k
panels
®®l r
.
®®r s
Count
®®s x
?
©©  !
panels
©©" (
[
©©( )

m_Settings
©©) 3
.
©©3 4
selectedPanel
©©4 A
]
©©A B
:
™™  !
null
™™" &
;
™™& '
if
´´ 
(
´´  
previousPanel
´´  -
!=
´´. 0
null
´´1 5
&&
´´6 8
previousPanel
´´9 F
.
´´F G
editorForceUpdate
´´G X
&&
´´Y [
!
´´\ ]
panel
´´] b
.
´´b c
editorForceUpdate
´´c t
)
´´t u
EditorApplication
¨¨  1
.
¨¨1 2
update
¨¨2 8
-=
¨¨9 ;
Repaint
¨¨< C
;
¨¨C D
else
≠≠  
if
≠≠! #
(
≠≠$ %
(
≠≠% &
previousPanel
≠≠& 3
==
≠≠4 6
null
≠≠7 ;
||
≠≠< >
!
≠≠? @
previousPanel
≠≠@ M
.
≠≠M N
editorForceUpdate
≠≠N _
)
≠≠_ `
&&
≠≠a c
panel
≠≠d i
.
≠≠i j
editorForceUpdate
≠≠j {
)
≠≠{ |
EditorApplication
ÆÆ  1
.
ÆÆ1 2
update
ÆÆ2 8
+=
ÆÆ9 ;
Repaint
ÆÆ< C
;
ÆÆC D

m_Settings
ØØ &
.
ØØ& '
selectedPanel
ØØ' 4
=
ØØ5 6
i
ØØ7 8
;
ØØ8 9
}
∞∞ 
}
±± 
m_PanelScroll
≥≥ !
=
≥≥" #
scrollScope
≥≥$ /
.
≥≥/ 0
scrollPosition
≥≥0 >
;
≥≥> ?
}
¥¥ 
Rect
∂∂ 
splitterRect
∂∂ !
=
∂∂" #
new
∂∂$ '
Rect
∂∂( ,
(
∂∂, -
splitterPos
∂∂- 8
-
∂∂9 :
$num
∂∂; <
,
∂∂< =
$num
∂∂> ?
,
∂∂? @
$num
∂∂A B
,
∂∂B C
Screen
∂∂D J
.
∂∂J K
height
∂∂K Q
)
∂∂Q R
;
∂∂R S
GUI
∑∑ 
.
∑∑ 
Box
∑∑ 
(
∑∑ 
splitterRect
∑∑ $
,
∑∑$ %
$str
∑∑& (
,
∑∑( )
s_SplitterLeft
∑∑* 8
)
∑∑8 9
;
∑∑9 :
	GUILayout
ππ 
.
ππ 
Space
ππ 
(
ππ  
$num
ππ  #
)
ππ# $
;
ππ$ %
using
ºº 
(
ºº 
var
ºº 
changedScope
ºº '
=
ºº( )
new
ºº* -
	EditorGUI
ºº. 7
.
ºº7 8
ChangeCheckScope
ºº8 H
(
ººH I
)
ººI J
)
ººJ K
{
ΩΩ 
using
ææ 
(
ææ 
new
ææ 
EditorGUILayout
ææ .
.
ææ. /
VerticalScope
ææ/ <
(
ææ< =
)
ææ= >
)
ææ> ?
{
øø 
var
¿¿ 
selectedPanel
¿¿ )
=
¿¿* +
panels
¿¿, 2
[
¿¿2 3

m_Settings
¿¿3 =
.
¿¿= >
selectedPanel
¿¿> K
]
¿¿K L
;
¿¿L M
	GUILayout
¬¬ !
.
¬¬! "
Label
¬¬" '
(
¬¬' (
selectedPanel
¬¬( 5
.
¬¬5 6
displayName
¬¬6 A
,
¬¬A B
s_Styles
¬¬C K
.
¬¬K L
sectionHeader
¬¬L Y
)
¬¬Y Z
;
¬¬Z [
	GUILayout
√√ !
.
√√! "
Space
√√" '
(
√√' (
$num
√√( +
)
√√+ ,
;
√√, -
using
≈≈ 
(
≈≈ 
var
≈≈ "
scrollScope
≈≈# .
=
≈≈/ 0
new
≈≈1 4
EditorGUILayout
≈≈5 D
.
≈≈D E
ScrollViewScope
≈≈E T
(
≈≈T U
m_ContentScroll
≈≈U d
)
≈≈d e
)
≈≈e f
{
∆∆ "
TraverseContainerGUI
«« 0
(
««0 1
selectedPanel
««1 >
)
««> ?
;
««? @
m_ContentScroll
»» +
=
»», -
scrollScope
»». 9
.
»»9 :
scrollPosition
»»: H
;
»»H I
}
…… 
}
   
if
ÃÃ 
(
ÃÃ 
changedScope
ÃÃ $
.
ÃÃ$ %
changed
ÃÃ% ,
)
ÃÃ, -
{
ÕÕ 

m_Settings
ŒŒ "
.
ŒŒ" #
currentStateHash
ŒŒ# 3
=
ŒŒ4 5
ComputeStateHash
ŒŒ6 F
(
ŒŒF G
)
ŒŒG H
;
ŒŒH I
DebugManager
œœ $
.
œœ$ %
instance
œœ% -
.
œœ- .!
ReDrawOnScreenDebug
œœ. A
(
œœA B
)
œœB C
;
œœC D
}
–– 
}
—— 
if
‘‘ 
(
‘‘ 
Event
‘‘ 
.
‘‘ 
current
‘‘ !
!=
‘‘" $
null
‘‘% )
)
‘‘) *
{
’’ 
switch
÷÷ 
(
÷÷ 
Event
÷÷ !
.
÷÷! "
current
÷÷" )
.
÷÷) *
rawType
÷÷* 1
)
÷÷1 2
{
◊◊ 
case
ÿÿ 
	EventType
ÿÿ &
.
ÿÿ& '
	MouseDown
ÿÿ' 0
:
ÿÿ0 1
if
ŸŸ 
(
ŸŸ  
splitterRect
ŸŸ  ,
.
ŸŸ, -
Contains
ŸŸ- 5
(
ŸŸ5 6
Event
ŸŸ6 ;
.
ŸŸ; <
current
ŸŸ< C
.
ŸŸC D
mousePosition
ŸŸD Q
)
ŸŸQ R
)
ŸŸR S
{
⁄⁄ 
dragging
€€  (
=
€€) *
true
€€+ /
;
€€/ 0
}
‹‹ 
break
›› !
;
››! "
case
ﬁﬁ 
	EventType
ﬁﬁ &
.
ﬁﬁ& '
	MouseDrag
ﬁﬁ' 0
:
ﬁﬁ0 1
if
ﬂﬂ 
(
ﬂﬂ  
dragging
ﬂﬂ  (
)
ﬂﬂ( )
{
‡‡ 
splitterPos
··  +
+=
··, .
Event
··/ 4
.
··4 5
current
··5 <
.
··< =
delta
··= B
.
··B C
x
··C D
;
··D E
splitterPos
‚‚  +
=
‚‚, -
Mathf
‚‚. 3
.
‚‚3 4
Clamp
‚‚4 9
(
‚‚9 :
splitterPos
‚‚: E
,
‚‚E F
minSideBarWidth
‚‚G V
,
‚‚V W
Screen
‚‚X ^
.
‚‚^ _
width
‚‚_ d
-
‚‚e f
minContentWidth
‚‚g v
)
‚‚v w
;
‚‚w x
Repaint
„„  '
(
„„' (
)
„„( )
;
„„) *
}
‰‰ 
break
ÂÂ !
;
ÂÂ! "
case
ÊÊ 
	EventType
ÊÊ &
.
ÊÊ& '
MouseUp
ÊÊ' .
:
ÊÊ. /
if
ÁÁ 
(
ÁÁ  
dragging
ÁÁ  (
)
ÁÁ( )
{
ËË 
dragging
ÈÈ  (
=
ÈÈ) *
false
ÈÈ+ 0
;
ÈÈ0 1
}
ÍÍ 
break
ÎÎ !
;
ÎÎ! "
}
ÏÏ 
}
ÌÌ 
EditorGUIUtility
ÓÓ  
.
ÓÓ  !
AddCursorRect
ÓÓ! .
(
ÓÓ. /
splitterRect
ÓÓ/ ;
,
ÓÓ; <
MouseCursor
ÓÓ= H
.
ÓÓH I
ResizeHorizontal
ÓÓI Y
)
ÓÓY Z
;
ÓÓZ [
}
ÔÔ 
}
 	
void
ÚÚ 
OnWidgetGUI
ÚÚ 
(
ÚÚ 
DebugUI
ÚÚ  
.
ÚÚ  !
Widget
ÚÚ! '
widget
ÚÚ( .
)
ÚÚ. /
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
widget
ÙÙ 
.
ÙÙ  
isInactiveInEditor
ÙÙ )
)
ÙÙ) *
return
ıı 
;
ıı 

DebugState
˜˜ 
state
˜˜ 
;
˜˜ 
m_WidgetStates
¯¯ 
.
¯¯ 
TryGetValue
¯¯ &
(
¯¯& '
widget
¯¯' -
.
¯¯- .
	queryPath
¯¯. 7
,
¯¯7 8
out
¯¯9 <
state
¯¯= B
)
¯¯B C
;
¯¯C D
DebugUIDrawer
˙˙ 
drawer
˙˙  
;
˙˙  !
if
¸¸ 
(
¸¸ 
!
¸¸ 
s_WidgetDrawerMap
¸¸ "
.
¸¸" #
TryGetValue
¸¸# .
(
¸¸. /
widget
¸¸/ 5
.
¸¸5 6
GetType
¸¸6 =
(
¸¸= >
)
¸¸> ?
,
¸¸? @
out
¸¸A D
drawer
¸¸E K
)
¸¸K L
)
¸¸L M
{
˝˝ 
EditorGUILayout
˛˛ 
.
˛˛  

LabelField
˛˛  *
(
˛˛* +
$str
˛˛+ ?
+
˛˛@ A
widget
˛˛B H
.
˛˛H I
GetType
˛˛I P
(
˛˛P Q
)
˛˛Q R
+
˛˛S T
$str
˛˛U Y
)
˛˛Y Z
;
˛˛Z [
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
drawer
ÇÇ 
.
ÇÇ 
Begin
ÇÇ 
(
ÇÇ 
widget
ÇÇ #
,
ÇÇ# $
state
ÇÇ% *
)
ÇÇ* +
;
ÇÇ+ ,
if
ÑÑ 
(
ÑÑ 
drawer
ÑÑ 
.
ÑÑ 
OnGUI
ÑÑ  
(
ÑÑ  !
widget
ÑÑ! '
,
ÑÑ' (
state
ÑÑ) .
)
ÑÑ. /
)
ÑÑ/ 0
{
ÖÖ 
var
ÜÜ 
	container
ÜÜ !
=
ÜÜ" #
widget
ÜÜ$ *
as
ÜÜ+ -
DebugUI
ÜÜ. 5
.
ÜÜ5 6

IContainer
ÜÜ6 @
;
ÜÜ@ A
if
àà 
(
àà 
	container
àà !
!=
àà" $
null
àà% )
)
àà) *"
TraverseContainerGUI
ââ ,
(
ââ, -
	container
ââ- 6
)
ââ6 7
;
ââ7 8
}
ää 
drawer
åå 
.
åå 
End
åå 
(
åå 
widget
åå !
,
åå! "
state
åå# (
)
åå( )
;
åå) *
}
çç 
}
éé 	
void
êê "
TraverseContainerGUI
êê !
(
êê! "
DebugUI
êê" )
.
êê) *

IContainer
êê* 4
	container
êê5 >
)
êê> ?
{
ëë 	
try
ïï 
{
ññ 
foreach
óó 
(
óó 
var
óó 
widget
óó #
in
óó$ &
	container
óó' 0
.
óó0 1
children
óó1 9
)
óó9 :
OnWidgetGUI
òò 
(
òò  
widget
òò  &
)
òò& '
;
òò' (
}
ôô 
catch
öö 
(
öö '
InvalidOperationException
öö ,
)
öö, -
{
õõ 
Repaint
úú 
(
úú 
)
úú 
;
úú 
}
ùù 
}
ûû 	
public
†† 
class
†† 
Styles
†† 
{
°° 	
public
¢¢ 
static
¢¢ 
float
¢¢ !
s_DefaultLabelWidth
¢¢  3
=
¢¢4 5
$num
¢¢6 :
;
¢¢: ;
public
§§ 
readonly
§§ 
GUIStyle
§§ $
sectionScrollView
§§% 6
=
§§7 8
$str
§§9 P
;
§§P Q
public
•• 
readonly
•• 
GUIStyle
•• $
sectionElement
••% 3
=
••4 5
new
••6 9
GUIStyle
••: B
(
••B C
$str
••C W
)
••W X
;
••X Y
public
¶¶ 
readonly
¶¶ 
GUIStyle
¶¶ $
selected
¶¶% -
=
¶¶. /
$str
¶¶0 @
;
¶¶@ A
public
ßß 
readonly
ßß 
GUIStyle
ßß $
sectionHeader
ßß% 2
=
ßß3 4
new
ßß5 8
GUIStyle
ßß9 A
(
ßßA B
EditorStyles
ßßB N
.
ßßN O

largeLabel
ßßO Y
)
ßßY Z
;
ßßZ [
public
®® 
readonly
®® 
Color
®® !!
skinBackgroundColor
®®" 5
;
®®5 6
public
™™ 
Styles
™™ 
(
™™ 
)
™™ 
{
´´ 
sectionScrollView
¨¨ !
=
¨¨" #
new
¨¨$ '
GUIStyle
¨¨( 0
(
¨¨0 1
sectionScrollView
¨¨1 B
)
¨¨B C
;
¨¨C D
sectionScrollView
≠≠ !
.
≠≠! "
overflow
≠≠" *
.
≠≠* +
bottom
≠≠+ 1
+=
≠≠2 4
$num
≠≠5 6
;
≠≠6 7
sectionElement
ØØ 
.
ØØ 
	alignment
ØØ (
=
ØØ) *

TextAnchor
ØØ+ 5
.
ØØ5 6

MiddleLeft
ØØ6 @
;
ØØ@ A
sectionHeader
±± 
.
±± 
	fontStyle
±± '
=
±±( )
	FontStyle
±±* 3
.
±±3 4
Bold
±±4 8
;
±±8 9
sectionHeader
≤≤ 
.
≤≤ 
fontSize
≤≤ &
=
≤≤' (
$num
≤≤) +
;
≤≤+ ,
sectionHeader
≥≥ 
.
≥≥ 
margin
≥≥ $
.
≥≥$ %
top
≥≥% (
=
≥≥) *
$num
≥≥+ -
;
≥≥- .
sectionHeader
¥¥ 
.
¥¥ 
margin
¥¥ $
.
¥¥$ %
left
¥¥% )
+=
¥¥* ,
$num
¥¥- .
;
¥¥. /
sectionHeader
µµ 
.
µµ 
normal
µµ $
.
µµ$ %
	textColor
µµ% .
=
µµ/ 0
!
µµ1 2
EditorGUIUtility
µµ2 B
.
µµB C
	isProSkin
µµC L
?
∂∂ 
new
∂∂ 
Color
∂∂ 
(
∂∂  
$num
∂∂  $
,
∂∂$ %
$num
∂∂& *
,
∂∂* +
$num
∂∂, 0
,
∂∂0 1
$num
∂∂2 6
)
∂∂6 7
:
∑∑ 
new
∑∑ 
Color
∑∑ 
(
∑∑  
$num
∑∑  $
,
∑∑$ %
$num
∑∑& *
,
∑∑* +
$num
∑∑, 0
,
∑∑0 1
$num
∑∑2 6
)
∑∑6 7
;
∑∑7 8
if
ππ 
(
ππ 
EditorGUIUtility
ππ $
.
ππ$ %
	isProSkin
ππ% .
)
ππ. /
{
∫∫ 
sectionHeader
ªª !
.
ªª! "
normal
ªª" (
.
ªª( )
	textColor
ªª) 2
=
ªª3 4
new
ªª5 8
Color
ªª9 >
(
ªª> ?
$num
ªª? C
,
ªªC D
$num
ªªE I
,
ªªI J
$num
ªªK O
,
ªªO P
$num
ªªQ U
)
ªªU V
;
ªªV W!
skinBackgroundColor
ºº '
=
ºº( )
Color
ºº* /
.
ºº/ 0
gray
ºº0 4
*
ºº5 6
new
ºº7 :
Color
ºº; @
(
ºº@ A
$num
ººA E
,
ººE F
$num
ººG K
,
ººK L
$num
ººM Q
,
ººQ R
$num
ººS W
)
ººW X
;
ººX Y
}
ΩΩ 
else
ææ 
{
øø 
sectionHeader
¿¿ !
.
¿¿! "
normal
¿¿" (
.
¿¿( )
	textColor
¿¿) 2
=
¿¿3 4
new
¿¿5 8
Color
¿¿9 >
(
¿¿> ?
$num
¿¿? C
,
¿¿C D
$num
¿¿E I
,
¿¿I J
$num
¿¿K O
,
¿¿O P
$num
¿¿Q U
)
¿¿U V
;
¿¿V W!
skinBackgroundColor
¡¡ '
=
¡¡( )
Color
¡¡* /
.
¡¡/ 0
gray
¡¡0 4
*
¡¡5 6
new
¡¡7 :
Color
¡¡; @
(
¡¡@ A
$num
¡¡A C
,
¡¡C D
$num
¡¡E G
,
¡¡G H
$num
¡¡I K
,
¡¡K L
$num
¡¡M R
)
¡¡R S
;
¡¡S T
}
¬¬ 
}
√√ 
}
ƒƒ 	
}
≈≈ 
}»» ç÷
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Lighting\IESReader.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
System 
. 
Serializable 
] 
public 

class 
	IESReader 
{ 
string 
m_FileFormatVersion "
;" #
public 
string 
FileFormatVersion '
{ 	
get 
{ 
return 
m_FileFormatVersion ,
;, -
}. /
} 	
float 
m_TotalLumens 
; 
public 
float 
TotalLumens  
{ 	
get 
{ 
return 
m_TotalLumens &
;& '
}( )
} 	
float!! 
m_MaxCandelas!! 
;!! 
public%% 
float%% 
MaxCandelas%%  
{&& 	
get'' 
{'' 
return'' 
m_MaxCandelas'' &
;''& '
}''( )
}(( 	
int** 
m_PhotometricType** 
;** 
public// 
int// 
PhotometricType// "
{00 	
get11 
{11 
return11 
m_PhotometricType11 *
;11* +
}11, -
}22 	

Dictionary44 
<44 
string44 
,44 
string44 !
>44! "
m_KeywordDictionary44# 6
=447 8
new449 <

Dictionary44= G
<44G H
string44H N
,44N O
string44P V
>44V W
(44W X
)44X Y
;44Y Z
int66  
m_VerticalAngleCount66  
;66  !
int77 "
m_HorizontalAngleCount77 "
;77" #
float88 
[88 
]88 
m_VerticalAngles88  
;88  !
float99 
[99 
]99 
m_HorizontalAngles99 "
;99" #
float:: 
[:: 
]:: 
m_CandelaValues:: 
;::  
float<< #
m_MinDeltaVerticalAngle<< %
;<<% &
float== %
m_MinDeltaHorizontalAngle== '
;==' (
float>> "
m_FirstHorizontalAngle>> $
;>>$ %
float?? !
m_LastHorizontalAngle?? #
;??# $
publicJJ 
stringJJ 
ReadFileJJ 
(JJ 
stringJJ %
iesFilePathJJ& 1
)JJ1 2
{KK 	
usingMM 
(MM 
varMM 
	iesReaderMM  
=MM! "
FileMM# '
.MM' (
OpenTextMM( 0
(MM0 1
iesFilePathMM1 <
)MM< =
)MM= >
{NN 
stringOO 
versionLineOO "
=OO# $
	iesReaderOO% .
.OO. /
ReadLineOO/ 7
(OO7 8
)OO8 9
;OO9 :
ifQQ 
(QQ 
versionLineQQ 
==QQ  "
nullQQ# '
)QQ' (
{RR 
returnSS 
$strSS @
;SS@ A
}TT 
switchVV 
(VV 
versionLineVV #
.VV# $
TrimVV$ (
(VV( )
)VV) *
)VV* +
{WW 
caseXX 
$strXX "
:XX" #
m_FileFormatVersionYY +
=YY, -
$strYY. :
;YY: ;
breakZZ 
;ZZ 
case[[ 
$str[[ +
:[[+ ,
m_FileFormatVersion\\ +
=\\, -
$str\\. :
;\\: ;
break]] 
;]] 
case^^ 
$str^^ +
:^^+ ,
m_FileFormatVersion__ +
=__, -
$str__. :
;__: ;
break`` 
;`` 
caseaa 
$straa )
:aa) *
m_FileFormatVersionbb +
=bb, -
$strbb. :
;bb: ;
breakcc 
;cc 
defaultdd 
:dd 
m_FileFormatVersionee +
=ee, -
$stree. :
;ee: ;
breakff 
;ff 
}gg 
varii 
keywordRegexii  
=ii! "
newii# &
Regexii' ,
(ii, -
$strii- T
,iiT U
RegexOptionsiiV b
.iib c
Compilediic k
)iik l
;iil m
varjj 
	tiltRegexjj 
=jj 
newjj  #
Regexjj$ )
(jj) *
$strjj* =
,jj= >
RegexOptionsjj? K
.jjK L
CompiledjjL T
)jjT U
;jjU V
stringll 
currentKeywordll %
=ll& '
stringll( .
.ll. /
Emptyll/ 4
;ll4 5
fornn 
(nn 
stringnn 
keywordLinenn '
=nn( )
(nn* +
m_FileFormatVersionnn+ >
==nn? A
$strnnB N
)nnN O
?nnP Q
versionLinennR ]
:nn^ _
	iesReadernn` i
.nni j
ReadLinennj r
(nnr s
)nns t
;nnt u
truennv z
;nnz {
keywordLine	nn| á
=
nnà â
	iesReader
nnä ì
.
nnì î
ReadLine
nnî ú
(
nnú ù
)
nnù û
)
nnû ü
{oo 
ifpp 
(pp 
keywordLinepp #
==pp$ &
nullpp' +
)pp+ ,
{qq 
returnrr 
$strrr K
;rrK L
}ss 
ifuu 
(uu 
stringuu 
.uu 
IsNullOrWhiteSpaceuu 1
(uu1 2
keywordLineuu2 =
)uu= >
)uu> ?
{vv 
continueww  
;ww  !
}xx 
Matchzz 
keywordMatchzz &
=zz' (
keywordRegexzz) 5
.zz5 6
Matchzz6 ;
(zz; <
keywordLinezz< G
)zzG H
;zzH I
if|| 
(|| 
keywordMatch|| $
.||$ %
Success||% ,
)||, -
{}} 
string~~ 
keyword~~ &
=~~' (
keywordMatch~~) 5
.~~5 6
Groups~~6 <
[~~< =
$str~~= F
]~~F G
.~~G H
Value~~H M
;~~M N
string 
data #
=$ %
keywordMatch& 2
.2 3
Groups3 9
[9 :
$str: @
]@ A
.A B
ValueB G
.G H
TrimH L
(L M
)M N
;N O
if
ÅÅ 
(
ÅÅ 
keyword
ÅÅ #
==
ÅÅ$ &
currentKeyword
ÅÅ' 5
||
ÅÅ6 8
keyword
ÅÅ9 @
==
ÅÅA C
$str
ÅÅD J
)
ÅÅJ K
{
ÇÇ !
m_KeywordDictionary
ÉÉ /
[
ÉÉ/ 0
currentKeyword
ÉÉ0 >
]
ÉÉ> ?
+=
ÉÉ@ B
$"
ÉÉC E
{
ÉÉF G
data
ÉÉG K
}
ÉÉK L
"
ÉÉL M
;
ÉÉM N
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
currentKeyword
àà *
=
àà+ ,
keyword
àà- 4
;
àà4 5!
m_KeywordDictionary
ââ /
[
ââ/ 0
currentKeyword
ââ0 >
]
ââ> ?
=
ââ@ A
data
ââB F
;
ââF G
}
ää 
continue
åå  
;
åå  !
}
çç 
Match
èè 
	tiltMatch
èè #
=
èè$ %
	tiltRegex
èè& /
.
èè/ 0
Match
èè0 5
(
èè5 6
keywordLine
èè6 A
)
èèA B
;
èèB C
if
ëë 
(
ëë 
	tiltMatch
ëë !
.
ëë! "
Success
ëë" )
)
ëë) *
{
íí 
string
ìì 
data
ìì #
=
ìì$ %
	tiltMatch
ìì& /
.
ìì/ 0
Groups
ìì0 6
[
ìì6 7
$str
ìì7 =
]
ìì= >
.
ìì> ?
Value
ìì? D
.
ììD E
Trim
ììE I
(
ììI J
)
ììJ K
;
ììK L
if
ïï 
(
ïï 
data
ïï  
==
ïï! #
$str
ïï$ *
)
ïï* +
{
ññ 
break
óó !
;
óó! "
}
òò 
return
öö 
$"
öö !.
 TILT format not supported: TILT=
öö! A
{
ööA B
data
ööB F
}
ööF G
"
ööG H
;
ööH I
}
õõ 
}
úú 
string
ûû 
[
ûû 
]
ûû 
iesDataTokens
ûû &
=
ûû' (
Regex
ûû) .
.
ûû. /
Split
ûû/ 4
(
ûû4 5
	iesReader
ûû5 >
.
ûû> ?
	ReadToEnd
ûû? H
(
ûûH I
)
ûûI J
.
ûûJ K
Trim
ûûK O
(
ûûO P
)
ûûP Q
,
ûûQ R
$str
ûûS \
)
ûû\ ]
;
ûû] ^
var
üü $
iesDataTokenEnumerator
üü *
=
üü+ ,
iesDataTokens
üü- :
.
üü: ;
GetEnumerator
üü; H
(
üüH I
)
üüI J
;
üüJ K
string
†† 
iesDataToken
†† #
;
††# $
if
££ 
(
££ 
iesDataTokens
££ !
.
££! "
Length
££" (
==
££) +
$num
££, -
&&
££. 0
string
££1 7
.
££7 8 
IsNullOrWhiteSpace
££8 J
(
££J K
iesDataTokens
££K X
[
££X Y
$num
££Y Z
]
££Z [
)
££[ \
)
££\ ]
{
§§ 
return
•• 
$str
•• F
;
••F G
}
¶¶ 
if
®® 
(
®® 
!
®® $
iesDataTokenEnumerator
®® +
.
®®+ ,
MoveNext
®®, 4
(
®®4 5
)
®®5 6
)
®®6 7
{
©© 
return
™™ 
$str
™™ N
;
™™N O
}
´´ 
int
≠≠ 
	lampCount
≠≠ 
;
≠≠ 
iesDataToken
ÆÆ 
=
ÆÆ $
iesDataTokenEnumerator
ÆÆ 5
.
ÆÆ5 6
Current
ÆÆ6 =
.
ÆÆ= >
ToString
ÆÆ> F
(
ÆÆF G
)
ÆÆG H
;
ÆÆH I
if
ØØ 
(
ØØ 
!
ØØ 
int
ØØ 
.
ØØ 
TryParse
ØØ !
(
ØØ! "
iesDataToken
ØØ" .
,
ØØ. /
NumberStyles
ØØ0 <
.
ØØ< =
AllowLeadingSign
ØØ= M
,
ØØM N
CultureInfo
ØØO Z
.
ØØZ [
InvariantCulture
ØØ[ k
,
ØØk l
out
ØØm p
	lampCount
ØØq z
)
ØØz {
)
ØØ{ |
{
∞∞ 
return
±± 
$"
±± (
Invalid lamp count value: 
±± 7
{
±±7 8
iesDataToken
±±8 D
}
±±D E
"
±±E F
;
±±F G
}
≤≤ 
if
≥≥ 
(
≥≥ 
	lampCount
≥≥ 
<
≥≥ 
$num
≥≥  !
)
≥≥! "
	lampCount
≥≥# ,
=
≥≥- .
$num
≥≥/ 0
;
≥≥0 1
if
µµ 
(
µµ 
!
µµ $
iesDataTokenEnumerator
µµ +
.
µµ+ ,
MoveNext
µµ, 4
(
µµ4 5
)
µµ5 6
)
µµ6 7
{
∂∂ 
return
∑∑ 
$str
∑∑ S
;
∑∑S T
}
∏∏ 
float
∫∫ 
lumensPerLamp
∫∫ #
;
∫∫# $
iesDataToken
ªª 
=
ªª $
iesDataTokenEnumerator
ªª 5
.
ªª5 6
Current
ªª6 =
.
ªª= >
ToString
ªª> F
(
ªªF G
)
ªªG H
;
ªªH I
if
ºº 
(
ºº 
!
ºº 
float
ºº 
.
ºº 
TryParse
ºº #
(
ºº# $
iesDataToken
ºº$ 0
,
ºº0 1
NumberStyles
ºº2 >
.
ºº> ?
AllowLeadingSign
ºº? O
|
ººP Q
NumberStyles
ººR ^
.
ºº^ _
AllowDecimalPoint
ºº_ p
,
ººp q
CultureInfo
ººr }
.
ºº} ~
InvariantCultureºº~ é
,ººé è
outººê ì
lumensPerLampººî °
)ºº° ¢
)ºº¢ £
{
ΩΩ 
return
ææ 
$"
ææ -
Invalid lumens per lamp value: 
ææ <
{
ææ< =
iesDataToken
ææ= I
}
ææI J
"
ææJ K
;
ææK L
}
øø 
m_TotalLumens
¿¿ 
=
¿¿ 
(
¿¿  !
lumensPerLamp
¿¿! .
<
¿¿/ 0
$num
¿¿1 3
)
¿¿3 4
?
¿¿5 6
-
¿¿7 8
$num
¿¿8 :
:
¿¿; <
	lampCount
¿¿= F
*
¿¿G H
lumensPerLamp
¿¿I V
;
¿¿V W
if
¬¬ 
(
¬¬ 
!
¬¬ $
iesDataTokenEnumerator
¬¬ +
.
¬¬+ ,
MoveNext
¬¬, 4
(
¬¬4 5
)
¬¬5 6
)
¬¬6 7
{
√√ 
return
ƒƒ 
$str
ƒƒ V
;
ƒƒV W
}
≈≈ 
float
«« 
candelaMultiplier
«« '
;
««' (
iesDataToken
»» 
=
»» $
iesDataTokenEnumerator
»» 5
.
»»5 6
Current
»»6 =
.
»»= >
ToString
»»> F
(
»»F G
)
»»G H
;
»»H I
if
…… 
(
…… 
!
…… 
float
…… 
.
…… 
TryParse
…… #
(
……# $
iesDataToken
……$ 0
,
……0 1
NumberStyles
……2 >
.
……> ?
AllowLeadingSign
……? O
|
……P Q
NumberStyles
……R ^
.
……^ _
AllowDecimalPoint
……_ p
,
……p q
CultureInfo
……r }
.
……} ~
InvariantCulture……~ é
,……é è
out……ê ì!
candelaMultiplier……î •
)……• ¶
)……¶ ß
{
   
return
ÀÀ 
$"
ÀÀ 0
"Invalid candela multiplier value: 
ÀÀ ?
{
ÀÀ? @
iesDataToken
ÀÀ@ L
}
ÀÀL M
"
ÀÀM N
;
ÀÀN O
}
ÃÃ 
if
ÕÕ 
(
ÕÕ 
candelaMultiplier
ÕÕ %
<
ÕÕ& '
$num
ÕÕ( *
)
ÕÕ* +
candelaMultiplier
ÕÕ, =
=
ÕÕ> ?
$num
ÕÕ@ B
;
ÕÕB C
if
œœ 
(
œœ 
!
œœ $
iesDataTokenEnumerator
œœ +
.
œœ+ ,
MoveNext
œœ, 4
(
œœ4 5
)
œœ5 6
)
œœ6 7
{
–– 
return
—— 
$str
—— X
;
——X Y
}
““ 
iesDataToken
‘‘ 
=
‘‘ $
iesDataTokenEnumerator
‘‘ 5
.
‘‘5 6
Current
‘‘6 =
.
‘‘= >
ToString
‘‘> F
(
‘‘F G
)
‘‘G H
;
‘‘H I
if
’’ 
(
’’ 
!
’’ 
int
’’ 
.
’’ 
TryParse
’’ !
(
’’! "
iesDataToken
’’" .
,
’’. /
NumberStyles
’’0 <
.
’’< =
AllowLeadingSign
’’= M
,
’’M N
CultureInfo
’’O Z
.
’’Z [
InvariantCulture
’’[ k
,
’’k l
out
’’m p#
m_VerticalAngleCount’’q Ö
)’’Ö Ü
)’’Ü á
{
÷÷ 
return
◊◊ 
$"
◊◊ 2
$Invalid vertical angle count value: 
◊◊ A
{
◊◊A B
iesDataToken
◊◊B N
}
◊◊N O
"
◊◊O P
;
◊◊P Q
}
ÿÿ 
if
ŸŸ 
(
ŸŸ "
m_VerticalAngleCount
ŸŸ (
<
ŸŸ) *
$num
ŸŸ+ ,
)
ŸŸ, -
{
⁄⁄ 
return
€€ 
$"
€€ 1
#Invalid number of vertical angles: 
€€ @
{
€€@ A"
m_VerticalAngleCount
€€A U
}
€€U V
"
€€V W
;
€€W X
}
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
!
ﬁﬁ $
iesDataTokenEnumerator
ﬁﬁ +
.
ﬁﬁ+ ,
MoveNext
ﬁﬁ, 4
(
ﬁﬁ4 5
)
ﬁﬁ5 6
)
ﬁﬁ6 7
{
ﬂﬂ 
return
‡‡ 
$str
‡‡ Z
;
‡‡Z [
}
·· 
iesDataToken
„„ 
=
„„ $
iesDataTokenEnumerator
„„ 5
.
„„5 6
Current
„„6 =
.
„„= >
ToString
„„> F
(
„„F G
)
„„G H
;
„„H I
if
‰‰ 
(
‰‰ 
!
‰‰ 
int
‰‰ 
.
‰‰ 
TryParse
‰‰ !
(
‰‰! "
iesDataToken
‰‰" .
,
‰‰. /
NumberStyles
‰‰0 <
.
‰‰< =
AllowLeadingSign
‰‰= M
,
‰‰M N
CultureInfo
‰‰O Z
.
‰‰Z [
InvariantCulture
‰‰[ k
,
‰‰k l
out
‰‰m p%
m_HorizontalAngleCount‰‰q á
)‰‰á à
)‰‰à â
{
ÂÂ 
return
ÊÊ 
$"
ÊÊ 4
&Invalid horizontal angle count value: 
ÊÊ C
{
ÊÊC D
iesDataToken
ÊÊD P
}
ÊÊP Q
"
ÊÊQ R
;
ÊÊR S
}
ÁÁ 
if
ËË 
(
ËË $
m_HorizontalAngleCount
ËË *
<
ËË+ ,
$num
ËË- .
)
ËË. /
{
ÈÈ 
return
ÍÍ 
$"
ÍÍ 3
%Invalid number of horizontal angles: 
ÍÍ B
{
ÍÍB C$
m_HorizontalAngleCount
ÍÍC Y
}
ÍÍY Z
"
ÍÍZ [
;
ÍÍ[ \
}
ÎÎ 
if
ÌÌ 
(
ÌÌ 
!
ÌÌ $
iesDataTokenEnumerator
ÌÌ +
.
ÌÌ+ ,
MoveNext
ÌÌ, 4
(
ÌÌ4 5
)
ÌÌ5 6
)
ÌÌ6 7
{
ÓÓ 
return
ÔÔ 
$str
ÔÔ T
;
ÔÔT U
}
 
iesDataToken
ÚÚ 
=
ÚÚ $
iesDataTokenEnumerator
ÚÚ 5
.
ÚÚ5 6
Current
ÚÚ6 =
.
ÚÚ= >
ToString
ÚÚ> F
(
ÚÚF G
)
ÚÚG H
;
ÚÚH I
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 
int
ÛÛ 
.
ÛÛ 
TryParse
ÛÛ !
(
ÛÛ! "
iesDataToken
ÛÛ" .
,
ÛÛ. /
NumberStyles
ÛÛ0 <
.
ÛÛ< =
AllowLeadingSign
ÛÛ= M
,
ÛÛM N
CultureInfo
ÛÛO Z
.
ÛÛZ [
InvariantCulture
ÛÛ[ k
,
ÛÛk l
out
ÛÛm p 
m_PhotometricTypeÛÛq Ç
)ÛÛÇ É
)ÛÛÉ Ñ
{
ÙÙ 
return
ıı 
$"
ıı .
 Invalid photometric type value: 
ıı =
{
ıı= >
iesDataToken
ıı> J
}
ııJ K
"
ııK L
;
ııL M
}
ˆˆ 
if
˜˜ 
(
˜˜ 
m_PhotometricType
˜˜ %
<
˜˜& '
$num
˜˜( )
||
˜˜* ,
m_PhotometricType
˜˜- >
>
˜˜? @
$num
˜˜A B
)
˜˜B C
{
¯¯ 
return
˘˘ 
$"
˘˘ (
Invalid photometric type: 
˘˘ 7
{
˘˘7 8
m_PhotometricType
˘˘8 I
}
˘˘I J
"
˘˘J K
;
˘˘K L
}
˙˙ 
if
˝˝ 
(
˝˝ 
!
˝˝ $
iesDataTokenEnumerator
˝˝ +
.
˝˝+ ,
MoveNext
˝˝, 4
(
˝˝4 5
)
˝˝5 6
)
˝˝6 7
{
˛˛ 
return
ˇˇ 
$str
ˇˇ `
;
ˇˇ` a
}
ÄÄ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ $
iesDataTokenEnumerator
ÉÉ +
.
ÉÉ+ ,
MoveNext
ÉÉ, 4
(
ÉÉ4 5
)
ÉÉ5 6
)
ÉÉ6 7
{
ÑÑ 
return
ÖÖ 
$str
ÖÖ \
;
ÖÖ\ ]
}
ÜÜ 
if
ââ 
(
ââ 
!
ââ $
iesDataTokenEnumerator
ââ +
.
ââ+ ,
MoveNext
ââ, 4
(
ââ4 5
)
ââ5 6
)
ââ6 7
{
ää 
return
ãã 
$str
ãã ]
;
ãã] ^
}
åå 
if
èè 
(
èè 
!
èè $
iesDataTokenEnumerator
èè +
.
èè+ ,
MoveNext
èè, 4
(
èè4 5
)
èè5 6
)
èè6 7
{
êê 
return
ëë 
$str
ëë ]
;
ëë] ^
}
íí 
if
îî 
(
îî 
!
îî $
iesDataTokenEnumerator
îî +
.
îî+ ,
MoveNext
îî, 4
(
îî4 5
)
îî5 6
)
îî6 7
{
ïï 
return
ññ 
$str
ññ R
;
ññR S
}
óó 
float
ôô 
ballastFactor
ôô #
;
ôô# $
iesDataToken
öö 
=
öö $
iesDataTokenEnumerator
öö 5
.
öö5 6
Current
öö6 =
.
öö= >
ToString
öö> F
(
ööF G
)
ööG H
;
ööH I
if
õõ 
(
õõ 
!
õõ 
float
õõ 
.
õõ 
TryParse
õõ #
(
õõ# $
iesDataToken
õõ$ 0
,
õõ0 1
NumberStyles
õõ2 >
.
õõ> ?
AllowLeadingSign
õõ? O
|
õõP Q
NumberStyles
õõR ^
.
õõ^ _
AllowDecimalPoint
õõ_ p
,
õõp q
CultureInfo
õõr }
.
õõ} ~
InvariantCultureõõ~ é
,õõé è
outõõê ì
ballastFactorõõî °
)õõ° ¢
)õõ¢ £
{
úú 
return
ùù 
$"
ùù ,
Invalid ballast factor value: 
ùù ;
{
ùù; <
iesDataToken
ùù< H
}
ùùH I
"
ùùI J
;
ùùJ K
}
ûû 
if
üü 
(
üü 
ballastFactor
üü !
<
üü" #
$num
üü$ &
)
üü& '
ballastFactor
üü( 5
=
üü6 7
$num
üü8 :
;
üü: ;
if
¢¢ 
(
¢¢ 
!
¢¢ $
iesDataTokenEnumerator
¢¢ +
.
¢¢+ ,
MoveNext
¢¢, 4
(
¢¢4 5
)
¢¢5 6
)
¢¢6 7
{
££ 
return
§§ 
$str
§§ N
;
§§N O
}
•• 
if
®® 
(
®® 
!
®® $
iesDataTokenEnumerator
®® +
.
®®+ ,
MoveNext
®®, 4
(
®®4 5
)
®®5 6
)
®®6 7
{
©© 
return
™™ 
$str
™™ O
;
™™O P
}
´´ 
m_VerticalAngles
≠≠  
=
≠≠! "
new
≠≠# &
float
≠≠' ,
[
≠≠, -"
m_VerticalAngleCount
≠≠- A
]
≠≠A B
;
≠≠B C
float
ÆÆ #
previousVerticalAngle
ÆÆ +
=
ÆÆ, -
float
ÆÆ. 3
.
ÆÆ3 4
MinValue
ÆÆ4 <
;
ÆÆ< =%
m_MinDeltaVerticalAngle
∞∞ '
=
∞∞( )
$num
∞∞* .
;
∞∞. /
for
≤≤ 
(
≤≤ 
int
≤≤ 
v
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
v
≤≤  !
<
≤≤" #"
m_VerticalAngleCount
≤≤$ 8
;
≤≤8 9
++
≤≤: <
v
≤≤< =
)
≤≤= >
{
≥≥ 
if
¥¥ 
(
¥¥ 
!
¥¥ $
iesDataTokenEnumerator
¥¥ /
.
¥¥/ 0
MoveNext
¥¥0 8
(
¥¥8 9
)
¥¥9 :
)
¥¥: ;
{
µµ 
return
∂∂ 
$str
∂∂ W
;
∂∂W X
}
∑∑ 
float
ππ 
angle
ππ 
;
ππ  
iesDataToken
∫∫  
=
∫∫! "$
iesDataTokenEnumerator
∫∫# 9
.
∫∫9 :
Current
∫∫: A
.
∫∫A B
ToString
∫∫B J
(
∫∫J K
)
∫∫K L
;
∫∫L M
if
ªª 
(
ªª 
!
ªª 
float
ªª 
.
ªª 
TryParse
ªª '
(
ªª' (
iesDataToken
ªª( 4
,
ªª4 5
NumberStyles
ªª6 B
.
ªªB C
AllowLeadingSign
ªªC S
|
ªªT U
NumberStyles
ªªV b
.
ªªb c
AllowDecimalPoint
ªªc t
,
ªªt u
CultureInfoªªv Å
.ªªÅ Ç 
InvariantCultureªªÇ í
,ªªí ì
outªªî ó
angleªªò ù
)ªªù û
)ªªû ü
{
ºº 
return
ΩΩ 
$"
ΩΩ !,
Invalid vertical angle value: 
ΩΩ! ?
{
ΩΩ? @
iesDataToken
ΩΩ@ L
}
ΩΩL M
"
ΩΩM N
;
ΩΩN O
}
ææ 
if
¿¿ 
(
¿¿ 
angle
¿¿ 
<=
¿¿  #
previousVerticalAngle
¿¿! 6
)
¿¿6 7
{
¡¡ 
return
¬¬ 
$"
¬¬ !?
1Vertical angles are not in ascending order near: 
¬¬! R
{
¬¬R S
angle
¬¬S X
}
¬¬X Y
"
¬¬Y Z
;
¬¬Z [
}
√√ 
float
≈≈  
deltaVerticalAngle
≈≈ ,
=
≈≈- .
angle
≈≈/ 4
-
≈≈5 6#
previousVerticalAngle
≈≈7 L
;
≈≈L M
if
∆∆ 
(
∆∆  
deltaVerticalAngle
∆∆ *
<
∆∆+ ,%
m_MinDeltaVerticalAngle
∆∆- D
)
∆∆D E
{
«« %
m_MinDeltaVerticalAngle
»» /
=
»»0 1 
deltaVerticalAngle
»»2 D
;
»»D E
}
…… 
m_VerticalAngles
ÀÀ $
[
ÀÀ$ %
v
ÀÀ% &
]
ÀÀ& '
=
ÀÀ( )#
previousVerticalAngle
ÀÀ* ?
=
ÀÀ@ A
angle
ÀÀB G
;
ÀÀG H
}
ÃÃ  
m_HorizontalAngles
ŒŒ "
=
ŒŒ# $
new
ŒŒ% (
float
ŒŒ) .
[
ŒŒ. /$
m_HorizontalAngleCount
ŒŒ/ E
]
ŒŒE F
;
ŒŒF G
float
œœ %
previousHorizontalAngle
œœ -
=
œœ. /
float
œœ0 5
.
œœ5 6
MinValue
œœ6 >
;
œœ> ?'
m_MinDeltaHorizontalAngle
—— )
=
——* +
$num
——, 0
;
——0 1
for
”” 
(
”” 
int
”” 
h
”” 
=
”” 
$num
”” 
;
”” 
h
””  !
<
””" #$
m_HorizontalAngleCount
””$ :
;
””: ;
++
””< >
h
””> ?
)
””? @
{
‘‘ 
if
’’ 
(
’’ 
!
’’ $
iesDataTokenEnumerator
’’ /
.
’’/ 0
MoveNext
’’0 8
(
’’8 9
)
’’9 :
)
’’: ;
{
÷÷ 
return
◊◊ 
$str
◊◊ Y
;
◊◊Y Z
}
ÿÿ 
float
⁄⁄ 
angle
⁄⁄ 
;
⁄⁄  
iesDataToken
€€  
=
€€! "$
iesDataTokenEnumerator
€€# 9
.
€€9 :
Current
€€: A
.
€€A B
ToString
€€B J
(
€€J K
)
€€K L
;
€€L M
if
‹‹ 
(
‹‹ 
!
‹‹ 
float
‹‹ 
.
‹‹ 
TryParse
‹‹ '
(
‹‹' (
iesDataToken
‹‹( 4
,
‹‹4 5
NumberStyles
‹‹6 B
.
‹‹B C
AllowLeadingSign
‹‹C S
|
‹‹T U
NumberStyles
‹‹V b
.
‹‹b c
AllowDecimalPoint
‹‹c t
,
‹‹t u
CultureInfo‹‹v Å
.‹‹Å Ç 
InvariantCulture‹‹Ç í
,‹‹í ì
out‹‹î ó
angle‹‹ò ù
)‹‹ù û
)‹‹û ü
{
›› 
return
ﬁﬁ 
$"
ﬁﬁ !.
 Invalid horizontal angle value: 
ﬁﬁ! A
{
ﬁﬁA B
iesDataToken
ﬁﬁB N
}
ﬁﬁN O
"
ﬁﬁO P
;
ﬁﬁP Q
}
ﬂﬂ 
if
·· 
(
·· 
angle
·· 
<=
··  %
previousHorizontalAngle
··! 8
)
··8 9
{
‚‚ 
return
„„ 
$"
„„ !A
3Horizontal angles are not in ascending order near: 
„„! T
{
„„T U
angle
„„U Z
}
„„Z [
"
„„[ \
;
„„\ ]
}
‰‰ 
float
ÊÊ "
deltaHorizontalAngle
ÊÊ .
=
ÊÊ/ 0
angle
ÊÊ1 6
-
ÊÊ7 8%
previousHorizontalAngle
ÊÊ9 P
;
ÊÊP Q
if
ÁÁ 
(
ÁÁ "
deltaHorizontalAngle
ÁÁ ,
<
ÁÁ- .'
m_MinDeltaHorizontalAngle
ÁÁ/ H
)
ÁÁH I
{
ËË '
m_MinDeltaHorizontalAngle
ÈÈ 1
=
ÈÈ2 3"
deltaHorizontalAngle
ÈÈ4 H
;
ÈÈH I
}
ÍÍ  
m_HorizontalAngles
ÏÏ &
[
ÏÏ& '
h
ÏÏ' (
]
ÏÏ( )
=
ÏÏ* +%
previousHorizontalAngle
ÏÏ, C
=
ÏÏD E
angle
ÏÏF K
;
ÏÏK L
}
ÌÌ $
m_FirstHorizontalAngle
ÔÔ &
=
ÔÔ' ( 
m_HorizontalAngles
ÔÔ) ;
[
ÔÔ; <
$num
ÔÔ< =
]
ÔÔ= >
;
ÔÔ> ?#
m_LastHorizontalAngle
 %
=
& ' 
m_HorizontalAngles
( :
[
: ;$
m_HorizontalAngleCount
; Q
-
R S
$num
T U
]
U V
;
V W
m_CandelaValues
ÚÚ 
=
ÚÚ  !
new
ÚÚ" %
float
ÚÚ& +
[
ÚÚ+ ,$
m_HorizontalAngleCount
ÚÚ, B
*
ÚÚC D"
m_VerticalAngleCount
ÚÚE Y
]
ÚÚY Z
;
ÚÚZ [
m_MaxCandelas
ÛÛ 
=
ÛÛ 
$num
ÛÛ  "
;
ÛÛ" #
for
ıı 
(
ıı 
int
ıı 
h
ıı 
=
ıı 
$num
ıı 
;
ıı 
h
ıı  !
<
ıı" #$
m_HorizontalAngleCount
ıı$ :
;
ıı: ;
++
ıı< >
h
ıı> ?
)
ıı? @
{
ˆˆ 
for
˜˜ 
(
˜˜ 
int
˜˜ 
v
˜˜ 
=
˜˜  
$num
˜˜! "
;
˜˜" #
v
˜˜$ %
<
˜˜& '"
m_VerticalAngleCount
˜˜( <
;
˜˜< =
++
˜˜> @
v
˜˜@ A
)
˜˜A B
{
¯¯ 
if
˘˘ 
(
˘˘ 
!
˘˘ $
iesDataTokenEnumerator
˘˘ 3
.
˘˘3 4
MoveNext
˘˘4 <
(
˘˘< =
)
˘˘= >
)
˘˘> ?
{
˙˙ 
return
˚˚ "
$str
˚˚# T
;
˚˚T U
}
¸¸ 
float
˛˛ 
value
˛˛ #
;
˛˛# $
iesDataToken
ˇˇ $
=
ˇˇ% &$
iesDataTokenEnumerator
ˇˇ' =
.
ˇˇ= >
Current
ˇˇ> E
.
ˇˇE F
ToString
ˇˇF N
(
ˇˇN O
)
ˇˇO P
;
ˇˇP Q
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
float
ÄÄ "
.
ÄÄ" #
TryParse
ÄÄ# +
(
ÄÄ+ ,
iesDataToken
ÄÄ, 8
,
ÄÄ8 9
NumberStyles
ÄÄ: F
.
ÄÄF G
AllowLeadingSign
ÄÄG W
|
ÄÄX Y
NumberStyles
ÄÄZ f
.
ÄÄf g
AllowDecimalPoint
ÄÄg x
,
ÄÄx y
CultureInfoÄÄz Ö
.ÄÄÖ Ü 
InvariantCultureÄÄÜ ñ
,ÄÄñ ó
outÄÄò õ
valueÄÄú °
)ÄÄ° ¢
)ÄÄ¢ £
{
ÅÅ 
return
ÇÇ "
$"
ÇÇ# %%
Invalid candela value: 
ÇÇ% <
{
ÇÇ< =
iesDataToken
ÇÇ= I
}
ÇÇI J
"
ÇÇJ K
;
ÇÇK L
}
ÉÉ 
value
ÑÑ 
*=
ÑÑ  
candelaMultiplier
ÑÑ! 2
*
ÑÑ3 4
ballastFactor
ÑÑ5 B
;
ÑÑB C
m_CandelaValues
ÜÜ '
[
ÜÜ' (
h
ÜÜ( )
*
ÜÜ* +"
m_VerticalAngleCount
ÜÜ, @
+
ÜÜA B
v
ÜÜC D
]
ÜÜD E
=
ÜÜF G
value
ÜÜH M
;
ÜÜM N
if
àà 
(
àà 
value
àà !
>
àà" #
m_MaxCandelas
àà$ 1
)
àà1 2
{
ââ 
m_MaxCandelas
ää )
=
ää* +
value
ää, 1
;
ää1 2
}
ãã 
}
åå 
}
çç 
}
éé 
return
êê 
null
êê 
;
êê 
}
ëë 	
internal
ìì 
string
ìì 
GetKeywordValue
ìì '
(
ìì' (
string
ìì( .
keyword
ìì/ 6
)
ìì6 7
{
îî 	
return
ïï !
m_KeywordDictionary
ïï &
.
ïï& '
ContainsKey
ïï' 2
(
ïï2 3
keyword
ïï3 :
)
ïï: ;
?
ïï< =!
m_KeywordDictionary
ïï> Q
[
ïïQ R
keyword
ïïR Y
]
ïïY Z
:
ïï[ \
string
ïï] c
.
ïïc d
Empty
ïïd i
;
ïïi j
}
ññ 	
internal
òò 
int
òò '
GetMinVerticalSampleCount
òò .
(
òò. /
)
òò/ 0
{
ôô 	
if
öö 
(
öö 
m_PhotometricType
öö !
==
öö" $
$num
öö% &
)
öö& '
{
õõ 
return
ùù 
$num
ùù 
+
ùù 
(
ùù 
int
ùù 
)
ùù  
Mathf
ùù  %
.
ùù% &
Ceil
ùù& *
(
ùù* +
$num
ùù+ .
/
ùù/ 0'
m_MinDeltaHorizontalAngle
ùù1 J
)
ùùJ K
;
ùùK L
}
ûû 
else
üü 
{
†† 
return
°° 
$num
°° 
+
°° 
(
°° 
int
°° 
)
°°  
Mathf
°°  %
.
°°% &
Ceil
°°& *
(
°°* +
$num
°°+ .
/
°°/ 0%
m_MinDeltaVerticalAngle
°°1 H
)
°°H I
;
°°I J
}
¢¢ 
}
££ 	
internal
•• 
int
•• )
GetMinHorizontalSampleCount
•• 0
(
••0 1
)
••1 2
{
¶¶ 	
switch
ßß 
(
ßß 
m_PhotometricType
ßß %
)
ßß% &
{
®® 
case
©© 
$num
©© 
:
©© 
return
™™ 
$num
™™ 
+
™™ 
(
™™  
int
™™  #
)
™™# $
Mathf
™™$ )
.
™™) *
Ceil
™™* .
(
™™. /
$num
™™/ 2
/
™™3 4'
m_MinDeltaHorizontalAngle
™™5 N
)
™™N O
;
™™O P
case
´´ 
$num
´´ 
:
´´ 
return
≠≠ 
$num
≠≠ 
+
≠≠ 
(
≠≠  
int
≠≠  #
)
≠≠# $
Mathf
≠≠$ )
.
≠≠) *
Ceil
≠≠* .
(
≠≠. /
$num
≠≠/ 2
/
≠≠3 4%
m_MinDeltaVerticalAngle
≠≠5 L
)
≠≠L M
;
≠≠M N
default
ÆÆ 
:
ÆÆ 
return
∞∞ 
$num
∞∞ 
+
∞∞ 
(
∞∞  
int
∞∞  #
)
∞∞# $
Mathf
∞∞$ )
.
∞∞) *
Ceil
∞∞* .
(
∞∞. /
$num
∞∞/ 2
/
∞∞3 4
Mathf
∞∞5 :
.
∞∞: ;
Min
∞∞; >
(
∞∞> ?'
m_MinDeltaHorizontalAngle
∞∞? X
,
∞∞X Y%
m_MinDeltaVerticalAngle
∞∞Z q
)
∞∞q r
)
∞∞r s
;
∞∞s t
}
±± 
}
≤≤ 	
internal
¥¥ 
float
¥¥ *
ComputeVerticalAnglePosition
¥¥ 3
(
¥¥3 4
float
¥¥4 9
angle
¥¥: ?
)
¥¥? @
{
µµ 	
return
∂∂ "
ComputeAnglePosition
∂∂ '
(
∂∂' (
angle
∂∂( -
,
∂∂- .
m_VerticalAngles
∂∂/ ?
)
∂∂? @
;
∂∂@ A
}
∑∑ 	
internal
ππ 
float
ππ 4
&ComputeTypeAorBHorizontalAnglePosition
ππ =
(
ππ= >
float
ππ> C
angle
ππD I
)
ππI J
{
∫∫ 	
return
ªª "
ComputeAnglePosition
ªª '
(
ªª' (
(
ªª( )
(
ªª) *$
m_FirstHorizontalAngle
ªª* @
==
ªªA C
$num
ªªD F
)
ªªF G
?
ªªH I
Mathf
ªªJ O
.
ªªO P
Abs
ªªP S
(
ªªS T
angle
ªªT Y
)
ªªY Z
:
ªª[ \
angle
ªª] b
)
ªªb c
,
ªªc d 
m_HorizontalAngles
ªªe w
)
ªªw x
;
ªªx y
}
ºº 	
internal
ææ 
float
ææ 1
#ComputeTypeCHorizontalAnglePosition
ææ :
(
ææ: ;
float
ææ; @
angle
ææA F
)
ææF G
{
øø 	
switch
¿¿ 
(
¿¿ #
m_LastHorizontalAngle
¿¿ )
)
¿¿) *
{
¡¡ 
case
¬¬ 
$num
¬¬ 
:
¬¬ 
angle
√√ 
=
√√ 
$num
√√ 
;
√√ 
break
ƒƒ 
;
ƒƒ 
case
≈≈ 
$num
≈≈ 
:
≈≈ 
angle
∆∆ 
=
∆∆ 
$num
∆∆ 
-
∆∆  !
Mathf
∆∆" '
.
∆∆' (
Abs
∆∆( +
(
∆∆+ ,
Mathf
∆∆, 1
.
∆∆1 2
Abs
∆∆2 5
(
∆∆5 6
angle
∆∆6 ;
-
∆∆< =
$num
∆∆> B
)
∆∆B C
-
∆∆D E
$num
∆∆F I
)
∆∆I J
;
∆∆J K
break
«« 
;
«« 
case
»» 
$num
»» 
:
»» 
angle
…… 
=
…… 
$num
……  
-
……! "
Mathf
……# (
.
……( )
Abs
……) ,
(
……, -
angle
……- 2
-
……3 4
$num
……5 9
)
……9 :
;
……: ;
break
   
;
   
default
ÀÀ 
:
ÀÀ 
break
ÃÃ 
;
ÃÃ 
}
ÕÕ 
return
œœ "
ComputeAnglePosition
œœ '
(
œœ' (
angle
œœ( -
,
œœ- . 
m_HorizontalAngles
œœ/ A
)
œœA B
;
œœB C
}
–– 	
internal
““ 
float
““ "
ComputeAnglePosition
““ +
(
““+ ,
float
““, 1
value
““2 7
,
““7 8
float
““9 >
[
““> ?
]
““? @
angles
““A G
)
““G H
{
”” 	
int
‘‘ 
start
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
int
’’ 
end
’’ 
=
’’ 
angles
’’ 
.
’’ 
Length
’’ #
-
’’$ %
$num
’’& '
;
’’' (
if
◊◊ 
(
◊◊ 
value
◊◊ 
<
◊◊ 
angles
◊◊ 
[
◊◊ 
start
◊◊ $
]
◊◊$ %
)
◊◊% &
{
ÿÿ 
return
ŸŸ 
start
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
if
‹‹ 
(
‹‹ 
value
‹‹ 
>
‹‹ 
angles
‹‹ 
[
‹‹ 
end
‹‹ "
]
‹‹" #
)
‹‹# $
{
›› 
return
ﬁﬁ 
end
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
while
·· 
(
·· 
start
·· 
<
·· 
end
·· 
)
·· 
{
‚‚ 
int
„„ 
index
„„ 
=
„„ 
(
„„ 
start
„„ "
+
„„# $
end
„„% (
+
„„) *
$num
„„+ ,
)
„„, -
/
„„. /
$num
„„0 1
;
„„1 2
float
ÂÂ 
angle
ÂÂ 
=
ÂÂ 
angles
ÂÂ $
[
ÂÂ$ %
index
ÂÂ% *
]
ÂÂ* +
;
ÂÂ+ ,
if
ÁÁ 
(
ÁÁ 
value
ÁÁ 
>=
ÁÁ 
angle
ÁÁ "
)
ÁÁ" #
{
ËË 
start
ÈÈ 
=
ÈÈ 
index
ÈÈ !
;
ÈÈ! "
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
end
ÌÌ 
=
ÌÌ 
index
ÌÌ 
-
ÌÌ  !
$num
ÌÌ" #
;
ÌÌ# $
}
ÓÓ 
}
ÔÔ 
float
ÒÒ 
	leftValue
ÒÒ 
=
ÒÒ 
angles
ÒÒ $
[
ÒÒ$ %
start
ÒÒ% *
]
ÒÒ* +
;
ÒÒ+ ,
float
ÚÚ 
fraction
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ  
if
ÙÙ 
(
ÙÙ 
start
ÙÙ 
+
ÙÙ 
$num
ÙÙ 
<
ÙÙ 
angles
ÙÙ "
.
ÙÙ" #
Length
ÙÙ# )
)
ÙÙ) *
{
ıı 
float
ˆˆ 

rightValue
ˆˆ  
=
ˆˆ! "
angles
ˆˆ# )
[
ˆˆ) *
start
ˆˆ* /
+
ˆˆ0 1
$num
ˆˆ2 3
]
ˆˆ3 4
;
ˆˆ4 5
float
˜˜ 

deltaValue
˜˜  
=
˜˜! "

rightValue
˜˜# -
-
˜˜. /
	leftValue
˜˜0 9
;
˜˜9 :
if
˘˘ 
(
˘˘ 

deltaValue
˘˘ 
>
˘˘  
$num
˘˘! (
)
˘˘( )
{
˙˙ 
fraction
˚˚ 
=
˚˚ 
(
˚˚  
value
˚˚  %
-
˚˚& '
	leftValue
˚˚( 1
)
˚˚1 2
/
˚˚3 4

deltaValue
˚˚5 ?
;
˚˚? @
}
¸¸ 
}
˝˝ 
return
ˇˇ 
start
ˇˇ 
+
ˇˇ 
fraction
ˇˇ #
;
ˇˇ# $
}
ÄÄ 	
internal
ÇÇ 
float
ÇÇ !
InterpolateBilinear
ÇÇ *
(
ÇÇ* +
float
ÇÇ+ 0
x
ÇÇ1 2
,
ÇÇ2 3
float
ÇÇ4 9
y
ÇÇ: ;
)
ÇÇ; <
{
ÉÉ 	
int
ÑÑ 
ix
ÑÑ 
=
ÑÑ 
(
ÑÑ 
int
ÑÑ 
)
ÑÑ 
Mathf
ÑÑ 
.
ÑÑ  
Floor
ÑÑ  %
(
ÑÑ% &
x
ÑÑ& '
)
ÑÑ' (
;
ÑÑ( )
int
ÖÖ 
iy
ÖÖ 
=
ÖÖ 
(
ÖÖ 
int
ÖÖ 
)
ÖÖ 
Mathf
ÖÖ 
.
ÖÖ  
Floor
ÖÖ  %
(
ÖÖ% &
y
ÖÖ& '
)
ÖÖ' (
;
ÖÖ( )
float
áá 
	fractionX
áá 
=
áá 
x
áá 
-
áá  !
ix
áá" $
;
áá$ %
float
àà 
	fractionY
àà 
=
àà 
y
àà 
-
àà  !
iy
àà" $
;
àà$ %
float
ää 
p00
ää 
=
ää 
InterpolatePoint
ää (
(
ää( )
ix
ää) +
+
ää, -
$num
ää. /
,
ää/ 0
iy
ää1 3
+
ää4 5
$num
ää6 7
)
ää7 8
;
ää8 9
float
ãã 
p10
ãã 
=
ãã 
InterpolatePoint
ãã (
(
ãã( )
ix
ãã) +
+
ãã, -
$num
ãã. /
,
ãã/ 0
iy
ãã1 3
+
ãã4 5
$num
ãã6 7
)
ãã7 8
;
ãã8 9
float
åå 
p01
åå 
=
åå 
InterpolatePoint
åå (
(
åå( )
ix
åå) +
+
åå, -
$num
åå. /
,
åå/ 0
iy
åå1 3
+
åå4 5
$num
åå6 7
)
åå7 8
;
åå8 9
float
çç 
p11
çç 
=
çç 
InterpolatePoint
çç (
(
çç( )
ix
çç) +
+
çç, -
$num
çç. /
,
çç/ 0
iy
çç1 3
+
çç4 5
$num
çç6 7
)
çç7 8
;
çç8 9
float
èè 
p0
èè 
=
èè 
Mathf
èè 
.
èè 
Lerp
èè !
(
èè! "
p00
èè" %
,
èè% &
p01
èè' *
,
èè* +
	fractionY
èè, 5
)
èè5 6
;
èè6 7
float
êê 
p1
êê 
=
êê 
Mathf
êê 
.
êê 
Lerp
êê !
(
êê! "
p10
êê" %
,
êê% &
p11
êê' *
,
êê* +
	fractionY
êê, 5
)
êê5 6
;
êê6 7
return
íí 
Mathf
íí 
.
íí 
Lerp
íí 
(
íí 
p0
íí  
,
íí  !
p1
íí" $
,
íí$ %
	fractionX
íí& /
)
íí/ 0
;
íí0 1
}
ìì 	
internal
ïï 
float
ïï 
InterpolatePoint
ïï '
(
ïï' (
int
ïï( +
x
ïï, -
,
ïï- .
int
ïï/ 2
y
ïï3 4
)
ïï4 5
{
ññ 	
x
óó 
%=
óó  
m_HorizontalAngles
óó #
.
óó# $
Length
óó$ *
;
óó* +
y
òò 
%=
òò 
m_VerticalAngles
òò !
.
òò! "
Length
òò" (
;
òò( )
return
öö 
m_CandelaValues
öö "
[
öö" #
y
öö# $
+
öö% &
x
öö' (
*
öö) *
m_VerticalAngles
öö+ ;
.
öö; <
Length
öö< B
]
ööB C
;
ööC D
}
õõ 	
}
úú 
}ùù ¡-
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\PropertyFetcher.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

sealed 
class 
PropertyFetcher '
<' (
T( )
>) *
:+ ,
IDisposable- 8
{ 
public 
readonly 
SerializedObject (
obj) ,
;, -
public 
PropertyFetcher 
( 
SerializedObject /
obj0 3
)3 4
{ 	
Assert 
. 
	IsNotNull 
( 
obj  
)  !
;! "
this 
. 
obj 
= 
obj 
; 
} 	
public!! 
SerializedProperty!! !
Find!!" &
(!!& '
string!!' -
str!!. 1
)!!1 2
{"" 	
return## 
obj## 
.## 
FindProperty## #
(### $
str##$ '
)##' (
;##( )
}$$ 	
public00 
SerializedProperty00 !
Find00" &
<00& '
TValue00' -
>00- .
(00. /

Expression00/ 9
<009 :
Func00: >
<00> ?
T00? @
,00@ A
TValue00B H
>00H I
>00I J
expr00K O
)00O P
{11 	
string22 
path22 
=22 
CoreEditorUtils22 )
.22) *
FindProperty22* 6
(226 7
expr227 ;
)22; <
;22< =
return33 
obj33 
.33 
FindProperty33 #
(33# $
path33$ (
)33( )
;33) *
}44 	
public99 
void99 
Dispose99 
(99 
)99 
{:: 	
}<< 	
}== 
publicCC 

sealedCC 
classCC #
RelativePropertyFetcherCC /
<CC/ 0
TCC0 1
>CC1 2
:CC3 4
IDisposableCC5 @
{DD 
publicHH 
readonlyHH 
SerializedPropertyHH *
objHH+ .
;HH. /
publicNN #
RelativePropertyFetcherNN &
(NN& '
SerializedPropertyNN' 9
objNN: =
)NN= >
{OO 	
AssertPP 
.PP 
	IsNotNullPP 
(PP 
objPP  
)PP  !
;PP! "
thisQQ 
.QQ 
objQQ 
=QQ 
objQQ 
;QQ 
}RR 	
publicYY 
SerializedPropertyYY !
FindYY" &
(YY& '
stringYY' -
strYY. 1
)YY1 2
{ZZ 	
return[[ 
obj[[ 
.[[  
FindPropertyRelative[[ +
([[+ ,
str[[, /
)[[/ 0
;[[0 1
}\\ 	
publichh 
SerializedPropertyhh !
Findhh" &
<hh& '
TValuehh' -
>hh- .
(hh. /

Expressionhh/ 9
<hh9 :
Funchh: >
<hh> ?
Thh? @
,hh@ A
TValuehhB H
>hhH I
>hhI J
exprhhK O
)hhO P
{ii 	
stringjj 
pathjj 
=jj 
CoreEditorUtilsjj )
.jj) *
FindPropertyjj* 6
(jj6 7
exprjj7 ;
)jj; <
;jj< =
returnkk 
objkk 
.kk  
FindPropertyRelativekk +
(kk+ ,
pathkk, 0
)kk0 1
;kk1 2
}ll 	
publicqq 
voidqq 
Disposeqq 
(qq 
)qq 
{rr 	
}tt 	
}uu 
publiczz 

staticzz 
classzz %
PropertyFetcherExtensionszz 1
{{{ 
public
ÑÑ 
static
ÑÑ  
SerializedProperty
ÑÑ (
Find
ÑÑ) -
<
ÑÑ- .
TSource
ÑÑ. 5
,
ÑÑ5 6
TValue
ÑÑ7 =
>
ÑÑ= >
(
ÑÑ> ?
this
ÑÑ? C
SerializedObject
ÑÑD T
obj
ÑÑU X
,
ÑÑX Y

Expression
ÑÑZ d
<
ÑÑd e
Func
ÑÑe i
<
ÑÑi j
TSource
ÑÑj q
,
ÑÑq r
TValue
ÑÑs y
>
ÑÑy z
>
ÑÑz {
exprÑÑ| Ä
)ÑÑÄ Å
{
ÖÖ 	
var
ÜÜ 
path
ÜÜ 
=
ÜÜ 
CoreEditorUtils
ÜÜ &
.
ÜÜ& '
FindProperty
ÜÜ' 3
(
ÜÜ3 4
expr
ÜÜ4 8
)
ÜÜ8 9
;
ÜÜ9 :
return
áá 
obj
áá 
.
áá 
FindProperty
áá #
(
áá# $
path
áá$ (
)
áá( )
;
áá) *
}
àà 	
public
íí 
static
íí  
SerializedProperty
íí (
Find
íí) -
<
íí- .
TSource
íí. 5
,
íí5 6
TValue
íí7 =
>
íí= >
(
íí> ?
this
íí? C 
SerializedProperty
ííD V
obj
ííW Z
,
ííZ [

Expression
íí\ f
<
ííf g
Func
ííg k
<
íík l
TSource
ííl s
,
íís t
TValue
ííu {
>
íí{ |
>
íí| }
expríí~ Ç
)ííÇ É
{
ìì 	
var
îî 
path
îî 
=
îî 
CoreEditorUtils
îî &
.
îî& '
FindProperty
îî' 3
(
îî3 4
expr
îî4 8
)
îî8 9
;
îî9 :
return
ïï 
obj
ïï 
.
ïï "
FindPropertyRelative
ïï +
(
ïï+ ,
path
ïï, 0
)
ïï0 1
;
ïï1 2
}
ññ 	
}
óó 
}òò «á
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\Compositor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
enum !
ShadowCompositionPass	 
{		 
MainView

 
,

 

ShadowMask 
} 
enum 
CompositionFinal	 
{ 
First 
, 
Second 
} 
class 	
RenderTextureCache
 
: 
IDisposable *
{ 
const 
int 
k_PassPerViewCount $
=% &
$num' (
;( )
const 
int 
k_ViewCount 
= 
$num  !
;! "
const 
int 
k_TextureCacheSize $
=% &
k_PassPerViewCount' 9
*: ;
k_ViewCount< G
;G H
RenderTexture   
[   
]   
m_RTs   
=   
new    #
RenderTexture  $ 1
[  1 2
k_TextureCacheSize  2 D
]  D E
;  E F
public"" 
RenderTexture"" 
this"" !
[""! "
	ViewIndex""" +
index"", 1
,""1 2!
ShadowCompositionPass""3 H
	passIndex""I R
]""R S
{## 	
get$$ 
=>$$ 
m_RTs$$ 
[$$ 
computeIndex$$ %
($$% &
index$$& +
,$$+ ,
	passIndex$$- 6
)$$6 7
]$$7 8
;$$8 9
set%% 
=>%% 
m_RTs%% 
[%% 
computeIndex%% %
(%%% &
index%%& +
,%%+ ,
	passIndex%%- 6
)%%6 7
]%%7 8
=%%9 :
value%%; @
;%%@ A
}&& 	
public(( 
RenderTexture(( 
this(( !
[((! "
CompositionFinal((" 2
index((3 8
]((8 9
{)) 	
get** 
=>** 
m_RTs** 
[** 
computeIndex** %
(**% &
index**& +
)**+ ,
]**, -
;**- .
set++ 
=>++ 
m_RTs++ 
[++ 
computeIndex++ %
(++% &
index++& +
)+++ ,
]++, -
=++. /
value++0 5
;++5 6
},, 	
int.. 
computeIndex.. 
(.. 
	ViewIndex.. "
index..# (
,..( )!
ShadowCompositionPass..* ?
	passIndex..@ I
)..I J
=>// 
(// 
int// 
)// 
index// 
*// 
k_PassPerViewCount// .
+/// 0
(//1 2
int//2 5
)//5 6
(//6 7
	passIndex//7 @
)//@ A
;//A B
int00 
computeIndex00 
(00 
CompositionFinal00 )
index00* /
)00/ 0
=>11 
(11 
k_PassPerViewCount11 "
-11" #
$num11# $
)11$ %
+11& '
(11( )
int11) ,
)11, -
(11- .
index11. 3
)113 4
*115 6
k_PassPerViewCount117 I
;11I J
void33 

UpdateSize33 
(33 
int33 
index33 !
,33! "
Rect33# '
rect33( ,
,33, -
bool33. 2
pixelPerfect333 ?
,33? @
Camera33A G
renderingCamera33H W
,33W X
string33Y _
renderDocName33` m
=33n o
$str33p {
)33{ |
{44 	
bool55 
nullRect55 
=55 
rect55  
.55  !
IsNullOrInverted55! 1
(551 2
)552 3
;553 4
GraphicsFormat77 
format77 !
=77" #

SystemInfo77$ .
.77. /
IsFormatSupported77/ @
(77@ A
GraphicsFormat77A O
.77O P
R16G16B16A16_SFloat77P c
,77c d
FormatUsage77e p
.77p q
Render77q w
)77w x
?88 
GraphicsFormat88  
.88  !
R16G16B16A16_SFloat88! 4
:99 

SystemInfo99 
.99 
GetGraphicsFormat99 .
(99. /
DefaultFormat99/ <
.99< =
LDR99= @
)99@ A
;99A B
if:: 
(:: 
m_RTs:: 
[:: 
index:: 
]:: 
!=:: 
null::  $
&&::% '
(::( )
nullRect::) 1
||::2 4
m_RTs::5 :
[::: ;
index::; @
]::@ A
.::A B
graphicsFormat::B P
!=::Q S
format::T Z
)::Z [
)::[ \
{;; 
m_RTs<< 
[<< 
index<< 
]<< 
.<< 
Release<< $
(<<$ %
)<<% &
;<<& '
UnityEngine== 
.== 
Object== "
.==" #
DestroyImmediate==# 3
(==3 4
m_RTs==4 9
[==9 :
index==: ?
]==? @
)==@ A
;==A B
m_RTs>> 
[>> 
index>> 
]>> 
=>> 
null>> #
;>># $
}?? 
if@@ 
(@@ 
nullRect@@ 
)@@ 
returnAA 
;AA 
intCC 
widthCC 
=CC 
(CC 
intCC 
)CC 
rectCC !
.CC! "
widthCC" '
;CC' (
intDD 
heightDD 
=DD 
(DD 
intDD 
)DD 
rectDD "
.DD" #
heightDD# )
;DD) *
ifFF 
(FF 
m_RTsFF 
[FF 
indexFF 
]FF 
==FF 
nullFF  $
)FF$ %
{GG 
m_RTsHH 
[HH 
indexHH 
]HH 
=HH 
newHH "
RenderTextureHH# 0
(HH0 1
$numHH1 2
,HH2 3
$numHH4 5
,HH5 6
$numHH7 9
,HH9 :
formatHH; A
)HHA B
;HHB C
m_RTsII 
[II 
indexII 
]II 
.II 
nameII !
=II" #
renderDocNameII$ 1
;II1 2
m_RTsJJ 
[JJ 
indexJJ 
]JJ 
.JJ 
antiAliasingJJ )
=JJ* +
$numJJ, -
;JJ- .
m_RTsKK 
[KK 
indexKK 
]KK 
.KK 
	hideFlagsKK &
=KK' (
	HideFlagsKK) 2
.KK2 3
HideAndDontSaveKK3 B
;KKB C
}LL 
ifNN 
(NN 
m_RTsNN 
[NN 
indexNN 
]NN 
.NN 
widthNN "
!=NN# %
widthNN& +
||NN, .
m_RTsNN/ 4
[NN4 5
indexNN5 :
]NN: ;
.NN; <
heightNN< B
!=NNC E
heightNNF L
)NNL M
{OO 
m_RTsPP 
[PP 
indexPP 
]PP 
.PP 
ReleasePP $
(PP$ %
)PP% &
;PP& '
m_RTsQQ 
[QQ 
indexQQ 
]QQ 
.QQ 
widthQQ "
=QQ# $
widthQQ% *
;QQ* +
m_RTsRR 
[RR 
indexRR 
]RR 
.RR 
heightRR #
=RR$ %
heightRR& ,
;RR, -
m_RTsSS 
[SS 
indexSS 
]SS 
.SS 
CreateSS #
(SS# $
)SS$ %
;SS% &
}TT 
ifVV 
(VV 
renderingCameraVV 
!=VV  "
nullVV# '
)VV' (
renderingCameraWW 
.WW  
targetTextureWW  -
=WW. /
m_RTsWW0 5
[WW5 6
indexWW6 ;
]WW; <
;WW< =
}XX 	
publicZZ 
voidZZ 

UpdateSizeZZ 
(ZZ 
RectZZ #
rectZZ$ (
,ZZ( )
	ViewIndexZZ* 3
indexZZ4 9
,ZZ9 :
boolZZ; ?
pixelPerfectZZ@ L
,ZZL M
CameraZZN T
renderingCameraZZU d
)ZZd e
{[[ 	

UpdateSize\\ 
(\\ 
computeIndex\\ #
(\\# $
index\\$ )
,\\) *!
ShadowCompositionPass\\+ @
.\\@ A
MainView\\A I
)\\I J
,\\J K
rect\\L P
,\\P Q
pixelPerfect\\R ^
,\\^ _
renderingCamera\\` o
,\\o p
$"\\q s

LookDevRT-\\s }
{\\} ~
index	\\~ É
}
\\É Ñ
	-MainView
\\Ñ ç
"
\\ç é
)
\\é è
;
\\è ê

UpdateSize]] 
(]] 
computeIndex]] #
(]]# $
index]]$ )
,]]) *!
ShadowCompositionPass]]+ @
.]]@ A

ShadowMask]]A K
)]]K L
,]]L M
rect]]N R
,]]R S
pixelPerfect]]T `
,]]` a
renderingCamera]]b q
,]]q r
$"]]s u

LookDevRT-]]u 
{	]] Ä
index
]]Ä Ö
}
]]Ö Ü
-ShadowMask
]]Ü ë
"
]]ë í
)
]]í ì
;
]]ì î
}^^ 	
publicaa 
voidaa 

UpdateSizeaa 
(aa 
Rectaa #
rectaa$ (
,aa( )
CompositionFinalaa* :
indexaa; @
,aa@ A
boolaaB F
pixelPerfectaaG S
,aaS T
CameraaaU [
renderingCameraaa\ k
)aak l
=>bb 

UpdateSizebb 
(bb 
computeIndexbb &
(bb& '
indexbb' ,
)bb, -
,bb- .
rectbb/ 3
,bb3 4
pixelPerfectbb5 A
,bbA B
renderingCamerabbC R
,bbR S
$"bbT V
LookDevRT-Final-bbV f
{bbf g
indexbbg l
}bbl m
"bbm n
)bbn o
;bbo p
booldd 

m_Disposeddd 
=dd 
falsedd 
;dd  
publicee 
voidee 
Disposeee 
(ee 
)ee 
{ff 	
ifgg 
(gg 

m_Disposedgg 
)gg 
returnhh 
;hh 

m_Disposedii 
=ii 
trueii 
;ii 
forkk 
(kk 
intkk 
indexkk 
=kk 
$numkk 
;kk 
indexkk  %
<kk& '
k_TextureCacheSizekk( :
;kk: ;
++kk< >
indexkk> C
)kkC D
{ll 
ifmm 
(mm 
m_RTsmm 
[mm 
indexmm 
]mm  
==mm! #
nullmm$ (
||mm) +
m_RTsmm, 1
[mm1 2
indexmm2 7
]mm7 8
.mm8 9
Equalsmm9 ?
(mm? @
nullmm@ D
)mmD E
)mmE F
continuenn 
;nn 
UnityEnginepp 
.pp 
Objectpp "
.pp" #
DestroyImmediatepp# 3
(pp3 4
m_RTspp4 9
[pp9 :
indexpp: ?
]pp? @
)pp@ A
;ppA B
m_RTsqq 
[qq 
indexqq 
]qq 
=qq 
nullqq #
;qq# $
}rr 
}ss 	
}tt 
classvv 	

Compositervv
 
:vv 
IDisposablevv "
{ww 
publicxx 
staticxx 
readonlyxx 
Colorxx $
firstViewGizmoColorxx% 8
=xx9 :
newxx; >
Color32xx? F
(xxF G
$numxxG H
,xxH I
$numxxJ M
,xxM N
$numxxO R
,xxR S
$numxxT W
)xxW X
;xxX Y
publicyy 
staticyy 
readonlyyy 
Coloryy $ 
secondViewGizmoColoryy% 9
=yy: ;
newyy< ?
Color32yy@ G
(yyG H
$numyyH K
,yyK L
$numyyM O
,yyO P
$numyyQ R
,yyR S
$numyyT W
)yyW X
;yyX Y
staticzz 
Materialzz 

s_Materialzz "
;zz" #
static{{ 
Material{{ 
material{{  
{|| 	
get}} 
{~~ 
if 
( 

s_Material 
== !
null" &
||' )

s_Material* 4
.4 5
Equals5 ;
(; <
null< @
)@ A
)A B

s_Material
ÄÄ 
=
ÄÄ  
new
ÄÄ! $
Material
ÄÄ% -
(
ÄÄ- .
Shader
ÄÄ. 4
.
ÄÄ4 5
Find
ÄÄ5 9
(
ÄÄ9 :
$str
ÄÄ: U
)
ÄÄU V
)
ÄÄV W
;
ÄÄW X
return
ÅÅ 

s_Material
ÅÅ !
;
ÅÅ! "
}
ÇÇ 
}
ÉÉ 	
IViewDisplayer
ÖÖ 
m_Displayer
ÖÖ "
;
ÖÖ" #
Context
ÜÜ 

m_Contexts
ÜÜ 
;
ÜÜ  
RenderTextureCache
áá 
m_RenderTextures
áá +
=
áá, -
new
áá. 1 
RenderTextureCache
áá2 D
(
ááD E
)
ááE F
;
ááF G
Renderer
àà 

m_Renderer
àà 
=
àà 
new
àà !
Renderer
àà" *
(
àà* +
)
àà+ ,
;
àà, -
RenderingData
ââ 
[
ââ 
]
ââ 
m_RenderDataCache
ââ )
;
ââ) *
bool
ãã 
m_pixelPerfect
ãã 
;
ãã 
bool
åå 

m_Disposed
åå 
;
åå 
public
éé 
bool
éé 
pixelPerfect
éé  
{
èè 	
get
êê 
=>
êê 
m_pixelPerfect
êê !
;
êê! "
set
ëë 
=>
ëë 

m_Renderer
ëë 
.
ëë 
pixelPerfect
ëë *
=
ëë+ ,
m_pixelPerfect
ëë- ;
=
ëë< =
value
ëë> C
;
ëëC D
}
íí 	
Color
îî 
m_AmbientColor
îî 
=
îî 
new
îî "
Color
îî# (
(
îî( )
$num
îî) -
,
îî- .
$num
îî/ 3
,
îî3 4
$num
îî5 9
,
îî9 :
$num
îî; ?
)
îî? @
;
îî@ A
bool
ññ -
m_RenderDocAcquisitionRequested
ññ ,
;
ññ, -
public
òò 

Compositer
òò 
(
òò 
IViewDisplayer
ôô 
	displayer
ôô $
,
ôô$ %
Context
öö 
contexts
öö 
,
öö 
IDataProvider
õõ 
dataProvider
õõ &
,
õõ& '

StageCache
úú 
stages
úú 
)
úú 
{
ùù 	
m_Displayer
ûû 
=
ûû 
	displayer
ûû #
;
ûû# $

m_Contexts
üü 
=
üü 
contexts
üü !
;
üü! "
m_RenderDataCache
°° 
=
°° 
new
°°  #
RenderingData
°°$ 1
[
°°1 2
$num
°°2 3
]
°°3 4
{
¢¢ 
new
££ 
RenderingData
££ !
(
££! "
)
££" #
{
££$ %
stage
££& +
=
££, -
stages
££. 4
[
££4 5
	ViewIndex
££5 >
.
££> ?
First
££? D
]
££D E
,
££E F
updater
££G N
=
££O P
contexts
££Q Y
.
££Y Z
GetViewContent
££Z h
(
££h i
	ViewIndex
££i r
.
££r s
First
££s x
)
££x y
.
££y z
camera££z Ä
}££Å Ç
,££Ç É
new
§§ 
RenderingData
§§ !
(
§§! "
)
§§" #
{
§§$ %
stage
§§& +
=
§§, -
stages
§§. 4
[
§§4 5
	ViewIndex
§§5 >
.
§§> ?
Second
§§? E
]
§§E F
,
§§F G
updater
§§H O
=
§§P Q
contexts
§§R Z
.
§§Z [
GetViewContent
§§[ i
(
§§i j
	ViewIndex
§§j s
.
§§s t
Second
§§t z
)
§§z {
.
§§{ |
camera§§| Ç
}§§É Ñ
}
•• 
;
•• 
m_Displayer
ßß 
.
ßß -
OnRenderDocAcquisitionTriggered
ßß 7
+=
ßß8 :+
RenderDocAcquisitionRequested
ßß; X
;
ßßX Y
m_Displayer
®® 
.
®® 
OnUpdateRequested
®® )
+=
®®* ,
Render
®®- 3
;
®®3 4
}
©© 	
void
´´ +
RenderDocAcquisitionRequested
´´ *
(
´´* +
)
´´+ ,
=>
¨¨ -
m_RenderDocAcquisitionRequested
¨¨ .
=
¨¨/ 0
true
¨¨1 5
;
¨¨5 6
void
ÆÆ 
CleanUp
ÆÆ 
(
ÆÆ 
)
ÆÆ 
{
ØØ 	
for
∞∞ 
(
∞∞ 
int
∞∞ 
index
∞∞ 
=
∞∞ 
$num
∞∞ 
;
∞∞ 
index
∞∞  %
<
∞∞& '
$num
∞∞( )
;
∞∞) *
++
∞∞+ -
index
∞∞- 2
)
∞∞2 3
{
±± 
m_RenderDataCache
≤≤ !
[
≤≤! "
index
≤≤" '
]
≤≤' (
?
≤≤( )
.
≤≤) *
Dispose
≤≤* 1
(
≤≤1 2
)
≤≤2 3
;
≤≤3 4
m_RenderDataCache
≥≥ !
[
≥≥! "
index
≥≥" '
]
≥≥' (
=
≥≥) *
null
≥≥+ /
;
≥≥/ 0
}
¥¥ 
m_RenderTextures
∂∂ 
.
∂∂ 
Dispose
∂∂ $
(
∂∂$ %
)
∂∂% &
;
∂∂& '
m_Displayer
∏∏ 
.
∏∏ -
OnRenderDocAcquisitionTriggered
∏∏ 7
-=
∏∏8 :+
RenderDocAcquisitionRequested
∏∏; X
;
∏∏X Y
m_Displayer
ππ 
.
ππ 
OnUpdateRequested
ππ )
-=
ππ* ,
Render
ππ- 3
;
ππ3 4
}
∫∫ 	
public
ªª 
void
ªª 
Dispose
ªª 
(
ªª 
)
ªª 
{
ºº 	
if
ΩΩ 
(
ΩΩ 

m_Disposed
ΩΩ 
)
ΩΩ 
return
ææ 
;
ææ 

m_Disposed
øø 
=
øø 
true
øø 
;
øø 
CleanUp
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
GC
¡¡ 
.
¡¡ 
SuppressFinalize
¡¡ 
(
¡¡  
this
¡¡  $
)
¡¡$ %
;
¡¡% &
}
¬¬ 	
~
√√ 	

Compositer
√√	 
(
√√ 
)
√√ 
=>
√√ 
CleanUp
√√  
(
√√  !
)
√√! "
;
√√" #
public
≈≈ 
void
≈≈ 
Render
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 	
if
»» 
(
»» !
UnityEditorInternal
»» #
.
»»# $
	RenderDoc
»»$ -
.
»»- .
IsLoaded
»». 6
(
»»6 7
)
»»7 8
&&
»»9 ;!
UnityEditorInternal
»»< O
.
»»O P
	RenderDoc
»»P Y
.
»»Y Z
IsSupported
»»Z e
(
»»e f
)
»»f g
&&
»»h j.
m_RenderDocAcquisitionRequested»»k ä
)»»ä ã!
UnityEditorInternal
…… #
.
……# $
	RenderDoc
……$ -
.
……- .#
BeginCaptureRenderDoc
……. C
(
……C D
m_Displayer
……D O
as
……P R
EditorWindow
……S _
)
……_ `
;
……` a
switch
ÀÀ 
(
ÀÀ 

m_Contexts
ÀÀ 
.
ÀÀ 
layout
ÀÀ %
.
ÀÀ% &

viewLayout
ÀÀ& 0
)
ÀÀ0 1
{
ÃÃ 
case
ÕÕ 
Layout
ÕÕ 
.
ÕÕ 
FullFirstView
ÕÕ )
:
ÕÕ) *#
RenderSingleAndOutput
ŒŒ )
(
ŒŒ) *
	ViewIndex
ŒŒ* 3
.
ŒŒ3 4
First
ŒŒ4 9
)
ŒŒ9 :
;
ŒŒ: ;
break
œœ 
;
œœ 
case
–– 
Layout
–– 
.
–– 
FullSecondView
–– *
:
––* +#
RenderSingleAndOutput
—— )
(
——) *
	ViewIndex
——* 3
.
——3 4
Second
——4 :
)
——: ;
;
——; <
break
““ 
;
““ 
case
”” 
Layout
”” 
.
”” 
HorizontalSplit
”” +
:
””+ ,
case
‘‘ 
Layout
‘‘ 
.
‘‘ 
VerticalSplit
‘‘ )
:
‘‘) *#
RenderSingleAndOutput
’’ )
(
’’) *
	ViewIndex
’’* 3
.
’’3 4
First
’’4 9
)
’’9 :
;
’’: ;#
RenderSingleAndOutput
÷÷ )
(
÷÷) *
	ViewIndex
÷÷* 3
.
÷÷3 4
Second
÷÷4 :
)
÷÷: ;
;
÷÷; <
break
◊◊ 
;
◊◊ 
case
ÿÿ 
Layout
ÿÿ 
.
ÿÿ 
CustomSplit
ÿÿ '
:
ÿÿ' (&
RenderCompositeAndOutput
ŸŸ ,
(
ŸŸ, -
)
ŸŸ- .
;
ŸŸ. /
break
⁄⁄ 
;
⁄⁄ 
}
€€ 
if
ﬁﬁ 
(
ﬁﬁ !
UnityEditorInternal
ﬁﬁ #
.
ﬁﬁ# $
	RenderDoc
ﬁﬁ$ -
.
ﬁﬁ- .
IsLoaded
ﬁﬁ. 6
(
ﬁﬁ6 7
)
ﬁﬁ7 8
&&
ﬁﬁ9 ;!
UnityEditorInternal
ﬁﬁ< O
.
ﬁﬁO P
	RenderDoc
ﬁﬁP Y
.
ﬁﬁY Z
IsSupported
ﬁﬁZ e
(
ﬁﬁe f
)
ﬁﬁf g
&&
ﬁﬁh j.
m_RenderDocAcquisitionRequestedﬁﬁk ä
)ﬁﬁä ã!
UnityEditorInternal
ﬂﬂ #
.
ﬂﬂ# $
	RenderDoc
ﬂﬂ$ -
.
ﬂﬂ- .!
EndCaptureRenderDoc
ﬂﬂ. A
(
ﬂﬂA B
m_Displayer
ﬂﬂB M
as
ﬂﬂN P
EditorWindow
ﬂﬂQ ]
)
ﬂﬂ] ^
;
ﬂﬂ^ _-
m_RenderDocAcquisitionRequested
„„ +
=
„„, -
false
„„. 3
;
„„3 4
}
‰‰ 	
void
ÊÊ  
AcquireDataForView
ÊÊ 
(
ÊÊ  
	ViewIndex
ÊÊ  )
index
ÊÊ* /
,
ÊÊ/ 0
Rect
ÊÊ1 5
viewport
ÊÊ6 >
)
ÊÊ> ?
{
ÁÁ 	
var
ËË 
renderingData
ËË 
=
ËË 
m_RenderDataCache
ËË  1
[
ËË1 2
(
ËË2 3
int
ËË3 6
)
ËË6 7
index
ËË7 <
]
ËË< =
;
ËË= >
renderingData
ÈÈ 
.
ÈÈ 
viewPort
ÈÈ "
=
ÈÈ# $
viewport
ÈÈ% -
;
ÈÈ- .
ViewContext
ÍÍ 
view
ÍÍ 
=
ÍÍ 

m_Contexts
ÍÍ )
.
ÍÍ) *
GetViewContent
ÍÍ* 8
(
ÍÍ8 9
index
ÍÍ9 >
)
ÍÍ> ?
;
ÍÍ? @
m_RenderTextures
ÏÏ 
.
ÏÏ 

UpdateSize
ÏÏ '
(
ÏÏ' (
renderingData
ÏÏ( 5
.
ÏÏ5 6
viewPort
ÏÏ6 >
,
ÏÏ> ?
index
ÏÏ@ E
,
ÏÏE F

m_Renderer
ÏÏG Q
.
ÏÏQ R
pixelPerfect
ÏÏR ^
,
ÏÏ^ _
renderingData
ÏÏ` m
.
ÏÏm n
stage
ÏÏn s
.
ÏÏs t
camera
ÏÏt z
)
ÏÏz {
;
ÏÏ{ |
int
ÓÓ 
	debugMode
ÓÓ 
=
ÓÓ 

m_Contexts
ÓÓ &
.
ÓÓ& '
GetViewContent
ÓÓ' 5
(
ÓÓ5 6
index
ÓÓ6 ;
)
ÓÓ; <
.
ÓÓ< =
debug
ÓÓ= B
.
ÓÓB C
viewMode
ÓÓC K
;
ÓÓK L
if
ÔÔ 
(
ÔÔ 
	debugMode
ÔÔ 
!=
ÔÔ 
-
ÔÔ 
$num
ÔÔ 
)
ÔÔ  
LookDev
 
.
 
dataProvider
 $
.
$ %
UpdateDebugMode
% 4
(
4 5
	debugMode
5 >
)
> ?
;
? @
renderingData
ÚÚ 
.
ÚÚ 
output
ÚÚ  
=
ÚÚ! "
m_RenderTextures
ÚÚ# 3
[
ÚÚ3 4
index
ÚÚ4 9
,
ÚÚ9 :#
ShadowCompositionPass
ÚÚ; P
.
ÚÚP Q
MainView
ÚÚQ Y
]
ÚÚY Z
;
ÚÚZ [

m_Renderer
ÛÛ 
.
ÛÛ 
BeginRendering
ÛÛ %
(
ÛÛ% &
renderingData
ÛÛ& 3
,
ÛÛ3 4
LookDev
ÛÛ5 <
.
ÛÛ< =
dataProvider
ÛÛ= I
)
ÛÛI J
;
ÛÛJ K

m_Renderer
ÙÙ 
.
ÙÙ 
Acquire
ÙÙ 
(
ÙÙ 
renderingData
ÙÙ ,
)
ÙÙ, -
;
ÙÙ- .
if
ˆˆ 
(
ˆˆ 
view
ˆˆ 
.
ˆˆ 
debug
ˆˆ 
.
ˆˆ 
shadow
ˆˆ !
)
ˆˆ! "
{
˜˜ 
RenderTexture
¯¯ 
tmp
¯¯ !
=
¯¯" #
m_RenderTextures
¯¯$ 4
[
¯¯4 5
index
¯¯5 :
,
¯¯: ;#
ShadowCompositionPass
¯¯< Q
.
¯¯Q R

ShadowMask
¯¯R \
]
¯¯\ ]
;
¯¯] ^
view
˘˘ 
.
˘˘ 
environment
˘˘  
?
˘˘  !
.
˘˘! "
UpdateSunPosition
˘˘" 3
(
˘˘3 4
renderingData
˘˘4 A
.
˘˘A B
stage
˘˘B G
.
˘˘G H
sunLight
˘˘H P
)
˘˘P Q
;
˘˘Q R
renderingData
˙˙ 
.
˙˙ 
stage
˙˙ #
.
˙˙# $
sunLight
˙˙$ ,
.
˙˙, -
	intensity
˙˙- 6
=
˙˙7 8
$num
˙˙9 ;
;
˙˙; <
LookDev
˚˚ 
.
˚˚ 
dataProvider
˚˚ $
.
˚˚$ %
GetShadowMask
˚˚% 2
(
˚˚2 3
ref
˚˚3 6
tmp
˚˚7 :
,
˚˚: ;
renderingData
˚˚< I
.
˚˚I J
stage
˚˚J O
.
˚˚O P
runtimeInterface
˚˚P `
)
˚˚` a
;
˚˚a b
renderingData
¸¸ 
.
¸¸ 
stage
¸¸ #
.
¸¸# $
sunLight
¸¸$ ,
.
¸¸, -
	intensity
¸¸- 6
=
¸¸7 8
$num
¸¸9 ;
;
¸¸; <
m_RenderTextures
˝˝  
[
˝˝  !
index
˝˝! &
,
˝˝& '#
ShadowCompositionPass
˝˝( =
.
˝˝= >

ShadowMask
˝˝> H
]
˝˝H I
=
˝˝J K
tmp
˝˝L O
;
˝˝O P
}
˛˛ 

m_Renderer
ÄÄ 
.
ÄÄ 
EndRendering
ÄÄ #
(
ÄÄ# $
renderingData
ÄÄ$ 1
,
ÄÄ1 2
LookDev
ÄÄ3 :
.
ÄÄ: ;
dataProvider
ÄÄ; G
)
ÄÄG H
;
ÄÄH I
if
ÇÇ 
(
ÇÇ 
	debugMode
ÇÇ 
!=
ÇÇ 
-
ÇÇ 
$num
ÇÇ 
)
ÇÇ  
LookDev
ÉÉ 
.
ÉÉ 
dataProvider
ÉÉ $
.
ÉÉ$ %
UpdateDebugMode
ÉÉ% 4
(
ÉÉ4 5
-
ÉÉ5 6
$num
ÉÉ6 7
)
ÉÉ7 8
;
ÉÉ8 9
}
ÑÑ 	
void
ÜÜ #
RenderSingleAndOutput
ÜÜ "
(
ÜÜ" #
	ViewIndex
ÜÜ# ,
index
ÜÜ- 2
)
ÜÜ2 3
{
áá 	
Rect
àà 
viewport
àà 
=
àà 
m_Displayer
àà '
.
àà' (
GetRect
àà( /
(
àà/ 0
(
àà0 1"
ViewCompositionIndex
àà1 E
)
ààE F
index
ààF K
)
ààK L
;
ààL M 
AcquireDataForView
ââ 
(
ââ 
index
ââ $
,
ââ$ %
viewport
ââ& .
)
ââ. /
;
ââ/ 0
Compositing
ää 
(
ää 
viewport
ää  
,
ää  !
(
ää" #
int
ää# &
)
ää& '
index
ää' ,
,
ää, -
(
ää. /
CompositionFinal
ää/ ?
)
ää? @
index
ää@ E
)
ääE F
;
ääF G
m_Displayer
ãã 
.
ãã 

SetTexture
ãã "
(
ãã" #
(
ãã# $"
ViewCompositionIndex
ãã$ 8
)
ãã8 9
index
ãã9 >
,
ãã> ?
m_RenderTextures
ãã@ P
[
ããP Q
(
ããQ R
CompositionFinal
ããR b
)
ããb c
index
ããc h
]
ããh i
)
ããi j
;
ããj k
}
åå 	
void
éé &
RenderCompositeAndOutput
éé %
(
éé% &
)
éé& '
{
èè 	
Rect
êê 
viewport
êê 
=
êê 
m_Displayer
êê '
.
êê' (
GetRect
êê( /
(
êê/ 0"
ViewCompositionIndex
êê0 D
.
êêD E
	Composite
êêE N
)
êêN O
;
êêO P 
AcquireDataForView
ëë 
(
ëë 
	ViewIndex
ëë (
.
ëë( )
First
ëë) .
,
ëë. /
viewport
ëë0 8
)
ëë8 9
;
ëë9 : 
AcquireDataForView
íí 
(
íí 
	ViewIndex
íí (
.
íí( )
Second
íí) /
,
íí/ 0
viewport
íí1 9
)
íí9 :
;
íí: ;
Compositing
ìì 
(
ìì 
viewport
ìì  
,
ìì  !
$num
ìì" #
,
ìì- .
CompositionFinal
ìì/ ?
.
ìì? @
First
ìì@ E
)
ììE F
;
ììF G
m_Displayer
îî 
.
îî 

SetTexture
îî "
(
îî" #"
ViewCompositionIndex
îî# 7
.
îî7 8
	Composite
îî8 A
,
îîA B
m_RenderTextures
îîC S
[
îîS T
CompositionFinal
îîT d
.
îîd e
First
îîe j
]
îîj k
)
îîk l
;
îîl m
}
ïï 	
void
óó 
Compositing
óó 
(
óó 
Rect
óó 
rect
óó "
,
óó" #
int
óó$ '
pass
óó( ,
,
óó, -
CompositionFinal
óó. >
finalBufferIndex
óó? O
)
óóO P
{
òò 	
bool
ôô $
skipShadowComposition0
ôô '
=
ôô( )
!
ôô* +

m_Contexts
ôô+ 5
.
ôô5 6
GetViewContent
ôô6 D
(
ôôD E
	ViewIndex
ôôE N
.
ôôN O
First
ôôO T
)
ôôT U
.
ôôU V
debug
ôôV [
.
ôô[ \
shadow
ôô\ b
;
ôôb c
bool
öö $
skipShadowComposition1
öö '
=
öö( )
!
öö* +

m_Contexts
öö+ 5
.
öö5 6
GetViewContent
öö6 D
(
ööD E
	ViewIndex
ööE N
.
ööN O
Second
ööO U
)
ööU V
.
ööV W
debug
ööW \
.
öö\ ]
shadow
öö] c
;
ööc d
if
úú 
(
úú 
rect
úú 
.
úú 
IsNullOrInverted
úú %
(
úú% &
)
úú& '
||
ùù 
(
ùù 

m_Contexts
ùù 
.
ùù 
layout
ùù %
.
ùù% &

viewLayout
ùù& 0
!=
ùù1 3
Layout
ùù4 :
.
ùù: ;
FullSecondView
ùù; I
&&
ûû 
(
ûû 
m_RenderTextures
ûû (
[
ûû( )
	ViewIndex
ûû) 2
.
ûû2 3
First
ûû3 8
,
ûû8 9#
ShadowCompositionPass
ûû: O
.
ûûO P
MainView
ûûP X
]
ûûX Y
==
ûûZ \
null
ûû] a
||
üü 
(
üü 
!
üü $
skipShadowComposition0
üü 3
&&
†† 
m_RenderTextures
†† /
[
††/ 0
	ViewIndex
††0 9
.
††9 :
First
††: ?
,
††? @#
ShadowCompositionPass
††A V
.
††V W

ShadowMask
††W a
]
††a b
==
††c e
null
††f j
)
††j k
)
††k l
)
††l m
||
°° 
(
°° 

m_Contexts
°° 
.
°° 
layout
°° %
.
°°% &

viewLayout
°°& 0
!=
°°1 3
Layout
°°4 :
.
°°: ;
FullFirstView
°°; H
&&
¢¢ 
(
¢¢ 
m_RenderTextures
¢¢ (
[
¢¢( )
	ViewIndex
¢¢) 2
.
¢¢2 3
Second
¢¢3 9
,
¢¢9 :#
ShadowCompositionPass
¢¢; P
.
¢¢P Q
MainView
¢¢Q Y
]
¢¢Y Z
==
¢¢[ ]
null
¢¢^ b
||
££ 
(
££ 
!
££ $
skipShadowComposition1
££ 3
&&
§§ 
m_RenderTextures
§§ /
[
§§/ 0
	ViewIndex
§§0 9
.
§§9 :
Second
§§: @
,
§§@ A#
ShadowCompositionPass
§§B W
.
§§W X

ShadowMask
§§X b
]
§§b c
==
§§d f
null
§§g k
)
§§k l
)
§§l m
)
§§m n
)
§§n o
{
•• 
m_RenderTextures
¶¶  
[
¶¶  !
finalBufferIndex
¶¶! 1
]
¶¶1 2
=
¶¶3 4
null
¶¶5 9
;
¶¶9 :
return
ßß 
;
ßß 
}
®® 
m_RenderTextures
™™ 
.
™™ 

UpdateSize
™™ '
(
™™' (
rect
™™( ,
,
™™, -
finalBufferIndex
™™. >
,
™™> ?
m_pixelPerfect
™™@ N
,
™™N O
null
™™P T
)
™™T U
;
™™U V"
ComparisonGizmoState
¨¨  
gizmo
¨¨! &
=
¨¨' (

m_Contexts
¨¨) 3
.
¨¨3 4
layout
¨¨4 :
.
¨¨: ;

gizmoState
¨¨; E
;
¨¨E F
Vector4
ÆÆ 
gizmoPosition
ÆÆ !
=
ÆÆ" #
new
ÆÆ$ '
Vector4
ÆÆ( /
(
ÆÆ/ 0
gizmo
ÆÆ0 5
.
ÆÆ5 6
center
ÆÆ6 <
.
ÆÆ< =
x
ÆÆ= >
,
ÆÆ> ?
gizmo
ÆÆ@ E
.
ÆÆE F
center
ÆÆF L
.
ÆÆL M
y
ÆÆM N
,
ÆÆN O
$num
ÆÆP T
,
ÆÆT U
$num
ÆÆV Z
)
ÆÆZ [
;
ÆÆ[ \
Vector4
ØØ 
gizmoZoneCenter
ØØ #
=
ØØ$ %
new
ØØ& )
Vector4
ØØ* 1
(
ØØ1 2
gizmo
ØØ2 7
.
ØØ7 8
point2
ØØ8 >
.
ØØ> ?
x
ØØ? @
,
ØØ@ A
gizmo
ØØB G
.
ØØG H
point2
ØØH N
.
ØØN O
y
ØØO P
,
ØØP Q
$num
ØØR V
,
ØØV W
$num
ØØX \
)
ØØ\ ]
;
ØØ] ^
Vector4
∞∞ 
gizmoThickness
∞∞ "
=
∞∞# $
new
∞∞% (
Vector4
∞∞) 0
(
∞∞0 1"
ComparisonGizmoState
∞∞1 E
.
∞∞E F
	thickness
∞∞F O
,
∞∞O P"
ComparisonGizmoState
∞∞Q e
.
∞∞e f
thicknessSelected
∞∞f w
,
∞∞w x
$num
∞∞y }
,
∞∞} ~
$num∞∞ É
)∞∞É Ñ
;∞∞Ñ Ö
Vector4
±± 
gizmoCircleRadius
±± %
=
±±& '
new
±±( +
Vector4
±±, 3
(
±±3 4"
ComparisonGizmoState
±±4 H
.
±±H I
circleRadius
±±I U
,
±±U V"
ComparisonGizmoState
±±W k
.
±±k l#
circleRadiusSelected±±l Ä
,±±Ä Å
$num±±Ç Ü
,±±Ü á
$num±±à å
)±±å ç
;±±ç é
Environment
≥≥ 
env0
≥≥ 
=
≥≥ 

m_Contexts
≥≥ )
.
≥≥) *
GetViewContent
≥≥* 8
(
≥≥8 9
	ViewIndex
≥≥9 B
.
≥≥B C
First
≥≥C H
)
≥≥H I
.
≥≥I J
environment
≥≥J U
;
≥≥U V
Environment
¥¥ 
env1
¥¥ 
=
¥¥ 

m_Contexts
¥¥ )
.
¥¥) *
GetViewContent
¥¥* 8
(
¥¥8 9
	ViewIndex
¥¥9 B
.
¥¥B C
Second
¥¥C I
)
¥¥I J
.
¥¥J K
environment
¥¥K V
;
¥¥V W
float
∂∂ 
exposureValue0
∂∂  
=
∂∂! "
env0
∂∂# '
?
∂∂' (
.
∂∂( )
exposure
∂∂) 1
??
∂∂2 4
$num
∂∂5 7
;
∂∂7 8
float
∑∑ 
exposureValue1
∑∑  
=
∑∑! "
env1
∑∑# '
?
∑∑' (
.
∑∑( )
exposure
∑∑) 1
??
∑∑2 4
$num
∑∑5 7
;
∑∑7 8
float
∏∏ !
dualViewBlendFactor
∏∏ %
=
∏∏& '
gizmo
∏∏( -
.
∏∏- .
blendFactor
∏∏. 9
;
∏∏9 :
float
ππ %
isCurrentlyLeftEditting
ππ )
=
ππ* +

m_Contexts
ππ, 6
.
ππ6 7
layout
ππ7 =
.
ππ= >
lastFocusedView
ππ> M
==
ππN P
	ViewIndex
ππQ Z
.
ππZ [
First
ππ[ `
?
ππa b
$num
ππc e
:
ππf g
-
ππh i
$num
ππi k
;
ππk l
float
∫∫  
dragAndDropContext
∫∫ $
=
∫∫% &
$num
∫∫' )
;
∫∫) *
float
ªª 
toneMapEnabled
ªª  
=
ªª! "
-
ªª# $
$num
ªª$ &
;
ªª& '
float
ºº 
shadowMultiplier0
ºº #
=
ºº$ %$
skipShadowComposition0
ºº& <
?
ºº= >
-
ºº? @
$num
ºº@ B
:
ººC D
$num
ººE I
;
ººI J
float
ΩΩ 
shadowMultiplier1
ΩΩ #
=
ΩΩ$ %$
skipShadowComposition1
ΩΩ& <
?
ΩΩ= >
-
ΩΩ? @
$num
ΩΩ@ B
:
ΩΩC D
$num
ΩΩE I
;
ΩΩI J
Color
ææ 
shadowColor0
ææ 
=
ææ  
env0
ææ! %
?
ææ% &
.
ææ& '
shadowColor
ææ' 2
??
ææ3 5
Color
ææ6 ;
.
ææ; <
white
ææ< A
;
ææA B
Color
øø 
shadowColor1
øø 
=
øø  
env1
øø! %
?
øø% &
.
øø& '
shadowColor
øø' 2
??
øø3 5
Color
øø6 ;
.
øø; <
white
øø< A
;
øøA B
Texture
¬¬ 
texMainView0
¬¬  
=
¬¬! "
m_RenderTextures
¬¬# 3
[
¬¬3 4
	ViewIndex
¬¬4 =
.
¬¬= >
First
¬¬> C
,
¬¬C D#
ShadowCompositionPass
¬¬E Z
.
¬¬Z [
MainView
¬¬[ c
]
¬¬c d
;
¬¬d e
Texture
√√ 
texShadowsMask0
√√ #
=
√√$ %
m_RenderTextures
√√& 6
[
√√6 7
	ViewIndex
√√7 @
.
√√@ A
First
√√A F
,
√√F G#
ShadowCompositionPass
√√H ]
.
√√] ^

ShadowMask
√√^ h
]
√√h i
;
√√i j
Texture
≈≈ 
texMainView1
≈≈  
=
≈≈! "
m_RenderTextures
≈≈# 3
[
≈≈3 4
	ViewIndex
≈≈4 =
.
≈≈= >
Second
≈≈> D
,
≈≈D E#
ShadowCompositionPass
≈≈F [
.
≈≈[ \
MainView
≈≈\ d
]
≈≈d e
;
≈≈e f
Texture
∆∆ 
texShadowsMask1
∆∆ #
=
∆∆$ %
m_RenderTextures
∆∆& 6
[
∆∆6 7
	ViewIndex
∆∆7 @
.
∆∆@ A
Second
∆∆A G
,
∆∆G H#
ShadowCompositionPass
∆∆I ^
.
∆∆^ _

ShadowMask
∆∆_ i
]
∆∆i j
;
∆∆j k
Vector4
»» 
compositingParams
»» %
=
»»& '
new
»»( +
Vector4
»», 3
(
»»3 4!
dualViewBlendFactor
»»4 G
,
»»G H
exposureValue0
»»I W
,
»»W X
exposureValue1
»»Y g
,
»»g h&
isCurrentlyLeftEditting»»i Ä
)»»Ä Å
;»»Å Ç
Vector4
……  
compositingParams2
…… &
=
……' (
new
……) ,
Vector4
……- 4
(
……4 5 
dragAndDropContext
……5 G
,
……G H
toneMapEnabled
……I W
,
……W X
shadowMultiplier0
……Y j
,
……j k
shadowMultiplier1
……l }
)
……} ~
;
……~ 
const
ÃÃ 
float
ÃÃ 
	k_BlackIn
ÃÃ !
=
ÃÃ" #
$num
ÃÃ$ )
;
ÃÃ) *
const
ÕÕ 
float
ÕÕ 
	k_WhiteIn
ÕÕ !
=
ÕÕ" #
$num
ÕÕ$ )
;
ÕÕ) *
const
ŒŒ 
float
ŒŒ 

k_BlackOut
ŒŒ "
=
ŒŒ# $
$num
ŒŒ% )
;
ŒŒ) *
const
œœ 
float
œœ 

k_WhiteOut
œœ "
=
œœ# $
$num
œœ% *
;
œœ* +
const
–– 
float
–– 
k_WhiteLevel
–– $
=
––% &
$num
––' +
;
––+ ,
const
—— 
float
—— 
k_WhiteClip
—— #
=
——$ %
$num
——& +
;
——+ ,
const
““ 
float
““ 
k_DialUnits
““ #
=
““$ %
$num
““& +
;
““+ ,
const
”” 
float
”” 
k_HalfDialUnits
”” '
=
””( )
k_DialUnits
””* 5
*
””6 7
$num
””8 <
;
””< =
const
‘‘ 
float
‘‘ 
k_GizmoRenderMode
‘‘ )
=
‘‘* +
$num
‘‘, .
;
‘‘. /
Vector4
ÿÿ 
tonemapCoeff1
ÿÿ !
=
ÿÿ" #
new
ÿÿ$ '
Vector4
ÿÿ( /
(
ÿÿ/ 0
(
ÿÿ0 1
	k_BlackIn
ÿÿ1 :
*
ÿÿ; <
k_DialUnits
ÿÿ= H
)
ÿÿH I
+
ÿÿJ K
$num
ÿÿL P
,
ÿÿP Q
(
ÿÿR S

k_BlackOut
ÿÿS ]
*
ÿÿ^ _
k_HalfDialUnits
ÿÿ` o
)
ÿÿo p
+
ÿÿq r
$num
ÿÿs w
,
ÿÿw x
(
ÿÿy z
	k_WhiteInÿÿz É
/ÿÿÑ Ö
k_DialUnitsÿÿÜ ë
)ÿÿë í
,ÿÿí ì
(ÿÿî ï
$numÿÿï ô
-ÿÿö õ
(ÿÿú ù

k_WhiteOutÿÿù ß
/ÿÿ® ©
k_DialUnitsÿÿ™ µ
)ÿÿµ ∂
)ÿÿ∂ ∑
)ÿÿ∑ ∏
;ÿÿ∏ π
Vector4
ŸŸ 
tonemapCoeff2
ŸŸ !
=
ŸŸ" #
new
ŸŸ$ '
Vector4
ŸŸ( /
(
ŸŸ/ 0
$num
ŸŸ0 4
,
ŸŸ4 5
$num
ŸŸ6 :
,
ŸŸ: ;
k_WhiteLevel
ŸŸ< H
,
ŸŸH I
k_WhiteClip
ŸŸJ U
/
ŸŸV W
k_HalfDialUnits
ŸŸX g
)
ŸŸg h
;
ŸŸh i
const
€€ 
float
€€ 
k_ReferenceScale
€€ (
=
€€) *
$num
€€+ 2
;
€€2 3
Vector4
‹‹ 
screenRatio
‹‹ 
=
‹‹  !
new
‹‹" %
Vector4
‹‹& -
(
‹‹- .
rect
‹‹. 2
.
‹‹2 3
width
‹‹3 8
/
‹‹9 :
k_ReferenceScale
‹‹; K
,
‹‹K L
rect
‹‹M Q
.
‹‹Q R
height
‹‹R X
/
‹‹Y Z
k_ReferenceScale
‹‹[ k
,
‹‹k l
rect
‹‹m q
.
‹‹q r
width
‹‹r w
,
‹‹w x
rect
‹‹y }
.
‹‹} ~
height‹‹~ Ñ
)‹‹Ñ Ö
;‹‹Ö Ü
RenderTexture
ﬁﬁ 
	oldActive
ﬁﬁ #
=
ﬁﬁ$ %
RenderTexture
ﬁﬁ& 3
.
ﬁﬁ3 4
active
ﬁﬁ4 :
;
ﬁﬁ: ;
RenderTexture
ﬂﬂ 
.
ﬂﬂ 
active
ﬂﬂ  
=
ﬂﬂ! "
m_RenderTextures
ﬂﬂ# 3
[
ﬂﬂ3 4
finalBufferIndex
ﬂﬂ4 D
]
ﬂﬂD E
;
ﬂﬂE F
material
‡‡ 
.
‡‡ 

SetTexture
‡‡ 
(
‡‡  
$str
‡‡  /
,
‡‡/ 0
texMainView0
‡‡1 =
)
‡‡= >
;
‡‡> ?
material
·· 
.
·· 

SetTexture
·· 
(
··  
$str
··  .
,
··. /
texShadowsMask0
··0 ?
)
··? @
;
··@ A
material
‚‚ 
.
‚‚ 
SetColor
‚‚ 
(
‚‚ 
$str
‚‚ -
,
‚‚- .
shadowColor0
‚‚/ ;
)
‚‚; <
;
‚‚< =
material
„„ 
.
„„ 

SetTexture
„„ 
(
„„  
$str
„„  /
,
„„/ 0
texMainView1
„„1 =
)
„„= >
;
„„> ?
material
‰‰ 
.
‰‰ 

SetTexture
‰‰ 
(
‰‰  
$str
‰‰  .
,
‰‰. /
texShadowsMask1
‰‰0 ?
)
‰‰? @
;
‰‰@ A
material
ÂÂ 
.
ÂÂ 
SetColor
ÂÂ 
(
ÂÂ 
$str
ÂÂ -
,
ÂÂ- .
shadowColor1
ÂÂ/ ;
)
ÂÂ; <
;
ÂÂ< =
material
ÊÊ 
.
ÊÊ 
	SetVector
ÊÊ 
(
ÊÊ 
$str
ÊÊ 3
,
ÊÊ3 4
compositingParams
ÊÊ5 F
)
ÊÊF G
;
ÊÊG H
material
ÁÁ 
.
ÁÁ 
	SetVector
ÁÁ 
(
ÁÁ 
$str
ÁÁ 4
,
ÁÁ4 5 
compositingParams2
ÁÁ6 H
)
ÁÁH I
;
ÁÁI J
material
ËË 
.
ËË 
SetColor
ËË 
(
ËË 
$str
ËË /
,
ËË/ 0!
firstViewGizmoColor
ËË1 D
)
ËËD E
;
ËËE F
material
ÈÈ 
.
ÈÈ 
SetColor
ÈÈ 
(
ÈÈ 
$str
ÈÈ 0
,
ÈÈ0 1"
secondViewGizmoColor
ÈÈ2 F
)
ÈÈF G
;
ÈÈG H
material
ÍÍ 
.
ÍÍ 
	SetVector
ÍÍ 
(
ÍÍ 
$str
ÍÍ /
,
ÍÍ/ 0
gizmoPosition
ÍÍ1 >
)
ÍÍ> ?
;
ÍÍ? @
material
ÎÎ 
.
ÎÎ 
	SetVector
ÎÎ 
(
ÎÎ 
$str
ÎÎ 1
,
ÎÎ1 2
gizmoZoneCenter
ÎÎ3 B
)
ÎÎB C
;
ÎÎC D
material
ÏÏ 
.
ÏÏ 
	SetVector
ÏÏ 
(
ÏÏ 
$str
ÏÏ 1
,
ÏÏ1 2
gizmo
ÏÏ3 8
.
ÏÏ8 9
plane
ÏÏ9 >
)
ÏÏ> ?
;
ÏÏ? @
material
ÌÌ 
.
ÌÌ 
	SetVector
ÌÌ 
(
ÌÌ 
$str
ÌÌ 6
,
ÌÌ6 7
gizmo
ÌÌ8 =
.
ÌÌ= >

planeOrtho
ÌÌ> H
)
ÌÌH I
;
ÌÌI J
material
ÓÓ 
.
ÓÓ 
SetFloat
ÓÓ 
(
ÓÓ 
$str
ÓÓ ,
,
ÓÓ, -
gizmo
ÓÓ. 3
.
ÓÓ3 4
length
ÓÓ4 :
)
ÓÓ: ;
;
ÓÓ; <
material
ÔÔ 
.
ÔÔ 
	SetVector
ÔÔ 
(
ÔÔ 
$str
ÔÔ 0
,
ÔÔ0 1
gizmoThickness
ÔÔ2 @
)
ÔÔ@ A
;
ÔÔA B
material
 
.
 
	SetVector
 
(
 
$str
 3
,
3 4
gizmoCircleRadius
5 F
)
F G
;
G H
material
ÒÒ 
.
ÒÒ 
SetFloat
ÒÒ 
(
ÒÒ 
$str
ÒÒ 8
,
ÒÒ8 9"
ComparisonGizmoState
ÒÒ: N
.
ÒÒN O%
blendFactorCircleRadius
ÒÒO f
)
ÒÒf g
;
ÒÒg h
material
ÚÚ 
.
ÚÚ 
SetFloat
ÚÚ 
(
ÚÚ 
$str
ÚÚ ?
,
ÚÚ? @
gizmo
ÚÚA F
.
ÚÚF G)
blendFactorMaxGizmoDistance
ÚÚG b
)
ÚÚb c
;
ÚÚc d
material
ÛÛ 
.
ÛÛ 
SetFloat
ÛÛ 
(
ÛÛ 
$str
ÛÛ 0
,
ÛÛ0 1
k_GizmoRenderMode
ÛÛ2 C
)
ÛÛC D
;
ÛÛD E
material
ÙÙ 
.
ÙÙ 
	SetVector
ÙÙ 
(
ÙÙ 
$str
ÙÙ -
,
ÙÙ- .
screenRatio
ÙÙ/ :
)
ÙÙ: ;
;
ÙÙ; <
material
ıı 
.
ıı 
	SetVector
ıı 
(
ıı 
$str
ıı 0
,
ıı0 1
tonemapCoeff1
ıı2 ?
)
ıı? @
;
ıı@ A
material
ˆˆ 
.
ˆˆ 
	SetVector
ˆˆ 
(
ˆˆ 
$str
ˆˆ 0
,
ˆˆ0 1
tonemapCoeff2
ˆˆ2 ?
)
ˆˆ? @
;
ˆˆ@ A
material
˜˜ 
.
˜˜ 
SetPass
˜˜ 
(
˜˜ 
pass
˜˜ !
)
˜˜! "
;
˜˜" #
Renderer
˘˘ 
.
˘˘  
DrawFullScreenQuad
˘˘ '
(
˘˘' (
new
˘˘( +
Rect
˘˘, 0
(
˘˘0 1
$num
˘˘1 2
,
˘˘2 3
$num
˘˘4 5
,
˘˘5 6
rect
˘˘7 ;
.
˘˘; <
width
˘˘< A
,
˘˘A B
rect
˘˘C G
.
˘˘G H
height
˘˘H N
)
˘˘N O
)
˘˘O P
;
˘˘P Q
RenderTexture
˚˚ 
.
˚˚ 
active
˚˚  
=
˚˚! "
	oldActive
˚˚# ,
;
˚˚, -
}
¸¸ 	
public
˛˛ 
	ViewIndex
˛˛ $
GetViewFromComposition
˛˛ /
(
˛˛/ 0
Vector2
˛˛0 7
localCoordinate
˛˛8 G
)
˛˛G H
{
ˇˇ 	
Rect
ÄÄ 
compositionRect
ÄÄ  
=
ÄÄ! "
m_Displayer
ÄÄ# .
.
ÄÄ. /
GetRect
ÄÄ/ 6
(
ÄÄ6 7"
ViewCompositionIndex
ÄÄ7 K
.
ÄÄK L
	Composite
ÄÄL U
)
ÄÄU V
;
ÄÄV W
Vector2
ÅÅ '
normalizedLocalCoordinate
ÅÅ -
=
ÅÅ. /'
ComparisonGizmoController
ÅÅ0 I
.
ÅÅI J&
GetNormalizedCoordinates
ÅÅJ b
(
ÅÅb c
localCoordinate
ÅÅc r
,
ÅÅr s
compositionRectÅÅt É
)ÅÅÉ Ñ
;ÅÅÑ Ö
switch
ÇÇ 
(
ÇÇ 

m_Contexts
ÇÇ 
.
ÇÇ 
layout
ÇÇ %
.
ÇÇ% &

viewLayout
ÇÇ& 0
)
ÇÇ0 1
{
ÉÉ 
case
ÑÑ 
Layout
ÑÑ 
.
ÑÑ 
CustomSplit
ÑÑ '
:
ÑÑ' (
return
ÖÖ 
Vector3
ÖÖ "
.
ÖÖ" #
Dot
ÖÖ# &
(
ÖÖ& '
new
ÖÖ' *
Vector3
ÖÖ+ 2
(
ÖÖ2 3'
normalizedLocalCoordinate
ÖÖ3 L
.
ÖÖL M
x
ÖÖM N
,
ÖÖN O'
normalizedLocalCoordinate
ÖÖP i
.
ÖÖi j
y
ÖÖj k
,
ÖÖk l
$num
ÖÖm n
)
ÖÖn o
,
ÖÖo p

m_Contexts
ÖÖq {
.
ÖÖ{ |
layoutÖÖ| Ç
.ÖÖÇ É

gizmoStateÖÖÉ ç
.ÖÖç é
planeÖÖé ì
)ÖÖì î
>=ÖÖï ó
$numÖÖò ô
?
ÜÜ 
	ViewIndex
ÜÜ #
.
ÜÜ# $
First
ÜÜ$ )
:
áá 
	ViewIndex
áá #
.
áá# $
Second
áá$ *
;
áá* +
default
àà 
:
àà 
throw
ââ 
new
ââ 
	Exception
ââ '
(
ââ' (
$str
ââ( c
)
ââc d
;
ââd e
}
ää 
}
ãã 	
}
åå 
}çç Ø
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\QuaternionPropertyDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !

Quaternion! +
)+ ,
), -
]- .
class 	$
QuaternionPropertyDrawer
 "
:# $
PropertyDrawer% 3
{ 
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{		 	
var

 
euler

 
=

 
property

  
.

  !
quaternionValue

! 0
.

0 1
eulerAngles

1 <
;

< =
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
var 
w 
= 
EditorGUIUtility $
.$ %
wideMode% -
;- .
EditorGUIUtility 
. 
wideMode %
=& '
true( ,
;, -
euler 
= 
	EditorGUI 
. 
Vector3Field *
(* +
position+ 3
,3 4
label5 :
,: ;
euler< A
)A B
;B C
EditorGUIUtility 
. 
wideMode %
=& '
w( )
;) *
if 
( 
	EditorGUI 
. 
EndChangeCheck (
(( )
)) *
)* +
property 
. 
quaternionValue (
=) *

Quaternion+ 5
.5 6
Euler6 ;
(; <
euler< A
)A B
;B C
} 	
} 
} ˆ@
´D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\DebugUIHandlerCanvasEditor.cs
	namespace 	
UnityEngine
 
. 
	Rendering 
.  
UI  "
{		 
[

 
CustomEditor

 
(

 
typeof

 
(

  
DebugUIHandlerCanvas

 -
)

- .
)

. /
]

/ 0
sealed 

class &
DebugUIHandlerCanvasEditor +
:, -
Editor. 4
{ 
SerializedProperty 
m_PanelPrefab (
;( )
SerializedProperty 
	m_Prefabs $
;$ %
ReorderableList 
m_PrefabList $
;$ %
static 
string 
[ 
] 
s_Types 
;  
static 
string 
[ 
] 
s_DisplayTypes &
;& '
static &
DebugUIHandlerCanvasEditor )
() *
)* +
{ 	
s_Types 
= 
	CoreUtils 
.  "
GetAllTypesDerivedFrom  6
<6 7
DebugUI7 >
.> ?
Widget? E
>E F
(F G
)G H
. 
Where 
( 
t 
=> 
! 
t 
. 

IsAbstract )
)) *
. 
Select 
( 
t 
=> 
t 
. !
AssemblyQualifiedName 4
)4 5
. 
ToArray 
( 
) 
; 
s_DisplayTypes 
= 
new  
string! '
[' (
s_Types( /
./ 0
Length0 6
]6 7
;7 8
for 
( 
int 
i 
= 
$num 
; 
i 
< 
s_Types  '
.' (
Length( .
;. /
i0 1
++1 3
)3 4
s_DisplayTypes 
[ 
i  
]  !
=" #
Type$ (
.( )
GetType) 0
(0 1
s_Types1 8
[8 9
i9 :
]: ;
); <
.< =
Name= A
;A B
} 	
void   
OnEnable   
(   
)   
{!! 	
var"" 
o"" 
="" 
new"" 
PropertyFetcher"" '
<""' ( 
DebugUIHandlerCanvas""( <
>""< =
(""= >
serializedObject""> N
)""N O
;""O P
m_PanelPrefab## 
=## 
o## 
.## 
Find## "
(##" #
x### $
=>##% '
x##( )
.##) *
panelPrefab##* 5
)##5 6
;##6 7
	m_Prefabs$$ 
=$$ 
o$$ 
.$$ 
Find$$ 
($$ 
x$$  
=>$$! #
x$$$ %
.$$% &
prefabs$$& -
)$$- .
;$$. /
m_PrefabList&& 
=&& 
new&& 
ReorderableList&& .
(&&. /
serializedObject&&/ ?
,&&? @
	m_Prefabs&&A J
,&&J K
true&&L P
,&&P Q
true&&R V
,&&V W
true&&X \
,&&\ ]
true&&^ b
)&&b c
{'' 
drawHeaderCallback(( "
=((# $
rect((% )
=>((* ,
	EditorGUI((- 6
.((6 7

LabelField((7 A
(((A B
rect((B F
,((F G
$str((H X
)((X Y
,((Y Z
drawElementCallback)) #
=))$ %
())& '
rect))' +
,))+ ,
index))- 2
,))2 3
isActive))4 <
,))< =
	isFocused))> G
)))G H
=>))I K
{** 
var++ 
element++ #
=++$ %
m_PrefabList++& 2
.++2 3
serializedProperty++3 E
.++E F"
GetArrayElementAtIndex++F \
(++\ ]
index++] b
)++b c
;++c d
rect,, 
.,, 
y,, 
+=,, !
$num,," $
;,,$ %
const-- 
float-- #

kTypeWidth--$ .
=--/ 0
$num--1 5
;--5 6
var00 
typeProp00 $
=00% &
element00' .
.00. / 
FindPropertyRelative00/ C
(00C D
$str00D J
)00J K
;00K L
int11 
	typeIndex11 %
=11& '
ArrayUtility11( 4
.114 5
IndexOf115 <
(11< =
s_Types11= D
,11D E
typeProp11F N
.11N O
stringValue11O Z
)11Z [
;11[ \
	typeIndex22 !
=22" #
Mathf22$ )
.22) *
Max22* -
(22- .
	typeIndex22. 7
,227 8
$num229 :
)22: ;
;22; <
	typeIndex33 !
=33" #
	EditorGUI33$ -
.33- .
Popup33. 3
(333 4
new334 7
Rect338 <
(33< =
rect33= A
.33A B
x33B C
,33C D
rect33E I
.33I J
y33J K
,33K L

kTypeWidth33M W
,33W X
EditorGUIUtility33Y i
.33i j
singleLineHeight33j z
)33z {
,33{ |
	typeIndex	33} Ü
,
33Ü á
s_DisplayTypes
33à ñ
)
33ñ ó
;
33ó ò
typeProp44  
.44  !
stringValue44! ,
=44- .
s_Types44/ 6
[446 7
	typeIndex447 @
]44@ A
;44A B
	EditorGUI77 !
.77! "
PropertyField77" /
(77/ 0
new88 
Rect88  $
(88$ %
rect88% )
.88) *
x88* +
+88, -

kTypeWidth88. 8
+889 :
$num88; =
,88= >
rect88? C
.88C D
y88D E
,88E F
rect88G K
.88K L
width88L Q
-88R S

kTypeWidth88T ^
-88_ `
$num88a c
,88c d
EditorGUIUtility88e u
.88u v
singleLineHeight	88v Ü
)
88Ü á
,
88á à
element99 #
.99# $ 
FindPropertyRelative99$ 8
(998 9
$str999 A
)99A B
,99B C

GUIContent99D N
.99N O
none99O S
)99S T
;99T U
}:: 
,:: 
onSelectCallback;;  
=;;! "
list;;# '
=>;;( *
{<< 
var== 
prefab== "
===# $
list==% )
.==) *
serializedProperty==* <
.==< ="
GetArrayElementAtIndex=== S
(==S T
list==T X
.==X Y
index==Y ^
)==^ _
.==_ ` 
FindPropertyRelative==` t
(==t u
$str==u }
)==} ~
.==~ !
objectReferenceValue	== ì
as
==î ñ

GameObject
==ó °
;
==° ¢
if>> 
(>> 
prefab>> "
)>>" #
EditorGUIUtility?? ,
.??, -

PingObject??- 7
(??7 8
prefab??8 >
.??> ?

gameObject??? I
)??I J
;??J K
}@@ 
}AA 
;AA 
}BB 	
publicDD 
overrideDD 
voidDD 
OnInspectorGUIDD +
(DD+ ,
)DD, -
{EE 	
serializedObjectFF 
.FF 
UpdateFF #
(FF# $
)FF$ %
;FF% &
EditorGUILayoutHH 
.HH 
PropertyFieldHH )
(HH) *
m_PanelPrefabHH* 7
)HH7 8
;HH8 9
EditorGUILayoutII 
.II 
SpaceII !
(II! "
)II" #
;II# $
m_PrefabListJJ 
.JJ 
DoLayoutListJJ %
(JJ% &
)JJ& '
;JJ' (
serializedObjectLL 
.LL #
ApplyModifiedPropertiesLL 4
(LL4 5
)LL5 6
;LL6 7
}MM 	
}NN 
}OO  m
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\ToolbarRadio.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
class 	
ToolbarRadio
 
: 

UIElements #
.# $
Toolbar$ +
,+ ,
INotifyValueChanged- @
<@ A
intA D
>D E
{		 
public

 
new

 
class

 
UxmlFactory

 $
:

% &
UxmlFactory

' 2
<

2 3
ToolbarRadio

3 ?
,

? @

UxmlTraits

A K
>

K L
{

M N
}

O P
public 
new 
class 

UxmlTraits #
:$ %
Button& ,
., -

UxmlTraits- 7
{8 9
}: ;
List 
< 
ToolbarToggle 
> 
radios "
=# $
new% (
List) -
<- .
ToolbarToggle. ;
>; <
(< =
)= >
;> ?
public 
new 
static 
readonly "
string# )
ussClassName* 6
=7 8
$str9 N
;N O
bool 
m_CanDeselectAll 
= 
false  %
;% &
public 
int 
radioLength 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
=5 6
$num7 8
;8 9
int 
m_Value 
; 
public 
int 
value 
{ 	
get 
=> 
m_Value 
; 
set 
{ 
if 
( 
value 
== 
m_Value $
)$ %
return 
; 
if 
( 
panel 
!= 
null !
)! "
{ 
using   
(   
ChangeEvent   &
<  & '
int  ' *
>  * +
evt  , /
=  0 1
ChangeEvent  2 =
<  = >
int  > A
>  A B
.  B C
	GetPooled  C L
(  L M
m_Value  M T
,  T U
value  V [
)  [ \
)  \ ]
{!! 
evt"" 
."" 
target"" "
=""# $
this""% )
;"") *!
SetValueWithoutNotify## -
(##- .
value##. 3
)##3 4
;##4 5
	SendEvent$$ !
($$! "
evt$$" %
)$$% &
;$$& '
}%% 
}&& 
else'' 
{(( !
SetValueWithoutNotify)) )
())) *
value))* /
)))/ 0
;))0 1
}** 
}++ 
},, 	
public.. 
ToolbarRadio.. 
(.. 
).. 
:.. 
this..  $
(..$ %
null..% )
,..) *
false..+ 0
)..0 1
{..2 3
}..4 5
public00 
ToolbarRadio00 
(00 
string00 "
label00# (
=00) *
null00+ /
,00/ 0
bool001 5
canDeselectAll006 D
=00E F
false00G L
)00L M
{11 	
RemoveFromClassList22 
(22  

UIElements22  *
.22* +
Toolbar22+ 2
.222 3
ussClassName223 ?
)22? @
;22@ A
AddToClassList33 
(33 
ussClassName33 '
)33' (
;33( )
m_CanDeselectAll55 
=55 
canDeselectAll55 -
;55- .
if66 
(66 
m_CanDeselectAll66  
)66  !
m_Value77 
=77 
-77 
$num77 
;77 
if88 
(88 
label88 
!=88 
null88 
)88 
Add99 
(99 
new99 
Label99 
(99 
)99 
{99  !
text99" &
=99' (
label99) .
}99/ 0
)990 1
;991 2
}:: 	
public<< 
void<< 
AddRadio<< 
(<< 
string<< #
text<<$ (
=<<) *
null<<+ /
,<</ 0
	Texture2D<<1 :
icon<<; ?
=<<@ A
null<<B F
,<<F G
string<<H N
tooltip<<O V
=<<W X
null<<Y ]
)<<] ^
{== 	
var>> 
toggle>> 
=>> 
new>> 
ToolbarToggle>> *
(>>* +
)>>+ ,
;>>, -
toggle?? 
.?? (
RegisterValueChangedCallback?? /
(??/ 0
InnerValueChanged??0 A
(??A B
radioLength??B M
)??M N
)??N O
;??O P
toggle@@ 
.@@ !
SetValueWithoutNotify@@ (
(@@( )
radioLength@@) 4
==@@5 7
(@@8 9
m_CanDeselectAll@@9 I
?@@J K
-@@L M
$num@@M N
:@@O P
$num@@Q R
)@@R S
)@@S T
;@@T U
toggleAA 
.AA 
tooltipAA 
=AA 
tooltipAA $
;AA$ %
radiosBB 
.BB 
AddBB 
(BB 
toggleBB 
)BB 
;BB 
ifCC 
(CC 
iconCC 
!=CC 
nullCC 
)CC 
{DD 
varEE 
childsContainerEE #
=EE$ %
toggleEE& ,
.EE, -
QEE- .
(EE. /
nullEE/ 3
,EE3 4
ToolbarToggleEE5 B
.EEB C
inputUssClassNameEEC T
)EET U
;EEU V
childsContainerFF 
.FF  
AddFF  #
(FF# $
newFF$ '
ImageFF( -
(FF- .
)FF. /
{FF0 1
imageFF2 7
=FF8 9
iconFF: >
}FF? @
)FF@ A
;FFA B
ifGG 
(GG 
textGG 
!=GG 
nullGG  
)GG  !
childsContainerHH #
.HH# $
AddHH$ '
(HH' (
newHH( +
LabelHH, 1
(HH1 2
)HH2 3
{HH4 5
textHH6 :
=HH; <
textHH= A
}HHB C
)HHC D
;HHD E
}II 
elseJJ 
toggleKK 
.KK 
textKK 
=KK 
textKK "
;KK" #
AddLL 
(LL 
toggleLL 
)LL 
;LL 
ifMM 
(MM 
radioLengthMM 
==MM 
$numMM  
)MM  !
toggleNN 
.NN 
styleNN 
.NN 
borderLeftWidthNN ,
=NN- .
$numNN/ 0
;NN0 1
radioLengthOO 
++OO 
;OO 
}PP 	
publicRR 
voidRR 
	AddRadiosRR 
(RR 
stringRR $
[RR$ %
]RR% &
labelsRR' -
)RR- .
{SS 	
foreachTT 
(TT 
varTT 
labelTT 
inTT !
labelsTT" (
)TT( )
AddRadioUU 
(UU 
labelUU 
)UU 
;UU  
}VV 	
publicWW 
voidWW 
	AddRadiosWW 
(WW 
(WW 
stringWW %
textWW& *
,WW* +
stringWW, 2
tooltipWW3 :
)WW: ;
[WW; <
]WW< =
labelsWW> D
)WWD E
{XX 	
foreachYY 
(YY 
varYY 
labelYY 
inYY !
labelsYY" (
)YY( )
AddRadioZZ 
(ZZ 
labelZZ 
.ZZ 
textZZ #
,ZZ# $
nullZZ% )
,ZZ) *
labelZZ+ 0
.ZZ0 1
tooltipZZ1 8
)ZZ8 9
;ZZ9 :
}[[ 	
public]] 
void]] 
	AddRadios]] 
(]] 
	Texture2D]] '
[]]' (
]]]( )
icons]]* /
)]]/ 0
{^^ 	
foreach__ 
(__ 
var__ 
icon__ 
in__  
icons__! &
)__& '
AddRadio`` 
(`` 
null`` 
,`` 
icon`` #
)``# $
;``$ %
}aa 	
publiccc 
voidcc 
	AddRadioscc 
(cc 
(cc 
stringcc %
textcc& *
,cc* +
	Texture2Dcc, 5
iconcc6 :
)cc: ;
[cc; <
]cc< =
labelscc> D
)ccD E
{dd 	
foreachee 
(ee 
varee 
labelee 
inee !
labelsee" (
)ee( )
AddRadioff 
(ff 
labelff 
.ff 
textff #
,ff# $
labelff% *
.ff* +
iconff+ /
)ff/ 0
;ff0 1
}gg 	
publicii 
voidii 
	AddRadiosii 
(ii 
(ii 
	Texture2Dii (
iconii) -
,ii- .
stringii/ 5
tooltipii6 =
)ii= >
[ii> ?
]ii? @
labelsiiA G
)iiG H
{jj 	
foreachkk 
(kk 
varkk 
labelkk 
inkk !
labelskk" (
)kk( )
AddRadioll 
(ll 
nullll 
,ll 
labelll $
.ll$ %
iconll% )
,ll) *
labelll+ 0
.ll0 1
tooltipll1 8
)ll8 9
;ll9 :
}mm 	
publicoo 
voidoo 
	AddRadiosoo 
(oo 
(oo 
stringoo %
textoo& *
,oo* +
	Texture2Doo, 5
iconoo6 :
,oo: ;
stringoo< B
tooltipooC J
)ooJ K
[ooK L
]ooL M
labelsooN T
)ooT U
{pp 	
foreachqq 
(qq 
varqq 
labelqq 
inqq !
labelsqq" (
)qq( )
AddRadiorr 
(rr 
labelrr 
.rr 
textrr #
,rr# $
labelrr% *
.rr* +
iconrr+ /
,rr/ 0
labelrr1 6
.rr6 7
tooltiprr7 >
)rr> ?
;rr? @
}ss 	
EventCallbackuu 
<uu 
ChangeEventuu !
<uu! "
booluu" &
>uu& '
>uu' (
InnerValueChangeduu) :
(uu: ;
intuu; >

radioIndexuu? I
)uuI J
{vv 	
returnww 
(ww 
ChangeEventww 
<ww  
boolww  $
>ww$ %
evtww& )
)ww) *
=>ww+ -
{xx 
ifyy 
(yy 

radioIndexyy 
==yy !
m_Valueyy" )
)yy) *
{zz 
if{{ 
({{ 
!{{ 
evt{{ 
.{{ 
newValue{{ %
&&{{& (
!{{) *
m_CanDeselectAll{{* :
){{: ;
radios|| 
[|| 

radioIndex|| )
]||) *
.||* +!
SetValueWithoutNotify||+ @
(||@ A
true||A E
)||E F
;||F G
else}} 
value~~ 
=~~ 
-~~  !
$num~~! "
;~~" #
} 
else
ÄÄ 
value
ÅÅ 
=
ÅÅ 

radioIndex
ÅÅ &
;
ÅÅ& '
}
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
void
ÖÖ #
SetValueWithoutNotify
ÖÖ )
(
ÖÖ) *
int
ÖÖ* -
newValue
ÖÖ. 6
)
ÖÖ6 7
{
ÜÜ 	
if
áá 
(
áá 
m_Value
áá 
!=
áá 
newValue
áá #
)
áá# $
{
àà 
if
ââ 
(
ââ 
newValue
ââ 
<
ââ 
(
ââ  
m_CanDeselectAll
ââ  0
?
ââ1 2
-
ââ3 4
$num
ââ4 5
:
ââ6 7
$num
ââ8 9
)
ââ9 :
||
ââ; =
newValue
ââ> F
>=
ââG I
radioLength
ââJ U
)
ââU V
throw
ää 
new
ää 
System
ää $
.
ää$ %&
IndexOutOfRangeException
ää% =
(
ää= >
)
ää> ?
;
ää? @
if
åå 
(
åå 
m_Value
åå 
==
åå 
newValue
åå '
&&
åå( *
m_CanDeselectAll
åå+ ;
)
åå; <
{
çç 
if
éé 
(
éé 
m_Value
éé 
>
éé  !
-
éé" #
$num
éé# $
)
éé$ %
radios
èè 
[
èè 
m_Value
èè &
]
èè& '
.
èè' (#
SetValueWithoutNotify
èè( =
(
èè= >
false
èè> C
)
èèC D
;
èèD E
m_Value
êê 
=
êê 
-
êê 
$num
êê  
;
êê  !
}
ëë 
else
íí 
{
ìì 
if
îî 
(
îî 
m_Value
îî 
>
îî  !
-
îî" #
$num
îî# $
)
îî$ %
radios
ïï 
[
ïï 
m_Value
ïï &
]
ïï& '
.
ïï' (#
SetValueWithoutNotify
ïï( =
(
ïï= >
false
ïï> C
)
ïïC D
;
ïïD E
if
ññ 
(
ññ 
newValue
ññ  
>
ññ! "
-
ññ# $
$num
ññ$ %
)
ññ% &
radios
óó 
[
óó 
newValue
óó '
]
óó' (
.
óó( )#
SetValueWithoutNotify
óó) >
(
óó> ?
true
óó? C
)
óóC D
;
óóD E
m_Value
òò 
=
òò 
newValue
òò &
;
òò& '
}
ôô 
}
öö 
}
õõ 	
}
úú 
}ùù ‡—
´D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\DisplayWindow.DebugSidePanel.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{		 
partial

 
class

 
DisplayWindow

 
{ 
static 
partial 
class 
Style "
{ 	
internal 
const 
string !
k_DebugViewLabel" 2
=3 4
$str5 D
;D E
internal 
const 
string !
k_DebugShadowLabel" 4
=5 6
$str7 H
;H I
internal 
const 
string !
k_DebugViewMode" 1
=2 3
$str4 ?
;? @
internal 
static 
readonly $
	Texture2D% .

k_LockOpen/ 9
=: ;
CoreEditorUtils< K
.K L
LoadIconL T
(T U
StyleU Z
.Z [
k_IconFolder[ g
,g h
$stri s
,s t
forceLowRes	u Ä
:
Ä Å
true
Ç Ü
)
Ü á
;
á à
internal 
static 
readonly $
	Texture2D% .
k_LockClose/ :
=; <
CoreEditorUtils= L
.L M
LoadIconM U
(U V
StyleV [
.[ \
k_IconFolder\ h
,h i
$strj r
,r s
forceLowRest 
:	 Ä
true
Å Ö
)
Ö Ü
;
Ü á
internal 
const 
string !
k_DebugToolbarName" 4
=5 6
$str7 E
;E F
} 	 
MultipleSourceToggle 
m_Shadow %
;% &$
MultipleSourcePopupField  
m_DebugView! ,
;, -
List 
< 
string 
> 
listDebugMode "
;" #
bool   
cameraSynced   
=>!! 
LookDev!! 
.!! 
currentContext!! %
.!!% &
cameraSynced!!& 2
;!!2 3
ViewContext## "
lastFocusedViewContext## *
=>$$ 
LookDev$$ 
.$$ 
currentContext$$ %
.$$% &
GetViewContent$$& 4
($$4 5
LookDev$$5 <
.$$< =
currentContext$$= K
.$$K L
layout$$L R
.$$R S
lastFocusedView$$S b
)$$b c
;$$c d
TargetDebugView&& 
targetDebugView&& '
{'' 	
get(( 
=>(( 
layout(( 
.(( 
debugPanelSource(( *
;((* +
set)) 
{** 
if++ 
(++ 
layout++ 
.++ 
debugPanelSource++ +
!=++, .
value++/ 4
)++4 5
{,, 
layout-- 
.-- 
debugPanelSource-- +
=--, -
value--. 3
;--3 4*
UpdateSideDebugPanelProperties.. 2
(..2 3
)..3 4
;..4 5
}// 
}00 
}11 	
bool33 
debugView1SidePanel33  
=>44 
targetDebugView44 
==44 !
TargetDebugView44" 1
.441 2
First442 7
||55 
targetDebugView55 
==55 !
TargetDebugView55" 1
.551 2
Both552 6
;556 7
bool77 
debugView2SidePanel77  
=>88 
targetDebugView88 
==88 !
TargetDebugView88" 1
.881 2
Second882 8
||99 
targetDebugView99 
==99 !
TargetDebugView99" 1
.991 2
Both992 6
;996 7
void;; '
ApplyInFilteredViewsContext;; (
(;;( )
Action;;) /
<;;/ 0
ViewContext;;0 ;
>;;; <
action;;= C
);;C D
{<< 	
if== 
(== 
debugView1SidePanel== #
)==# $
action>> 
.>> 
Invoke>> 
(>> 
LookDev>> %
.>>% &
currentContext>>& 4
.>>4 5
GetViewContent>>5 C
(>>C D
	ViewIndex>>D M
.>>M N
First>>N S
)>>S T
)>>T U
;>>U V
if?? 
(?? 
debugView2SidePanel?? #
)??# $
action@@ 
.@@ 
Invoke@@ 
(@@ 
LookDev@@ %
.@@% &
currentContext@@& 4
.@@4 5
GetViewContent@@5 C
(@@C D
	ViewIndex@@D M
.@@M N
Second@@N T
)@@T U
)@@U V
;@@V W
}AA 	
TCC 	%
GetInFilteredViewsContextCC
 #
<CC# $
TCC$ %
>CC% &
(CC& '
FuncCC' +
<CC+ ,
ViewContextCC, 7
,CC7 8
TCC9 :
>CC: ;
getterCC< B
,CCB C
outCCD G
boolCCH L"
multipleDifferentValueCCM c
)CCc d
{DD 	
TEE 
res1EE 
=EE 
defaultEE 
;EE 
TFF 
res2FF 
=FF 
defaultFF 
;FF "
multipleDifferentValueGG "
=GG# $
falseGG% *
;GG* +
boolHH 
view1HH 
=HH 
debugView1SidePanelHH ,
;HH, -
boolII 
view2II 
=II 
debugView2SidePanelII ,
;II, -
ifKK 
(KK 
view1KK 
)KK 
res1LL 
=LL 
getterLL 
.LL 
InvokeLL $
(LL$ %
LookDevLL% ,
.LL, -
currentContextLL- ;
.LL; <
GetViewContentLL< J
(LLJ K
	ViewIndexLLK T
.LLT U
FirstLLU Z
)LLZ [
)LL[ \
;LL\ ]
ifMM 
(MM 
view2MM 
)MM 
res2NN 
=NN 
getterNN 
.NN 
InvokeNN $
(NN$ %
LookDevNN% ,
.NN, -
currentContextNN- ;
.NN; <
GetViewContentNN< J
(NNJ K
	ViewIndexNNK T
.NNT U
SecondNNU [
)NN[ \
)NN\ ]
;NN] ^
ifOO 
(OO 
view1OO 
&&OO 
view2OO 
&&OO !
!OO" #
res1OO# '
.OO' (
EqualsOO( .
(OO. /
res2OO/ 3
)OO3 4
)OO4 5
{PP "
multipleDifferentValueQQ &
=QQ' (
trueQQ) -
;QQ- .
returnRR 
defaultRR 
;RR 
}SS 
elseTT 
returnUU 
view1UU 
?UU 
res1UU #
:UU$ %
res2UU& *
;UU* +
}VV 	
voidXX -
!ReadValueFromSourcesWithoutNotifyXX .
<XX. /
TXX/ 0
,XX0 1
KXX2 3
>XX3 4
(XX4 5
KXX5 6
elementXX7 >
,XX> ?
FuncXX@ D
<XXD E
ViewContextXXE P
,XXP Q
TXXR S
>XXS T
fromXXU Y
)XXY Z
whereYY 
KYY 
:YY 
	BaseFieldYY 
<YY  
TYY  !
>YY! "
,YY" #
IMultipleSourceYY$ 3
{ZZ 	
bool[[ "
multipleDifferentValue[[ '
;[[' (
T\\ 
newValue\\ 
=\\ %
GetInFilteredViewsContext\\ 2
(\\2 3
from\\3 7
,\\7 8
out\\9 <"
multipleDifferentValue\\= S
)\\S T
;\\T U
if]] 
(]] 
element]] 
is]] $
MultipleSourcePopupField]] 3
)]]3 4
element^^ 
.^^  
inMultipleValueState^^ ,
=^^- ."
multipleDifferentValue^^/ E
;^^E F
element__ 
.__ !
SetValueWithoutNotify__ )
(__) *
newValue__* 2
)__2 3
;__3 4
element`` 
.``  
inMultipleValueState`` (
=``) *"
multipleDifferentValue``+ A
;``A B
}aa 	
classee "
MultipleDifferentValueee $
:ee% &
TextElementee' 2
{ff 	
publicgg 
newgg 
classgg 
UxmlFactorygg (
:gg) *
UxmlFactorygg+ 6
<gg6 7"
MultipleDifferentValuegg7 M
,ggM N

UxmlTraitsggO Y
>ggY Z
{gg[ \
}gg] ^
publicii 
newii 
classii 

UxmlTraitsii '
:ii( )
TextElementii* 5
.ii5 6

UxmlTraitsii6 @
{iiA B
}iiC D
publickk 
newkk 
statickk 
readonlykk &
stringkk' -
ussClassNamekk. :
=kk; <
$strkk= \
;kk\ ]
publicmm "
MultipleDifferentValuemm )
(mm) *
)mm* +
{nn 
AddToClassListoo 
(oo 
ussClassNameoo +
)oo+ ,
;oo, -
textpp 
=pp 
$strpp 
;pp 
}qq 
}rr 	
	interfacett 
IMultipleSourcett !
{uu 	
boolvv  
inMultipleValueStatevv %
{vv& '
getvv( +
;vv+ ,
setvv- 0
;vv0 1
}vv2 3
}ww 	
classyy  
MultipleSourceToggleyy "
:yy# $
Toggleyy% +
,yy+ ,
IMultipleSourceyy- <
{zz 	"
MultipleDifferentValue{{ "
m_MultipleOverlay{{# 4
;{{4 5
bool|| "
m_InMultipleValueState|| '
=||( )
false||* /
;||/ 0
public~~ 
bool~~  
inMultipleValueState~~ ,
{ 
get
ÄÄ 
=>
ÄÄ $
m_InMultipleValueState
ÄÄ -
;
ÄÄ- .
set
ÅÅ 
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
value
ÉÉ 
!=
ÉÉ  $
m_InMultipleValueState
ÉÉ! 7
)
ÉÉ7 8
{
ÑÑ 
m_MultipleOverlay
ÖÖ )
.
ÖÖ) *
style
ÖÖ* /
.
ÖÖ/ 0
display
ÖÖ0 7
=
ÖÖ8 9
value
ÖÖ: ?
?
ÖÖ@ A
DisplayStyle
ÖÖB N
.
ÖÖN O
Flex
ÖÖO S
:
ÖÖT U
DisplayStyle
ÖÖV b
.
ÖÖb c
None
ÖÖc g
;
ÖÖg h$
m_InMultipleValueState
ÜÜ .
=
ÜÜ/ 0
value
ÜÜ1 6
;
ÜÜ6 7
}
áá 
}
àà 
}
ââ 
public
ãã "
MultipleSourceToggle
ãã '
(
ãã' (
)
ãã( )
:
ãã* +
base
ãã, 0
(
ãã1 2
)
ãã2 3
{
åå 
m_MultipleOverlay
çç !
=
çç" #
new
çç$ '$
MultipleDifferentValue
çç( >
(
çç> ?
)
çç? @
;
çç@ A
this
éé 
.
éé 
Q
éé 
(
éé 
name
éé 
:
éé 
$str
éé .
)
éé. /
.
éé/ 0
Add
éé0 3
(
éé3 4
m_MultipleOverlay
éé4 E
)
ééE F
;
ééF G
m_MultipleOverlay
èè !
.
èè! "
style
èè" '
.
èè' (
display
èè( /
=
èè0 1
DisplayStyle
èè2 >
.
èè> ?
None
èè? C
;
èèC D
}
êê 
public
íí "
MultipleSourceToggle
íí '
(
íí' (
string
íí( .
label
íí/ 4
)
íí4 5
:
íí6 7
base
íí8 <
(
íí< =
label
íí= B
)
ííB C
{
ìì 
m_MultipleOverlay
îî !
=
îî" #
new
îî$ '$
MultipleDifferentValue
îî( >
(
îî> ?
)
îî? @
;
îî@ A
this
ïï 
.
ïï 
Q
ïï 
(
ïï 
name
ïï 
:
ïï 
$str
ïï .
)
ïï. /
.
ïï/ 0
Add
ïï0 3
(
ïï3 4
m_MultipleOverlay
ïï4 E
)
ïïE F
;
ïïF G
m_MultipleOverlay
ññ !
.
ññ! "
style
ññ" '
.
ññ' (
display
ññ( /
=
ññ0 1
DisplayStyle
ññ2 >
.
ññ> ?
None
ññ? C
;
ññC D
}
óó 
public
ôô 
override
ôô 
void
ôô  #
SetValueWithoutNotify
ôô! 6
(
ôô6 7
bool
ôô7 ;
newValue
ôô< D
)
ôôD E
{
öö 
if
õõ 
(
õõ "
inMultipleValueState
õõ (
)
õõ( )"
inMultipleValueState
úú (
=
úú) *
false
úú+ 0
;
úú0 1
base
ùù 
.
ùù #
SetValueWithoutNotify
ùù *
(
ùù* +
newValue
ùù+ 3
)
ùù3 4
;
ùù4 5
}
ûû 
public
†† 
override
†† 
bool
††  
value
††! &
{
°° 
get
¢¢ 
=>
¢¢ "
inMultipleValueState
¢¢ +
?
¢¢, -
default
¢¢. 5
:
¢¢6 7
base
¢¢8 <
.
¢¢< =
value
¢¢= B
;
¢¢B C
set
££ 
{
§§ 
if
•• 
(
•• "
inMultipleValueState
•• ,
)
••, -"
inMultipleValueState
¶¶ ,
=
¶¶- .
false
¶¶/ 4
;
¶¶4 5
base
ßß 
.
ßß 
value
ßß 
=
ßß  
value
ßß! &
;
ßß& '
}
®® 
}
©© 
}
™™ 	
class
¨¨ &
MultipleSourcePopupField
¨¨ &
:
¨¨' (

PopupField
¨¨) 3
<
¨¨3 4
string
¨¨4 :
>
¨¨: ;
,
¨¨; <
IMultipleSource
¨¨= L
{
≠≠ 	
internal
ÆÆ 
readonly
ÆÆ 
int
ÆÆ !
count
ÆÆ" '
;
ÆÆ' ($
MultipleDifferentValue
ØØ "
m_MultipleOverlay
ØØ# 4
;
ØØ4 5
bool
∞∞ $
m_InMultipleValueState
∞∞ '
=
∞∞( )
false
∞∞* /
;
∞∞/ 0
public
≤≤ 
bool
≤≤ "
inMultipleValueState
≤≤ ,
{
≥≥ 
get
¥¥ 
=>
¥¥ $
m_InMultipleValueState
¥¥ -
;
¥¥- .
set
µµ 
{
∂∂ 
if
∑∑ 
(
∑∑ 
value
∑∑ 
!=
∑∑  $
m_InMultipleValueState
∑∑! 7
)
∑∑7 8
{
∏∏ 
m_MultipleOverlay
ππ )
.
ππ) *
style
ππ* /
.
ππ/ 0
display
ππ0 7
=
ππ8 9
value
ππ: ?
?
ππ@ A
DisplayStyle
ππB N
.
ππN O
Flex
ππO S
:
ππT U
DisplayStyle
ππV b
.
ππb c
None
ππc g
;
ππg h$
m_InMultipleValueState
∫∫ .
=
∫∫/ 0
value
∫∫1 6
;
∫∫6 7
}
ªª 
}
ºº 
}
ΩΩ 
public
øø &
MultipleSourcePopupField
øø +
(
øø+ ,
string
øø, 2
label
øø3 8
,
øø8 9
List
øø: >
<
øø> ?
string
øø? E
>
øøE F
choices
øøG N
,
øøN O
int
øøP S
defaultIndex
øøT `
=
øøa b
$num
øøc d
)
øød e
:
¿¿ 
base
¿¿ 
(
¿¿ 
label
¡¡ 
,
¡¡ 
choices
¬¬ 
,
¬¬ 
defaultIndex
√√ "
,
√√" #
null
ƒƒ 
,
ƒƒ 
null
≈≈ 
)
≈≈ 
{
∆∆ 
count
«« 
=
«« 
choices
«« 
.
««  
Count
««  %
;
««% &
m_MultipleOverlay
»» !
=
»»" #
new
»»$ '$
MultipleDifferentValue
»»( >
(
»»> ?
)
»»? @
;
»»@ A
Add
…… 
(
…… 
m_MultipleOverlay
…… %
)
……% &
;
……& '
m_MultipleOverlay
   !
.
  ! "
style
  " '
.
  ' (
display
  ( /
=
  0 1
DisplayStyle
  2 >
.
  > ?
None
  ? C
;
  C D
}
ÀÀ 
public
ÕÕ 
override
ÕÕ 
void
ÕÕ  #
SetValueWithoutNotify
ÕÕ! 6
(
ÕÕ6 7
string
ÕÕ7 =
newValue
ÕÕ> F
)
ÕÕF G
{
ŒŒ 
if
–– 
(
–– 
!
–– "
inMultipleValueState
–– )
)
––) *
base
—— 
.
—— #
SetValueWithoutNotify
—— .
(
——. /
newValue
——/ 7
)
——7 8
;
——8 9
}
““ 
public
‘‘ 
override
‘‘ 
string
‘‘ "
value
‘‘# (
{
’’ 
get
÷÷ 
=>
÷÷ "
inMultipleValueState
÷÷ +
?
÷÷, -
default
÷÷. 5
:
÷÷6 7
base
÷÷8 <
.
÷÷< =
value
÷÷= B
;
÷÷B C
set
◊◊ 
{
ÿÿ 
if
⁄⁄ 
(
⁄⁄ "
inMultipleValueState
⁄⁄ ,
)
⁄⁄, -"
inMultipleValueState
€€ ,
=
€€- .
false
€€/ 4
;
€€4 5
base
‹‹ 
.
‹‹ 
value
‹‹ 
=
‹‹  
value
‹‹! &
;
‹‹& '
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 	
void
„„ 
CreateDebug
„„ 
(
„„ 
)
„„ 
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
m_MainContainer
ÂÂ 
==
ÂÂ  "
null
ÂÂ# '
||
ÂÂ( *
m_MainContainer
ÂÂ+ :
.
ÂÂ: ;
Equals
ÂÂ; A
(
ÂÂA B
null
ÂÂB F
)
ÂÂF G
)
ÂÂG H
throw
ÊÊ 
new
ÊÊ 
System
ÊÊ  
.
ÊÊ  !#
MemberAccessException
ÊÊ! 6
(
ÊÊ6 7
$str
ÊÊ7 u
)
ÊÊu v
;
ÊÊv w
m_DebugContainer
ËË 
=
ËË 
new
ËË "
VisualElement
ËË# 0
(
ËË0 1
)
ËË1 2
{
ËË3 4
name
ËË5 9
=
ËË: ;
Style
ËË< A
.
ËËA B"
k_DebugContainerName
ËËB V
}
ËËW X
;
ËËX Y
m_MainContainer
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ  
m_DebugContainer
ÈÈ  0
)
ÈÈ0 1
;
ÈÈ1 2
if
ÍÍ 
(
ÍÍ 
	sidePanel
ÍÍ 
==
ÍÍ 
	SidePanel
ÍÍ &
.
ÍÍ& '
Debug
ÍÍ' ,
)
ÍÍ, -
m_MainContainer
ÎÎ 
.
ÎÎ  
AddToClassList
ÎÎ  .
(
ÎÎ. /
Style
ÎÎ/ 4
.
ÎÎ4 5#
k_ShowDebugPanelClass
ÎÎ5 J
)
ÎÎJ K
;
ÎÎK L"
AddDebugViewSelector
ÌÌ  
(
ÌÌ  !
)
ÌÌ! "
;
ÌÌ" #
AddDebugShadow
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
AddDebugViewMode
 
(
 
)
 
;
 
if
˛˛ 
(
˛˛ 
	sidePanel
˛˛ 
==
˛˛ 
	SidePanel
˛˛ &
.
˛˛& '
Debug
˛˛' ,
)
˛˛, -,
UpdateSideDebugPanelProperties
ˇˇ .
(
ˇˇ. /
)
ˇˇ/ 0
;
ˇˇ0 1
}
ÄÄ 	
void
ÇÇ "
AddDebugViewSelector
ÇÇ !
(
ÇÇ! "
)
ÇÇ" #
{
ÉÉ 	
ToolbarRadio
ÑÑ 
viewSelector
ÑÑ %
=
ÑÑ& '
new
ÑÑ( +
ToolbarRadio
ÑÑ, 8
(
ÑÑ8 9
)
ÑÑ9 :
{
ÖÖ 
name
ÜÜ 
=
ÜÜ 
Style
ÜÜ 
.
ÜÜ  
k_DebugToolbarName
ÜÜ /
}
áá 
;
áá 
viewSelector
àà 
.
àà 
	AddRadios
àà "
(
àà" #
new
àà# &
[
àà& '
]
àà' (
{
ââ 
Style
ää 
.
ää 
k_Camera1Icon
ää #
,
ää# $
Style
ãã 
.
ãã 

k_LinkIcon
ãã  
,
ãã  !
Style
åå 
.
åå 
k_Camera2Icon
åå #
}
çç 
)
çç 
;
çç 
viewSelector
éé 
.
éé #
SetValueWithoutNotify
éé .
(
éé. /
(
éé/ 0
int
éé0 3
)
éé3 4
targetDebugView
éé4 C
)
ééC D
;
ééD E
viewSelector
èè 
.
èè *
RegisterValueChangedCallback
èè 5
(
èè5 6
evt
èè6 9
=>
êê 
targetDebugView
êê "
=
êê# $
(
êê% &
TargetDebugView
êê& 5
)
êê5 6
evt
êê6 9
.
êê9 :
newValue
êê: B
)
êêB C
;
êêC D
m_DebugContainer
ëë 
.
ëë 
Add
ëë  
(
ëë  !
viewSelector
ëë! -
)
ëë- .
;
ëë. /
}
íí 	
void
îî 
AddDebugShadow
îî 
(
îî 
)
îî 
{
ïï 	
m_Shadow
ññ 
=
ññ 
new
ññ "
MultipleSourceToggle
ññ /
(
ññ/ 0
Style
ññ0 5
.
ññ5 6 
k_DebugShadowLabel
ññ6 H
)
ññH I
;
ññI J/
!ReadValueFromSourcesWithoutNotify
óó -
(
óó- .
m_Shadow
óó. 6
,
óó6 7
view
óó8 <
=>
óó= ?
view
óó@ D
.
óóD E
debug
óóE J
.
óóJ K
shadow
óóK Q
)
óóQ R
;
óóR S
m_Shadow
òò 
.
òò *
RegisterValueChangedCallback
òò 1
(
òò1 2
evt
òò2 5
=>
ôô )
ApplyInFilteredViewsContext
ôô .
(
ôô. /
view
ôô/ 3
=>
ôô4 6
view
ôô7 ;
.
ôô; <
debug
ôô< A
.
ôôA B
shadow
ôôB H
=
ôôI J
evt
ôôK N
.
ôôN O
newValue
ôôO W
)
ôôW X
)
ôôX Y
;
ôôY Z
m_DebugContainer
öö 
.
öö 
Add
öö  
(
öö  !
m_Shadow
öö! )
)
öö) *
;
öö* +
}
õõ 	
void
ùù 
AddDebugViewMode
ùù 
(
ùù 
int
ùù !
pos
ùù" %
=
ùù& '
-
ùù( )
$num
ùù) *
)
ùù* +
{
ûû 	
if
¢¢ 
(
¢¢ 
LookDev
¢¢ 
.
¢¢ 
dataProvider
¢¢ $
==
¢¢% '
null
¢¢( ,
)
¢¢, -
{
££ 
EditorApplication
§§ !
.
§§! "
	delayCall
§§" +
+=
§§, .
(
§§/ 0
)
§§0 1
=>
§§2 4
AddDebugViewMode
§§5 E
(
§§E F
$num
§§F G
)
§§G H
;
§§H I
return
•• 
;
•• 
}
¶¶ 
if
®® 
(
®® 
m_DebugView
®® 
!=
®® 
null
®® #
&&
®®$ &
m_DebugContainer
®®' 7
.
®®7 8
Contains
®®8 @
(
®®@ A
m_DebugView
®®A L
)
®®L M
)
®®M N
m_DebugContainer
©©  
.
©©  !
Remove
©©! '
(
©©' (
m_DebugView
©©( 3
)
©©3 4
;
©©4 5
listDebugMode
´´ 
=
´´ 
new
´´ 
List
´´  $
<
´´$ %
string
´´% +
>
´´+ ,
(
´´, -
LookDev
´´- 4
.
´´4 5
dataProvider
´´5 A
?
´´A B
.
´´B C!
supportedDebugModes
´´C V
??
´´W Y

Enumerable
´´Z d
.
´´d e
Empty
´´e j
<
´´j k
string
´´k q
>
´´q r
(
´´r s
)
´´s t
)
´´t u
;
´´u v
listDebugMode
¨¨ 
.
¨¨ 
Insert
¨¨  
(
¨¨  !
$num
¨¨! "
,
¨¨" #
$str
¨¨$ *
)
¨¨* +
;
¨¨+ ,
m_DebugView
≠≠ 
=
≠≠ 
new
≠≠ &
MultipleSourcePopupField
≠≠ 6
(
≠≠6 7
Style
≠≠7 <
.
≠≠< =
k_DebugViewMode
≠≠= L
,
≠≠L M
listDebugMode
≠≠N [
)
≠≠[ \
;
≠≠\ ]
if
ÆÆ 
(
ÆÆ 
	sidePanel
ÆÆ 
==
ÆÆ 
	SidePanel
ÆÆ &
.
ÆÆ& '
Debug
ÆÆ' ,
)
ÆÆ, -/
!ReadValueFromSourcesWithoutNotify
ØØ 1
(
ØØ1 2
m_DebugView
ØØ2 =
,
ØØ= >
view
ØØ? C
=>
ØØD F
listDebugMode
ØØG T
[
ØØT U
view
ØØU Y
.
ØØY Z
debug
ØØZ _
.
ØØ_ `
viewMode
ØØ` h
+
ØØi j
$num
ØØk l
]
ØØl m
)
ØØm n
;
ØØn o
m_DebugView
∞∞ 
.
∞∞ *
RegisterValueChangedCallback
∞∞ 4
(
∞∞4 5
evt
∞∞5 8
=>
±± )
ApplyInFilteredViewsContext
±± .
(
±±. /
view
±±/ 3
=>
±±4 6
view
±±7 ;
.
±±; <
debug
±±< A
.
±±A B
viewMode
±±B J
=
±±K L
listDebugMode
±±M Z
.
±±Z [
IndexOf
±±[ b
(
±±b c
evt
±±c f
.
±±f g
newValue
±±g o
)
±±o p
-
±±q r
$num
±±s t
)
±±t u
)
±±u v
;
±±v w
if
≤≤ 
(
≤≤ 
pos
≤≤ 
==
≤≤ 
-
≤≤ 
$num
≤≤ 
)
≤≤ 
m_DebugContainer
≥≥  
.
≥≥  !
Add
≥≥! $
(
≥≥$ %
m_DebugView
≥≥% 0
)
≥≥0 1
;
≥≥1 2
else
¥¥ 
m_DebugContainer
µµ  
.
µµ  !
Insert
µµ! '
(
µµ' (
pos
µµ( +
,
µµ+ ,
m_DebugView
µµ- 8
)
µµ8 9
;
µµ9 :
}
∂∂ 	
void
∏∏ ,
UpdateSideDebugPanelProperties
∏∏ +
(
∏∏+ ,
)
∏∏, -
{
ππ 	/
!ReadValueFromSourcesWithoutNotify
∫∫ -
(
∫∫- .
m_Shadow
∫∫. 6
,
∫∫6 7
view
∫∫8 <
=>
∫∫= ?
view
∫∫@ D
.
∫∫D E
debug
∫∫E J
.
∫∫J K
shadow
∫∫K Q
)
∫∫Q R
;
∫∫R S
if
ªª 
(
ªª 
m_DebugView
ªª 
!=
ªª 
null
ªª #
)
ªª# $/
!ReadValueFromSourcesWithoutNotify
ºº 1
(
ºº1 2
m_DebugView
ºº2 =
,
ºº= >
view
ºº? C
=>
ººD F
listDebugMode
ººG T
[
ººT U
view
ººU Y
.
ººY Z
debug
ººZ _
.
ºº_ `
viewMode
ºº` h
+
ººi j
$num
ººk l
]
ººl m
)
ººm n
;
ººn o
}
ΩΩ 	
}
ææ 
}øø ‡I
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\DebugState.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[

 
Serializable

 
]

 
public 

abstract 
class 

DebugState $
:% &
ScriptableObject' 7
{ 
[ 	
SerializeField	 
] 
	protected 
string 
m_QueryPath $
;$ %
internal 
static 

DebugState "
m_CurrentDirtyState# 6
;6 7
public 
string 
	queryPath 
{ 	
get 
{ 
return 
m_QueryPath $
;$ %
}& '
internal 
set 
{ 
m_QueryPath &
=' (
value) .
;. /
}0 1
}   	
public&& 
abstract&& 
object&& 
GetValue&& '
(&&' (
)&&( )
;&&) *
public-- 
abstract-- 
void-- 
SetValue-- %
(--% &
object--& ,
value--- 2
,--2 3
DebugUI--4 ;
.--; <
IValueField--< G
field--H M
)--M N
;--N O
public22 
virtual22 
void22 
OnEnable22 $
(22$ %
)22% &
{33 	
	hideFlags44 
=44 
	HideFlags44 !
.44! "
HideAndDontSave44" 1
;441 2
}55 	
}66 
[<< 
Serializable<< 
]<< 
public== 

class== 

DebugState== 
<== 
T== 
>== 
:==  

DebugState==! +
{>> 
[BB 	
SerializeFieldBB	 
]BB 
	protectedCC 
TCC 
m_ValueCC 
;CC 
publicHH 
virtualHH 
THH 
valueHH 
{II 	
getJJ 
{JJ 
returnJJ 
m_ValueJJ  
;JJ  !
}JJ" #
setKK 
{KK 
m_ValueKK 
=KK 
valueKK !
;KK! "
}KK# $
}LL 	
publicRR 
overrideRR 
objectRR 
GetValueRR '
(RR' (
)RR( )
{SS 	
returnTT 
valueTT 
;TT 
}UU 	
public\\ 
override\\ 
void\\ 
SetValue\\ %
(\\% &
object\\& ,
value\\- 2
,\\2 3
DebugUI\\4 ;
.\\; <
IValueField\\< G
field\\H M
)\\M N
{]] 	
this^^ 
.^^ 
value^^ 
=^^ 
(^^ 
T^^ 
)^^ 
field^^ !
.^^! "
ValidateValue^^" /
(^^/ 0
value^^0 5
)^^5 6
;^^6 7
}__ 	
publicee 
overrideee 
intee 
GetHashCodeee '
(ee' (
)ee( )
{ff 	
	uncheckedgg 
{hh 
intii 
hashii 
=ii 
$numii 
;ii 
hashjj 
=jj 
hashjj 
*jj 
$numjj  
+jj! "
m_QueryPathjj# .
.jj. /
GetHashCodejj/ :
(jj: ;
)jj; <
;jj< =
hashkk 
=kk 
hashkk 
*kk 
$numkk  
+kk! "
m_Valuekk# *
.kk* +
GetHashCodekk+ 6
(kk6 7
)kk7 8
;kk8 9
returnll 
hashll 
;ll 
}mm 
}nn 	
}oo 
publictt 

sealedtt 
classtt 
DebugStateAttributett +
:tt, -
	Attributett. 7
{uu 
internalvv 
readonlyvv 
Typevv 
[vv 
]vv  
typesvv! &
;vv& '
public|| 
DebugStateAttribute|| "
(||" #
params||# )
Type||* .
[||. /
]||/ 0
types||1 6
)||6 7
{}} 	
this~~ 
.~~ 
types~~ 
=~~ 
types~~ 
;~~ 
} 	
}
ÄÄ 
[
ÜÜ 
Serializable
ÜÜ 
,
ÜÜ 

DebugState
ÜÜ 
(
ÜÜ 
typeof
ÜÜ $
(
ÜÜ$ %
DebugUI
ÜÜ% ,
.
ÜÜ, -
	BoolField
ÜÜ- 6
)
ÜÜ6 7
,
ÜÜ7 8
typeof
ÜÜ9 ?
(
ÜÜ? @
DebugUI
ÜÜ@ G
.
ÜÜG H
Foldout
ÜÜH O
)
ÜÜO P
,
ÜÜP Q
typeof
ÜÜR X
(
ÜÜX Y
DebugUI
ÜÜY `
.
ÜÜ` a
HistoryBoolField
ÜÜa q
)
ÜÜq r
)
ÜÜr s
]
ÜÜs t
public
áá 

sealed
áá 
class
áá 
DebugStateBool
áá &
:
áá' (

DebugState
áá) 3
<
áá3 4
bool
áá4 8
>
áá8 9
{
áá: ;
}
áá; <
[
åå 
Serializable
åå 
,
åå 

DebugState
åå 
(
åå 
typeof
åå $
(
åå$ %
DebugUI
åå% ,
.
åå, -
IntField
åå- 5
)
åå5 6
,
åå6 7
typeof
åå8 >
(
åå> ?
DebugUI
åå? F
.
ååF G
	EnumField
ååG P
)
ååP Q
,
ååQ R
typeof
ååS Y
(
ååY Z
DebugUI
ååZ a
.
ååa b
HistoryEnumField
ååb r
)
åår s
)
åås t
]
ååt u
public
çç 

sealed
çç 
class
çç 
DebugStateInt
çç %
:
çç& '

DebugState
çç( 2
<
çç2 3
int
çç3 6
>
çç6 7
{
çç8 9
}
çç9 :
[
íí 
Serializable
íí 
,
íí 

DebugState
íí 
(
íí 
typeof
íí $
(
íí$ %
DebugUI
íí% ,
.
íí, -
BitField
íí- 5
)
íí5 6
)
íí6 7
]
íí7 8
public
ìì 

sealed
ìì 
class
ìì 
DebugStateFlags
ìì '
:
ìì( )

DebugState
ìì* 4
<
ìì4 5
Enum
ìì5 9
>
ìì9 :
{
ìì; <
}
ìì= >
[
òò 
Serializable
òò 
,
òò 

DebugState
òò 
(
òò 
typeof
òò $
(
òò$ %
DebugUI
òò% ,
.
òò, -
	UIntField
òò- 6
)
òò6 7
)
òò7 8
]
òò8 9
public
ôô 

sealed
ôô 
class
ôô 
DebugStateUInt
ôô &
:
ôô' (

DebugState
ôô) 3
<
ôô3 4
uint
ôô4 8
>
ôô8 9
{
ôô: ;
}
ôô; <
[
ûû 
Serializable
ûû 
,
ûû 

DebugState
ûû 
(
ûû 
typeof
ûû $
(
ûû$ %
DebugUI
ûû% ,
.
ûû, -

FloatField
ûû- 7
)
ûû7 8
)
ûû8 9
]
ûû9 :
public
üü 

sealed
üü 
class
üü 
DebugStateFloat
üü '
:
üü( )

DebugState
üü* 4
<
üü4 5
float
üü5 :
>
üü: ;
{
üü< =
}
üü= >
[
§§ 
Serializable
§§ 
,
§§ 

DebugState
§§ 
(
§§ 
typeof
§§ $
(
§§$ %
DebugUI
§§% ,
.
§§, -

ColorField
§§- 7
)
§§7 8
)
§§8 9
]
§§9 :
public
•• 

sealed
•• 
class
•• 
DebugStateColor
•• '
:
••( )

DebugState
••* 4
<
••4 5
Color
••5 :
>
••: ;
{
••< =
}
••= >
[
™™ 
Serializable
™™ 
,
™™ 

DebugState
™™ 
(
™™ 
typeof
™™ $
(
™™$ %
DebugUI
™™% ,
.
™™, -
Vector2Field
™™- 9
)
™™9 :
)
™™: ;
]
™™; <
public
´´ 

sealed
´´ 
class
´´ 
DebugStateVector2
´´ )
:
´´* +

DebugState
´´, 6
<
´´6 7
Vector2
´´7 >
>
´´> ?
{
´´@ A
}
´´A B
[
∞∞ 
Serializable
∞∞ 
,
∞∞ 

DebugState
∞∞ 
(
∞∞ 
typeof
∞∞ $
(
∞∞$ %
DebugUI
∞∞% ,
.
∞∞, -
Vector3Field
∞∞- 9
)
∞∞9 :
)
∞∞: ;
]
∞∞; <
public
±± 

sealed
±± 
class
±± 
DebugStateVector3
±± )
:
±±* +

DebugState
±±, 6
<
±±6 7
Vector3
±±7 >
>
±±> ?
{
±±@ A
}
±±A B
[
∂∂ 
Serializable
∂∂ 
,
∂∂ 

DebugState
∂∂ 
(
∂∂ 
typeof
∂∂ $
(
∂∂$ %
DebugUI
∂∂% ,
.
∂∂, -
Vector4Field
∂∂- 9
)
∂∂9 :
)
∂∂: ;
]
∂∂; <
public
∑∑ 

sealed
∑∑ 
class
∑∑ 
DebugStateVector4
∑∑ )
:
∑∑* +

DebugState
∑∑, 6
<
∑∑6 7
Vector4
∑∑7 >
>
∑∑> ?
{
∑∑@ A
}
∑∑A B
}∏∏ ≠Ã
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\FilterWindow.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ 
InitializeOnLoad 
] 
public 

class 
FilterWindow 
: 
EditorWindow  ,
{ 
public 
	interface 
	IProvider "
{ 	
Vector2 
position 
{ 
get "
;" #
set$ '
;' (
}) *
void 
CreateComponentTree $
($ %
List% )
<) *
Element* 1
>1 2
tree3 7
)7 8
;8 9
bool&& 
	GoToChild&& 
(&& 
Element&& "
element&&# *
,&&* +
bool&&, 0
addIfComponent&&1 ?
)&&? @
;&&@ A
}'' 	
public,, 
static,, 
readonly,, 
float,, $
DefaultWidth,,% 1
=,,2 3
$num,,4 8
;,,8 9
public11 
static11 
readonly11 
float11 $
DefaultHeight11% 2
=113 4
$num115 9
;119 :
public99 
class99 
Element99 
:99 
IComparable99 *
{:: 	
public>> 
int>> 
level>> 
;>> 
publicCC 

GUIContentCC 
contentCC %
;CC% &
publicHH 
stringHH 
nameHH 
{II 
getJJ 
{JJ 
returnJJ 
contentJJ $
.JJ$ %
textJJ% )
;JJ) *
}JJ+ ,
}KK 
publicRR 
intRR 
	CompareToRR  
(RR  !
objectRR! '
oRR( )
)RR) *
{SS 
returnTT 
nameTT 
.TT 
	CompareToTT %
(TT% &
(TT& '
oTT' (
asTT) +
ElementTT, 3
)TT3 4
.TT4 5
nameTT5 9
)TT9 :
;TT: ;
}UU 
}VV 	
[\\ 	
Serializable\\	 
]\\ 
public]] 
class]] 
GroupElement]] !
:]]" #
Element]]$ +
{^^ 	
publicbb 
Vector2bb 
scrollbb !
;bb! "
publicgg 
intgg 
selectedIndexgg $
;gg$ %
publicll 
boolll 

WantsFocusll "
{ll# $
getll% (
;ll( )
	protectedll* 3
setll4 7
;ll7 8
}ll9 :
publicqq 
virtualqq 
boolqq 
ShouldDisableqq  -
{rr 
getss 
{ss 
returnss 
falsess "
;ss" #
}ss$ %
}tt 
public{{ 
GroupElement{{ 
({{  
int{{  #
level{{$ )
,{{) *
string{{+ 1
name{{2 6
){{6 7
{|| 
this}} 
.}} 
level}} 
=}} 
level}} "
;}}" #
content~~ 
=~~ 
new~~ 

GUIContent~~ (
(~~( )
name~~) -
)~~- .
;~~. /
} 
public
àà 
virtual
àà 
bool
àà 
HandleKeyboard
àà  .
(
àà. /
Event
àà/ 4
evt
àà5 8
,
àà8 9
FilterWindow
àà: F
window
ààG M
,
ààM N
Action
ààO U

goToParent
ààV `
)
àà` a
{
ââ 
return
ää 
false
ää 
;
ää 
}
ãã 
public
ìì 
virtual
ìì 
bool
ìì 
OnGUI
ìì  %
(
ìì% &
FilterWindow
ìì& 2
sFilterWindow
ìì3 @
)
ìì@ A
{
îî 
return
ïï 
false
ïï 
;
ïï 
}
ññ 
}
óó 	
class
ùù 
Styles
ùù 
{
ûû 	
public
üü 
GUIStyle
üü 
header
üü "
=
üü# $
(
üü% &
GUIStyle
üü& .
)
üü. /
typeof
üü/ 5
(
üü5 6
EditorStyles
üü6 B
)
üüB C
.
üüC D
GetProperty
üüD O
(
üüO P
$str
üüP ^
,
üü^ _
BindingFlags
üü` l
.
üül m
Static
üüm s
|
üüt u
BindingFlagsüüv Ç
.üüÇ É
	NonPublicüüÉ å
)üüå ç
.üüç é
GetValueüüé ñ
(üüñ ó
nullüüó õ
,üüõ ú
nullüüù °
)üü° ¢
;üü¢ £
public
†† 
GUIStyle
†† 
componentButton
†† +
=
††, -
new
††. 1
GUIStyle
††2 :
(
††: ;
$str
††; E
)
††E F
;
††F G
public
°° 
GUIStyle
°° 
groupButton
°° '
;
°°' (
public
¢¢ 
GUIStyle
¢¢ 

background
¢¢ &
=
¢¢' (
$str
¢¢) 6
;
¢¢6 7
public
££ 
GUIStyle
££ 

rightArrow
££ &
=
££' (
$str
££) 8
;
££8 9
public
§§ 
GUIStyle
§§ 
	leftArrow
§§ %
=
§§& '
$str
§§( 6
;
§§6 7
public
¶¶ 
Styles
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 
header
®® 
.
®® 
font
®® 
=
®® 
EditorStyles
®® *
.
®®* +
	boldLabel
®®+ 4
.
®®4 5
font
®®5 9
;
®®9 :
componentButton
™™ 
.
™™  
	alignment
™™  )
=
™™* +

TextAnchor
™™, 6
.
™™6 7

MiddleLeft
™™7 A
;
™™A B
componentButton
´´ 
.
´´  
fixedHeight
´´  +
=
´´, -
$num
´´. 0
;
´´0 1
componentButton
¨¨ 
.
¨¨  
imagePosition
¨¨  -
=
¨¨. /
ImagePosition
¨¨0 =
.
¨¨= >

ImageAbove
¨¨> H
;
¨¨H I
groupButton
ÆÆ 
=
ÆÆ 
new
ÆÆ !
GUIStyle
ÆÆ" *
(
ÆÆ* +
componentButton
ÆÆ+ :
)
ÆÆ: ;
;
ÆÆ; <
}
ØØ 
}
∞∞ 	
const
≤≤ 
int
≤≤ 
k_HeaderHeight
≤≤  
=
≤≤! "
$num
≤≤# %
;
≤≤% &
const
≥≥ 
int
≥≥ 
k_WindowHeight
≥≥  
=
≥≥! "
$num
≥≥# &
-
≥≥' (
$num
≥≥) +
;
≥≥+ ,
const
¥¥ 
int
¥¥ 
k_HelpHeight
¥¥ 
=
¥¥  
$num
¥¥! #
*
¥¥$ %
$num
¥¥& '
;
¥¥' (
const
µµ 
string
µµ 
k_ComponentSearch
µµ &
=
µµ' (
$str
µµ) ;
;
µµ; <
static
∑∑ 
Styles
∑∑ 
s_Styles
∑∑ 
;
∑∑ 
static
∏∏ 
FilterWindow
∏∏ 
s_FilterWindow
∏∏ *
;
∏∏* +
static
ππ 
long
ππ 
s_LastClosedTime
ππ $
;
ππ$ %
static
∫∫ 
bool
∫∫ 
s_DirtyList
∫∫ 
;
∫∫  
	IProvider
ºº 

m_Provider
ºº 
;
ºº 
Element
ΩΩ 
[
ΩΩ 
]
ΩΩ 
m_Tree
ΩΩ 
;
ΩΩ 
Element
ææ 
[
ææ 
]
ææ  
m_SearchResultTree
ææ $
;
ææ$ %
List
øø 
<
øø 
GroupElement
øø 
>
øø 
m_Stack
øø "
=
øø# $
new
øø% (
List
øø) -
<
øø- .
GroupElement
øø. :
>
øø: ;
(
øø; <
)
øø< =
;
øø= >
float
¡¡ 
m_Anim
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
int
¬¬ 
m_AnimTarget
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
long
√√ 

m_LastTime
√√ 
;
√√ 
bool
ƒƒ  
m_ScrollToSelected
ƒƒ 
;
ƒƒ  
string
≈≈ 
m_DelayedSearch
≈≈ 
;
≈≈ 
string
∆∆ 
m_Search
∆∆ 
=
∆∆ 
$str
∆∆ 
;
∆∆ 
bool
»» 
m_HasSearch
»» 
{
»» 
get
»» 
{
»»  
return
»»! '
!
»»( )
string
»») /
.
»»/ 0
IsNullOrEmpty
»»0 =
(
»»= >
m_Search
»»> F
)
»»F G
;
»»G H
}
»»I J
}
»»K L
GroupElement
…… 
m_ActiveParent
…… #
{
……$ %
get
……& )
{
……* +
return
……, 2
m_Stack
……3 :
[
……: ;
m_Stack
……; B
.
……B C
Count
……C H
-
……I J
$num
……K L
+
……M N
m_AnimTarget
……O [
]
……[ \
;
……\ ]
}
……^ _
}
……` a
Element
   
[
   
]
   
m_ActiveTree
   
{
    
get
  ! $
{
  % &
return
  ' -
m_HasSearch
  . 9
?
  : ; 
m_SearchResultTree
  < N
:
  O P
m_Tree
  Q W
;
  W X
}
  Y Z
}
  [ \
Element
ÀÀ 
m_ActiveElement
ÀÀ 
{
ÃÃ 	
get
ÕÕ 
{
ŒŒ 
if
œœ 
(
œœ 
m_ActiveTree
œœ  
==
œœ! #
null
œœ$ (
)
œœ( )
return
–– 
null
–– 
;
––  
var
““ 
children
““ 
=
““ 
GetChildren
““ *
(
““* +
m_ActiveTree
““+ 7
,
““7 8
m_ActiveParent
““9 G
)
““G H
;
““H I
return
”” 
children
”” 
.
””  
Count
””  %
==
””& (
$num
””) *
?
‘‘ 
null
‘‘ 
:
’’ 
children
’’ 
[
’’ 
m_ActiveParent
’’ -
.
’’- .
selectedIndex
’’. ;
]
’’; <
;
’’< =
}
÷÷ 
}
◊◊ 	
bool
ÿÿ 
m_IsAnimating
ÿÿ 
{
ÿÿ 
get
ÿÿ  
{
ÿÿ! "
return
ÿÿ# )
!
ÿÿ* +
Mathf
ÿÿ+ 0
.
ÿÿ0 1
Approximately
ÿÿ1 >
(
ÿÿ> ?
m_Anim
ÿÿ? E
,
ÿÿE F
m_AnimTarget
ÿÿG S
)
ÿÿS T
;
ÿÿT U
}
ÿÿV W
}
ÿÿX Y
static
⁄⁄ 
FilterWindow
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
{
€€ 	
s_DirtyList
‹‹ 
=
‹‹ 
true
‹‹ 
;
‹‹ 
}
›› 	
void
ﬂﬂ 
OnEnable
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
s_FilterWindow
·· 
=
·· 
this
·· !
;
··! "
m_Search
‚‚ 
=
‚‚ 
$str
‚‚ 
;
‚‚ 
}
„„ 	
void
ÂÂ 
	OnDisable
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
s_LastClosedTime
ÁÁ 
=
ÁÁ 
DateTime
ÁÁ '
.
ÁÁ' (
Now
ÁÁ( +
.
ÁÁ+ ,
Ticks
ÁÁ, 1
/
ÁÁ2 3
TimeSpan
ÁÁ4 <
.
ÁÁ< =!
TicksPerMillisecond
ÁÁ= P
;
ÁÁP Q
s_FilterWindow
ËË 
=
ËË 
null
ËË !
;
ËË! "
}
ÈÈ 	
void
ÎÎ 
OnLostFocus
ÎÎ 
(
ÎÎ 
)
ÎÎ 
=>
ÎÎ 
Close
ÎÎ #
(
ÎÎ# $
)
ÎÎ$ %
;
ÎÎ% &
internal
ÌÌ 
static
ÌÌ 
bool
ÌÌ *
ValidateAddComponentMenuItem
ÌÌ 9
(
ÌÌ9 :
)
ÌÌ: ;
{
ÓÓ 	
return
ÔÔ 
true
ÔÔ 
;
ÔÔ 
}
 	
internal
ÚÚ 
static
ÚÚ 
bool
ÚÚ 
Show
ÚÚ !
(
ÚÚ! "
Vector2
ÚÚ" )
position
ÚÚ* 2
,
ÚÚ2 3
	IProvider
ÚÚ4 =
provider
ÚÚ> F
)
ÚÚF G
{
ÛÛ 	
var
ıı 
wins
ıı 
=
ıı 
	Resources
ıı  
.
ıı  !"
FindObjectsOfTypeAll
ıı! 5
(
ıı5 6
typeof
ıı6 <
(
ıı< =
FilterWindow
ıı= I
)
ııI J
)
ııJ K
;
ııK L
if
ˆˆ 
(
ˆˆ 
wins
ˆˆ 
.
ˆˆ 
Length
ˆˆ 
>
ˆˆ 
$num
ˆˆ 
)
ˆˆ  
{
˜˜ 
try
¯¯ 
{
˘˘ 
(
˙˙ 
(
˙˙ 
EditorWindow
˙˙ "
)
˙˙" #
wins
˙˙# '
[
˙˙' (
$num
˙˙( )
]
˙˙) *
)
˙˙* +
.
˙˙+ ,
Close
˙˙, 1
(
˙˙1 2
)
˙˙2 3
;
˙˙3 4
return
˚˚ 
false
˚˚  
;
˚˚  !
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝  
)
˝˝  !
{
˛˛ 
s_FilterWindow
ˇˇ "
=
ˇˇ# $
null
ˇˇ% )
;
ˇˇ) *
}
ÄÄ 
}
ÅÅ 
long
ÖÖ 
nowMilliSeconds
ÖÖ  
=
ÖÖ! "
DateTime
ÖÖ# +
.
ÖÖ+ ,
Now
ÖÖ, /
.
ÖÖ/ 0
Ticks
ÖÖ0 5
/
ÖÖ6 7
TimeSpan
ÖÖ8 @
.
ÖÖ@ A!
TicksPerMillisecond
ÖÖA T
;
ÖÖT U
bool
ÜÜ 

justClosed
ÜÜ 
=
ÜÜ 
nowMilliSeconds
ÜÜ -
<
ÜÜ. /
s_LastClosedTime
ÜÜ0 @
+
ÜÜA B
$num
ÜÜC E
;
ÜÜE F
if
àà 
(
àà 
!
àà 

justClosed
àà 
)
àà 
{
ââ 
Event
ää 
.
ää 
current
ää 
.
ää 
Use
ää !
(
ää! "
)
ää" #
;
ää# $
if
åå 
(
åå 
s_FilterWindow
åå "
==
åå# %
null
åå& *
)
åå* +
{
çç 
s_FilterWindow
éé "
=
éé# $
CreateInstance
éé% 3
<
éé3 4
FilterWindow
éé4 @
>
éé@ A
(
ééA B
)
ééB C
;
ééC D
s_FilterWindow
èè "
.
èè" #
	hideFlags
èè# ,
=
èè- .
	HideFlags
èè/ 8
.
èè8 9
HideAndDontSave
èè9 H
;
èèH I
}
êê 
s_FilterWindow
íí 
.
íí 
Init
íí #
(
íí# $
position
íí$ ,
,
íí, -
provider
íí. 6
)
íí6 7
;
íí7 8
return
ìì 
true
ìì 
;
ìì 
}
îî 
return
ïï 
false
ïï 
;
ïï 
}
ññ 	
static
òò 
object
òò 
Invoke
òò 
(
òò 
Type
òò !
t
òò" #
,
òò# $
object
òò% +
inst
òò, 0
,
òò0 1
string
òò2 8
method
òò9 ?
,
òò? @
params
òòA G
object
òòH N
[
òòN O
]
òòO P
args
òòQ U
)
òòU V
{
ôô 	
var
öö 
flags
öö 
=
öö 
(
öö 
inst
öö 
==
öö  
null
öö! %
?
öö& '
BindingFlags
öö( 4
.
öö4 5
Static
öö5 ;
:
öö< =
BindingFlags
öö> J
.
ööJ K
Instance
ööK S
)
ööS T
|
ööU V
BindingFlags
ööW c
.
ööc d
	NonPublic
ööd m
;
ööm n
var
õõ 
mi
õõ 
=
õõ 
t
õõ 
.
õõ 
	GetMethod
õõ  
(
õõ  !
method
õõ! '
,
õõ' (
flags
õõ) .
)
õõ. /
;
õõ/ 0
return
úú 
mi
úú 
.
úú 
Invoke
úú 
(
úú 
inst
úú !
,
úú! "
args
úú# '
)
úú' (
;
úú( )
}
ùù 	
void
üü 
Init
üü 
(
üü 
Vector2
üü 
position
üü "
,
üü" #
	IProvider
üü$ -
provider
üü. 6
)
üü6 7
{
†† 	

m_Provider
°° 
=
°° 
provider
°° !
;
°°! "

m_Provider
££ 
.
££ 
position
££ 
=
££  !
position
££" *
;
££* +
position
§§ 
=
§§ 

GUIUtility
§§ !
.
§§! "
GUIToScreenPoint
§§" 2
(
§§2 3
position
§§3 ;
)
§§; <
;
§§< =
var
•• 

buttonRect
•• 
=
•• 
new
••  
Rect
••! %
(
••% &
position
••& .
.
••. /
x
••/ 0
-
••1 2
DefaultWidth
••3 ?
/
••@ A
$num
••B C
,
••C D
position
••E M
.
••M N
y
••N O
-
••P Q
$num
••R T
,
••T U
DefaultWidth
••V b
,
••b c
$num
••d e
)
••e f
;
••f g!
CreateComponentTree
ßß 
(
ßß  
)
ßß  !
;
ßß! "
ShowAsDropDown
©© 
(
©© 

buttonRect
©© %
,
©©% &
new
©©' *
Vector2
©©+ 2
(
©©2 3

buttonRect
©©3 =
.
©©= >
width
©©> C
,
©©C D
k_WindowHeight
©©E S
)
©©S T
)
©©T U
;
©©U V
Focus
´´ 
(
´´ 
)
´´ 
;
´´ 
wantsMouseMove
≠≠ 
=
≠≠ 
true
≠≠ !
;
≠≠! "
}
ÆÆ 	
void
∞∞ !
CreateComponentTree
∞∞  
(
∞∞  !
)
∞∞! "
{
±± 	
var
≤≤ 
tree
≤≤ 
=
≤≤ 
new
≤≤ 
List
≤≤ 
<
≤≤  
Element
≤≤  '
>
≤≤' (
(
≤≤( )
)
≤≤) *
;
≤≤* +

m_Provider
≥≥ 
.
≥≥ !
CreateComponentTree
≥≥ *
(
≥≥* +
tree
≥≥+ /
)
≥≥/ 0
;
≥≥0 1
m_Tree
µµ 
=
µµ 
tree
µµ 
.
µµ 
ToArray
µµ !
(
µµ! "
)
µµ" #
;
µµ# $
if
∏∏ 
(
∏∏ 
m_Stack
∏∏ 
.
∏∏ 
Count
∏∏ 
==
∏∏  
$num
∏∏! "
)
∏∏" #
{
ππ 
m_Stack
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
m_Tree
∫∫ "
[
∫∫" #
$num
∫∫# $
]
∫∫$ %
as
∫∫& (
GroupElement
∫∫) 5
)
∫∫5 6
;
∫∫6 7
}
ªª 
else
ºº 
{
ΩΩ 
var
øø 
match
øø 
=
øø 
m_Tree
øø "
[
øø" #
$num
øø# $
]
øø$ %
as
øø& (
GroupElement
øø) 5
;
øø5 6
int
¿¿ 
level
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
while
¡¡ 
(
¡¡ 
true
¡¡ 
)
¡¡ 
{
¬¬ 
var
ƒƒ 

oldElement
ƒƒ "
=
ƒƒ# $
m_Stack
ƒƒ% ,
[
ƒƒ, -
level
ƒƒ- 2
]
ƒƒ2 3
;
ƒƒ3 4
m_Stack
≈≈ 
[
≈≈ 
level
≈≈ !
]
≈≈! "
=
≈≈# $
match
≈≈% *
;
≈≈* +
m_Stack
∆∆ 
[
∆∆ 
level
∆∆ !
]
∆∆! "
.
∆∆" #
selectedIndex
∆∆# 0
=
∆∆1 2

oldElement
∆∆3 =
.
∆∆= >
selectedIndex
∆∆> K
;
∆∆K L
m_Stack
«« 
[
«« 
level
«« !
]
««! "
.
««" #
scroll
««# )
=
««* +

oldElement
««, 6
.
««6 7
scroll
««7 =
;
««= >
level
   
++
   
;
   
if
ÀÀ 
(
ÀÀ 
level
ÀÀ 
==
ÀÀ  
m_Stack
ÀÀ! (
.
ÀÀ( )
Count
ÀÀ) .
)
ÀÀ. /
break
ÃÃ 
;
ÃÃ 
var
œœ 
children
œœ  
=
œœ! "
GetChildren
œœ# .
(
œœ. /
m_ActiveTree
œœ/ ;
,
œœ; <
match
œœ= B
)
œœB C
;
œœC D
var
–– 

childMatch
–– "
=
––# $
children
––% -
.
––- .
FirstOrDefault
––. <
(
––< =
c
––= >
=>
––? A
c
––B C
.
––C D
name
––D H
==
––I K
m_Stack
––L S
[
––S T
level
––T Y
]
––Y Z
.
––Z [
name
––[ _
)
––_ `
;
––` a
if
““ 
(
““ 

childMatch
““ "
is
““# %
GroupElement
““& 2
)
““2 3
{
”” 
match
‘‘ 
=
‘‘ 

childMatch
‘‘  *
as
‘‘+ -
GroupElement
‘‘. :
;
‘‘: ;
}
’’ 
else
÷÷ 
{
◊◊ 
while
ŸŸ 
(
ŸŸ 
m_Stack
ŸŸ &
.
ŸŸ& '
Count
ŸŸ' ,
>
ŸŸ- .
level
ŸŸ/ 4
)
ŸŸ4 5
m_Stack
⁄⁄ #
.
⁄⁄# $
RemoveAt
⁄⁄$ ,
(
⁄⁄, -
level
⁄⁄- 2
)
⁄⁄2 3
;
⁄⁄3 4
}
€€ 
}
‹‹ 
}
›› 
s_DirtyList
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ  
RebuildSearch
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 	
internal
„„ 
void
„„ 
OnGUI
„„ 
(
„„ 
)
„„ 
{
‰‰ 	
if
ÁÁ 
(
ÁÁ 

m_Provider
ÁÁ 
==
ÁÁ 
null
ÁÁ "
)
ÁÁ" #
return
ËË 
;
ËË 
if
ÍÍ 
(
ÍÍ 
s_Styles
ÍÍ 
==
ÍÍ 
null
ÍÍ  
)
ÍÍ  !
s_Styles
ÎÎ 
=
ÎÎ 
new
ÎÎ 
Styles
ÎÎ %
(
ÎÎ% &
)
ÎÎ& '
;
ÎÎ' (
GUI
ÌÌ 
.
ÌÌ 
Label
ÌÌ 
(
ÌÌ 
new
ÌÌ 
Rect
ÌÌ 
(
ÌÌ 
$num
ÌÌ  
,
ÌÌ  !
$num
ÌÌ" #
,
ÌÌ# $
position
ÌÌ% -
.
ÌÌ- .
width
ÌÌ. 3
,
ÌÌ3 4
position
ÌÌ5 =
.
ÌÌ= >
height
ÌÌ> D
)
ÌÌD E
,
ÌÌE F

GUIContent
ÌÌG Q
.
ÌÌQ R
none
ÌÌR V
,
ÌÌV W
s_Styles
ÌÌX `
.
ÌÌ` a

background
ÌÌa k
)
ÌÌk l
;
ÌÌl m
if
ÔÔ 
(
ÔÔ 
s_DirtyList
ÔÔ 
)
ÔÔ !
CreateComponentTree
 #
(
# $
)
$ %
;
% &
HandleKeyboard
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
	GUILayout
ıı 
.
ıı 
Space
ıı 
(
ıı 
$num
ıı 
)
ıı 
;
ıı 
if
¯¯ 
(
¯¯ 
!
¯¯ 
m_ActiveParent
¯¯ 
.
¯¯  

WantsFocus
¯¯  *
)
¯¯* +
{
˘˘ 
	EditorGUI
˙˙ 
.
˙˙  
FocusTextInControl
˙˙ ,
(
˙˙, -
$str
˙˙- >
)
˙˙> ?
;
˙˙? @
}
˚˚ 
var
˝˝ 

searchRect
˝˝ 
=
˝˝ 
GUILayoutUtility
˝˝ -
.
˝˝- .
GetRect
˝˝. 5
(
˝˝5 6
$num
˝˝6 8
,
˝˝8 9
$num
˝˝: <
)
˝˝< =
;
˝˝= >

searchRect
˛˛ 
.
˛˛ 
x
˛˛ 
+=
˛˛ 
$num
˛˛ 
;
˛˛ 

searchRect
ˇˇ 
.
ˇˇ 
width
ˇˇ 
-=
ˇˇ 
$num
ˇˇ  "
;
ˇˇ" #
GUI
ÅÅ 
.
ÅÅ  
SetNextControlName
ÅÅ "
(
ÅÅ" #
$str
ÅÅ# 4
)
ÅÅ4 5
;
ÅÅ5 6
using
ÉÉ 
(
ÉÉ 
new
ÉÉ 
	EditorGUI
ÉÉ  
.
ÉÉ  !
DisabledScope
ÉÉ! .
(
ÉÉ. /
m_ActiveParent
ÉÉ/ =
.
ÉÉ= >
ShouldDisable
ÉÉ> K
)
ÉÉK L
)
ÉÉL M
{
ÑÑ 
string
ÖÖ 
	newSearch
ÖÖ  
=
ÖÖ! "
(
ÖÖ# $
string
ÖÖ$ *
)
ÖÖ* +
Invoke
ÖÖ+ 1
(
ÖÖ1 2
typeof
ÖÖ2 8
(
ÖÖ8 9
	EditorGUI
ÖÖ9 B
)
ÖÖB C
,
ÖÖC D
null
ÖÖE I
,
ÖÖI J
$str
ÖÖK X
,
ÖÖX Y

searchRect
ÖÖZ d
,
ÖÖd e
m_DelayedSearch
ÖÖf u
??
ÖÖv x
m_SearchÖÖy Å
)ÖÖÅ Ç
;ÖÖÇ É
if
áá 
(
áá 
	newSearch
áá 
!=
áá  
m_Search
áá! )
||
áá* ,
m_DelayedSearch
áá- <
!=
áá= ?
null
áá@ D
)
ááD E
{
àà 
if
ââ 
(
ââ 
!
ââ 
m_IsAnimating
ââ &
)
ââ& '
{
ää 
m_Search
ãã  
=
ãã! "
m_DelayedSearch
ãã# 2
??
ãã3 5
	newSearch
ãã6 ?
;
ãã? @
EditorPrefs
åå #
.
åå# $
	SetString
åå$ -
(
åå- .
k_ComponentSearch
åå. ?
,
åå? @
m_Search
ååA I
)
ååI J
;
ååJ K
RebuildSearch
çç %
(
çç% &
)
çç& '
;
çç' (
m_DelayedSearch
éé '
=
éé( )
null
éé* .
;
éé. /
}
èè 
else
êê 
{
ëë 
m_DelayedSearch
íí '
=
íí( )
	newSearch
íí* 3
;
íí3 4
}
ìì 
}
îî 
}
ïï 
ListGUI
òò 
(
òò 
m_ActiveTree
òò  
,
òò  !
m_Anim
òò" (
,
òò( ) 
GetElementRelative
òò* <
(
òò< =
$num
òò= >
)
òò> ?
,
òò? @ 
GetElementRelative
òòA S
(
òòS T
-
òòT U
$num
òòU V
)
òòV W
)
òòW X
;
òòX Y
if
ôô 
(
ôô 
m_Anim
ôô 
<
ôô 
$num
ôô 
)
ôô 
ListGUI
öö 
(
öö 
m_ActiveTree
öö $
,
öö$ %
m_Anim
öö& ,
+
öö- .
$num
öö/ 0
,
öö0 1 
GetElementRelative
öö2 D
(
ööD E
-
ööE F
$num
ööF G
)
ööG H
,
ööH I 
GetElementRelative
ööJ \
(
öö\ ]
-
öö] ^
$num
öö^ _
)
öö_ `
)
öö` a
;
ööa b
if
ùù 
(
ùù 
m_IsAnimating
ùù 
&&
ùù  
Event
ùù! &
.
ùù& '
current
ùù' .
.
ùù. /
type
ùù/ 3
==
ùù4 6
	EventType
ùù7 @
.
ùù@ A
Repaint
ùùA H
)
ùùH I
{
ûû 
long
üü 
now
üü 
=
üü 
DateTime
üü #
.
üü# $
Now
üü$ '
.
üü' (
Ticks
üü( -
;
üü- .
float
†† 
	deltaTime
†† 
=
††  !
(
††" #
now
††# &
-
††' (

m_LastTime
††) 3
)
††3 4
/
††5 6
(
††7 8
float
††8 =
)
††= >
TimeSpan
††> F
.
††F G
TicksPerSecond
††G U
;
††U V

m_LastTime
°° 
=
°° 
now
°°  
;
°°  !
m_Anim
¢¢ 
=
¢¢ 
Mathf
¢¢ 
.
¢¢ 
MoveTowards
¢¢ *
(
¢¢* +
m_Anim
¢¢+ 1
,
¢¢1 2
m_AnimTarget
¢¢3 ?
,
¢¢? @
	deltaTime
¢¢A J
*
¢¢K L
$num
¢¢M N
)
¢¢N O
;
¢¢O P
if
§§ 
(
§§ 
m_AnimTarget
§§  
==
§§! #
$num
§§$ %
&&
§§& (
Mathf
§§) .
.
§§. /
Approximately
§§/ <
(
§§< =
m_Anim
§§= C
,
§§C D
$num
§§E F
)
§§F G
)
§§G H
{
•• 
m_Anim
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
m_AnimTarget
ßß  
=
ßß! "
$num
ßß# $
;
ßß$ %
m_Stack
®® 
.
®® 
RemoveAt
®® $
(
®®$ %
m_Stack
®®% ,
.
®®, -
Count
®®- 2
-
®®3 4
$num
®®5 6
)
®®6 7
;
®®7 8
}
©© 
Repaint
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
void
ØØ 
HandleKeyboard
ØØ 
(
ØØ 
)
ØØ 
{
∞∞ 	
var
±± 
evt
±± 
=
±± 
Event
±± 
.
±± 
current
±± #
;
±±# $
if
≥≥ 
(
≥≥ 
evt
≥≥ 
.
≥≥ 
type
≥≥ 
==
≥≥ 
	EventType
≥≥ %
.
≥≥% &
KeyDown
≥≥& -
)
≥≥- .
{
¥¥ 
if
∂∂ 
(
∂∂ 
!
∂∂ 
m_ActiveParent
∂∂ #
.
∂∂# $
HandleKeyboard
∂∂$ 2
(
∂∂2 3
evt
∂∂3 6
,
∂∂6 7
s_FilterWindow
∂∂8 F
,
∂∂F G

GoToParent
∂∂H R
)
∂∂R S
)
∂∂S T
{
∑∑ 
if
ππ 
(
ππ 
evt
ππ 
.
ππ 
keyCode
ππ #
==
ππ$ &
KeyCode
ππ' .
.
ππ. /
	DownArrow
ππ/ 8
)
ππ8 9
{
∫∫ 
m_ActiveParent
ªª &
.
ªª& '
selectedIndex
ªª' 4
++
ªª4 6
;
ªª6 7
m_ActiveParent
ºº &
.
ºº& '
selectedIndex
ºº' 4
=
ºº5 6
Mathf
ºº7 <
.
ºº< =
Min
ºº= @
(
ºº@ A
m_ActiveParent
ººA O
.
ººO P
selectedIndex
ººP ]
,
ºº] ^
GetChildren
ºº_ j
(
ººj k
m_ActiveTree
ººk w
,
ººw x
m_ActiveParentººy á
)ººá à
.ººà â
Countººâ é
-ººè ê
$numººë í
)ººí ì
;ººì î 
m_ScrollToSelected
ΩΩ *
=
ΩΩ+ ,
true
ΩΩ- 1
;
ΩΩ1 2
evt
ææ 
.
ææ 
Use
ææ 
(
ææ  
)
ææ  !
;
ææ! "
}
øø 
if
¡¡ 
(
¡¡ 
evt
¡¡ 
.
¡¡ 
keyCode
¡¡ #
==
¡¡$ &
KeyCode
¡¡' .
.
¡¡. /
UpArrow
¡¡/ 6
)
¡¡6 7
{
¬¬ 
m_ActiveParent
√√ &
.
√√& '
selectedIndex
√√' 4
--
√√4 6
;
√√6 7
m_ActiveParent
ƒƒ &
.
ƒƒ& '
selectedIndex
ƒƒ' 4
=
ƒƒ5 6
Mathf
ƒƒ7 <
.
ƒƒ< =
Max
ƒƒ= @
(
ƒƒ@ A
m_ActiveParent
ƒƒA O
.
ƒƒO P
selectedIndex
ƒƒP ]
,
ƒƒ] ^
$num
ƒƒ_ `
)
ƒƒ` a
;
ƒƒa b 
m_ScrollToSelected
≈≈ *
=
≈≈+ ,
true
≈≈- 1
;
≈≈1 2
evt
∆∆ 
.
∆∆ 
Use
∆∆ 
(
∆∆  
)
∆∆  !
;
∆∆! "
}
«« 
if
…… 
(
…… 
evt
…… 
.
…… 
keyCode
…… #
==
……$ &
KeyCode
……' .
.
……. /
Return
……/ 5
||
……6 8
evt
……9 <
.
……< =
keyCode
……= D
==
……E G
KeyCode
……H O
.
……O P
KeypadEnter
……P [
)
……[ \
{
   
if
ÀÀ 
(
ÀÀ 
m_ActiveElement
ÀÀ +
!=
ÀÀ, .
null
ÀÀ/ 3
)
ÀÀ3 4
{
ÃÃ 
	GoToChild
ÕÕ %
(
ÕÕ% &
m_ActiveElement
ÕÕ& 5
,
ÕÕ5 6
true
ÕÕ7 ;
)
ÕÕ; <
;
ÕÕ< =
evt
ŒŒ 
.
ŒŒ  
Use
ŒŒ  #
(
ŒŒ# $
)
ŒŒ$ %
;
ŒŒ% &
}
œœ 
}
–– 
if
”” 
(
”” 
!
”” 
m_HasSearch
”” $
)
””$ %
{
‘‘ 
if
’’ 
(
’’ 
evt
’’ 
.
’’  
keyCode
’’  '
==
’’( *
KeyCode
’’+ 2
.
’’2 3
	LeftArrow
’’3 <
||
’’= ?
evt
’’@ C
.
’’C D
keyCode
’’D K
==
’’L N
KeyCode
’’O V
.
’’V W
	Backspace
’’W `
)
’’` a
{
÷÷ 

GoToParent
◊◊ &
(
◊◊& '
)
◊◊' (
;
◊◊( )
evt
ÿÿ 
.
ÿÿ  
Use
ÿÿ  #
(
ÿÿ# $
)
ÿÿ$ %
;
ÿÿ% &
}
ŸŸ 
if
€€ 
(
€€ 
evt
€€ 
.
€€  
keyCode
€€  '
==
€€( *
KeyCode
€€+ 2
.
€€2 3

RightArrow
€€3 =
)
€€= >
{
‹‹ 
	GoToChild
›› %
(
››% &
m_ActiveElement
››& 5
,
››5 6
false
››7 <
)
››< =
;
››= >
evt
ﬁﬁ 
.
ﬁﬁ  
Use
ﬁﬁ  #
(
ﬁﬁ# $
)
ﬁﬁ$ %
;
ﬁﬁ% &
}
ﬂﬂ 
if
·· 
(
·· 
evt
·· 
.
··  
keyCode
··  '
==
··( *
KeyCode
··+ 2
.
··2 3
Escape
··3 9
)
··9 :
{
‚‚ 
Close
„„ !
(
„„! "
)
„„" #
;
„„# $
evt
‰‰ 
.
‰‰  
Use
‰‰  #
(
‰‰# $
)
‰‰$ %
;
‰‰% &
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 
}
ÈÈ 	
const
ÎÎ 
string
ÎÎ 
k_SearchHeader
ÎÎ #
=
ÎÎ$ %
$str
ÎÎ& .
;
ÎÎ. /
void
ÌÌ 
RebuildSearch
ÌÌ 
(
ÌÌ 
)
ÌÌ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
!
ÔÔ 
m_HasSearch
ÔÔ 
)
ÔÔ 
{
  
m_SearchResultTree
ÒÒ "
=
ÒÒ# $
null
ÒÒ% )
;
ÒÒ) *
if
ÛÛ 
(
ÛÛ 
m_Stack
ÛÛ 
[
ÛÛ 
m_Stack
ÛÛ #
.
ÛÛ# $
Count
ÛÛ$ )
-
ÛÛ* +
$num
ÛÛ, -
]
ÛÛ- .
.
ÛÛ. /
name
ÛÛ/ 3
==
ÛÛ4 6
k_SearchHeader
ÛÛ7 E
)
ÛÛE F
{
ÙÙ 
m_Stack
ıı 
.
ıı 
Clear
ıı !
(
ıı! "
)
ıı" #
;
ıı# $
m_Stack
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ  
m_Tree
ˆˆ  &
[
ˆˆ& '
$num
ˆˆ' (
]
ˆˆ( )
as
ˆˆ* ,
GroupElement
ˆˆ- 9
)
ˆˆ9 :
;
ˆˆ: ;
}
˜˜ 
m_AnimTarget
˘˘ 
=
˘˘ 
$num
˘˘  
;
˘˘  !

m_LastTime
˙˙ 
=
˙˙ 
DateTime
˙˙ %
.
˙˙% &
Now
˙˙& )
.
˙˙) *
Ticks
˙˙* /
;
˙˙/ 0
return
˚˚ 
;
˚˚ 
}
¸¸ 
var
ˇˇ 
searchWords
ˇˇ 
=
ˇˇ 
m_Search
ˇˇ &
.
ˇˇ& '
ToLower
ˇˇ' .
(
ˇˇ. /
)
ˇˇ/ 0
.
ˇˇ0 1
Split
ˇˇ1 6
(
ˇˇ6 7
$char
ˇˇ7 :
)
ˇˇ: ;
;
ˇˇ; <
var
ÇÇ 
matchesStart
ÇÇ 
=
ÇÇ 
new
ÇÇ "
List
ÇÇ# '
<
ÇÇ' (
Element
ÇÇ( /
>
ÇÇ/ 0
(
ÇÇ0 1
)
ÇÇ1 2
;
ÇÇ2 3
var
ÉÉ 
matchesWithin
ÉÉ 
=
ÉÉ 
new
ÉÉ  #
List
ÉÉ$ (
<
ÉÉ( )
Element
ÉÉ) 0
>
ÉÉ0 1
(
ÉÉ1 2
)
ÉÉ2 3
;
ÉÉ3 4
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
e
ÖÖ 
in
ÖÖ 
m_Tree
ÖÖ $
)
ÖÖ$ %
{
ÜÜ 
if
áá 
(
áá 
e
áá 
is
áá 
GroupElement
áá %
)
áá% &
continue
àà 
;
àà 
string
ää 
name
ää 
=
ää 
e
ää 
.
ää  
name
ää  $
.
ää$ %
ToLower
ää% ,
(
ää, -
)
ää- .
.
ää. /
Replace
ää/ 6
(
ää6 7
$str
ää7 :
,
ää: ;
$str
ää< >
)
ää> ?
;
ää? @
bool
ãã 
didMatchAll
ãã  
=
ãã! "
true
ãã# '
;
ãã' (
bool
åå 
didMatchStart
åå "
=
åå# $
false
åå% *
;
åå* +
for
èè 
(
èè 
int
èè 
w
èè 
=
èè 
$num
èè 
;
èè 
w
èè  !
<
èè" #
searchWords
èè$ /
.
èè/ 0
Length
èè0 6
;
èè6 7
w
èè8 9
++
èè9 ;
)
èè; <
{
êê 
string
ëë 
search
ëë !
=
ëë" #
searchWords
ëë$ /
[
ëë/ 0
w
ëë0 1
]
ëë1 2
;
ëë2 3
if
ìì 
(
ìì 
name
ìì 
.
ìì 
Contains
ìì %
(
ìì% &
search
ìì& ,
)
ìì, -
)
ìì- .
{
îî 
if
ññ 
(
ññ 
w
ññ 
==
ññ  
$num
ññ! "
&&
ññ# %
name
ññ& *
.
ññ* +

StartsWith
ññ+ 5
(
ññ5 6
search
ññ6 <
)
ññ< =
)
ññ= >
didMatchStart
óó )
=
óó* +
true
óó, 0
;
óó0 1
}
òò 
else
ôô 
{
öö 
didMatchAll
úú #
=
úú$ %
false
úú& +
;
úú+ ,
break
ùù 
;
ùù 
}
ûû 
}
üü 
if
££ 
(
££ 
didMatchAll
££ 
)
££  
{
§§ 
if
•• 
(
•• 
didMatchStart
•• %
)
••% &
matchesStart
¶¶ $
.
¶¶$ %
Add
¶¶% (
(
¶¶( )
e
¶¶) *
)
¶¶* +
;
¶¶+ ,
else
ßß 
matchesWithin
®® %
.
®®% &
Add
®®& )
(
®®) *
e
®®* +
)
®®+ ,
;
®®, -
}
©© 
}
™™ 
matchesStart
¨¨ 
.
¨¨ 
Sort
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨  
matchesWithin
≠≠ 
.
≠≠ 
Sort
≠≠ 
(
≠≠ 
)
≠≠  
;
≠≠  !
var
∞∞ 
tree
∞∞ 
=
∞∞ 
new
∞∞ 
List
∞∞ 
<
∞∞  
Element
∞∞  '
>
∞∞' (
(
∞∞( )
)
∞∞) *
;
∞∞* +
tree
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
new
≥≥ 
GroupElement
≥≥ %
(
≥≥% &
$num
≥≥& '
,
≥≥' (
k_SearchHeader
≥≥) 7
)
≥≥7 8
)
≥≥8 9
;
≥≥9 :
tree
∂∂ 
.
∂∂ 
AddRange
∂∂ 
(
∂∂ 
matchesStart
∂∂ &
)
∂∂& '
;
∂∂' (
tree
∑∑ 
.
∑∑ 
AddRange
∑∑ 
(
∑∑ 
matchesWithin
∑∑ '
)
∑∑' (
;
∑∑( ) 
m_SearchResultTree
∫∫ 
=
∫∫  
tree
∫∫! %
.
∫∫% &
ToArray
∫∫& -
(
∫∫- .
)
∫∫. /
;
∫∫/ 0
m_Stack
ªª 
.
ªª 
Clear
ªª 
(
ªª 
)
ªª 
;
ªª 
m_Stack
ºº 
.
ºº 
Add
ºº 
(
ºº  
m_SearchResultTree
ºº *
[
ºº* +
$num
ºº+ ,
]
ºº, -
as
ºº. 0
GroupElement
ºº1 =
)
ºº= >
;
ºº> ?
if
¿¿ 
(
¿¿ 
GetChildren
¿¿ 
(
¿¿ 
m_ActiveTree
¿¿ (
,
¿¿( )
m_ActiveParent
¿¿* 8
)
¿¿8 9
.
¿¿9 :
Count
¿¿: ?
>=
¿¿@ B
$num
¿¿C D
)
¿¿D E
m_ActiveParent
¡¡ 
.
¡¡ 
selectedIndex
¡¡ ,
=
¡¡- .
$num
¡¡/ 0
;
¡¡0 1
else
¬¬ 
m_ActiveParent
√√ 
.
√√ 
selectedIndex
√√ ,
=
√√- .
-
√√/ 0
$num
√√0 1
;
√√1 2
}
ƒƒ 	
GroupElement
∆∆  
GetElementRelative
∆∆ '
(
∆∆' (
int
∆∆( +
rel
∆∆, /
)
∆∆/ 0
{
«« 	
int
»» 
i
»» 
=
»» 
m_Stack
»» 
.
»» 
Count
»» !
+
»»" #
rel
»»$ '
-
»»( )
$num
»»* +
;
»»+ ,
if
   
(
   
i
   
<
   
$num
   
)
   
return
ÀÀ 
null
ÀÀ 
;
ÀÀ 
return
ÕÕ 
m_Stack
ÕÕ 
[
ÕÕ 
i
ÕÕ 
]
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
void
–– 

GoToParent
–– 
(
–– 
)
–– 
{
—— 	
if
““ 
(
““ 
m_Stack
““ 
.
““ 
Count
““ 
>
““ 
$num
““  !
)
““! "
{
”” 
m_AnimTarget
‘‘ 
=
‘‘ 
$num
‘‘  
;
‘‘  !

m_LastTime
’’ 
=
’’ 
DateTime
’’ %
.
’’% &
Now
’’& )
.
’’) *
Ticks
’’* /
;
’’/ 0
}
÷÷ 
}
◊◊ 	
void
ŸŸ 
ListGUI
ŸŸ 
(
ŸŸ 
Element
ŸŸ 
[
ŸŸ 
]
ŸŸ 
tree
ŸŸ #
,
ŸŸ# $
float
ŸŸ% *
anim
ŸŸ+ /
,
ŸŸ/ 0
GroupElement
ŸŸ1 =
parent
ŸŸ> D
,
ŸŸD E
GroupElement
ŸŸF R
grandParent
ŸŸS ^
)
ŸŸ^ _
{
⁄⁄ 	
anim
‹‹ 
=
‹‹ 
Mathf
‹‹ 
.
‹‹ 
Floor
‹‹ 
(
‹‹ 
anim
‹‹ #
)
‹‹# $
+
‹‹% &
Mathf
‹‹' ,
.
‹‹, -

SmoothStep
‹‹- 7
(
‹‹7 8
$num
‹‹8 9
,
‹‹9 :
$num
‹‹; <
,
‹‹< =
Mathf
‹‹> C
.
‹‹C D
Repeat
‹‹D J
(
‹‹J K
anim
‹‹K O
,
‹‹O P
$num
‹‹Q R
)
‹‹R S
)
‹‹S T
;
‹‹T U
var
ﬂﬂ 
animRect
ﬂﬂ 
=
ﬂﬂ 
position
ﬂﬂ #
;
ﬂﬂ# $
animRect
‡‡ 
.
‡‡ 
x
‡‡ 
=
‡‡ 
position
‡‡ !
.
‡‡! "
width
‡‡" '
*
‡‡( )
(
‡‡* +
$num
‡‡+ ,
-
‡‡- .
anim
‡‡/ 3
)
‡‡3 4
+
‡‡5 6
$num
‡‡7 8
;
‡‡8 9
animRect
·· 
.
·· 
y
·· 
=
·· 
k_HeaderHeight
·· '
;
··' (
animRect
‚‚ 
.
‚‚ 
height
‚‚ 
-=
‚‚ 
k_HeaderHeight
‚‚ -
+
‚‚. /
k_HelpHeight
‚‚0 <
;
‚‚< =
animRect
„„ 
.
„„ 
width
„„ 
-=
„„ 
$num
„„ 
;
„„  
	GUILayout
ÊÊ 
.
ÊÊ 
	BeginArea
ÊÊ 
(
ÊÊ  
animRect
ÊÊ  (
)
ÊÊ( )
;
ÊÊ) *
var
ÈÈ 

headerRect
ÈÈ 
=
ÈÈ 
GUILayoutUtility
ÈÈ -
.
ÈÈ- .
GetRect
ÈÈ. 5
(
ÈÈ5 6
$num
ÈÈ6 8
,
ÈÈ8 9
$num
ÈÈ: <
)
ÈÈ< =
;
ÈÈ= >
string
ÍÍ 
name
ÍÍ 
=
ÍÍ 
parent
ÍÍ  
.
ÍÍ  !
name
ÍÍ! %
;
ÍÍ% &
GUI
ÎÎ 
.
ÎÎ 
Label
ÎÎ 
(
ÎÎ 

headerRect
ÎÎ  
,
ÎÎ  !
name
ÎÎ" &
,
ÎÎ& '
s_Styles
ÎÎ( 0
.
ÎÎ0 1
header
ÎÎ1 7
)
ÎÎ7 8
;
ÎÎ8 9
if
ÓÓ 
(
ÓÓ 
grandParent
ÓÓ 
!=
ÓÓ 
null
ÓÓ #
)
ÓÓ# $
{
ÔÔ 
var
 
	arrowRect
 
=
 
new
  #
Rect
$ (
(
( )

headerRect
) 3
.
3 4
x
4 5
+
6 7
$num
8 9
,
9 :

headerRect
; E
.
E F
y
F G
+
H I
$num
J K
,
K L
$num
M O
,
O P
$num
Q S
)
S T
;
T U
var
ÒÒ 
e
ÒÒ 
=
ÒÒ 
Event
ÒÒ 
.
ÒÒ 
current
ÒÒ %
;
ÒÒ% &
if
ÛÛ 
(
ÛÛ 
e
ÛÛ 
.
ÛÛ 
type
ÛÛ 
==
ÛÛ 
	EventType
ÛÛ '
.
ÛÛ' (
Repaint
ÛÛ( /
)
ÛÛ/ 0
s_Styles
ÙÙ 
.
ÙÙ 
	leftArrow
ÙÙ &
.
ÙÙ& '
Draw
ÙÙ' +
(
ÙÙ+ ,
	arrowRect
ÙÙ, 5
,
ÙÙ5 6
false
ÙÙ7 <
,
ÙÙ< =
false
ÙÙ> C
,
ÙÙC D
false
ÙÙE J
,
ÙÙJ K
false
ÙÙL Q
)
ÙÙQ R
;
ÙÙR S
if
ˆˆ 
(
ˆˆ 
e
ˆˆ 
.
ˆˆ 
type
ˆˆ 
==
ˆˆ 
	EventType
ˆˆ '
.
ˆˆ' (
	MouseDown
ˆˆ( 1
&&
ˆˆ2 4

headerRect
ˆˆ5 ?
.
ˆˆ? @
Contains
ˆˆ@ H
(
ˆˆH I
e
ˆˆI J
.
ˆˆJ K
mousePosition
ˆˆK X
)
ˆˆX Y
)
ˆˆY Z
{
˜˜ 

GoToParent
¯¯ 
(
¯¯ 
)
¯¯  
;
¯¯  !
e
˘˘ 
.
˘˘ 
Use
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
}
˙˙ 
}
˚˚ 
if
˝˝ 
(
˝˝ 
!
˝˝ 
parent
˝˝ 
.
˝˝ 
OnGUI
˝˝ 
(
˝˝ 
s_FilterWindow
˝˝ ,
)
˝˝, -
)
˝˝- .
ListGUI
˛˛ 
(
˛˛ 
tree
˛˛ 
,
˛˛ 
parent
˛˛ $
)
˛˛$ %
;
˛˛% &
	GUILayout
ÄÄ 
.
ÄÄ 
EndArea
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ  
}
ÅÅ 	
void
ÉÉ 
	GoToChild
ÉÉ 
(
ÉÉ 
Element
ÉÉ 
e
ÉÉ  
,
ÉÉ  !
bool
ÉÉ" &
addIfComponent
ÉÉ' 5
)
ÉÉ5 6
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 

m_Provider
ÖÖ 
.
ÖÖ 
	GoToChild
ÖÖ $
(
ÖÖ$ %
e
ÖÖ% &
,
ÖÖ& '
addIfComponent
ÖÖ( 6
)
ÖÖ6 7
)
ÖÖ7 8
{
ÜÜ 
Close
áá 
(
áá 
)
áá 
;
áá 
}
àà 
else
ââ 
if
ââ 
(
ââ 
!
ââ 
m_HasSearch
ââ !
)
ââ! "
{
ää 

m_LastTime
ãã 
=
ãã 
DateTime
ãã %
.
ãã% &
Now
ãã& )
.
ãã) *
Ticks
ãã* /
;
ãã/ 0
if
çç 
(
çç 
m_AnimTarget
çç  
==
çç! #
$num
çç$ %
)
çç% &
{
éé 
m_AnimTarget
èè  
=
èè! "
$num
èè# $
;
èè$ %
}
êê 
else
ëë 
if
ëë 
(
ëë 
Mathf
ëë 
.
ëë 
Approximately
ëë ,
(
ëë, -
m_Anim
ëë- 3
,
ëë3 4
$num
ëë5 7
)
ëë7 8
)
ëë8 9
{
íí 
m_Anim
ìì 
=
ìì 
$num
ìì 
;
ìì 
m_Stack
îî 
.
îî 
Add
îî 
(
îî  
e
îî  !
as
îî" $
GroupElement
îî% 1
)
îî1 2
;
îî2 3
}
ïï 
}
ññ 
}
óó 	
void
ôô 
ListGUI
ôô 
(
ôô 
Element
ôô 
[
ôô 
]
ôô 
tree
ôô #
,
ôô# $
GroupElement
ôô% 1
parent
ôô2 8
)
ôô8 9
{
öö 	
parent
úú 
.
úú 
scroll
úú 
=
úú 
	GUILayout
úú %
.
úú% &
BeginScrollView
úú& 5
(
úú5 6
parent
úú6 <
.
úú< =
scroll
úú= C
)
úúC D
;
úúD E
EditorGUIUtility
ûû 
.
ûû 
SetIconSize
ûû (
(
ûû( )
new
ûû) ,
Vector2
ûû- 4
(
ûû4 5
$num
ûû5 7
,
ûû7 8
$num
ûû9 ;
)
ûû; <
)
ûû< =
;
ûû= >
var
†† 
children
†† 
=
†† 
GetChildren
†† &
(
††& '
tree
††' +
,
††+ ,
parent
††- 3
)
††3 4
;
††4 5
var
°° 
selectedRect
°° 
=
°° 
new
°° "
Rect
°°# '
(
°°' (
)
°°( )
;
°°) *
var
¢¢ 
evt
¢¢ 
=
¢¢ 
Event
¢¢ 
.
¢¢ 
current
¢¢ #
;
¢¢# $
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
•• 
<
•• 
children
••  (
.
••( )
Count
••) .
;
••. /
i
••0 1
++
••1 3
)
••3 4
{
¶¶ 
var
ßß 
e
ßß 
=
ßß 
children
ßß  
[
ßß  !
i
ßß! "
]
ßß" #
;
ßß# $
var
®® 
r
®® 
=
®® 
GUILayoutUtility
®® (
.
®®( )
GetRect
®®) 0
(
®®0 1
$num
®®1 3
,
®®3 4
$num
®®5 7
,
®®7 8
	GUILayout
®®9 B
.
®®B C
ExpandWidth
®®C N
(
®®N O
true
®®O S
)
®®S T
)
®®T U
;
®®U V
if
¨¨ 
(
¨¨ 
evt
¨¨ 
.
¨¨ 
type
¨¨ 
==
¨¨ 
	EventType
¨¨  )
.
¨¨) *
	MouseMove
¨¨* 3
||
¨¨4 6
evt
¨¨7 :
.
¨¨: ;
type
¨¨; ?
==
¨¨@ B
	EventType
¨¨C L
.
¨¨L M
	MouseDown
¨¨M V
)
¨¨V W
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
parent
ÆÆ 
.
ÆÆ 
selectedIndex
ÆÆ ,
!=
ÆÆ- /
i
ÆÆ0 1
&&
ÆÆ2 4
r
ÆÆ5 6
.
ÆÆ6 7
Contains
ÆÆ7 ?
(
ÆÆ? @
evt
ÆÆ@ C
.
ÆÆC D
mousePosition
ÆÆD Q
)
ÆÆQ R
)
ÆÆR S
{
ØØ 
parent
∞∞ 
.
∞∞ 
selectedIndex
∞∞ ,
=
∞∞- .
i
∞∞/ 0
;
∞∞0 1
Repaint
±± 
(
±±  
)
±±  !
;
±±! "
}
≤≤ 
}
≥≥ 
bool
µµ 
selected
µµ 
=
µµ 
false
µµ  %
;
µµ% &
if
∏∏ 
(
∏∏ 
i
∏∏ 
==
∏∏ 
parent
∏∏ 
.
∏∏  
selectedIndex
∏∏  -
)
∏∏- .
{
ππ 
selected
∫∫ 
=
∫∫ 
true
∫∫ #
;
∫∫# $
selectedRect
ªª  
=
ªª! "
r
ªª# $
;
ªª$ %
}
ºº 
if
øø 
(
øø 
evt
øø 
.
øø 
type
øø 
==
øø 
	EventType
øø  )
.
øø) *
Repaint
øø* 1
)
øø1 2
{
¿¿ 
var
¡¡ 

labelStyle
¡¡ "
=
¡¡# $
(
¡¡% &
e
¡¡& '
is
¡¡( *
GroupElement
¡¡+ 7
)
¡¡7 8
?
¡¡9 :
s_Styles
¡¡; C
.
¡¡C D
groupButton
¡¡D O
:
¡¡P Q
s_Styles
¡¡R Z
.
¡¡Z [
componentButton
¡¡[ j
;
¡¡j k

labelStyle
¬¬ 
.
¬¬ 
Draw
¬¬ #
(
¬¬# $
r
¬¬$ %
,
¬¬% &
e
¬¬' (
.
¬¬( )
content
¬¬) 0
,
¬¬0 1
false
¬¬2 7
,
¬¬7 8
false
¬¬9 >
,
¬¬> ?
selected
¬¬@ H
,
¬¬H I
selected
¬¬J R
)
¬¬R S
;
¬¬S T
if
ƒƒ 
(
ƒƒ 
e
ƒƒ 
is
ƒƒ 
GroupElement
ƒƒ )
)
ƒƒ) *
{
≈≈ 
var
∆∆ 
	arrowRect
∆∆ %
=
∆∆& '
new
∆∆( +
Rect
∆∆, 0
(
∆∆0 1
r
∆∆1 2
.
∆∆2 3
x
∆∆3 4
+
∆∆5 6
r
∆∆7 8
.
∆∆8 9
width
∆∆9 >
-
∆∆? @
$num
∆∆A C
,
∆∆C D
r
∆∆E F
.
∆∆F G
y
∆∆G H
+
∆∆I J
$num
∆∆K L
,
∆∆L M
$num
∆∆N P
,
∆∆P Q
$num
∆∆R T
)
∆∆T U
;
∆∆U V
s_Styles
««  
.
««  !

rightArrow
««! +
.
««+ ,
Draw
««, 0
(
««0 1
	arrowRect
««1 :
,
««: ;
false
««< A
,
««A B
false
««C H
,
««H I
false
««J O
,
««O P
false
««Q V
)
««V W
;
««W X
}
»» 
}
…… 
if
ÀÀ 
(
ÀÀ 
evt
ÀÀ 
.
ÀÀ 
type
ÀÀ 
==
ÀÀ 
	EventType
ÀÀ  )
.
ÀÀ) *
	MouseDown
ÀÀ* 3
&&
ÀÀ4 6
r
ÀÀ7 8
.
ÀÀ8 9
Contains
ÀÀ9 A
(
ÀÀA B
evt
ÀÀB E
.
ÀÀE F
mousePosition
ÀÀF S
)
ÀÀS T
)
ÀÀT U
{
ÃÃ 
evt
ÕÕ 
.
ÕÕ 
Use
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
parent
ŒŒ 
.
ŒŒ 
selectedIndex
ŒŒ (
=
ŒŒ) *
i
ŒŒ+ ,
;
ŒŒ, -
	GoToChild
œœ 
(
œœ 
e
œœ 
,
œœ  
true
œœ! %
)
œœ% &
;
œœ& '
}
–– 
}
—— 
EditorGUIUtility
”” 
.
”” 
SetIconSize
”” (
(
””( )
Vector2
””) 0
.
””0 1
zero
””1 5
)
””5 6
;
””6 7
	GUILayout
’’ 
.
’’ 
EndScrollView
’’ #
(
’’# $
)
’’$ %
;
’’% &
if
ÿÿ 
(
ÿÿ  
m_ScrollToSelected
ÿÿ "
&&
ÿÿ# %
evt
ÿÿ& )
.
ÿÿ) *
type
ÿÿ* .
==
ÿÿ/ 1
	EventType
ÿÿ2 ;
.
ÿÿ; <
Repaint
ÿÿ< C
)
ÿÿC D
{
ŸŸ  
m_ScrollToSelected
⁄⁄ "
=
⁄⁄# $
false
⁄⁄% *
;
⁄⁄* +
var
€€ 

scrollRect
€€ 
=
€€  
GUILayoutUtility
€€! 1
.
€€1 2
GetLastRect
€€2 =
(
€€= >
)
€€> ?
;
€€? @
if
›› 
(
›› 
selectedRect
››  
.
››  !
yMax
››! %
-
››& '

scrollRect
››( 2
.
››2 3
height
››3 9
>
››: ;
parent
››< B
.
››B C
scroll
››C I
.
››I J
y
››J K
)
››K L
{
ﬁﬁ 
parent
ﬂﬂ 
.
ﬂﬂ 
scroll
ﬂﬂ !
.
ﬂﬂ! "
y
ﬂﬂ" #
=
ﬂﬂ$ %
selectedRect
ﬂﬂ& 2
.
ﬂﬂ2 3
yMax
ﬂﬂ3 7
-
ﬂﬂ8 9

scrollRect
ﬂﬂ: D
.
ﬂﬂD E
height
ﬂﬂE K
;
ﬂﬂK L
Repaint
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 
if
„„ 
(
„„ 
selectedRect
„„  
.
„„  !
y
„„! "
<
„„# $
parent
„„% +
.
„„+ ,
scroll
„„, 2
.
„„2 3
y
„„3 4
)
„„4 5
{
‰‰ 
parent
ÂÂ 
.
ÂÂ 
scroll
ÂÂ !
.
ÂÂ! "
y
ÂÂ" #
=
ÂÂ$ %
selectedRect
ÂÂ& 2
.
ÂÂ2 3
y
ÂÂ3 4
;
ÂÂ4 5
Repaint
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}
ËË 
}
ÈÈ 	
List
ÎÎ 
<
ÎÎ 
Element
ÎÎ 
>
ÎÎ 
GetChildren
ÎÎ !
(
ÎÎ! "
Element
ÎÎ" )
[
ÎÎ) *
]
ÎÎ* +
tree
ÎÎ, 0
,
ÎÎ0 1
Element
ÎÎ2 9
parent
ÎÎ: @
)
ÎÎ@ A
{
ÏÏ 	
var
ÌÌ 
children
ÌÌ 
=
ÌÌ 
new
ÌÌ 
List
ÌÌ #
<
ÌÌ# $
Element
ÌÌ$ +
>
ÌÌ+ ,
(
ÌÌ, -
)
ÌÌ- .
;
ÌÌ. /
int
ÓÓ 
level
ÓÓ 
=
ÓÓ 
-
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
int
ÔÔ 
i
ÔÔ 
;
ÔÔ 
for
ÒÒ 
(
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
tree
ÒÒ  
.
ÒÒ  !
Length
ÒÒ! '
;
ÒÒ' (
i
ÒÒ) *
++
ÒÒ* ,
)
ÒÒ, -
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 
tree
ÛÛ 
[
ÛÛ 
i
ÛÛ 
]
ÛÛ 
==
ÛÛ 
parent
ÛÛ %
)
ÛÛ% &
{
ÙÙ 
level
ıı 
=
ıı 
parent
ıı "
.
ıı" #
level
ıı# (
+
ıı) *
$num
ıı+ ,
;
ıı, -
i
ˆˆ 
++
ˆˆ 
;
ˆˆ 
break
˜˜ 
;
˜˜ 
}
¯¯ 
}
˘˘ 
if
˚˚ 
(
˚˚ 
level
˚˚ 
==
˚˚ 
-
˚˚ 
$num
˚˚ 
)
˚˚ 
return
¸¸ 
children
¸¸ 
;
¸¸  
for
˛˛ 
(
˛˛ 
;
˛˛ 
i
˛˛ 
<
˛˛ 
tree
˛˛ 
.
˛˛ 
Length
˛˛ "
;
˛˛" #
i
˛˛$ %
++
˛˛% '
)
˛˛' (
{
ˇˇ 
var
ÄÄ 
e
ÄÄ 
=
ÄÄ 
tree
ÄÄ 
[
ÄÄ 
i
ÄÄ 
]
ÄÄ 
;
ÄÄ  
if
ÇÇ 
(
ÇÇ 
e
ÇÇ 
.
ÇÇ 
level
ÇÇ 
<
ÇÇ 
level
ÇÇ #
)
ÇÇ# $
break
ÉÉ 
;
ÉÉ 
if
ÖÖ 
(
ÖÖ 
e
ÖÖ 
.
ÖÖ 
level
ÖÖ 
>
ÖÖ 
level
ÖÖ #
&&
ÖÖ$ &
!
ÖÖ' (
m_HasSearch
ÖÖ( 3
)
ÖÖ3 4
continue
ÜÜ 
;
ÜÜ 
children
àà 
.
àà 
Add
àà 
(
àà 
e
àà 
)
àà 
;
àà  
}
ââ 
return
ãã 
children
ãã 
;
ãã 
}
åå 	
}
çç 
}éé ¶
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Debugging\UIFoldoutEditor.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
UI  "
{ 
[ 
CustomEditor 
( 
typeof 
( 
	UIFoldout "
)" #
,# $
true% )
)) *
]* +
sealed 

class 
UIFoldoutEditor  
:! "
Editor# )
{ 
SerializedProperty 
m_IsOn !
;! "
SerializedProperty		 
	m_Content		 $
;		$ %
SerializedProperty

 
m_ArrowClosed

 (
;

( )
SerializedProperty 
m_ArrowOpened (
;( )
void 
OnEnable 
( 
) 
{ 	
var 
o 
= 
new 
PropertyFetcher '
<' (
	UIFoldout( 1
>1 2
(2 3
serializedObject3 C
)C D
;D E
m_IsOn 
= 
o 
. 
Find 
( 
$str $
)$ %
;% &
	m_Content 
= 
o 
. 
Find 
( 
x  
=>! #
x$ %
.% &
content& -
)- .
;. /
m_ArrowClosed 
= 
o 
. 
Find "
(" #
x# $
=>% '
x( )
.) *
arrowClosed* 5
)5 6
;6 7
m_ArrowOpened 
= 
o 
. 
Find "
(" #
x# $
=>% '
x( )
.) *
arrowOpened* 5
)5 6
;6 7
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
serializedObject 
. 
Update #
(# $
)$ %
;% &
EditorGUILayout 
. 
PropertyField )
() *
m_IsOn* 0
)0 1
;1 2
EditorGUILayout 
. 
PropertyField )
() *
	m_Content* 3
)3 4
;4 5
EditorGUILayout 
. 
PropertyField )
() *
m_ArrowClosed* 7
)7 8
;8 9
EditorGUILayout 
. 
PropertyField )
() *
m_ArrowOpened* 7
)7 8
;8 9
serializedObject 
. #
ApplyModifiedProperties 4
(4 5
)5 6
;6 7
}   	
}!! 
}"" ø
™D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\Drawers\ColorParameterDrawer.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
[ !
VolumeParameterDrawer 
( 
typeof !
(! "
ColorParameter" 0
)0 1
)1 2
]2 3
sealed 

class  
ColorParameterDrawer %
:& '!
VolumeParameterDrawer( =
{ 
public		 
override		 
bool		 
OnGUI		 "
(		" ##
SerializedDataParameter		# :
	parameter		; D
,		D E

GUIContent		F P
title		Q V
)		V W
{

 	
var 
value 
= 
	parameter !
.! "
value" '
;' (
if 
( 
value 
. 
propertyType "
!=# %"
SerializedPropertyType& <
.< =
Color= B
)B C
return 
false 
; 
var 
o 
= 
	parameter 
. 
GetObjectRef *
<* +
ColorParameter+ 9
>9 :
(: ;
); <
;< =
value 
. 

colorValue 
= 
EditorGUILayout .
.. /

ColorField/ 9
(9 :
title: ?
,? @
valueA F
.F G

colorValueG Q
,Q R
oS T
.T U
showEyeDropperU c
,c d
oe f
.f g
	showAlphag p
,p q
or s
.s t
hdrt w
)w x
;x y
return 
true 
; 
} 	
} 
} ¬@
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeProfileFactory.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

static 
class  
VolumeProfileFactory ,
{ 
[ 	
MenuItem	 
( 
$str 0
,0 1
priority2 :
=; <
$num= @
)@ A
]A B
static 
void 
CreateVolumeProfile '
(' (
)( )
{ 	
ProjectWindowUtil 
. 1
%StartNameEditingIfProjectWindowExists C
(C D
$num 
, 
ScriptableObject  
.  !
CreateInstance! /
</ 0&
DoCreatePostProcessProfile0 J
>J K
(K L
)L M
,M N
$str *
,* +
null 
, 
null 
) 
; 
} 	
public 
static 
VolumeProfile #%
CreateVolumeProfileAtPath$ =
(= >
string> D
pathE I
)I J
{   	
var!! 
profile!! 
=!! 
ScriptableObject!! *
.!!* +
CreateInstance!!+ 9
<!!9 :
VolumeProfile!!: G
>!!G H
(!!H I
)!!I J
;!!J K
profile"" 
."" 
name"" 
="" 
Path"" 
.""  
GetFileName""  +
(""+ ,
path"", 0
)""0 1
;""1 2
AssetDatabase## 
.## 
CreateAsset## %
(##% &
profile##& -
,##- .
path##/ 3
)##3 4
;##4 5
AssetDatabase$$ 
.$$ 

SaveAssets$$ $
($$$ %
)$$% &
;$$& '
AssetDatabase%% 
.%% 
Refresh%% !
(%%! "
)%%" #
;%%# $
return&& 
profile&& 
;&& 
}'' 	
public// 
static// 
VolumeProfile// #
CreateVolumeProfile//$ 7
(//7 8
Scene//8 =
scene//> C
,//C D
string//E K

targetName//L V
)//V W
{00 	
string11 
path11 
;11 
if33 
(33 
string33 
.33 
IsNullOrEmpty33 $
(33$ %
scene33% *
.33* +
path33+ /
)33/ 0
)330 1
{44 
path55 
=55 
$str55  
;55  !
}66 
else77 
{88 
var99 
	scenePath99 
=99 
Path99  $
.99$ %
GetDirectoryName99% 5
(995 6
scene996 ;
.99; <
path99< @
)99@ A
;99A B
var:: 
extPath:: 
=:: 
scene:: #
.::# $
name::$ (
;::( )
var;; 
profilePath;; 
=;;  !
	scenePath;;" +
+;;, -
Path;;. 2
.;;2 3"
DirectorySeparatorChar;;3 I
+;;J K
extPath;;L S
;;;S T
if== 
(== 
!== 
AssetDatabase== "
.==" #
IsValidFolder==# 0
(==0 1
profilePath==1 <
)==< =
)=== >
{>> 
var?? 
directories?? #
=??$ %
profilePath??& 1
.??1 2
Split??2 7
(??7 8
Path??8 <
.??< ="
DirectorySeparatorChar??= S
)??S T
;??T U
string@@ 
rootPath@@ #
=@@$ %
$str@@& (
;@@( )
foreachAA 
(AA 
varAA  
	directoryAA! *
inAA+ -
directoriesAA. 9
)AA9 :
{BB 
varCC 
newPathCC #
=CC$ %
rootPathCC& .
+CC/ 0
	directoryCC1 :
;CC: ;
ifDD 
(DD 
!DD 
AssetDatabaseDD *
.DD* +
IsValidFolderDD+ 8
(DD8 9
newPathDD9 @
)DD@ A
)DDA B
AssetDatabaseEE )
.EE) *
CreateFolderEE* 6
(EE6 7
rootPathEE7 ?
.EE? @
TrimEndEE@ G
(EEG H
PathEEH L
.EEL M"
DirectorySeparatorCharEEM c
)EEc d
,EEd e
	directoryEEf o
)EEo p
;EEp q
rootPathFF  
=FF! "
newPathFF# *
+FF+ ,
PathFF- 1
.FF1 2"
DirectorySeparatorCharFF2 H
;FFH I
}GG 
}HH 
pathJJ 
=JJ 
profilePathJJ "
+JJ# $
PathJJ% )
.JJ) *"
DirectorySeparatorCharJJ* @
;JJ@ A
}KK 
pathMM 
+=MM 

targetNameMM 
+MM  
$strMM! 1
;MM1 2
pathNN 
=NN 
AssetDatabaseNN  
.NN  !#
GenerateUniqueAssetPathNN! 8
(NN8 9
pathNN9 =
)NN= >
;NN> ?
varPP 
profilePP 
=PP 
ScriptableObjectPP *
.PP* +
CreateInstancePP+ 9
<PP9 :
VolumeProfilePP: G
>PPG H
(PPH I
)PPI J
;PPJ K
AssetDatabaseQQ 
.QQ 
CreateAssetQQ %
(QQ% &
profileQQ& -
,QQ- .
pathQQ/ 3
)QQ3 4
;QQ4 5
AssetDatabaseRR 
.RR 

SaveAssetsRR $
(RR$ %
)RR% &
;RR& '
AssetDatabaseSS 
.SS 
RefreshSS !
(SS! "
)SS" #
;SS# $
returnTT 
profileTT 
;TT 
}UU 	
publicaa 
staticaa 
Taa !
CreateVolumeComponentaa -
<aa- .
Taa. /
>aa/ 0
(aa0 1
VolumeProfileaa1 >
profileaa? F
,aaF G
boolaaH L
	overridesaaM V
=aaW X
falseaaY ^
,aa^ _
boolaa` d
	saveAssetaae n
=aao p
trueaaq u
)aau v
wherebb 
Tbb 
:bb 
VolumeComponentbb %
{cc 	
vardd 
compdd 
=dd 
profiledd 
.dd 
Adddd "
<dd" #
Tdd# $
>dd$ %
(dd% &
	overridesdd& /
)dd/ 0
;dd0 1
compee 
.ee 
	hideFlagsee 
=ee 
	HideFlagsee &
.ee& '
HideInInspectoree' 6
|ee7 8
	HideFlagsee9 B
.eeB C
HideInHierarchyeeC R
;eeR S
AssetDatabaseff 
.ff 
AddObjectToAssetff *
(ff* +
compff+ /
,ff/ 0
profileff1 8
)ff8 9
;ff9 :
ifhh 
(hh 
	saveAssethh 
)hh 
{ii 
AssetDatabasejj 
.jj 

SaveAssetsjj (
(jj( )
)jj) *
;jj* +
AssetDatabasekk 
.kk 
Refreshkk %
(kk% &
)kk& '
;kk' (
}ll 
returnnn 
compnn 
;nn 
}oo 	
}pp 
classrr 	&
DoCreatePostProcessProfilerr
 $
:rr% &
EndNameEditActionrr' 8
{ss 
publictt 
overridett 
voidtt 
Actiontt #
(tt# $
inttt$ '

instanceIdtt( 2
,tt2 3
stringtt4 :
pathNamett; C
,ttC D
stringttE K
resourceFilettL X
)ttX Y
{uu 	
varvv 
profilevv 
=vv  
VolumeProfileFactoryvv .
.vv. /%
CreateVolumeProfileAtPathvv/ H
(vvH I
pathNamevvI Q
)vvQ R
;vvR S
ProjectWindowUtilww 
.ww 
ShowCreatedAssetww .
(ww. /
profileww/ 6
)ww6 7
;ww7 8
}xx 	
}yy 
}zz ﬂ†
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\LookDev\CameraController.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
.  
LookDev  '
{ 
class 	
CameraController
 
: 
Manipulator (
{		 
[

 	
Flags

	 
]

 
enum 
	Direction 
{ 	
None 
= 
$num 
, 
Up 
= 
$num 
<< 
$num 
, 
Down 
= 
$num 
<< 
$num 
, 
Left 
= 
$num 
<< 
$num 
, 
Right 
= 
$num 
<< 
$num 
, 
Forward 
= 
$num 
<< 
$num 
, 
Backward 
= 
$num 
<< 
$num 
, 
All 
= 
Up 
| 
Down 
| 
Left "
|# $
Right% *
|+ ,
Forward- 4
|5 6
Backward7 ?
} 	
	Direction !
m_DirectionKeyPressed '
=( )
	Direction* 3
.3 4
None4 8
;8 9
float 
m_StartZoom 
= 
$num  
;  !
float 
m_ZoomSpeed 
= 
$num  
;  !
float 
m_TotalMotion 
= 
$num "
;" #
Vector3 
m_MotionDirection !
=" #
new$ '
Vector3( /
(/ 0
)0 1
;1 2
float  
m_FlySpeedNormalized "
=# $
$num% (
;( )
float 

m_FlySpeed 
= 
$num 
; 
float   !
m_FlySpeedAccelerated   #
=  $ %
$num  & (
;  ( )
const!! 
float!! 
m_FlySpeedMin!! !
=!!" #
$num!!$ (
;!!( )
const"" 
float"" 
m_FlySpeedMax"" !
=""" #
$num""$ &
;""& '
const$$ 
float$$ 
k_FlyAcceleration$$ %
=$$& '
$num$$( ,
;$$, -
bool%% 
m_ShiftBoostedFly%% 
=%%  
false%%! &
;%%& '
bool&& 
m_InFlyMotion&& 
;&& 
bool(( 
m_IsDragging(( 
;(( 
static)) 

TimeHelper)) 
s_Timer)) !
=))" #
new))$ '

TimeHelper))( 2
())2 3
)))3 4
;))4 5
ViewTool++ 
m_BehaviorState++  
;++  !
ViewTool,, 
behaviorState,, 
{-- 	
get.. 
{.. 
return.. 
m_BehaviorState.. (
;..( )
}..* +
set// 
{00 
if11 
(11 
value11 
!=11 
m_BehaviorState11 ,
&&11- /
m_BehaviorState110 ?
==11@ B
ViewTool11C K
.11K L
FPS11L O
)11O P
{22 

isDragging33 
=33  
false33! &
;33& '
inFlyMotion44 
=44  !
false44" '
;44' (!
m_DirectionKeyPressed55 )
=55* +
	Direction55, 5
.555 6
None556 :
;55: ;
}66 
m_BehaviorState77 
=77  !
value77" '
;77' (
}88 
}99 	
	protected;; 
CameraState;; 
m_CameraState;; +
;;;+ ,
DisplayWindow<< 
m_Window<< 
;<< 
	protected== 
Action== 
	m_Focused== "
;==" #
Rect?? 
screen?? 
=>?? 
target?? 
.?? 
contentRect?? )
;??) *
boolAA 
inFlyMotionAA 
{BB 	
getCC 
=>CC 
m_InFlyMotionCC  
;CC  !
setDD 
{EE 
ifFF 
(FF 
valueFF 
^FF 
m_InFlyMotionFF )
)FF) *
{GG 
ifHH 
(HH 
valueHH 
)HH 
{II 
s_TimerJJ 
.JJ  
BeginJJ  %
(JJ% &
)JJ& '
;JJ' (
EditorApplicationKK )
.KK) *
updateKK* 0
+=KK1 3
UpdateFPSMotionKK4 C
;KKC D
}LL 
elseMM 
{NN !
m_FlySpeedAcceleratedOO -
=OO. /
$numOO0 2
;OO2 3
m_MotionDirectionPP )
=PP* +
Vector3PP, 3
.PP3 4
zeroPP4 8
;PP8 9
m_ShiftBoostedFlyQQ )
=QQ* +
falseQQ, 1
;QQ1 2
EditorApplicationRR )
.RR) *
updateRR* 0
-=RR1 3
UpdateFPSMotionRR4 C
;RRC D
}SS 
m_InFlyMotionTT !
=TT" #
valueTT$ )
;TT) *
}UU 
}VV 
}WW 	
floatYY 
flySpeedNormalizedYY  
{ZZ 	
get[[ 
=>[[  
m_FlySpeedNormalized[[ '
;[[' (
set\\ 
{]]  
m_FlySpeedNormalized^^ $
=^^% &
Mathf^^' ,
.^^, -
Clamp01^^- 4
(^^4 5
value^^5 :
)^^: ;
;^^; <
float__ 
speed__ 
=__ 
Mathf__ #
.__# $
Lerp__$ (
(__( )
m_FlySpeedMin__) 6
,__6 7
m_FlySpeedMax__8 E
,__E F 
m_FlySpeedNormalized__G [
)__[ \
;__\ ]
speedaa 
=aa 
(aa 
floataa 
)aa 
(aa  
Systemaa  &
.aa& '
Mathaa' +
.aa+ ,
Roundaa, 1
(aa1 2
(aa2 3
doubleaa3 9
)aa9 :
speedaa: ?
,aa? @
speedaaA F
<aaG H
$numaaI M
?aaN O
$numaaP Q
:aaR S
speedaaT Y
<aaZ [
$numaa\ _
?aa` a
$numaab c
:aad e
$numaaf g
)aag h
)aah i
;aai j

m_FlySpeedbb 
=bb 
Mathfbb "
.bb" #
Clampbb# (
(bb( )
speedbb) .
,bb. /
m_FlySpeedMinbb0 =
,bb= >
m_FlySpeedMaxbb? L
)bbL M
;bbM N
}cc 
}dd 	
floatee 
flySpeedee 
{ff 	
getgg 
=>gg 

m_FlySpeedgg 
;gg 
sethh 
=>hh 
flySpeedNormalizedhh %
=hh& '
Mathfhh( -
.hh- .
InverseLerphh. 9
(hh9 :
m_FlySpeedMinhh: G
,hhG H
m_FlySpeedMaxhhI V
,hhV W
valuehhX ]
)hh] ^
;hh^ _
}ii 	
virtualkk 
	protectedkk 
boolkk 

isDraggingkk )
{ll 	
getmm 
=>mm 
m_IsDraggingmm 
;mm  
setnn 
{oo 
ifqq 
(qq 
valueqq 
^qq 
m_IsDraggingqq (
)qq( )
{rr 
ifss 
(ss 
valuess 
)ss 
{tt 
targetuu 
.uu 
RegisterCallbackuu /
<uu/ 0
MouseMoveEventuu0 >
>uu> ?
(uu? @
OnMouseDraguu@ K
)uuK L
;uuL M
targetvv 
.vv 
CaptureMousevv +
(vv+ ,
)vv, -
;vv- .
EditorGUIUtilityww (
.ww( ) 
SetWantsMouseJumpingww) =
(ww= >
$numww> ?
)ww? @
;ww@ A
}xx 
elseyy 
{zz 
EditorGUIUtility{{ (
.{{( ) 
SetWantsMouseJumping{{) =
({{= >
$num{{> ?
){{? @
;{{@ A
target|| 
.|| 
ReleaseMouse|| +
(||+ ,
)||, -
;||- .
target}} 
.}} 
UnregisterCallback}} 1
<}}1 2
MouseMoveEvent}}2 @
>}}@ A
(}}A B
OnMouseDrag}}B M
)}}M N
;}}N O
}~~ 
m_IsDragging  
=! "
value# (
;( )
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
CameraController
ÑÑ 
(
ÑÑ  
CameraState
ÑÑ  +
cameraState
ÑÑ, 7
,
ÑÑ7 8
DisplayWindow
ÑÑ9 F
window
ÑÑG M
,
ÑÑM N
Action
ÑÑO U
focused
ÑÑV ]
)
ÑÑ] ^
{
ÖÖ 	
m_CameraState
ÜÜ 
=
ÜÜ 
cameraState
ÜÜ '
;
ÜÜ' (
m_Window
áá 
=
áá 
window
áá 
;
áá 
	m_Focused
àà 
=
àà 
focused
àà 
;
àà  
}
ââ 	
private
ãã 
void
ãã  
ResetCameraControl
ãã '
(
ãã' (
)
ãã( )
{
åå 	

isDragging
çç 
=
çç 
false
çç 
;
çç 
inFlyMotion
éé 
=
éé 
false
éé 
;
éé  
behaviorState
èè 
=
èè 
ViewTool
èè $
.
èè$ %
None
èè% )
;
èè) *
}
êê 	
	protected
íí 
virtual
íí 
void
íí 
OnScrollWheel
íí ,
(
íí, -

WheelEvent
íí- 7
evt
íí8 ;
)
íí; <
{
ìì 	
switch
ïï 
(
ïï 
behaviorState
ïï !
)
ïï! "
{
ññ 
case
óó 
ViewTool
óó 
.
óó 
FPS
óó !
:
óó! "$
OnChangeFPSCameraSpeed
óó# 9
(
óó9 :
evt
óó: =
)
óó= >
;
óó> ?
break
óó@ E
;
óóE F
default
òò 
:
òò 
OnZoom
òò 
(
òò  
evt
òò  #
)
òò# $
;
òò$ %
break
òò& +
;
òò+ ,
}
ôô 
}
öö 	
void
úú 
OnMouseDrag
úú 
(
úú 
MouseMoveEvent
úú '
evt
úú( +
)
úú+ ,
{
ùù 	
switch
ûû 
(
ûû 
behaviorState
ûû !
)
ûû! "
{
üü 
case
†† 
ViewTool
†† 
.
†† 
Orbit
†† #
:
††# $
OnMouseDragOrbit
††% 5
(
††5 6
evt
††6 9
)
††9 :
;
††: ;
break
††< A
;
††A B
case
°° 
ViewTool
°° 
.
°° 
FPS
°° !
:
°°! "
OnMouseDragFPS
°°# 1
(
°°1 2
evt
°°2 5
)
°°5 6
;
°°6 7
break
°°8 =
;
°°= >
case
¢¢ 
ViewTool
¢¢ 
.
¢¢ 
Pan
¢¢ !
:
¢¢! "
OnMouseDragPan
¢¢# 1
(
¢¢1 2
evt
¢¢2 5
)
¢¢5 6
;
¢¢6 7
break
¢¢8 =
;
¢¢= >
case
££ 
ViewTool
££ 
.
££ 
Zoom
££ "
:
££" #
OnMouseDragZoom
££$ 3
(
££3 4
evt
££4 7
)
££7 8
;
££8 9
break
££: ?
;
££? @
default
§§ 
:
§§ 
break
§§ 
;
§§ 
}
•• 
}
¶¶ 	
void
®® 
	OnKeyDown
®® 
(
®® 
KeyDownEvent
®® #
evt
®®$ '
)
®®' (
{
©© 	
OnKeyUpOrDownFPS
™™ 
(
™™ 
evt
™™  
)
™™  !
;
™™! "
OnKeyDownReset
´´ 
(
´´ 
evt
´´ 
)
´´ 
;
´´  
}
¨¨ 	
void
ÆÆ $
OnChangeFPSCameraSpeed
ÆÆ #
(
ÆÆ# $

WheelEvent
ÆÆ$ .
evt
ÆÆ/ 2
)
ÆÆ2 3
{
ØØ 	
float
∞∞ 
scrollWheelDelta
∞∞ "
=
∞∞# $
evt
∞∞% (
.
∞∞( )
delta
∞∞) .
.
∞∞. /
y
∞∞/ 0
;
∞∞0 1 
flySpeedNormalized
±± 
-=
±± !
scrollWheelDelta
±±" 2
*
±±3 4
$num
±±5 9
;
±±9 :
string
≤≤ %
cameraSpeedDisplayValue
≤≤ *
=
≤≤+ ,
flySpeed
≤≤- 5
.
≤≤5 6
ToString
≤≤6 >
(
≤≤> ?
flySpeed
≤≤? G
<
≤≤H I
$num
≤≤J N
?
≤≤O P
$str
≤≤Q U
:
≤≤V W
flySpeed
≤≤X `
<
≤≤a b
$num
≤≤c f
?
≤≤g h
$str
≤≤i m
:
≤≤n o
$str
≤≤p t
)
≤≤t u
;
≤≤u v
if
≥≥ 
(
≥≥ 
flySpeed
≥≥ 
<
≥≥ 
$num
≥≥ 
)
≥≥  %
cameraSpeedDisplayValue
¥¥ '
=
¥¥( )%
cameraSpeedDisplayValue
¥¥* A
.
¥¥A B
	TrimStart
¥¥B K
(
¥¥K L
new
¥¥L O
Char
¥¥P T
[
¥¥T U
]
¥¥U V
{
¥¥W X
$char
¥¥Y \
}
¥¥] ^
)
¥¥^ _
;
¥¥_ `

GUIContent
µµ  
cameraSpeedContent
µµ )
=
µµ* +
EditorGUIUtility
µµ, <
.
µµ< =
TrTempContent
µµ= J
(
µµJ K
$"
∂∂ 
{
∂∂ %
cameraSpeedDisplayValue
∂∂ *
}
∂∂* +
x
∂∂+ ,
"
∂∂, -
)
∂∂- .
;
∂∂. /
m_Window
∑∑ 
.
∑∑ 
ShowNotification
∑∑ %
(
∑∑% & 
cameraSpeedContent
∑∑& 8
,
∑∑8 9
$num
∑∑: =
)
∑∑= >
;
∑∑> ?
evt
∏∏ 
.
∏∏ 
StopPropagation
∏∏ 
(
∏∏  
)
∏∏  !
;
∏∏! "
}
ππ 	
void
ªª 
OnZoom
ªª 
(
ªª 

WheelEvent
ªª 
evt
ªª "
)
ªª" #
{
ºº 	
const
ΩΩ 
float
ΩΩ 
deltaCutoff
ΩΩ #
=
ΩΩ$ %
$num
ΩΩ& )
;
ΩΩ) *
const
ææ 
float
ææ 
minZoom
ææ 
=
ææ  !
$num
ææ" '
;
ææ' (
float
øø 
scrollWheelDelta
øø "
=
øø# $
evt
øø% (
.
øø( )
delta
øø) .
.
øø. /
y
øø/ 0
;
øø0 1
float
¿¿ 
relativeDelta
¿¿ 
=
¿¿  !
m_CameraState
¿¿" /
.
¿¿/ 0
viewSize
¿¿0 8
*
¿¿9 :
scrollWheelDelta
¿¿; K
*
¿¿L M
$num
¿¿N S
;
¿¿S T
if
¡¡ 
(
¡¡ 
relativeDelta
¡¡ 
>
¡¡ 
$num
¡¡  !
&&
¡¡" $
relativeDelta
¡¡% 2
<
¡¡3 4
deltaCutoff
¡¡5 @
)
¡¡@ A
relativeDelta
¬¬ 
=
¬¬ 
deltaCutoff
¬¬  +
;
¬¬+ ,
else
√√ 
if
√√ 
(
√√ 
relativeDelta
√√ "
<=
√√# %
$num
√√& '
&&
√√( *
relativeDelta
√√+ 8
>
√√9 :
-
√√; <
deltaCutoff
√√< G
)
√√G H
relativeDelta
ƒƒ 
=
ƒƒ 
-
ƒƒ  !
deltaCutoff
ƒƒ! ,
;
ƒƒ, -
m_CameraState
≈≈ 
.
≈≈ 
viewSize
≈≈ "
+=
≈≈# %
relativeDelta
≈≈& 3
;
≈≈3 4
if
∆∆ 
(
∆∆ 
m_CameraState
∆∆ 
.
∆∆ 
viewSize
∆∆ &
<
∆∆' (
minZoom
∆∆) 0
)
∆∆0 1
m_CameraState
«« 
.
«« 
viewSize
«« &
=
««' (
minZoom
««) 0
;
««0 1
evt
»» 
.
»» 
StopPropagation
»» 
(
»»  
)
»»  !
;
»»! "
}
…… 	
void
ÀÀ 
OnMouseDragOrbit
ÀÀ 
(
ÀÀ 
MouseMoveEvent
ÀÀ ,
evt
ÀÀ- 0
)
ÀÀ0 1
{
ÃÃ 	

Quaternion
ÕÕ 
rotation
ÕÕ 
=
ÕÕ  !
m_CameraState
ÕÕ" /
.
ÕÕ/ 0
rotation
ÕÕ0 8
;
ÕÕ8 9
rotation
ŒŒ 
=
ŒŒ 

Quaternion
ŒŒ !
.
ŒŒ! "
	AngleAxis
ŒŒ" +
(
ŒŒ+ ,
evt
ŒŒ, /
.
ŒŒ/ 0

mouseDelta
ŒŒ0 :
.
ŒŒ: ;
y
ŒŒ; <
*
ŒŒ= >
$num
ŒŒ? D
*
ŒŒE F
Mathf
ŒŒG L
.
ŒŒL M
Rad2Deg
ŒŒM T
,
ŒŒT U
rotation
ŒŒV ^
*
ŒŒ_ `
Vector3
ŒŒa h
.
ŒŒh i
right
ŒŒi n
)
ŒŒn o
*
ŒŒp q
rotation
ŒŒr z
;
ŒŒz {
rotation
œœ 
=
œœ 

Quaternion
œœ !
.
œœ! "
	AngleAxis
œœ" +
(
œœ+ ,
evt
œœ, /
.
œœ/ 0

mouseDelta
œœ0 :
.
œœ: ;
x
œœ; <
*
œœ= >
$num
œœ? D
*
œœE F
Mathf
œœG L
.
œœL M
Rad2Deg
œœM T
,
œœT U
Vector3
œœV ]
.
œœ] ^
up
œœ^ `
)
œœ` a
*
œœb c
rotation
œœd l
;
œœl m
m_CameraState
–– 
.
–– 
rotation
–– "
=
––# $
rotation
––% -
;
––- .
evt
—— 
.
—— 
StopPropagation
—— 
(
——  
)
——  !
;
——! "
}
““ 	
void
‘‘ 
OnMouseDragFPS
‘‘ 
(
‘‘ 
MouseMoveEvent
‘‘ *
evt
‘‘+ .
)
‘‘. /
{
’’ 	
Vector3
÷÷ 
camPos
÷÷ 
=
÷÷ 
m_CameraState
÷÷ *
.
÷÷* +
pivot
÷÷+ 0
-
÷÷1 2
m_CameraState
÷÷3 @
.
÷÷@ A
rotation
÷÷A I
*
÷÷J K
Vector3
÷÷L S
.
÷÷S T
forward
÷÷T [
*
÷÷\ ]
m_CameraState
÷÷^ k
.
÷÷k l
distanceFromPivot
÷÷l }
;
÷÷} ~

Quaternion
◊◊ 
rotation
◊◊ 
=
◊◊  !
m_CameraState
◊◊" /
.
◊◊/ 0
rotation
◊◊0 8
;
◊◊8 9
rotation
ÿÿ 
=
ÿÿ 

Quaternion
ÿÿ !
.
ÿÿ! "
	AngleAxis
ÿÿ" +
(
ÿÿ+ ,
evt
ÿÿ, /
.
ÿÿ/ 0

mouseDelta
ÿÿ0 :
.
ÿÿ: ;
y
ÿÿ; <
*
ÿÿ= >
$num
ÿÿ? D
*
ÿÿE F
Mathf
ÿÿG L
.
ÿÿL M
Rad2Deg
ÿÿM T
,
ÿÿT U
rotation
ÿÿV ^
*
ÿÿ_ `
Vector3
ÿÿa h
.
ÿÿh i
right
ÿÿi n
)
ÿÿn o
*
ÿÿp q
rotation
ÿÿr z
;
ÿÿz {
rotation
ŸŸ 
=
ŸŸ 

Quaternion
ŸŸ !
.
ŸŸ! "
	AngleAxis
ŸŸ" +
(
ŸŸ+ ,
evt
ŸŸ, /
.
ŸŸ/ 0

mouseDelta
ŸŸ0 :
.
ŸŸ: ;
x
ŸŸ; <
*
ŸŸ= >
$num
ŸŸ? D
*
ŸŸE F
Mathf
ŸŸG L
.
ŸŸL M
Rad2Deg
ŸŸM T
,
ŸŸT U
Vector3
ŸŸV ]
.
ŸŸ] ^
up
ŸŸ^ `
)
ŸŸ` a
*
ŸŸb c
rotation
ŸŸd l
;
ŸŸl m
m_CameraState
⁄⁄ 
.
⁄⁄ 
rotation
⁄⁄ "
=
⁄⁄# $
rotation
⁄⁄% -
;
⁄⁄- .
m_CameraState
€€ 
.
€€ 
pivot
€€ 
=
€€  !
camPos
€€" (
+
€€) *
rotation
€€+ 3
*
€€4 5
Vector3
€€6 =
.
€€= >
forward
€€> E
*
€€F G
m_CameraState
€€H U
.
€€U V
distanceFromPivot
€€V g
;
€€g h
evt
‹‹ 
.
‹‹ 
StopPropagation
‹‹ 
(
‹‹  
)
‹‹  !
;
‹‹! "
}
›› 	
void
ﬂﬂ 
OnMouseDragPan
ﬂﬂ 
(
ﬂﬂ 
MouseMoveEvent
ﬂﬂ *
evt
ﬂﬂ+ .
)
ﬂﬂ. /
{
‡‡ 	
var
‚‚ 
	screenPos
‚‚ 
=
‚‚ 
m_CameraState
‚‚ )
.
‚‚) *'
QuickProjectPivotInScreen
‚‚* C
(
‚‚C D
screen
‚‚D J
)
‚‚J K
;
‚‚K L
	screenPos
„„ 
+=
„„ 
new
„„ 
Vector3
„„ $
(
„„$ %
evt
„„% (
.
„„( )

mouseDelta
„„) 3
.
„„3 4
x
„„4 5
,
„„5 6
-
„„7 8
evt
„„8 ;
.
„„; <

mouseDelta
„„< F
.
„„F G
y
„„G H
,
„„H I
$num
„„J K
)
„„K L
;
„„L M
Vector3
ÂÂ 
newWorldPos
ÂÂ 
=
ÂÂ  !
m_CameraState
ÂÂ" /
.
ÂÂ/ 07
)QuickReprojectionWithFixedFOVOnPivotPlane
ÂÂ0 Y
(
ÂÂY Z
screen
ÂÂZ `
,
ÂÂ` a
	screenPos
ÂÂb k
)
ÂÂk l
;
ÂÂl m
Vector3
ÊÊ 

worldDelta
ÊÊ 
=
ÊÊ  
newWorldPos
ÊÊ! ,
-
ÊÊ- .
m_CameraState
ÊÊ/ <
.
ÊÊ< =
pivot
ÊÊ= B
;
ÊÊB C

worldDelta
ÁÁ 
*=
ÁÁ 
EditorGUIUtility
ÁÁ *
.
ÁÁ* +
pixelsPerPoint
ÁÁ+ 9
;
ÁÁ9 :
if
ËË 
(
ËË 
evt
ËË 
.
ËË 
shiftKey
ËË 
)
ËË 

worldDelta
ÈÈ 
*=
ÈÈ 
$num
ÈÈ 
;
ÈÈ  
m_CameraState
ÍÍ 
.
ÍÍ 
pivot
ÍÍ 
+=
ÍÍ  "

worldDelta
ÍÍ# -
;
ÍÍ- .
evt
ÎÎ 
.
ÎÎ 
StopPropagation
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
}
ÏÏ 	
void
ÓÓ 
OnMouseDragZoom
ÓÓ 
(
ÓÓ 
MouseMoveEvent
ÓÓ +
evt
ÓÓ, /
)
ÓÓ/ 0
{
ÔÔ 	
float
 
	zoomDelta
 
=
 
HandleUtility
 +
.
+ , 
niceMouseDeltaZoom
, >
*
? @
(
A B
evt
B E
.
E F
shiftKey
F N
?
O P
$num
Q R
:
S T
$num
U V
)
V W
;
W X
m_TotalMotion
ÒÒ 
+=
ÒÒ 
	zoomDelta
ÒÒ &
;
ÒÒ& '
if
ÚÚ 
(
ÚÚ 
m_TotalMotion
ÚÚ 
<
ÚÚ 
$num
ÚÚ  !
)
ÚÚ! "
m_CameraState
ÛÛ 
.
ÛÛ 
viewSize
ÛÛ &
=
ÛÛ' (
m_StartZoom
ÛÛ) 4
*
ÛÛ5 6
(
ÛÛ7 8
$num
ÛÛ8 9
+
ÛÛ: ;
m_TotalMotion
ÛÛ< I
*
ÛÛJ K
$num
ÛÛL Q
)
ÛÛQ R
;
ÛÛR S
else
ÙÙ 
m_CameraState
ıı 
.
ıı 
viewSize
ıı &
=
ıı' (
m_CameraState
ıı) 6
.
ıı6 7
viewSize
ıı7 ?
+
ıı@ A
	zoomDelta
ııB K
*
ııL M
m_ZoomSpeed
ııN Y
*
ııZ [
$num
ıı\ a
;
ııa b
evt
ˆˆ 
.
ˆˆ 
StopPropagation
ˆˆ 
(
ˆˆ  
)
ˆˆ  !
;
ˆˆ! "
}
˜˜ 	
void
˘˘ 
OnKeyDownReset
˘˘ 
(
˘˘ 
KeyDownEvent
˘˘ (
evt
˘˘) ,
)
˘˘, -
{
˙˙ 	
if
˚˚ 
(
˚˚ 
evt
˚˚ 
.
˚˚ 
keyCode
˚˚ 
==
˚˚ 
KeyCode
˚˚ &
.
˚˚& '
Escape
˚˚' -
)
˚˚- . 
ResetCameraControl
¸¸ "
(
¸¸" #
)
¸¸# $
;
¸¸$ %
evt
˝˝ 
.
˝˝ 
StopPropagation
˝˝ 
(
˝˝  
)
˝˝  !
;
˝˝! "
}
˛˛ 	
void
ÄÄ 
OnKeyUpOrDownFPS
ÄÄ 
<
ÄÄ 
T
ÄÄ 
>
ÄÄ  
(
ÄÄ  !
KeyboardEventBase
ÄÄ! 2
<
ÄÄ2 3
T
ÄÄ3 4
>
ÄÄ4 5
evt
ÄÄ6 9
)
ÄÄ9 :
where
ÅÅ 
T
ÅÅ 
:
ÅÅ 
KeyboardEventBase
ÅÅ '
<
ÅÅ' (
T
ÅÅ( )
>
ÅÅ) *
,
ÅÅ* +
new
ÅÅ, /
(
ÅÅ/ 0
)
ÅÅ0 1
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
behaviorState
ÉÉ 
!=
ÉÉ  
ViewTool
ÉÉ! )
.
ÉÉ) *
FPS
ÉÉ* -
)
ÉÉ- .
return
ÑÑ 
;
ÑÑ 
KeyCombination
ââ 
combination
ââ &
;
ââ& '
if
ää 
(
ää #
GetKeyCombinationByID
ää %
(
ää% &
$str
ää& D
,
ääD E
out
ääF I
combination
ääJ U
)
ääU V
&&
ääW Y
combination
ääZ e
.
ääe f
Match
ääf k
(
ääk l
evt
ääl o
)
ääo p
)
ääp q"
RegisterMotionChange
ãã $
(
ãã$ %
	Direction
ãã% .
.
ãã. /
Forward
ãã/ 6
,
ãã6 7
evt
ãã8 ;
)
ãã; <
;
ãã< =
if
åå 
(
åå #
GetKeyCombinationByID
åå %
(
åå% &
$str
åå& E
,
ååE F
out
ååG J
combination
ååK V
)
ååV W
&&
ååX Z
combination
åå[ f
.
ååf g
Match
ååg l
(
åål m
evt
ååm p
)
ååp q
)
ååq r"
RegisterMotionChange
çç $
(
çç$ %
	Direction
çç% .
.
çç. /
Backward
çç/ 7
,
çç7 8
evt
çç9 <
)
çç< =
;
çç= >
if
éé 
(
éé #
GetKeyCombinationByID
éé %
(
éé% &
$str
éé& A
,
ééA B
out
ééC F
combination
ééG R
)
ééR S
&&
ééT V
combination
ééW b
.
ééb c
Match
ééc h
(
ééh i
evt
ééi l
)
éél m
)
éém n"
RegisterMotionChange
èè $
(
èè$ %
	Direction
èè% .
.
èè. /
Left
èè/ 3
,
èè3 4
evt
èè5 8
)
èè8 9
;
èè9 :
if
êê 
(
êê #
GetKeyCombinationByID
êê %
(
êê% &
$str
êê& B
,
êêB C
out
êêD G
combination
êêH S
)
êêS T
&&
êêU W
combination
êêX c
.
êêc d
Match
êêd i
(
êêi j
evt
êêj m
)
êêm n
)
êên o"
RegisterMotionChange
ëë $
(
ëë$ %
	Direction
ëë% .
.
ëë. /
Right
ëë/ 4
,
ëë4 5
evt
ëë6 9
)
ëë9 :
;
ëë: ;
if
íí 
(
íí #
GetKeyCombinationByID
íí %
(
íí% &
$str
íí& ?
,
íí? @
out
ííA D
combination
ííE P
)
ííP Q
&&
ííR T
combination
ííU `
.
íí` a
Match
íía f
(
ííf g
evt
ííg j
)
ííj k
)
íík l"
RegisterMotionChange
ìì $
(
ìì$ %
	Direction
ìì% .
.
ìì. /
Up
ìì/ 1
,
ìì1 2
evt
ìì3 6
)
ìì6 7
;
ìì7 8
if
îî 
(
îî #
GetKeyCombinationByID
îî %
(
îî% &
$str
îî& A
,
îîA B
out
îîC F
combination
îîG R
)
îîR S
&&
îîT V
combination
îîW b
.
îîb c
Match
îîc h
(
îîh i
evt
îîi l
)
îîl m
)
îîm n"
RegisterMotionChange
ïï $
(
ïï$ %
	Direction
ïï% .
.
ïï. /
Down
ïï/ 3
,
ïï3 4
evt
ïï5 8
)
ïï8 9
;
ïï9 :
}
ññ 	
void
òò "
RegisterMotionChange
òò !
<
òò! "
T
òò" #
>
òò# $
(
òò$ %
	Direction
òò% .
	direction
òò/ 8
,
òò8 9
KeyboardEventBase
òò: K
<
òòK L
T
òòL M
>
òòM N
evt
òòO R
)
òòR S
where
ôô 
T
ôô 
:
ôô 
KeyboardEventBase
ôô '
<
ôô' (
T
ôô( )
>
ôô) *
,
ôô* +
new
ôô, /
(
ôô/ 0
)
ôô0 1
{
öö 	
m_ShiftBoostedFly
õõ 
=
õõ 
evt
õõ  #
.
õõ# $
shiftKey
õõ$ ,
;
õõ, -
	Direction
úú 
formerDirection
úú %
=
úú& '#
m_DirectionKeyPressed
úú( =
;
úú= >
bool
ùù 
keyUp
ùù 
=
ùù 
evt
ùù 
is
ùù 

KeyUpEvent
ùù  *
;
ùù* +
bool
ûû 
keyDown
ûû 
=
ûû 
evt
ûû 
is
ûû !
KeyDownEvent
ûû" .
;
ûû. /
if
üü 
(
üü 
keyDown
üü 
)
üü #
m_DirectionKeyPressed
†† %
|=
††& (
	direction
††) 2
;
††2 3
else
°° 
if
°° 
(
°° 
keyUp
°° 
)
°° #
m_DirectionKeyPressed
¢¢ %
&=
¢¢& (
(
¢¢) *
	Direction
¢¢* 3
.
¢¢3 4
All
¢¢4 7
&
¢¢8 9
~
¢¢: ;
	direction
¢¢; D
)
¢¢D E
;
¢¢E F
if
££ 
(
££ 
formerDirection
££ 
!=
££  "#
m_DirectionKeyPressed
££# 8
)
££8 9
{
§§ 
m_MotionDirection
•• !
=
••" #
new
••$ '
Vector3
••( /
(
••/ 0
(
¶¶ 
(
¶¶ #
m_DirectionKeyPressed
¶¶ +
&
¶¶, -
	Direction
¶¶. 7
.
¶¶7 8
Right
¶¶8 =
)
¶¶= >
>
¶¶? @
$num
¶¶A B
?
¶¶C D
$num
¶¶E F
:
¶¶G H
$num
¶¶I J
)
¶¶J K
-
¶¶L M
(
¶¶N O
(
¶¶O P#
m_DirectionKeyPressed
¶¶P e
&
¶¶f g
	Direction
¶¶h q
.
¶¶q r
Left
¶¶r v
)
¶¶v w
>
¶¶x y
$num
¶¶z {
?
¶¶| }
$num
¶¶~ 
:¶¶Ä Å
$num¶¶Ç É
)¶¶É Ñ
,¶¶Ñ Ö
(
ßß 
(
ßß #
m_DirectionKeyPressed
ßß +
&
ßß, -
	Direction
ßß. 7
.
ßß7 8
Up
ßß8 :
)
ßß: ;
>
ßß< =
$num
ßß> ?
?
ßß@ A
$num
ßßB C
:
ßßD E
$num
ßßF G
)
ßßG H
-
ßßI J
(
ßßK L
(
ßßL M#
m_DirectionKeyPressed
ßßM b
&
ßßc d
	Direction
ßße n
.
ßßn o
Down
ßßo s
)
ßßs t
>
ßßu v
$num
ßßw x
?
ßßy z
$num
ßß{ |
:
ßß} ~
$numßß Ä
)ßßÄ Å
,ßßÅ Ç
(
®® 
(
®® #
m_DirectionKeyPressed
®® +
&
®®, -
	Direction
®®. 7
.
®®7 8
Forward
®®8 ?
)
®®? @
>
®®A B
$num
®®C D
?
®®E F
$num
®®G H
:
®®I J
$num
®®K L
)
®®L M
-
®®N O
(
®®P Q
(
®®Q R#
m_DirectionKeyPressed
®®R g
&
®®h i
	Direction
®®j s
.
®®s t
Backward
®®t |
)
®®| }
>
®®~ 
$num®®Ä Å
?®®Ç É
$num®®Ñ Ö
:®®Ü á
$num®®à â
)®®â ä
)®®ä ã
;®®ã å
inFlyMotion
™™ 
=
™™ #
m_DirectionKeyPressed
™™ 3
!=
™™4 6
	Direction
™™7 @
.
™™@ A
None
™™A E
;
™™E F
}
´´ 
evt
¨¨ 
.
¨¨ 
StopPropagation
¨¨ 
(
¨¨  
)
¨¨  !
;
¨¨! "
}
≠≠ 	
Vector3
ØØ  
GetMotionDirection
ØØ "
(
ØØ" #
)
ØØ# $
{
∞∞ 	
var
±± 
	deltaTime
±± 
=
±± 
s_Timer
±± #
.
±±# $
Update
±±$ *
(
±±* +
)
±±+ ,
;
±±, -
Vector3
≤≤ 
result
≤≤ 
;
≤≤ 
float
≥≥ 
speed
≥≥ 
=
≥≥ 
(
≥≥ 
m_ShiftBoostedFly
≥≥ ,
?
≥≥- .
$num
≥≥/ 0
*
≥≥1 2
flySpeed
≥≥3 ;
:
≥≥< =
flySpeed
≥≥> F
)
≥≥F G
;
≥≥G H
if
¥¥ 
(
¥¥ #
m_FlySpeedAccelerated
¥¥ %
==
¥¥& (
$num
¥¥) *
)
¥¥* +#
m_FlySpeedAccelerated
µµ %
=
µµ& '
$num
µµ( )
;
µµ) *
else
∂∂ #
m_FlySpeedAccelerated
∑∑ %
*=
∑∑& (
Mathf
∑∑) .
.
∑∑. /
Pow
∑∑/ 2
(
∑∑2 3
k_FlyAcceleration
∑∑3 D
,
∑∑D E
	deltaTime
∑∑F O
)
∑∑O P
;
∑∑P Q
result
∏∏ 
=
∏∏ 
m_MotionDirection
∏∏ &
.
∏∏& '

normalized
∏∏' 1
*
∏∏2 3#
m_FlySpeedAccelerated
∏∏4 I
*
∏∏J K
speed
∏∏L Q
*
∏∏R S
	deltaTime
∏∏T ]
;
∏∏] ^
return
ππ 
result
ππ 
;
ππ 
}
∫∫ 	
void
ºº 
UpdateFPSMotion
ºº 
(
ºº 
)
ºº 
{
ΩΩ 	
m_CameraState
ææ 
.
ææ 
pivot
ææ 
+=
ææ  "
m_CameraState
ææ# 0
.
ææ0 1
rotation
ææ1 9
*
ææ: ; 
GetMotionDirection
ææ< N
(
ææN O
)
ææO P
;
ææP Q
m_Window
øø 
.
øø 
Repaint
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 	
bool
¬¬ #
GetKeyCombinationByID
¬¬ "
(
¬¬" #
string
¬¬# )
ID
¬¬* ,
,
¬¬, -
out
¬¬. 1
KeyCombination
¬¬2 @
combination
¬¬A L
)
¬¬L M
{
√√ 	
var
ƒƒ 
sequence
ƒƒ 
=
ƒƒ 
ShortcutManager
ƒƒ *
.
ƒƒ* +
instance
ƒƒ+ 3
.
ƒƒ3 4 
GetShortcutBinding
ƒƒ4 F
(
ƒƒF G
ID
ƒƒG I
)
ƒƒI J
.
ƒƒJ K$
keyCombinationSequence
ƒƒK a
.
ƒƒa b
GetEnumerator
ƒƒb o
(
ƒƒo p
)
ƒƒp q
;
ƒƒq r
if
≈≈ 
(
≈≈ 
sequence
≈≈ 
.
≈≈ 
MoveNext
≈≈ !
(
≈≈! "
)
≈≈" #
)
≈≈# $
{
∆∆ 
combination
«« 
=
«« 
new
«« !
KeyCombination
««" 0
(
««0 1
sequence
««1 9
.
««9 :
Current
««: A
)
««A B
;
««B C
return
»» 
true
»» 
;
»» 
}
…… 
else
   
{
ÀÀ 
combination
ÃÃ 
=
ÃÃ 
default
ÃÃ %
;
ÃÃ% &
return
ÕÕ 
false
ÕÕ 
;
ÕÕ 
}
ŒŒ 
}
œœ 	
ViewTool
—— 
GetBehaviorTool
——  
<
——  !
T
——! "
>
——" #
(
——# $
MouseEventBase
——$ 2
<
——2 3
T
——3 4
>
——4 5
evt
——6 9
,
——9 :
bool
——; ?
onMac
——@ E
)
——E F
where
——G L
T
——M N
:
——O P
MouseEventBase
——Q _
<
——_ `
T
——` a
>
——a b
,
——b c
new
——d g
(
——g h
)
——h i
{
““ 	
if
”” 
(
”” 
evt
”” 
.
”” 
button
”” 
==
”” 
$num
”” 
)
””  
return
‘‘ 
ViewTool
‘‘ 
.
‘‘  
Pan
‘‘  #
;
‘‘# $
else
’’ 
if
’’ 
(
’’ 
evt
’’ 
.
’’ 
button
’’ 
==
’’  "
$num
’’# $
&&
’’% '
evt
’’( +
.
’’+ ,
ctrlKey
’’, 3
&&
’’4 6
onMac
’’7 <
||
’’= ?
evt
’’@ C
.
’’C D
button
’’D J
==
’’K M
$num
’’N O
&&
’’P R
evt
’’S V
.
’’V W
altKey
’’W ]
)
’’] ^
return
÷÷ 
ViewTool
÷÷ 
.
÷÷  
Zoom
÷÷  $
;
÷÷$ %
else
◊◊ 
if
◊◊ 
(
◊◊ 
evt
◊◊ 
.
◊◊ 
button
◊◊ 
==
◊◊  "
$num
◊◊# $
)
◊◊$ %
return
ÿÿ 
ViewTool
ÿÿ 
.
ÿÿ  
Orbit
ÿÿ  %
;
ÿÿ% &
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
evt
ŸŸ 
.
ŸŸ 
button
ŸŸ 
==
ŸŸ  "
$num
ŸŸ# $
&&
ŸŸ% '
!
ŸŸ( )
evt
ŸŸ) ,
.
ŸŸ, -
altKey
ŸŸ- 3
)
ŸŸ3 4
return
⁄⁄ 
ViewTool
⁄⁄ 
.
⁄⁄  
FPS
⁄⁄  #
;
⁄⁄# $
return
€€ 
ViewTool
€€ 
.
€€ 
None
€€  
;
€€  !
}
‹‹ 	
void
ﬁﬁ 
	OnMouseUp
ﬁﬁ 
(
ﬁﬁ 
MouseUpEvent
ﬁﬁ #
evt
ﬁﬁ$ '
)
ﬁﬁ' (
{
ﬂﬂ 	
bool
‡‡ 
onMac
‡‡ 
=
‡‡ 
Application
‡‡ $
.
‡‡$ %
platform
‡‡% -
==
‡‡. 0
RuntimePlatform
‡‡1 @
.
‡‡@ A
	OSXEditor
‡‡A J
;
‡‡J K
var
·· 
state
·· 
=
·· 
GetBehaviorTool
·· '
(
··' (
evt
··( +
,
··+ ,
onMac
··- 2
)
··2 3
;
··3 4
if
„„ 
(
„„ 
state
„„ 
==
„„ 
behaviorState
„„ &
)
„„& ' 
ResetCameraControl
‰‰ "
(
‰‰" #
)
‰‰# $
;
‰‰$ %
evt
ÂÂ 
.
ÂÂ 
StopPropagation
ÂÂ 
(
ÂÂ  
)
ÂÂ  !
;
ÂÂ! "
}
ÊÊ 	
void
ËË 
OnMouseDown
ËË 
(
ËË 
MouseDownEvent
ËË '
evt
ËË( +
)
ËË+ ,
{
ÈÈ 	
bool
ÍÍ 
onMac
ÍÍ 
=
ÍÍ 
Application
ÍÍ $
.
ÍÍ$ %
platform
ÍÍ% -
==
ÍÍ. 0
RuntimePlatform
ÍÍ1 @
.
ÍÍ@ A
	OSXEditor
ÍÍA J
;
ÍÍJ K
behaviorState
ÎÎ 
=
ÎÎ 
GetBehaviorTool
ÎÎ +
(
ÎÎ+ ,
evt
ÎÎ, /
,
ÎÎ/ 0
onMac
ÎÎ1 6
)
ÎÎ6 7
;
ÎÎ7 8
if
ÌÌ 
(
ÌÌ 
behaviorState
ÌÌ 
==
ÌÌ  
ViewTool
ÌÌ! )
.
ÌÌ) *
Zoom
ÌÌ* .
)
ÌÌ. /
{
ÓÓ 
m_StartZoom
ÔÔ 
=
ÔÔ 
m_CameraState
ÔÔ +
.
ÔÔ+ ,
viewSize
ÔÔ, 4
;
ÔÔ4 5
m_ZoomSpeed
 
=
 
Mathf
 #
.
# $
Max
$ '
(
' (
Mathf
( -
.
- .
Abs
. 1
(
1 2
m_StartZoom
2 =
)
= >
,
> ?
$num
@ C
)
C D
;
D E
m_TotalMotion
ÒÒ 
=
ÒÒ 
$num
ÒÒ  !
;
ÒÒ! "
}
ÚÚ 
if
ıı 
(
ıı 
evt
ıı 
.
ıı 
button
ıı 
==
ıı 
$num
ıı 
&&
ıı  "
onMac
ıı# (
)
ıı( )
m_Window
ˆˆ 
.
ˆˆ 
Focus
ˆˆ 
(
ˆˆ 
)
ˆˆ  
;
ˆˆ  !
target
¯¯ 
.
¯¯ 
Focus
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 

isDragging
˘˘ 
=
˘˘ 
true
˘˘ 
;
˘˘ 
evt
˙˙ 
.
˙˙ 
StopPropagation
˙˙ 
(
˙˙  
)
˙˙  !
;
˙˙! "
	m_Focused
¸¸ 
?
¸¸ 
.
¸¸ 
Invoke
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸  
}
˝˝ 	
	protected
ˇˇ 
override
ˇˇ 
void
ˇˇ '
RegisterCallbacksOnTarget
ˇˇ  9
(
ˇˇ9 :
)
ˇˇ: ;
{
ÄÄ 	
target
ÅÅ 
.
ÅÅ 
	focusable
ÅÅ 
=
ÅÅ 
true
ÅÅ #
;
ÅÅ# $
target
ÇÇ 
.
ÇÇ 
RegisterCallback
ÇÇ #
<
ÇÇ# $
MouseUpEvent
ÇÇ$ 0
>
ÇÇ0 1
(
ÇÇ1 2
	OnMouseUp
ÇÇ2 ;
)
ÇÇ; <
;
ÇÇ< =
target
ÉÉ 
.
ÉÉ 
RegisterCallback
ÉÉ #
<
ÉÉ# $
MouseDownEvent
ÉÉ$ 2
>
ÉÉ2 3
(
ÉÉ3 4
OnMouseDown
ÉÉ4 ?
)
ÉÉ? @
;
ÉÉ@ A
target
ÑÑ 
.
ÑÑ 
RegisterCallback
ÑÑ #
<
ÑÑ# $

WheelEvent
ÑÑ$ .
>
ÑÑ. /
(
ÑÑ/ 0
OnScrollWheel
ÑÑ0 =
)
ÑÑ= >
;
ÑÑ> ?
target
ÖÖ 
.
ÖÖ 
RegisterCallback
ÖÖ #
<
ÖÖ# $
KeyDownEvent
ÖÖ$ 0
>
ÖÖ0 1
(
ÖÖ1 2
	OnKeyDown
ÖÖ2 ;
)
ÖÖ; <
;
ÖÖ< =
target
ÜÜ 
.
ÜÜ 
RegisterCallback
ÜÜ #
<
ÜÜ# $

KeyUpEvent
ÜÜ$ .
>
ÜÜ. /
(
ÜÜ/ 0
OnKeyUpOrDownFPS
ÜÜ0 @
)
ÜÜ@ A
;
ÜÜA B
}
áá 	
	protected
ââ 
override
ââ 
void
ââ +
UnregisterCallbacksFromTarget
ââ  =
(
ââ= >
)
ââ> ?
{
ää 	
target
ãã 
.
ãã  
UnregisterCallback
ãã %
<
ãã% &
MouseUpEvent
ãã& 2
>
ãã2 3
(
ãã3 4
	OnMouseUp
ãã4 =
)
ãã= >
;
ãã> ?
target
åå 
.
åå  
UnregisterCallback
åå %
<
åå% &
MouseDownEvent
åå& 4
>
åå4 5
(
åå5 6
OnMouseDown
åå6 A
)
ååA B
;
ååB C
target
çç 
.
çç  
UnregisterCallback
çç %
<
çç% &

WheelEvent
çç& 0
>
çç0 1
(
çç1 2
OnScrollWheel
çç2 ?
)
çç? @
;
çç@ A
target
éé 
.
éé  
UnregisterCallback
éé %
<
éé% &
KeyDownEvent
éé& 2
>
éé2 3
(
éé3 4
	OnKeyDown
éé4 =
)
éé= >
;
éé> ?
target
èè 
.
èè  
UnregisterCallback
èè %
<
èè% &

KeyUpEvent
èè& 0
>
èè0 1
(
èè1 2
OnKeyUpOrDownFPS
èè2 B
)
èèB C
;
èèC D
}
êê 	
struct
íí 
KeyCombination
íí 
{
ìì 	
KeyCode
îî 
key
îî 
;
îî 
EventModifiers
ïï 
modifier
ïï #
;
ïï# $
public
ññ 
bool
ññ 
shiftOnLastMatch
ññ (
;
ññ( )
public
òò 
KeyCombination
òò !
(
òò! "
UnityEditor
òò" -
.
òò- . 
ShortcutManagement
òò. @
.
òò@ A
KeyCombination
òòA O!
shortcutCombination
òòP c
)
òòc d
{
ôô 
key
öö 
=
öö !
shortcutCombination
öö )
.
öö) *
keyCode
öö* 1
;
öö1 2
modifier
õõ 
=
õõ 
EventModifiers
õõ )
.
õõ) *
None
õõ* .
;
õõ. /
if
úú 
(
úú 
(
úú !
shortcutCombination
úú (
.
úú( )
	modifiers
úú) 2
&
úú3 4
ShortcutModifiers
úú5 F
.
úúF G
Shift
úúG L
)
úúL M
!=
úúN P
$num
úúQ R
)
úúR S
modifier
ùù 
|=
ùù 
EventModifiers
ùù  .
.
ùù. /
Shift
ùù/ 4
;
ùù4 5
if
ûû 
(
ûû 
(
ûû !
shortcutCombination
ûû (
.
ûû( )
	modifiers
ûû) 2
&
ûû3 4
ShortcutModifiers
ûû5 F
.
ûûF G
Alt
ûûG J
)
ûûJ K
!=
ûûL N
$num
ûûO P
)
ûûP Q
modifier
üü 
|=
üü 
EventModifiers
üü  .
.
üü. /
Alt
üü/ 2
;
üü2 3
if
†† 
(
†† 
(
†† !
shortcutCombination
†† (
.
††( )
	modifiers
††) 2
&
††3 4
ShortcutModifiers
††5 F
.
††F G
Action
††G M
)
††M N
!=
††O Q
$num
††R S
)
††S T
{
°° 
if
¢¢ 
(
¢¢ 
Application
¢¢ #
.
¢¢# $
platform
¢¢$ ,
==
¢¢- /
RuntimePlatform
¢¢0 ?
.
¢¢? @
	OSXEditor
¢¢@ I
||
¢¢J L
Application
¢¢M X
.
¢¢X Y
platform
¢¢Y a
==
¢¢b d
RuntimePlatform
¢¢e t
.
¢¢t u
	OSXPlayer
¢¢u ~
)
¢¢~ 
modifier
££  
|=
££! #
EventModifiers
££$ 2
.
££2 3
Command
££3 :
;
££: ;
else
§§ 
modifier
••  
|=
••! #
EventModifiers
••$ 2
.
••2 3
Control
••3 :
;
••: ;
}
¶¶ 
shiftOnLastMatch
ßß  
=
ßß! "
false
ßß# (
;
ßß( )
}
®® 
public
´´ 
bool
´´ 
Match
´´ 
(
´´ 
IKeyboardEvent
´´ ,
evt
´´- 0
,
´´0 1
bool
´´2 6 
atLeastForModifier
´´7 I
=
´´J K
true
´´L P
)
´´P Q
{
¨¨ 
shiftOnLastMatch
≠≠  
=
≠≠! "
evt
≠≠# &
.
≠≠& '
shiftKey
≠≠' /
;
≠≠/ 0
if
ÆÆ 
(
ÆÆ  
atLeastForModifier
ÆÆ &
)
ÆÆ& '
return
ØØ 
key
ØØ 
==
ØØ !
evt
ØØ" %
.
ØØ% &
keyCode
ØØ& -
&&
ØØ. 0
modifier
ØØ1 9
==
ØØ: <
(
ØØ= >
evt
ØØ> A
.
ØØA B
	modifiers
ØØB K
&
ØØL M
modifier
ØØN V
)
ØØV W
;
ØØW X
else
∞∞ 
return
±± 
key
±± 
==
±± !
evt
±±" %
.
±±% &
keyCode
±±& -
&&
±±. 0
modifier
±±1 9
==
±±: <
evt
±±= @
.
±±@ A
	modifiers
±±A J
;
±±J K
}
≤≤ 
}
≥≥ 	
struct
µµ 

TimeHelper
µµ 
{
∂∂ 	
long
∑∑ 
lastTime
∑∑ 
;
∑∑ 
public
ππ 
void
ππ 
Begin
ππ 
(
ππ 
)
ππ 
=>
ππ  "
lastTime
ππ# +
=
ππ, -
System
ππ. 4
.
ππ4 5
DateTime
ππ5 =
.
ππ= >
Now
ππ> A
.
ππA B
Ticks
ππB G
;
ππG H
public
ªª 
float
ªª 
Update
ªª 
(
ªª  
)
ªª  !
{
ºº 
float
ΩΩ 
	deltaTime
ΩΩ 
=
ΩΩ  !
(
ΩΩ" #
System
ΩΩ# )
.
ΩΩ) *
DateTime
ΩΩ* 2
.
ΩΩ2 3
Now
ΩΩ3 6
.
ΩΩ6 7
Ticks
ΩΩ7 <
-
ΩΩ= >
lastTime
ΩΩ? G
)
ΩΩG H
/
ΩΩI J
$num
ΩΩK V
;
ΩΩV W
lastTime
ææ 
=
ææ 
System
ææ !
.
ææ! "
DateTime
ææ" *
.
ææ* +
Now
ææ+ .
.
ææ. /
Ticks
ææ/ 4
;
ææ4 5
return
øø 
	deltaTime
øø  
;
øø  !
}
¿¿ 
}
¡¡ 	
}
¬¬ 
class
ƒƒ 	(
SwitchableCameraController
ƒƒ
 $
:
ƒƒ% &
CameraController
ƒƒ' 7
{
≈≈ 
CameraState
∆∆ 
m_FirstView
∆∆ 
;
∆∆  
CameraState
«« 
m_SecondView
««  
;
««  !
	ViewIndex
»»  
m_CurrentViewIndex
»» $
;
»»$ %
bool
   
switchedDrag
   
=
   
false
   !
;
  ! "
bool
ÀÀ 
switchedWheel
ÀÀ 
=
ÀÀ 
false
ÀÀ "
;
ÀÀ" #
public
ÕÕ (
SwitchableCameraController
ÕÕ )
(
ÕÕ) *
CameraState
ÕÕ* 5"
cameraStateFirstView
ÕÕ6 J
,
ÕÕJ K
CameraState
ÕÕL W#
cameraStateSecondView
ÕÕX m
,
ÕÕm n
DisplayWindow
ÕÕo |
windowÕÕ} É
,ÕÕÉ Ñ
ActionÕÕÖ ã
<ÕÕã å
	ViewIndexÕÕå ï
>ÕÕï ñ
focusedÕÕó û
)ÕÕû ü
:
ŒŒ 
base
ŒŒ 
(
ŒŒ "
cameraStateFirstView
ŒŒ '
,
ŒŒ' (
window
ŒŒ) /
,
ŒŒ/ 0
null
ŒŒ1 5
)
ŒŒ5 6
{
œœ 	
m_FirstView
–– 
=
–– "
cameraStateFirstView
–– .
;
––. /
m_SecondView
—— 
=
—— #
cameraStateSecondView
—— 0
;
——0 1 
m_CurrentViewIndex
““ 
=
““  
	ViewIndex
““! *
.
““* +
First
““+ 0
;
““0 1
	m_Focused
‘‘ 
=
‘‘ 
(
‘‘ 
)
‘‘ 
=>
‘‘ 
focused
‘‘ %
?
‘‘% &
.
‘‘& '
Invoke
‘‘' -
(
‘‘- . 
m_CurrentViewIndex
‘‘. @
)
‘‘@ A
;
‘‘A B
}
’’ 	
void
◊◊ 
SwitchTo
◊◊ 
(
◊◊ 
	ViewIndex
◊◊ 
index
◊◊  %
)
◊◊% &
{
ÿÿ 	
CameraState
ŸŸ 
stateToSwitch
ŸŸ %
;
ŸŸ% &
switch
⁄⁄ 
(
⁄⁄ 
index
⁄⁄ 
)
⁄⁄ 
{
€€ 
case
‹‹ 
	ViewIndex
‹‹ 
.
‹‹ 
First
‹‹ $
:
‹‹$ %
stateToSwitch
›› !
=
››" #
m_FirstView
››$ /
;
››/ 0
break
ﬁﬁ 
;
ﬁﬁ 
case
ﬂﬂ 
	ViewIndex
ﬂﬂ 
.
ﬂﬂ 
Second
ﬂﬂ %
:
ﬂﬂ% &
stateToSwitch
‡‡ !
=
‡‡" #
m_SecondView
‡‡$ 0
;
‡‡0 1
break
·· 
;
·· 
default
‚‚ 
:
‚‚ 
throw
„„ 
new
„„ 
ArgumentException
„„ /
(
„„/ 0
$str
„„0 C
)
„„C D
;
„„D E
}
‰‰ 
if
ÊÊ 
(
ÊÊ 
stateToSwitch
ÊÊ 
!=
ÊÊ  
m_CameraState
ÊÊ! .
)
ÊÊ. /
m_CameraState
ÁÁ 
=
ÁÁ 
stateToSwitch
ÁÁ  -
;
ÁÁ- . 
m_CurrentViewIndex
ÈÈ 
=
ÈÈ  
index
ÈÈ! &
;
ÈÈ& '
}
ÍÍ 	
public
ÏÏ 
void
ÏÏ &
SwitchUntilNextEndOfDrag
ÏÏ ,
(
ÏÏ, -
)
ÏÏ- .
{
ÌÌ 	
switchedDrag
ÓÓ 
=
ÓÓ 
true
ÓÓ 
;
ÓÓ  
SwitchTo
ÔÔ 
(
ÔÔ 
	ViewIndex
ÔÔ 
.
ÔÔ 
Second
ÔÔ %
)
ÔÔ% &
;
ÔÔ& '
}
 	
override
ÚÚ 
	protected
ÚÚ 
bool
ÚÚ 

isDragging
ÚÚ  *
{
ÛÛ 	
get
ÙÙ 
=>
ÙÙ 
base
ÙÙ 
.
ÙÙ 

isDragging
ÙÙ "
;
ÙÙ" #
set
ıı 
{
ˆˆ 
bool
˜˜ 

switchBack
˜˜ 
=
˜˜  !
false
˜˜" '
;
˜˜' (
if
¯¯ 
(
¯¯ 
switchedDrag
¯¯  
&&
¯¯! #
base
¯¯$ (
.
¯¯( )

isDragging
¯¯) 3
&&
¯¯4 6
!
¯¯7 8
value
¯¯8 =
)
¯¯= >

switchBack
˘˘ 
=
˘˘  
true
˘˘! %
;
˘˘% &
base
˙˙ 
.
˙˙ 

isDragging
˙˙ 
=
˙˙  !
value
˙˙" '
;
˙˙' (
if
˚˚ 
(
˚˚ 

switchBack
˚˚ 
)
˚˚ 
SwitchTo
¸¸ 
(
¸¸ 
	ViewIndex
¸¸ &
.
¸¸& '
First
¸¸' ,
)
¸¸, -
;
¸¸- .
}
˝˝ 
}
˛˛ 	
public
ÄÄ 
void
ÄÄ '
SwitchUntilNextWheelEvent
ÄÄ -
(
ÄÄ- .
)
ÄÄ. /
{
ÅÅ 	
switchedWheel
ÇÇ 
=
ÇÇ 
true
ÇÇ  
;
ÇÇ  !
SwitchTo
ÉÉ 
(
ÉÉ 
	ViewIndex
ÉÉ 
.
ÉÉ 
Second
ÉÉ %
)
ÉÉ% &
;
ÉÉ& '
}
ÑÑ 	
	protected
ÜÜ 
override
ÜÜ 
void
ÜÜ 
OnScrollWheel
ÜÜ  -
(
ÜÜ- .

WheelEvent
ÜÜ. 8
evt
ÜÜ9 <
)
ÜÜ< =
{
áá 	
base
àà 
.
àà 
OnScrollWheel
àà 
(
àà 
evt
àà "
)
àà" #
;
àà# $
if
ââ 
(
ââ 
switchedWheel
ââ 
)
ââ 
SwitchTo
ää 
(
ää 
	ViewIndex
ää "
.
ää" #
First
ää# (
)
ää( )
;
ää) *
}
ãã 	
}
åå 
}çç —.
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\Volume\VolumeMenuItems.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
static 

class 
VolumeMenuItems  
{ 
const 
string 
k_VolumeRootMenu %
=& '
$str( <
;< =
[

 	
MenuItem

	 
(

 
k_VolumeRootMenu

 "
+

# $
$str

% 4
,

4 5
priority

6 >
=

? @
	CoreUtils

A J
.

J K"
gameObjectMenuPriority

K a
)

a b
]

b c
static 
void 
CreateGlobalVolume &
(& '
MenuCommand' 2
menuCommand3 >
)> ?
{ 	
var 
go 
= 
CoreEditorUtils $
.$ %
CreateGameObject% 5
(5 6
$str6 E
,E F
menuCommandG R
.R S
contextS Z
)Z [
;[ \
var 
volume 
= 
go 
. 
AddComponent (
<( )
Volume) /
>/ 0
(0 1
)1 2
;2 3
volume 
. 
isGlobal 
= 
true "
;" #
} 	
[ 	
MenuItem	 
( 
k_VolumeRootMenu "
+# $
$str% 1
,1 2
priority3 ;
=< =
	CoreUtils> G
.G H"
gameObjectMenuPriorityH ^
)^ _
]_ `
static 
void 
CreateBoxVolume #
(# $
MenuCommand$ /
menuCommand0 ;
); <
{ 	
var 
go 
= 
CoreEditorUtils $
.$ %
CreateGameObject% 5
(5 6
$str6 B
,B C
menuCommandD O
.O P
contextP W
)W X
;X Y
var 
collider 
= 
go 
. 
AddComponent *
<* +
BoxCollider+ 6
>6 7
(7 8
)8 9
;9 :
collider 
. 
	isTrigger 
=  
true! %
;% &
var 
volume 
= 
go 
. 
AddComponent (
<( )
Volume) /
>/ 0
(0 1
)1 2
;2 3
volume 
. 
isGlobal 
= 
false #
;# $
volume 
. 
blendDistance  
=! "
$num# %
;% &
} 	
[ 	
MenuItem	 
( 
k_VolumeRootMenu "
+# $
$str% 4
,4 5
priority6 >
=? @
	CoreUtilsA J
.J K"
gameObjectMenuPriorityK a
)a b
]b c
static 
void 
CreateSphereVolume &
(& '
MenuCommand' 2
menuCommand3 >
)> ?
{ 	
var   
go   
=   
CoreEditorUtils   $
.  $ %
CreateGameObject  % 5
(  5 6
$str  6 E
,  E F
menuCommand  G R
.  R S
context  S Z
)  Z [
;  [ \
var!! 
collider!! 
=!! 
go!! 
.!! 
AddComponent!! *
<!!* +
SphereCollider!!+ 9
>!!9 :
(!!: ;
)!!; <
;!!< =
collider"" 
."" 
	isTrigger"" 
=""  
true""! %
;""% &
var## 
volume## 
=## 
go## 
.## 
AddComponent## (
<##( )
Volume##) /
>##/ 0
(##0 1
)##1 2
;##2 3
volume$$ 
.$$ 
isGlobal$$ 
=$$ 
false$$ #
;$$# $
volume%% 
.%% 
blendDistance%%  
=%%! "
$num%%# %
;%%% &
}&& 	
[(( 	
MenuItem((	 
((( 
k_VolumeRootMenu(( "
+((# $
$str((% 9
,((9 :
priority((; C
=((D E
	CoreUtils((F O
.((O P"
gameObjectMenuPriority((P f
)((f g
]((g h
static)) 
void)) "
CreateConvexMeshVolume)) *
())* +
MenuCommand))+ 6
menuCommand))7 B
)))B C
{** 	
var++ 
go++ 
=++ 
CoreEditorUtils++ $
.++$ %
CreateGameObject++% 5
(++5 6
$str++6 J
,++J K
menuCommand++L W
.++W X
context++X _
)++_ `
;++` a
var,, 
collider,, 
=,, 
go,, 
.,, 
AddComponent,, *
<,,* +
MeshCollider,,+ 7
>,,7 8
(,,8 9
),,9 :
;,,: ;
collider-- 
.-- 
convex-- 
=-- 
true-- "
;--" #
collider.. 
... 
	isTrigger.. 
=..  
true..! %
;..% &
var// 
volume// 
=// 
go// 
.// 
AddComponent// (
<//( )
Volume//) /
>/// 0
(//0 1
)//1 2
;//2 3
volume00 
.00 
isGlobal00 
=00 
false00 #
;00# $
volume11 
.11 
blendDistance11  
=11! "
$num11# %
;11% &
}22 	
}33 
}44 Ü2
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\EditorPrefBoolFlags.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public 

struct 
EditorPrefBoolFlags %
<% &
T& '
>' (
:) *

IEquatable+ 5
<5 6
T6 7
>7 8
,8 9

IEquatable: D
<D E
EditorPrefBoolFlagsE X
<X Y
TY Z
>Z [
>[ \
where 
T 
: 
struct 
, 
IConvertible &
{		 
readonly

 
string

 
m_Key

 
;

 
public 
T 
value 
{ 	
get
 
=> 
( 
T 
) 
( 
object 
) 
EditorPrefs '
.' (
GetInt( .
(. /
m_Key/ 4
)4 5
;5 6
set7 :
=>; =
EditorPrefs> I
.I J
SetIntJ P
(P Q
m_KeyQ V
,V W
(X Y
intY \
)\ ]
(] ^
object^ d
)d e
valuee j
)j k
;k l
}m n
public 
uint 
rawValue 
{ 	
get
 
=> 
( 
uint 
) 
EditorPrefs "
." #
GetInt# )
() *
m_Key* /
)/ 0
;0 1
set2 5
=>6 8
EditorPrefs9 D
.D E
SetIntE K
(K L
m_KeyL Q
,Q R
(S T
intT W
)W X
valueX ]
)] ^
;^ _
}` a
public 
EditorPrefBoolFlags "
(" #
string# )
key* -
)- .
=>/ 1
m_Key2 7
=8 9
key: =
;= >
public 
bool 
Equals 
( 
T 
other "
)" #
=>$ &
(' (
int( +
)+ ,
(, -
object- 3
)3 4
value4 9
==: <
(= >
int> A
)A B
(B C
objectC I
)I J
otherJ O
;O P
public   
bool   
Equals   
(   
EditorPrefBoolFlags   .
<  . /
T  / 0
>  0 1
other  2 7
)  7 8
=>  9 ;
m_Key  < A
==  B D
other  E J
.  J K
m_Key  K P
;  P Q
public%% 
bool%% 
HasFlag%% 
(%% 
T%% 
v%% 
)%%  
=>%%! #
(%%$ %
(%%% &
uint%%& *
)%%* +
(%%+ ,
int%%, /
)%%/ 0
(%%0 1
object%%1 7
)%%7 8
v%%8 9
&%%: ;
rawValue%%< D
)%%D E
==%%F H
(%%I J
uint%%J N
)%%N O
(%%O P
int%%P S
)%%S T
(%%T U
object%%U [
)%%[ \
v%%\ ]
;%%] ^
public)) 
void)) 
SetFlag)) 
()) 
T)) 
f)) 
,))  
bool))! %
v))& '
)))' (
{** 	
if++ 
(++ 
v++ 
)++ 
rawValue++ 
|=++ 
(++  
uint++  $
)++$ %
(++% &
int++& )
)++) *
(++* +
object+++ 1
)++1 2
f++2 3
;++3 4
else,, 
rawValue,, 
&=,, 
~,, 
(,, 
uint,, #
),,# $
(,,$ %
int,,% (
),,( )
(,,) *
object,,* 0
),,0 1
f,,1 2
;,,2 3
}-- 	
public22 
static22 
explicit22 
operator22 '
T22( )
(22) *
EditorPrefBoolFlags22* =
<22= >
T22> ?
>22? @
v22A B
)22B C
=>22D F
v22G H
.22H I
value22I N
;22N O
public77 
static77 
EditorPrefBoolFlags77 )
<77) *
T77* +
>77+ ,
operator77- 5
|776 7
(777 8
EditorPrefBoolFlags778 K
<77K L
T77L M
>77M N
l77O P
,77P Q
T77R S
r77T U
)77U V
{88 	
l99 
.99 
rawValue99 
|=99 
(99 
uint99 
)99  
(99  !
int99! $
)99$ %
(99% &
object99& ,
)99, -
r99- .
;99. /
return:: 
l:: 
;:: 
};; 	
public@@ 
static@@ 
EditorPrefBoolFlags@@ )
<@@) *
T@@* +
>@@+ ,
operator@@- 5
&@@6 7
(@@7 8
EditorPrefBoolFlags@@8 K
<@@K L
T@@L M
>@@M N
l@@O P
,@@P Q
T@@R S
r@@T U
)@@U V
{AA 	
lBB 
.BB 
rawValueBB 
&=BB 
(BB 
uintBB 
)BB  
(BB  !
intBB! $
)BB$ %
(BB% &
objectBB& ,
)BB, -
rBB- .
;BB. /
returnCC 
lCC 
;CC 
}DD 	
publicII 
staticII 
EditorPrefBoolFlagsII )
<II) *
TII* +
>II+ ,
operatorII- 5
^II6 7
(II7 8
EditorPrefBoolFlagsII8 K
<IIK L
TIIL M
>IIM N
lIIO P
,IIP Q
TIIR S
rIIT U
)IIU V
{JJ 	
lKK 
.KK 
rawValueKK 
^=KK 
(KK 
uintKK 
)KK  
(KK  !
intKK! $
)KK$ %
(KK% &
objectKK& ,
)KK, -
rKK- .
;KK. /
returnLL 
lLL 
;LL 
}MM 	
}NN 
}OO ¬M
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.render-pipelines.core@10.2.2\Editor\CameraEditorUtils.cs
	namespace 	
UnityEditor
 
. 
	Rendering 
{ 
public		 

static		 
class		 
CameraEditorUtils		 )
{

 
public 
delegate 
Camera 
GetPreviewCamera /
(/ 0
Camera0 6
sourceCamera7 C
,C D
Vector2E L
previewSizeM X
)X Y
;Y Z
const 
float #
k_PreviewNormalizedSize +
=, -
$num. 2
;2 3
internal 
static 
Material  )
s_GUITextureBlit2SRGBMaterial! >
;> ?
public 
static 
Material '
GUITextureBlit2SRGBMaterial :
{ 	
get 
{ 
if 
( 
! )
s_GUITextureBlit2SRGBMaterial 2
)2 3
{ 
Shader 
shader !
=" #
EditorGUIUtility$ 4
.4 5
LoadRequired5 A
(A B
$strB h
)h i
asj l
Shaderm s
;s t)
s_GUITextureBlit2SRGBMaterial 1
=2 3
new4 7
Material8 @
(@ A
shaderA G
)G H
;H I)
s_GUITextureBlit2SRGBMaterial   1
.  1 2
	hideFlags  2 ;
=  < =
	HideFlags  > G
.  G H
HideAndDontSave  H W
;  W X
}!! )
s_GUITextureBlit2SRGBMaterial"" -
.""- .
SetFloat"". 6
(""6 7
$str""7 H
,""H I
QualitySettings""J Y
.""Y Z
activeColorSpace""Z j
==""k m

ColorSpace""n x
.""x y
Linear""y 
?
""Ä Å
$num
""Ç Ü
:
""á à
$num
""â ç
)
""ç é
;
""é è
return## )
s_GUITextureBlit2SRGBMaterial## 4
;##4 5
}$$ 
}%% 	
public-- 
static-- 
void-- &
DrawCameraSceneViewOverlay-- 5
(--5 6
Object--6 <
target--= C
,--C D
	SceneView--E N
	sceneView--O X
,--X Y
GetPreviewCamera--Z j
previewCameraGetter--k ~
)--~ 
{.. 	
if// 
(// 
target// 
==// 
null// 
)// 
return//  &
;//& '
var22 
c22 
=22 
(22 
Camera22 
)22 
target22 "
;22" #
var44 
previewSize44 
=44 
Handles44 %
.44% &
GetMainGameViewSize44& 9
(449 :
)44: ;
;44; <
if55 
(55 
previewSize55 
.55 
x55 
<55 
$num55  "
)55" #
{66 
previewSize88 
.88 
x88 
=88 
	sceneView88  )
.88) *
position88* 2
.882 3
width883 8
;888 9
previewSize99 
.99 
y99 
=99 
	sceneView99  )
.99) *
position99* 2
.992 3
height993 9
;999 :
}:: 
var<< "
normalizedViewPortRect<< &
=<<' (
c<<) *
.<<* +
rect<<+ /
;<</ 0
previewSize== 
.== 
x== 
*=== 
Mathf== "
.==" #
Max==# &
(==& '"
normalizedViewPortRect==' =
.=== >
width==> C
,==C D
$num==E G
)==G H
;==H I
previewSize>> 
.>> 
y>> 
*=>> 
Mathf>> "
.>>" #
Max>># &
(>>& '"
normalizedViewPortRect>>' =
.>>= >
height>>> D
,>>D E
$num>>F H
)>>H I
;>>I J
ifAA 
(AA 
previewSizeAA 
.AA 
xAA 
<=AA  
$numAA! #
||AA$ &
previewSizeAA' 2
.AA2 3
yAA3 4
<=AA5 7
$numAA8 :
)AA: ;
returnBB 
;BB 
varDD 
aspectDD 
=DD 
previewSizeDD $
.DD$ %
xDD% &
/DD' (
previewSizeDD) 4
.DD4 5
yDD5 6
;DD6 7
previewSizeGG 
.GG 
yGG 
=GG #
k_PreviewNormalizedSizeGG 3
*GG4 5
	sceneViewGG6 ?
.GG? @
positionGG@ H
.GGH I
heightGGI O
;GGO P
previewSizeHH 
.HH 
xHH 
=HH 
previewSizeHH '
.HH' (
yHH( )
*HH* +
aspectHH, 2
;HH2 3
ifII 
(II 
previewSizeII 
.II 
yII 
>II 
	sceneViewII  )
.II) *
positionII* 2
.II2 3
heightII3 9
*II: ;
$numII< @
)II@ A
{JJ 
previewSizeKK 
.KK 
yKK 
=KK 
	sceneViewKK  )
.KK) *
positionKK* 2
.KK2 3
heightKK3 9
*KK: ;
$numKK< @
;KK@ A
previewSizeLL 
.LL 
xLL 
=LL 
previewSizeLL  +
.LL+ ,
yLL, -
*LL. /
aspectLL0 6
;LL6 7
}MM 
ifNN 
(NN 
previewSizeNN 
.NN 
xNN 
>NN 
	sceneViewNN  )
.NN) *
positionNN* 2
.NN2 3
widthNN3 8
*NN9 :
$numNN; ?
)NN? @
{OO 
previewSizePP 
.PP 
xPP 
=PP 
	sceneViewPP  )
.PP) *
positionPP* 2
.PP2 3
widthPP3 8
*PP9 :
$numPP; ?
;PP? @
previewSizeQQ 
.QQ 
yQQ 
=QQ 
previewSizeQQ  +
.QQ+ ,
xQQ, -
/QQ. /
aspectQQ0 6
;QQ6 7
}RR 
RectUU 

cameraRectUU 
=UU 
GUILayoutUtilityUU .
.UU. /
GetRectUU/ 6
(UU6 7
previewSizeUU7 B
.UUB C
xUUC D
,UUD E
previewSizeUUF Q
.UUQ R
yUUR S
)UUS T
;UUT U
ifWW 
(WW 
EventWW 
.WW 
currentWW 
.WW 
typeWW "
==WW# %
	EventTypeWW& /
.WW/ 0
RepaintWW0 7
)WW7 8
{XX 
varYY 
previewCameraYY !
=YY" #
previewCameraGetterYY$ 7
(YY7 8
cYY8 9
,YY9 :
previewSizeYY; F
)YYF G
;YYG H
ifZZ 
(ZZ 
previewCameraZZ !
.ZZ! "
targetTextureZZ" /
==ZZ0 2
nullZZ3 7
)ZZ7 8
{[[ 
Debug\\ 
.\\ 
LogError\\ "
(\\" #
$str\\# V
)\\V W
;\\W X
return]] 
;]] 
}^^ 
bool`` 
	drawGizmo`` 
=``  
	sceneView``! *
.``* +

drawGizmos``+ 5
;``5 6
	sceneViewaa 
.aa 

drawGizmosaa $
=aa% &
falseaa' ,
;aa, -
previewCamerabb 
.bb 
Renderbb $
(bb$ %
)bb% &
;bb& '
	sceneViewcc 
.cc 

drawGizmoscc $
=cc% &
	drawGizmocc' 0
;cc0 1
Graphicsdd 
.dd 
DrawTexturedd $
(dd$ %

cameraRectdd% /
,dd/ 0
previewCameradd1 >
.dd> ?
targetTexturedd? L
,ddL M
newddN Q
RectddR V
(ddV W
$numddW X
,ddX Y
$numddZ [
,dd[ \
$numdd] ^
,dd^ _
$numdd` a
)dda b
,ddb c
$numddd e
,dde f
$numddg h
,ddh i
$numddj k
,ddk l
$numddm n
,ddn o
GUIddp s
.dds t
colorddt y
,ddy z(
GUITextureBlit2SRGBMaterial	dd{ ñ
)
ddñ ó
;
ddó ò
previewCameragg 
.gg 
targetTexturegg +
=gg, -
nullgg. 2
;gg2 3
}hh 
}ii 	
publicoo 
staticoo 
booloo '
IsViewPortRectValidToRenderoo 6
(oo6 7
Rectoo7 ;"
normalizedViewPortRectoo< R
)ooR S
{pp 	
ifqq 
(qq "
normalizedViewPortRectqq &
.qq& '
widthqq' ,
<=qq- /
$numqq0 2
||qq3 5"
normalizedViewPortRectqq6 L
.qqL M
heightqqM S
<=qqT V
$numqqW Y
)qqY Z
returnrr 
falserr 
;rr 
ifss 
(ss "
normalizedViewPortRectss &
.ss& '
xss' (
>=ss) +
$numss, .
||ss/ 1"
normalizedViewPortRectss2 H
.ssH I
xMaxssI M
<=ssN P
$numssQ S
)ssS T
returntt 
falsett 
;tt 
ifuu 
(uu "
normalizedViewPortRectuu &
.uu& '
yuu' (
>=uu) +
$numuu, .
||uu/ 1"
normalizedViewPortRectuu2 H
.uuH I
yMaxuuI M
<=uuN P
$numuuQ S
)uuS T
returnvv 
falsevv 
;vv 
returnww 
trueww 
;ww 
}xx 	
}yy 
}zz 